{
  "AACAudit": {
    "tableName": "AACAudit",
    "description": "Azure App Configuration audit logs.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CallerIdentity": {
        "type": "dynamic",
        "description": "Caller identity of this event."
      },
      "CallerIPAddress": {
        "type": "string",
        "description": "IP Address of the caller that triggered this audit event."
      },
      "Category": {
        "type": "string",
        "description": "The log category of the event."
      },
      "CorrelationId": {
        "type": "string",
        "description": "GUID for correlated logs."
      },
      "ETag": {
        "type": "string",
        "description": "An identifier for a specific version of the resource."
      },
      "EventCategory": {
        "type": "string",
        "description": "Audit category of this event."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "OperationName": {
        "type": "string",
        "description": "Name of the audited operation."
      },
      "RequestId": {
        "type": "string",
        "description": "Unique request ID generated by server."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultType": {
        "type": "string",
        "description": "The result of the operation being audited."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "Status": {
        "type": "string",
        "description": "Status of this audit event."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TargetResource": {
        "type": "dynamic",
        "description": "Target resource that apply to the operation being audited."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (UTC) when log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AACHttpRequest": {
    "tableName": "AACHttpRequest",
    "description": "Incoming requests to Azure App Configuration. The records in this table are aggregated. The 'HitCount' field describes the number of requests that each record accounts for.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "BytesReceived": {
        "type": "int",
        "description": "The total number of bytes received by the server across all requests"
      },
      "BytesSent": {
        "type": "int",
        "description": "The total number of bytes sent by the server across all requests included in"
      },
      "Category": {
        "type": "string",
        "description": "The log category of the event."
      },
      "ClientIPAddress": {
        "type": "string",
        "description": "IP Address of the client that sent the requests."
      },
      "ClientRequestId": {
        "type": "string",
        "description": "Request ID provided by client."
      },
      "CorrelationId": {
        "type": "string",
        "description": "GUID for correlated logs."
      },
      "DurationMs": {
        "type": "int",
        "description": "The average duration of the operation, in milliseconds, of all the requests"
      },
      "HitCount": {
        "type": "int",
        "description": "Count of requests that are included in this aggregated HTTP request log"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Method": {
        "type": "string",
        "description": "HTTP Method."
      },
      "RequestId": {
        "type": "string",
        "description": "Unique request ID generated by server."
      },
      "RequestURI": {
        "type": "string",
        "description": "URI of the requests."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "StatusCode": {
        "type": "int",
        "description": "HTTP Status Code of the requests."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (UTC) marking the start of the aggregation period."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "User Agent provided by the client."
      }
    }
  },
  "AADB2CRequestLogs": {
    "tableName": "AADB2CRequestLogs",
    "description": "Logs generated by AAD gateway for displaying B2C tenant's web requests and its throttle info.",
    "columns": {
      "AADTenantId": {
        "type": "string",
        "description": "The AAD tenant ID of associated request."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CallerIpAddress": {
        "type": "string",
        "description": "Hashed format of caller IP address. Can be used to identify if a single IP"
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID for correlated log analytics events. Can be used to identify"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "OperationName": {
        "type": "string",
        "description": "Name of the operation."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultSignature": {
        "type": "string",
        "description": "The HTTP status code of the corresponding REST call."
      },
      "ResultType": {
        "type": "string",
        "description": "Indicates whether the request is throttled or not."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The date and time of the request received at the AAD gateway in UTC."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AADCustomSecurityAttributeAuditLogs": {
    "tableName": "AADCustomSecurityAttributeAuditLogs",
    "description": "Non-interactive Azure Active Directory sign-in logs from user.",
    "columns": {
      "AADOperationType": {
        "type": "string",
        "description": "Type of the operation. Possible values are Add Update Delete and"
      },
      "AADTenantId": {
        "type": "string",
        "description": "ID of the AAD tenant."
      },
      "ActivityDateTime": {
        "type": "datetime",
        "description": "Date and time the activity was performed in UTC."
      },
      "ActivityDisplayName": {
        "type": "string",
        "description": "Activity name or the operation name."
      },
      "AdditionalDetails": {
        "type": "dynamic",
        "description": "Indicates additional details on the activity. Can have any string as a key"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CallerIpAddress": {
        "type": "string",
        "description": "IP address of caller."
      },
      "CorrelationId": {
        "type": "string",
        "description": "ID to provide audit trail."
      },
      "DurationMs": {
        "type": "long",
        "description": "The duration of the operation in milliseconds."
      },
      "Id": {
        "type": "string",
        "description": "Unique ID representing the audit activity."
      },
      "Identity": {
        "type": "string",
        "description": "The identity from the token that was presented when you made the"
      },
      "InitiatedBy": {
        "type": "dynamic",
        "description": "User or app initiated the activity."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Level": {
        "type": "string",
        "description": "The severity level of the event."
      },
      "Location": {
        "type": "string",
        "description": "The region of the resource emitting the event."
      },
      "LoggedByService": {
        "type": "string",
        "description": "Service that initiated the activity."
      },
      "OperationName": {
        "type": "string",
        "description": "Name of the operation."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The REST API version that's requested by the client."
      },
      "Result": {
        "type": "string",
        "description": "Result of the activity. Possible values are: success failure timeout"
      },
      "ResultDescription": {
        "type": "string",
        "description": "Provides the error description for the audit operation."
      },
      "ResultReason": {
        "type": "string",
        "description": "Describes cause of failure or timeout results."
      },
      "ResultSignature": {
        "type": "string",
        "description": "Contains the error code, if any, for the audit operation."
      },
      "ResultType": {
        "type": "string",
        "description": "The result of the audit operation can be Success or Failure."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "TargetResources": {
        "type": "dynamic",
        "description": "Indicates information on which resource was changed due to the"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The date and time of the event in UTC."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "User agent of initiator."
      }
    }
  },
  "AADDomainServicesAccountLogon": {
    "tableName": "AADDomainServicesAccountLogon",
    "description": "",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": ""
      },
      "CertIssuerName": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event being"
      },
      "CertSerialNumber": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event being"
      },
      "CertThumbprint": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event being"
      },
      "ClientUserName": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event being"
      },
      "CorrelationId": {
        "type": "string",
        "description": ""
      },
      "FailureCode": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event being"
      },
      "IpAddress": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event being"
      },
      "IpPort": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event being"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "MappedName": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event being"
      },
      "MappingBy": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event being"
      },
      "OperationName": {
        "type": "string",
        "description": ""
      },
      "PackageName": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event being"
      },
      "PreAuthType": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event being"
      },
      "RecordId": {
        "type": "string",
        "description": "A unique identifier corresponding to this record."
      },
      "ResourceId": {
        "type": "string",
        "description": ""
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultDescription": {
        "type": "string",
        "description": ""
      },
      "ResultType": {
        "type": "string",
        "description": ""
      },
      "ServiceName": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event being"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TicketOptions": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event being"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AADDomainServicesAccountManagement": {
    "tableName": "AADDomainServicesAccountManagement",
    "description": "",
    "columns": {
      "AccountExpires": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "AllowedToDelegateTo": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CallerProcessId": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "CallerProcessName": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "Category": {
        "type": "string",
        "description": ""
      },
      "ComputerAccountChange": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "CorrelationId": {
        "type": "string",
        "description": ""
      },
      "DisplayName": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "DnsHostName": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "GroupTypeChange": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "HomeDirectory": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "HomePath": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogonHours": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "MemberName": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "MembershipExpirationTime": {
        "type": "datetime",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "MemberSid": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "NewTargetUserName": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "NewUacValue": {
        "type": "string",
        "description": ""
      },
      "OldTargetUserName": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "OldUacValue": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "OperationName": {
        "type": "string",
        "description": ""
      },
      "PasswordLastSet": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "PrimaryGroupId": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "PrivilegeList": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "ProfilePath": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "RecordId": {
        "type": "string",
        "description": "Identifier for the underlying Windows event"
      },
      "ResourceId": {
        "type": "string",
        "description": ""
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultDescription": {
        "type": "string",
        "description": ""
      },
      "ResultType": {
        "type": "string",
        "description": ""
      },
      "SamAccountName": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "ScriptPath": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "ServicePrincipalNames": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "SidHistory": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "SourceSid": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "SourceUserName": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "Status": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "SubjectDomainName": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "SubjectLogonId": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "SubjectUserName": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "SubjectUserSid": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TargetSid": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the event was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAccountControl": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "UserParameters": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "UserPrincipalName": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "UserWorkstations": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "Workstation": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "BufferSize": {
        "type": "int",
        "description": "The context of this field is dependent on the Windows Event being"
      },
      "EventType": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event being"
      },
      "Name": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event being"
      },
      "operationName": {
        "type": "string",
        "description": "Identifies the type of event emitted."
      },
      "operationVersion": {
        "type": "string",
        "description": "Version string. Reserved."
      },
      "RData": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event being"
      },
      "resultDescription": {
        "type": "string",
        "description": "Summary description of the event."
      },
      "Source": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event being"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "Ttl": {
        "type": "int",
        "description": "The context of this field is dependent on the Windows Event being"
      },
      "Zone": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event being"
      },
      "ZoneScope": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event being"
      }
    }
  },
  "AADDomainServicesDNSAuditsGeneral": {
    "tableName": "AADDomainServicesDNSAuditsGeneral",
    "description": "DNS server audit events enable change tracking on the DNS server. An audit event is logged each time server, zone, or resource record settings are changed. This includes operational events such as zone transfers, and DNSSEC zone signing and unsigning. This table captures audit events that are not from dynamic updates.",
    "columns": {
      "Action": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "ActiveKey": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "Base64Data": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "BufferSize": {
        "type": "int",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "ChildZone": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "ClientSubnetList": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "ClientSubnetRecord": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "Condition": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "Criteria": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "CryptoAlgorithm": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "CurrentRolloverStatus": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "CurrentState": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "DenialOfExistence": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "Digest": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "DigestType": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "DistributeTrustAnchor": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "DnsKeyRecordSetTtl": {
        "type": "int",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "DnsKeySignatureValidityPeriod": {
        "type": "int",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "DSRecordGenerationAlgorithm": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "DSRecordSetTtl": {
        "type": "int",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "DSSignatureValidityPeriod": {
        "type": "int",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "EnableRfc5011KeyRollover": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "ErrorsPerSecond": {
        "type": "int",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "EventGuid": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "EventString": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "FilePath": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "Forwarders": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "FriendlyName": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "InitialRolloverOffset": {
        "type": "int",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "IPv4PrefixLength": {
        "type": "int",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "IPv6PrefixLength": {
        "type": "int",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "IsEnabled": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "IsKeyMasterServer": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "KeyId": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "KeyLength": {
        "type": "int",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "KeyMasterServer": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "KeyOrZone": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "KeyProtocol": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "KeyStorageProvider": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "KeyTag": {
        "type": "int",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "KeyType": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "KskOrZsk": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "LastRolloverTime": {
        "type": "datetime",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "LeakRate": {
        "type": "int",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "ListenAddresses": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "Lookup": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "MasterServer": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "Mode": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "Name": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "NameServer": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "NewFriendlyName": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "NewPropertyValues": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "NewScope": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "NewValue": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "NextKey": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "NextRolloverAction": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "NextRolloverTime": {
        "type": "datetime",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "NodeName": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "NSec3HashAlgorithm": {
        "type": "int",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "NSec3Iterations": {
        "type": "int",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "NSec3OptOut": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "NSec3RandomSaltLength": {
        "type": "int",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "NSec3UserSalt": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "OldFriendlyName": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "OldPropertyValues": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "OldScope": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "operationName": {
        "type": "string",
        "description": "Identifies the type of event emitted."
      },
      "operationVersion": {
        "type": "string",
        "description": "Version string. Reserved."
      },
      "ParentHasSecureDelegation": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "Policy": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "ProcessingOrder": {
        "type": "int",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "PropagationTime": {
        "type": "int",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "PropertyKey": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "QName": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "QType": {
        "type": "int",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "RData": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "RecordId": {
        "type": "string",
        "description": "Identifier for the underlying Windows event"
      },
      "RecursionScope": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "ReplicationScope": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "ResponsePerSecond": {
        "type": "int",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "resultDescription": {
        "type": "string",
        "description": "Summary description of the event."
      },
      "RolloverPeriod": {
        "type": "int",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "RolloverType": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "RRLExceptionlist": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "ScavengeServers": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "Scope": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "Scopes": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "ScopeWeight": {
        "type": "int",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "ScopeWeightNew": {
        "type": "int",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "ScopeWeightOld": {
        "type": "int",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "SecureDelegationPollingPeriod": {
        "type": "int",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "SeizedOrTransfered": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "ServerName": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "Setting": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "SignatureInceptionOffset": {
        "type": "int",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "StandbyKey": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "StoreKeysInAD": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "SubTreeAging": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "TCRate": {
        "type": "int",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the event was generated."
      },
      "TotalResponsesInWindow": {
        "type": "int",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "Ttl": {
        "type": "int",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "VirtualizationID": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "WindowSize": {
        "type": "int",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "WithNewKeys": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "WithWithout": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "Zone": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "ZoneFile": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "ZoneName": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "ZoneScope": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "ZoneSignatureValidityPeriod": {
        "type": "int",
        "description": "The context of this field is dependent on the Windows Event"
      }
    }
  },
  "AADDomainServicesDirectoryServiceAccess": {
    "tableName": "AADDomainServicesDirectoryServiceAccess",
    "description": "",
    "columns": {
      "AppCorrelationID": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "AttributeLDAPDisplayName": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "AttributeSyntaxOID": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "AttributeValue": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": ""
      },
      "CorrelationId": {
        "type": "string",
        "description": ""
      },
      "DSName": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "DSType": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable"
      },
      "NewObjectDN": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "ObjectClass": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "ObjectDN": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "ObjectGUID": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "OldObjectDN": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "OpCorrelationID": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "OperationName": {
        "type": "string",
        "description": ""
      },
      "OperationType": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "RecordId": {
        "type": "string",
        "description": "A unique identifier corresponding to this record."
      },
      "ResourceId": {
        "type": "string",
        "description": ""
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "ResultDescription": {
        "type": "string",
        "description": ""
      },
      "ResultType": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "TreeDelete": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AADDomainServicesLogonLogoff": {
    "tableName": "AADDomainServicesLogonLogoff",
    "description": "",
    "columns": {
      "AuthenticationPackageName": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": ""
      },
      "CorrelationId": {
        "type": "string",
        "description": ""
      },
      "ElevatedToken": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "FailureReason": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "ImpersonationLevel": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "KeyLength": {
        "type": "int",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "LmPackageName": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "LogonGuid": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "LogonProcessName": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "LogonType": {
        "type": "int",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "OperationName": {
        "type": "string",
        "description": ""
      },
      "RecordId": {
        "type": "string",
        "description": "A unique identifier corresponding to this record."
      },
      "ResourceId": {
        "type": "string",
        "description": ""
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "RestrictedAdminMode": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "ResultDescription": {
        "type": "string",
        "description": ""
      },
      "ResultType": {
        "type": "string",
        "description": ""
      },
      "SidList": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "SubStatus": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "TargetDomainName": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "TargetInfo": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "TargetLinkedLogonId": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "TargetLogonGuid": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "TargetLogonId": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "TargetOutboundDomainName": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "TargetOutboundUserName": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "TargetServerName": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "TargetUserName": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "TargetUserSid": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "TdoSid": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "TransmittedServices": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "VirtualAccount": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "WorkstationName": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      }
    }
  },
  "AADDomainServicesPolicyChange": {
    "tableName": "AADDomainServicesPolicyChange",
    "description": "",
    "columns": {
      "AccessGranted": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "AccessRemoved": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "AuditPolicyChanges": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "AuditSourceName": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "CategoryId": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "CollisionTargetName": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "CollisionTargetType": {
        "type": "int",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "CorrelationId": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "CrashOnAuditFailValue": {
        "type": "int",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "DisabledPrivilegeList": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "DnsName": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "DomainBehaviorVersion": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "DomainName": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "DomainPolicyChanged": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "DomainSid": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "EnabledPrivilegeList": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "EntryType": {
        "type": "int",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "EventSourceId": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "Flags": {
        "type": "int",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "ForceLogoff": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "ForestRoot": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "ForestRootSid": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "HandleId": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable"
      },
      "KerberosPolicyChange": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "LockoutDuration": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "LockoutObservationWindow": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "LockoutThreshold": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "MachineAccountQuota": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "MaxPasswordAge": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "MinPasswordAge": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "MinPasswordLength": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "MixedDomainMode": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "NetbiosName": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "NewSd": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "ObjectName": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "ObjectServer": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "ObjectType": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "OemInformation": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "OldSd": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "OperationId": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "OperationName": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "PasswordHistoryLength": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "PasswordProperties": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "RecordId": {
        "type": "string",
        "description": "A unique identifier corresponding to this record."
      },
      "ResourceId": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "ResultDescription": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "ResultType": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "SidFilteringEnabled": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "SubcategoryGuid": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "SubcategoryId": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TdoAttributes": {
        "type": "int",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "TdoDirection": {
        "type": "int",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "TdoType": {
        "type": "int",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "TopLevelName": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AADDomainServicesPrivilegeUse": {
    "tableName": "AADDomainServicesPrivilegeUse",
    "description": "",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The log category, e.g., AzureADGraphActivityLogs."
      },
      "CorrelationId": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "NewState": {
        "type": "int",
        "description": "The context of this field is dependent on the Windows Event being"
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation performed on the resource."
      },
      "ProcessId": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event being"
      },
      "ProcessName": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event being"
      },
      "RecordId": {
        "type": "string",
        "description": ""
      },
      "ResourceId": {
        "type": "string",
        "description": ""
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResourceManager": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event being"
      },
      "ResultDescription": {
        "type": "string",
        "description": ""
      },
      "ResultType": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The date and time the request was received."
      },
      "TransactionId": {
        "type": "string",
        "description": "The context of this field is dependent on the Windows Event being"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "AuditsDiscarded": {
        "type": "int",
        "description": ""
      },
      "ActorType": {
        "type": "string",
        "description": "The type of actor making the request (e.g., User, Application)."
      },
      "AppId": {
        "type": "string",
        "description": "The identifier of the application making the request."
      },
      "CallerIpAddress": {
        "type": "string",
        "description": "The IP address of the caller making the request."
      },
      "ClientAuthMethod": {
        "type": "string",
        "description": "The authentication method used by the client."
      },
      "DeviceId": {
        "type": "string",
        "description": "The identifier of the device used in the request."
      },
      "DurationMs": {
        "type": "int",
        "description": "The duration of the request in milliseconds."
      },
      "IdentityProvider": {
        "type": "string",
        "description": "The identity provider used during authentication."
      },
      "Level": {
        "type": "string",
        "description": "The severity level of the event (e.g., Informational)."
      },
      "Location": {
        "type": "string",
        "description": "The name of the region that served the request."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The API version of the operation."
      },
      "RequestId": {
        "type": "string",
        "description": "The identifier representing the request."
      },
      "RequestMethod": {
        "type": "string",
        "description": "The HTTP method used (e.g., GET, POST)."
      },
      "RequestUri": {
        "type": "string",
        "description": "The URI of the request sent to the AAD Graph API."
      },
      "ResponseSizeBytes": {
        "type": "int",
        "description": "The size of the response returned to the caller, in bytes."
      },
      "ResultSignature": {
        "type": "string",
        "description": "The HTTP response status or outcome of the operation."
      },
      "Roles": {
        "type": "string",
        "description": "The roles assigned in the token claims."
      },
      "Scopes": {
        "type": "string",
        "description": "The scopes included in the token claims."
      },
      "ServicePrincipalId": {
        "type": "string",
        "description": "The identifier of the service principal making the request."
      },
      "SessionId": {
        "type": "string",
        "description": "The session identifier from the request context."
      },
      "SignInActivityId": {
        "type": "string",
        "description": "The identifier representing the sign-in activity."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TokenIssuedAt": {
        "type": "datetime",
        "description": "The timestamp when the token was issued."
      },
      "UserAgent": {
        "type": "string",
        "description": "The user agent string provided by the client."
      },
      "UserId": {
        "type": "string",
        "description": "The identifier of the user making the request."
      },
      "Wids": {
        "type": "string",
        "description": "The WIDs from the token claims."
      }
    }
  },
  "AADManagedIdentitySignInLogs": {
    "tableName": "AADManagedIdentitySignInLogs",
    "description": "Managed identity Azure Active Directory sign-in logs.",
    "columns": {
      "AppId": {
        "type": "string",
        "description": "Unique GUID representing the app ID in the Azure"
      },
      "AppOwnerTenantId": {
        "type": "string",
        "description": "The tenant identifier of the owenr of the application"
      },
      "AuthenticationContextClassReferences": {
        "type": "string",
        "description": "The authentication contexts of the sign-in"
      },
      "AuthenticationProcessingDetails": {
        "type": "string",
        "description": "Provides the details associated with authentication"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "Category of the sign-in event"
      },
      "ClientCredentialType": {
        "type": "string",
        "description": ""
      },
      "ConditionalAccessPolicies": {
        "type": "string",
        "description": "Details of the conditional access policies being"
      },
      "ConditionalAccessStatus": {
        "type": "string",
        "description": "Status of all the conditionalAccess policies related to"
      },
      "CorrelationId": {
        "type": "string",
        "description": "ID to provide sign-in trail"
      },
      "CreatedDateTime": {
        "type": "datetime",
        "description": "Datetime of the sign-in activity."
      },
      "DurationMs": {
        "type": "long",
        "description": "The duration of the operation in milliseconds"
      },
      "FederatedCredentialId": {
        "type": "string",
        "description": "Th identifier of an application's federated identity"
      },
      "Id": {
        "type": "string",
        "description": "Unique ID representing the sign-in activity"
      },
      "Identity": {
        "type": "string",
        "description": "The identity from the token that was presented when"
      },
      "IPAddress": {
        "type": "string",
        "description": "IP address of the client used to sign in"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "Level": {
        "type": "string",
        "description": "The severity level of the event"
      },
      "Location": {
        "type": "string",
        "description": "The region of the resource emitting the event"
      },
      "LocationDetails": {
        "type": "string",
        "description": "Details of the sign-in location"
      },
      "ManagedServiceIdentity": {
        "type": "string",
        "description": "Details of the Managed Service Identity used to Sign"
      },
      "NetworkLocationDetails": {
        "type": "string",
        "description": "Provides the details associated with Authentication"
      },
      "OperationName": {
        "type": "string",
        "description": "For sign-ins, this value is always Sign-in activity"
      },
      "OperationVersion": {
        "type": "string",
        "description": "The REST API version that's requested by the client"
      },
      "ResourceDisplayName": {
        "type": "string",
        "description": "Name of the resource that the service principal"
      },
      "signed": {
        "type": "int",
        "description": "o"
      },
      "ResourceGroup": {
        "type": "string",
        "description": "Resource group for the logs"
      },
      "ResourceIdentity": {
        "type": "string",
        "description": "ID of the resource that the service principal signed"
      },
      "ResourceOwnerTenantId": {
        "type": "string",
        "description": "The tenant identifier of the owner of the resource"
      },
      "ResourceServicePrincipalId": {
        "type": "string",
        "description": "Service Principal Id of the resource"
      },
      "ResultDescription": {
        "type": "string",
        "description": "Provides the error description for the sign-in"
      },
      "ResultSignature": {
        "type": "string",
        "description": "Contains the error code, if any, for the sign-in"
      },
      "ResultType": {
        "type": "string",
        "description": "The result of the sign-in operation can be Success or"
      },
      "ServicePrincipalCredentialKeyId": {
        "type": "string",
        "description": "Key id of the service principal that initiated the sign-"
      },
      "ServicePrincipalCredentialThumbprint": {
        "type": "string",
        "description": "Thumbprint of the service principal that initiated the"
      },
      "ServicePrincipalId": {
        "type": "string",
        "description": "ID of the service principal who initiated the sign-in"
      },
      "ServicePrincipalName": {
        "type": "string",
        "description": "Service Principal Name of the service principal who"
      },
      "SessionId": {
        "type": "string",
        "description": "Id of the session that was generated during the"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The date and time of the event in UTC"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UniqueTokenIdentifier": {
        "type": "string",
        "description": "Unique token identifier for the request"
      }
    }
  },
  "AADNonInteractiveUserSignInLogs": {
    "tableName": "AADNonInteractiveUserSignInLogs",
    "description": "Non-interactive Azure Active Directory sign-in logs from user.",
    "columns": {
      "AlternateSignInName": {
        "type": "string",
        "description": "Provides the on-premises UPN of the user sign-ing"
      },
      "AppDisplayName": {
        "type": "string",
        "description": "App name displayed in the Azure portal."
      },
      "AppId": {
        "type": "string",
        "description": "The globally unique identifier for the associated application (its"
      },
      "AppliedEventListeners": {
        "type": "dynamic",
        "description": "Detailed information about the applied event"
      },
      "AppOwnerTenantId": {
        "type": "string",
        "description": "The tenant identifier of the owenr of the application"
      },
      "AuthenticationContextClassReferences": {
        "type": "string",
        "description": "The authentication contexts of the sign-in."
      },
      "AuthenticationDetails": {
        "type": "string",
        "description": "A record of each step of authentication undertaken"
      },
      "AuthenticationMethodsUsed": {
        "type": "string",
        "description": "List of authentication methods used."
      },
      "AuthenticationProcessingDetails": {
        "type": "string",
        "description": "Provides the details associated with authentication"
      },
      "AuthenticationProtocol": {
        "type": "string",
        "description": "Lists the protocol type or grant type used in the"
      },
      "AuthenticationRequirement": {
        "type": "string",
        "description": "Type of authentication required for the sign-in. If set"
      },
      "AuthenticationRequirementPolicies": {
        "type": "string",
        "description": "Set of CA policies that apply to this sign-in, each as"
      },
      "AutonomousSystemNumber": {
        "type": "string",
        "description": "Autonomous System Number for the network."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "Category of the event"
      },
      "ClientAppUsed": {
        "type": "string",
        "description": "Details outlining app auth used (Legacy vs non"
      },
      "ClientCredentialType": {
        "type": "string",
        "description": "The type of client credential used. Examples include"
      },
      "ConditionalAccessPolicies": {
        "type": "string",
        "description": "Details of the conditional access policies being"
      },
      "ConditionalAccessStatus": {
        "type": "string",
        "description": "Status of all the conditionalAccess policies related to"
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID for correlated log analytics events. Can be used to identify"
      },
      "CreatedDateTime": {
        "type": "datetime",
        "description": "Datetime of the sign-in activity."
      },
      "CrossTenantAccessType": {
        "type": "string",
        "description": "Describes the type of cross-tenant access used by the"
      },
      "DeviceDetail": {
        "type": "string",
        "description": "Details of the device used for the sign-in."
      },
      "DurationMs": {
        "type": "long",
        "description": "Indicates how long this provisioning action took to finish"
      },
      "FederatedCredentialId": {
        "type": "string",
        "description": "Federated Credential Id."
      },
      "GlobalSecureAccessIpAddress": {
        "type": "string",
        "description": "Global secure IP address that user signed in from."
      },
      "HomeTenantId": {
        "type": "string",
        "description": "The home tenant ID for cross-tenant scenarios."
      },
      "HomeTenantName": {
        "type": "string",
        "description": "The tenant name of the external tenant who homes"
      },
      "Id": {
        "type": "string",
        "description": "Unique ID of the user at risk."
      },
      "Identity": {
        "type": "string",
        "description": "The identity from the token that was presented when"
      },
      "IncomingTokenType": {
        "type": "string",
        "description": "The type of token utilized to signIn (examples:"
      },
      "IPAddress": {
        "type": "string",
        "description": "IP address of the client used to sign in."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "IsInteractive": {
        "type": "bool",
        "description": "Indicates if a sign-in is interactive or not."
      },
      "IsRisky": {
        "type": "bool",
        "description": "Indicates if a sign-in is considered risky or not."
      },
      "IsTenantRestricted": {
        "type": "bool",
        "description": "Indicates if a signIn is under a tenant restrictions"
      },
      "IsThroughGlobalSecureAccess": {
        "type": "bool",
        "description": "Displays whether or not a user came through Global"
      },
      "Level": {
        "type": "string",
        "description": "The severity level of the event."
      },
      "Location": {
        "type": "string",
        "description": "The region of the resource emitting the event."
      },
      "LocationDetails": {
        "type": "string",
        "description": "Details of the sign-in location."
      },
      "MfaDetail": {
        "type": "string",
        "description": "Details of the Multi-factor authentication."
      },
      "NetworkLocationDetails": {
        "type": "string",
        "description": "Provides the details associated with authentication"
      },
      "OperationName": {
        "type": "string",
        "description": "Name of the operation."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The REST API version that's requested by the client"
      },
      "OriginalRequestId": {
        "type": "string",
        "description": "The request id of the first request in the"
      },
      "OriginalTransferMethod": {
        "type": "string",
        "description": "Transfer method used to initiate a session"
      },
      "ProcessingTimeInMs": {
        "type": "string",
        "description": "Request processing time in milliseconds in AD STS."
      },
      "ResourceDisplayName": {
        "type": "string",
        "description": "Name of the resource that the user signed into."
      },
      "ResourceGroup": {
        "type": "string",
        "description": "Resource group for the logs."
      },
      "ResourceIdentity": {
        "type": "string",
        "description": "ID of the resource that the user signed into."
      },
      "ResourceOwnerTenantId": {
        "type": "string",
        "description": "The tenant identifier of the owner of the resource"
      },
      "ResourceServicePrincipalId": {
        "type": "string",
        "description": "Service Principal Id of the resource."
      },
      "ResourceTenantId": {
        "type": "string",
        "description": "The resource tenant ID for cross-tenant scenarios."
      },
      "ResultDescription": {
        "type": "string",
        "description": "When available, provides the error description for the provisioning"
      },
      "ResultSignature": {
        "type": "string",
        "description": "Contains the error code, if any, for the provisioning operation"
      },
      "ResultType": {
        "type": "string",
        "description": "The result of the provisioning operation can be Success, Failure, or"
      },
      "RiskDetail": {
        "type": "string",
        "description": "Details of the detected risk. Possible values are: none,"
      },
      "RiskEventTypes": {
        "type": "string",
        "description": "The list of risk event types associated with the sign-"
      },
      "RiskEventTypes_V2": {
        "type": "string",
        "description": "The list of risk event types associated with the sign-"
      },
      "RiskLevelAggregated": {
        "type": "string",
        "description": "Aggregated risk level."
      },
      "RiskLevelDuringSignIn": {
        "type": "string",
        "description": "Risk level during sign-in."
      },
      "RiskState": {
        "type": "string",
        "description": "State of the user's risk. Possible values are: none, confirmedSafe,"
      },
      "ServicePrincipalId": {
        "type": "string",
        "description": "ID of the service principal who initiated the sign-in."
      },
      "SessionId": {
        "type": "string",
        "description": "Id of the session that was generated during the"
      },
      "SessionLifetimePolicies": {
        "type": "string",
        "description": "Policies and settings that applied to the sign-in that"
      },
      "SignInEventTypes": {
        "type": "string",
        "description": "The types that are associated with the sign-in."
      },
      "SignInIdentifierType": {
        "type": "string",
        "description": "The type of sign in identifier. Possible values are:"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "Status": {
        "type": "string",
        "description": "Details of the sign-in status."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The date and time of the event in UTC."
      },
      "TokenIssuerName": {
        "type": "string",
        "description": "Name of the identity provider (e.g. sts.microsoft.com"
      },
      "TokenIssuerType": {
        "type": "string",
        "description": "Type of identityProvider (Azure AD, AD Federation"
      },
      "TokenProtectionStatusDetails": {
        "type": "string",
        "description": "Token protection creates a cryptographically secure"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UniqueTokenIdentifier": {
        "type": "string",
        "description": "Unique token identifier for the request."
      },
      "UserAgent": {
        "type": "string",
        "description": "User Agent for the sign-in."
      },
      "UserDisplayName": {
        "type": "string",
        "description": "Risky user display name."
      },
      "UserId": {
        "type": "string",
        "description": "ID of the user that initiated the sign-in."
      },
      "UserPrincipalName": {
        "type": "string",
        "description": "Risky user principal name."
      },
      "UserType": {
        "type": "string",
        "description": "Identifies whether the user is a member or guest in"
      },
      "AADTenantId": {
        "type": "string",
        "description": "Unique Azure AD tenant ID"
      },
      "ChangeId": {
        "type": "string",
        "description": "Unique ID of this change in this cycle"
      },
      "CycleId": {
        "type": "string",
        "description": "Unique ID per job iteration"
      },
      "InitiatedBy": {
        "type": "string",
        "description": "Details of who initiated this provisioning"
      },
      "JobId": {
        "type": "string",
        "description": "The unique ID for the whole provisioning job"
      },
      "ModifiedProperties": {
        "type": "string",
        "description": "Details of each property that was modified in this provisioning action"
      },
      "ProvisioningAction": {
        "type": "string",
        "description": "Indicates the activity name or the operation name. For a list of"
      },
      "ProvisioningStatusInfo": {
        "type": "string",
        "description": "Details of provisioning status"
      },
      "ProvisioningSteps": {
        "type": "string",
        "description": "Details of each step in provisioning"
      },
      "ServicePrincipal": {
        "type": "string",
        "description": "Represents the service principal used for provisioning"
      },
      "SourceIdentity": {
        "type": "string",
        "description": "Details of source object being provisioned"
      },
      "TargetIdentity": {
        "type": "string",
        "description": "Details of target object being provisioned"
      },
      "TargetSystem": {
        "type": "string",
        "description": "Details of target system of the object being provisioned"
      },
      "AccountEnabled": {
        "type": "bool",
        "description": "true if the service principal account is enabled; otherwise, false."
      },
      "DisplayName": {
        "type": "string",
        "description": "The display name for the service principal."
      },
      "IsProcessing": {
        "type": "bool",
        "description": "Indicates whether a user's risky state is being processed by the"
      },
      "RiskLastUpdatedDateTime": {
        "type": "datetime",
        "description": "The date and time that the risky user was last updated in UTC."
      },
      "RiskLevel": {
        "type": "string",
        "description": "Level of the detected risky user. Possible values are: low, medium,"
      },
      "ServicePrincipalType": {
        "type": "string",
        "description": "Identifies whether the service principal represents an Application,"
      },
      "IsDeleted": {
        "type": "bool",
        "description": "Indicates whether the user is deleted."
      }
    }
  },
  "AADServicePrincipalRiskEvents": {
    "tableName": "AADServicePrincipalRiskEvents",
    "description": "Logs generated by identity protection for Azure AD service principal risk events.",
    "columns": {
      "Activity": {
        "type": "string",
        "description": "Indicates the activity type the detected risk is linked to."
      },
      "ActivityDateTime": {
        "type": "datetime",
        "description": "Date and time when the risky activity occurred in UTC."
      },
      "AdditionalInfo": {
        "type": "dynamic",
        "description": "Additional information associated with the risk detection in"
      },
      "AppId": {
        "type": "string",
        "description": "The unique identifier for the associated application."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CorrelationId": {
        "type": "string",
        "description": "Correlation ID of the sign-in activity associated with the risk"
      },
      "DetectedDateTime": {
        "type": "datetime",
        "description": "Date and time when the risk was detected in UTC."
      },
      "DetectionTimingType": {
        "type": "string",
        "description": "Timing of the detected risk , whether real-time or offline."
      },
      "Id": {
        "type": "string",
        "description": "Unique identifier of the risk detection. Inherited from entity."
      },
      "IpAddress": {
        "type": "string",
        "description": "Provides the IP address of the client from where the risk"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "KeyIds": {
        "type": "dynamic",
        "description": "The unique identifier (GUID) for the key credential associated"
      },
      "LastUpdatedDateTime": {
        "type": "datetime",
        "description": "Date and time when the risk detection was last updated in"
      },
      "Location": {
        "type": "dynamic",
        "description": "Location of the sign-in."
      },
      "OperationName": {
        "type": "string",
        "description": "Name of the operation."
      },
      "RequestId": {
        "type": "string",
        "description": "Request identifier of the sign-in activity associated with the risk"
      },
      "RiskDetail": {
        "type": "string",
        "description": "Details of the detected risk. Note: Details for this property are"
      },
      "RiskEventType": {
        "type": "string",
        "description": "The type of risk event detected."
      },
      "RiskLevel": {
        "type": "string",
        "description": "Level of the detected risk. Note: details for this property are"
      },
      "RiskState": {
        "type": "string",
        "description": "The state of a detected risky service principal or sign-in"
      },
      "ServicePrincipalDisplayName": {
        "type": "string",
        "description": "The display name for the service principal."
      },
      "ServicePrincipalId": {
        "type": "string",
        "description": "The unique identifier for the service principal."
      },
      "Source": {
        "type": "string",
        "description": "Source of the risk detection. For example, identityProtection."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The date and time of the event in UTC."
      },
      "TokenIssuerType": {
        "type": "string",
        "description": "Indicates the type of token issuer for the detected sign-in risk."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AADServicePrincipalSignInLogs": {
    "tableName": "AADServicePrincipalSignInLogs",
    "description": "Service principal Azure Active Directory sign-in logs.",
    "columns": {
      "AppId": {
        "type": "string",
        "description": "Unique GUID representing the app ID in the Azure"
      },
      "AppOwnerTenantId": {
        "type": "string",
        "description": "The tenant identifier of the owenr of the application"
      },
      "AuthenticationContextClassReferences": {
        "type": "string",
        "description": "The authentication contexts of the sign-in"
      },
      "AuthenticationProcessingDetails": {
        "type": "string",
        "description": "Provides the details associated with authentication"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "Category of the sign-in event"
      },
      "ClientCredentialType": {
        "type": "string",
        "description": "The type of client credential used. Examples include"
      },
      "ConditionalAccessPolicies": {
        "type": "string",
        "description": "Details of the conditional access policies being"
      },
      "ConditionalAccessStatus": {
        "type": "string",
        "description": "Status of all the conditionalAccess policies related to"
      },
      "CorrelationId": {
        "type": "string",
        "description": "ID to provide sign-in trail"
      },
      "CreatedDateTime": {
        "type": "datetime",
        "description": "Datetime of the sign-in activity."
      },
      "DurationMs": {
        "type": "long",
        "description": "The duration of the operation in milliseconds"
      },
      "FederatedCredentialId": {
        "type": "string",
        "description": "Th identifier of an application's federated identity"
      },
      "Id": {
        "type": "string",
        "description": "Unique ID representing the sign-in activity"
      },
      "Identity": {
        "type": "string",
        "description": "The identity from the token that was presented when"
      },
      "IPAddress": {
        "type": "string",
        "description": "IP address of the client used to sign in"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "Level": {
        "type": "string",
        "description": "The severity level of the event"
      },
      "Location": {
        "type": "string",
        "description": "The region of the resource emitting the event"
      },
      "LocationDetails": {
        "type": "string",
        "description": "Details of the sign-in location"
      },
      "NetworkLocationDetails": {
        "type": "string",
        "description": "Provides the details associated with Authentication"
      },
      "OperationName": {
        "type": "string",
        "description": "For sign-ins, this value is always Sign-in activity"
      },
      "OperationVersion": {
        "type": "string",
        "description": "The REST API version that's requested by the client"
      },
      "ResourceDisplayName": {
        "type": "string",
        "description": "Name of the resource that the service principal"
      },
      "signed": {
        "type": "int",
        "description": "o"
      },
      "ResourceGroup": {
        "type": "string",
        "description": "Resource group for the logs"
      },
      "ResourceIdentity": {
        "type": "string",
        "description": "ID of the resource that the service principal signed"
      },
      "ResourceOwnerTenantId": {
        "type": "string",
        "description": "The tenant identifier of the owner of the resource"
      },
      "ResourceServicePrincipalId": {
        "type": "string",
        "description": "Service Principal Id of the resource"
      },
      "ResultDescription": {
        "type": "string",
        "description": "Provides the error description for the sign-in"
      },
      "ResultSignature": {
        "type": "string",
        "description": "Contains the error code, if any, for the sign-in"
      },
      "ResultType": {
        "type": "string",
        "description": "The result of the sign-in operation can be Success or"
      },
      "ServicePrincipalCredentialKeyId": {
        "type": "string",
        "description": "Key id of the service principal that initiated the sign-"
      },
      "ServicePrincipalCredentialThumbprint": {
        "type": "string",
        "description": "Thumbprint of the service principal that initiated the"
      },
      "ServicePrincipalId": {
        "type": "string",
        "description": "ID of the service principal who initiated the sign-in"
      },
      "ServicePrincipalName": {
        "type": "string",
        "description": "Service Principal Name of the service principal who"
      },
      "SessionId": {
        "type": "string",
        "description": "Id of the session that was generated during the"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The date and time of the event in UTC"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UniqueTokenIdentifier": {
        "type": "string",
        "description": "Unique token identifier for the request"
      }
    }
  },
  "AADUserRiskEvents": {
    "tableName": "AADUserRiskEvents",
    "description": "Logs generated by identity protection for Azure AD user risk events.",
    "columns": {
      "Activity": {
        "type": "string",
        "description": "Indicates the activity type the detected risk is linked to. Possible"
      },
      "ActivityDateTime": {
        "type": "datetime",
        "description": "Date and time when the risky activity occurred in UTC."
      },
      "AdditionalInfo": {
        "type": "dynamic",
        "description": "Additional information associated with the user risk event in JSON"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CorrelationId": {
        "type": "string",
        "description": "Correlation ID of the sign-in associated with the risk detection. This"
      },
      "DetectedDateTime": {
        "type": "datetime",
        "description": "Date and time that the risk was detected in UTC."
      },
      "DetectionTimingType": {
        "type": "string",
        "description": "Timing of the detected risk (real-time/offline). Possible values are:"
      },
      "Id": {
        "type": "string",
        "description": "Unique ID of the risk event."
      },
      "IpAddress": {
        "type": "string",
        "description": "The IP address of the client from where the risk occurred."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "LastUpdatedDateTime": {
        "type": "datetime",
        "description": "Date and time when the risk detection was last updated in UTC."
      },
      "Location": {
        "type": "dynamic",
        "description": "Location of the sign-in."
      },
      "OperationName": {
        "type": "string",
        "description": "Name of the operation."
      },
      "RequestId": {
        "type": "string",
        "description": "Request ID of the sign-in associated with the risk detection. This"
      },
      "RiskDetail": {
        "type": "string",
        "description": "Details of the detected risk. Possible values are: none,"
      },
      "RiskEventType": {
        "type": "string",
        "description": "The type of risk event detected."
      },
      "RiskLevel": {
        "type": "string",
        "description": "Level of the detected risk. Possible values are: low, medium, high,"
      },
      "RiskState": {
        "type": "string",
        "description": "The state of a detected risky user or sign-in. Possible values are: none,"
      },
      "Source": {
        "type": "string",
        "description": "Source of the risk detection. For example, activeDirectory."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The date and time of the event in UTC."
      },
      "TokenIssuerType": {
        "type": "string",
        "description": "Indicates the type of token issuer for the detected sign-in risk."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserDisplayName": {
        "type": "string",
        "description": "The user principal name (UPN) of the user."
      },
      "UserId": {
        "type": "string",
        "description": "Unique ID of the user."
      },
      "UserPrincipalName": {
        "type": "string",
        "description": "The user principal name (UPN) of the user."
      }
    }
  },
  "ABAPAuditLog": {
    "tableName": "ABAPAuditLog",
    "description": "SAP security audit log is used to keep records of important user transactions and system events within an SAP system. This table stores information such as who accessed the system, which transactions were executed, and when. It provides a useful tool for monitoring activity and detecting potential security breaches.",
    "columns": {
      "AbapProgramName": {
        "type": "string",
        "description": "The AbapProgramName is a four-character alphanumeric code that"
      },
      "AgentId": {
        "type": "string",
        "description": "Unique agent or integration suite identifier."
      },
      "AlertSeverity": {
        "type": "real",
        "description": "The AlertSeverity is a number between 0 and 255; the larger the"
      },
      "AlertSeverityText": {
        "type": "string",
        "description": "The AlertSeverityText refers to the text description associated with a"
      },
      "AlertValue": {
        "type": "real",
        "description": "The AlertValue represents the importance of the message of a log"
      },
      "AuditClassId": {
        "type": "real",
        "description": "The AuditClassId is a numeric identifier used to classify different"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClientId": {
        "type": "string",
        "description": "The ClientId is a three-digit number that identifies a specific client"
      },
      "Computer": {
        "type": "string",
        "description": "The Computer refers to the name or IP address of the user's"
      },
      "Email": {
        "type": "string",
        "description": "The Email refers to the email address associated with a specific user."
      },
      "Host": {
        "type": "string",
        "description": "The Host refers to the name of the computer or server on which the"
      },
      "Instance": {
        "type": "string",
        "description": "The Instance refers to a specific installation of an SAP system on a"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "MessageClass": {
        "type": "string",
        "description": "The MessageClass is a grouping or category for specific messages"
      },
      "MessageContainerId": {
        "type": "string",
        "description": "The MessageContainerId is a unique identifier for a specific"
      },
      "MessageId": {
        "type": "string",
        "description": "The MessageId is a unique identifier for a specific message or log"
      },
      "MessageText": {
        "type": "string",
        "description": "The MessageText is the text of a specific message or log entry. It"
      },
      "MonitoringObjectName": {
        "type": "string",
        "description": "The MonitoringObjectName is the name of the object being"
      },
      "MonitorShortName": {
        "type": "string",
        "description": "The MonitorShortName is the short name of the MTE(Monitoring"
      },
      "RemoteIpCountry": {
        "type": "string",
        "description": "The country of the TerminalIpV6 according to the GEO information"
      },
      "RemoteIpLatitude": {
        "type": "real",
        "description": "The Latitude of the TerminalIpV6 according to the GEO information"
      },
      "RemoteIpLongitude": {
        "type": "real",
        "description": "The Longitude of the TerminalIpV6 according to the GEO"
      },
      "SalDateChar8": {
        "type": "string",
        "description": "The SalDateChar8 is the date the event occured in char8 format"
      },
      "SalIpAddress": {
        "type": "string",
        "description": "The SALIpAddress refers to the IP address associated with a specific"
      },
      "SalTimeChar6": {
        "type": "string",
        "description": "The SalTimeChar6 is the time the event occured in char6 format"
      },
      "SapProcessType": {
        "type": "string",
        "description": "The SapProcessType refers to the type of process that is being"
      },
      "SapWorkProcessName": {
        "type": "string",
        "description": "The SapWorkProcessName refers to the name of a specific work"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "SystemId": {
        "type": "string",
        "description": "The SystemId is a unique identifier for a specific SAP system. It is a"
      },
      "SystemNumber": {
        "type": "string",
        "description": "The SystemNumber is a two-digit number that identifies a specific"
      },
      "SystemRole": {
        "type": "string",
        "description": "The SAP system's role."
      },
      "SystemUniqueId": {
        "type": "string",
        "description": "Unique system identifier."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TerminalIpV6": {
        "type": "string",
        "description": "The TerminalIPv6 refers to the IPv6 address associated with the"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time when the record was generated"
      },
      "TransactionCode": {
        "type": "string",
        "description": "the TransactionCode is a unique identifier for a specific SAP"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UpdatedOn": {
        "type": "datetime",
        "description": "The date and time of the event occured in the SAP system in UTC"
      },
      "User": {
        "type": "string",
        "description": "The User who performed the a specific event or activity."
      },
      "Variable1": {
        "type": "string",
        "description": "The Variable1 used by the SAP system for additional information"
      },
      "Variable2": {
        "type": "string",
        "description": "The Variable2 used by the SAP system for additional information"
      },
      "Variable3": {
        "type": "string",
        "description": "The Variable3 used by the SAP system for additional information"
      },
      "Variable4": {
        "type": "string",
        "description": "The Variable4 used by the SAP system for additional information"
      }
    }
  },
  "ABAPAuthorizationDetails": {
    "tableName": "ABAPAuthorizationDetails",
    "description": "SAP authorizations details per role.",
    "columns": {
      "AgentId": {
        "type": "string",
        "description": "Unique agent or integration suite identifier."
      },
      "Authorization": {
        "type": "string",
        "description": "The authorization identifier."
      },
      "AuthorizationGroup": {
        "type": "string",
        "description": "The authorization group."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ChildRole": {
        "type": "string",
        "description": "The child role name, if the role is a composite one."
      },
      "ClientId": {
        "type": "string",
        "description": "The ClientId is a three-digit number that identifies a specific client"
      },
      "Field": {
        "type": "string",
        "description": "The authorization field name."
      },
      "High": {
        "type": "string",
        "description": "The high value of the authorization field."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Low": {
        "type": "string",
        "description": "The low value of the authorization field."
      },
      "Object": {
        "type": "string",
        "description": "The authorization object name."
      },
      "Role": {
        "type": "string",
        "description": "The SAP role name."
      },
      "RoleType": {
        "type": "string",
        "description": "Single or composite role"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "SystemId": {
        "type": "string",
        "description": "The SystemId is a unique identifier for a specific SAP system. It is a"
      },
      "SystemRole": {
        "type": "string",
        "description": "The SAP system's role."
      },
      "SystemUniqueId": {
        "type": "string",
        "description": "Unique system identifier."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time when the record was generated"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "TypeOfChange": {
        "type": "string",
        "description": "I and J for insert, U for update, D and E for deletion."
      },
      "UpdatedOn": {
        "type": "datetime",
        "description": "The date and time when the role was last updated."
      }
    }
  },
  "ABAPChangeDocsLog": {
    "tableName": "ABAPChangeDocsLog",
    "description": "SAP NetWeaver Application Server ABAP logs changes to business data objects in change documents. This table stores information about the changes made to business objects, including the user who made the change, the date and time of the change, and the type of change that was made.",
    "columns": {
      "ActualChangeNumber": {
        "type": "string",
        "description": "Actual change number."
      },
      "AgentId": {
        "type": "string",
        "description": "Unique agent or integration suite identifier."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ChangedTableKey": {
        "type": "string",
        "description": "Changed table key."
      },
      "ChangeNumber": {
        "type": "string",
        "description": "Document change number."
      },
      "ClientId": {
        "type": "string",
        "description": "The ClientId is a three-digit number that identifies a specific"
      },
      "CreatedFromPlannedChange": {
        "type": "string",
        "description": "Created from planned change, in the following syntax:('X' , ' ')."
      },
      "CurrencyKeyNew": {
        "type": "string",
        "description": "Currency key: new value."
      },
      "CurrencyKeyOld": {
        "type": "string",
        "description": "Currency key: old value."
      },
      "FieldName": {
        "type": "string",
        "description": "Field name."
      },
      "FlagText": {
        "type": "string",
        "description": "Flag text."
      },
      "HeaderTypeOfChange": {
        "type": "string",
        "description": "Header type of change, including: U = Change; I = Insert; E ="
      },
      "Instance": {
        "type": "string",
        "description": "The Instance refers to a specific installation of an SAP system"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "ItemTypeOfChange": {
        "type": "string",
        "description": "Item type of change, including: U = Change; I = Insert; E ="
      },
      "Language": {
        "type": "string",
        "description": "Document language."
      },
      "ObjectClass": {
        "type": "string",
        "description": "Object class, such as BELEG, BPAR, PFCG, IDENTITY."
      },
      "ObjectId": {
        "type": "string",
        "description": "Object ID."
      },
      "PlannedChangeNumber": {
        "type": "string",
        "description": "Planned change number."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "SystemId": {
        "type": "string",
        "description": "The SystemId is a unique identifier for a specific SAP system. It"
      },
      "SystemNumber": {
        "type": "string",
        "description": "The SystemNumber is a two-digit number that identifies a"
      },
      "SystemRole": {
        "type": "string",
        "description": "The SAP system's role."
      },
      "SystemUniqueId": {
        "type": "string",
        "description": "Unique system identifier."
      },
      "TableName": {
        "type": "string",
        "description": "Table name."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time when the record was generated."
      },
      "TransactionCode": {
        "type": "string",
        "description": "Transaction code."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UOMNew": {
        "type": "string",
        "description": "Unit of measure: new value."
      },
      "UOMOld": {
        "type": "string",
        "description": "Unit of measure: old value."
      },
      "UpdatedOn": {
        "type": "datetime",
        "description": "The date and time of the event occured in the SAP system in"
      },
      "User": {
        "type": "string",
        "description": "The User who performed the a specific event or activity."
      },
      "ValueNew": {
        "type": "string",
        "description": "Field content: new value."
      },
      "ValueOld": {
        "type": "string",
        "description": "Field content: old value."
      },
      "Version": {
        "type": "string",
        "description": "Document change version."
      }
    }
  },
  "ABAPTableDataLog": {
    "tableName": "ABAPTableDataLog",
    "description": "SAP NetWeaver Application Server ABAP logs changes to tables. This log stores information about the changes made to selected tables, including the user who made the change, the date and time of the change, and the type of change that was made.",
    "columns": {
      "AgentId": {
        "type": "string",
        "description": "Unique agent or integration suite identifier."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClientId": {
        "type": "string",
        "description": "The ClientId is a three-digit number that identifies a specific client within"
      },
      "DBLogId": {
        "type": "string",
        "description": "The unique identifier of the database log."
      },
      "Host": {
        "type": "string",
        "description": "The hostname of the SAP system."
      },
      "Instance": {
        "type": "string",
        "description": "The Instance refers to a specific installation of an SAP system on a server."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Language": {
        "type": "string",
        "description": "The language of the event."
      },
      "LogKey": {
        "type": "string",
        "description": "The unique identifier of the log key."
      },
      "NewValue": {
        "type": "string",
        "description": "The new value of the field."
      },
      "OldValue": {
        "type": "string",
        "description": "The old value of the field."
      },
      "OperationTypeSQL": {
        "type": "string",
        "description": "The type of operation that was performed, such as insert, update and"
      },
      "Program": {
        "type": "string",
        "description": "The program that was executed."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "SystemId": {
        "type": "string",
        "description": "The SystemId is a unique identifier for a specific SAP system. It is a three-"
      },
      "SystemNumber": {
        "type": "string",
        "description": "The SystemNumber is a two-digit number that identifies a specific SAP"
      },
      "SystemRole": {
        "type": "string",
        "description": "The SAP system's role."
      },
      "SystemUniqueId": {
        "type": "string",
        "description": "Unique system identifier."
      },
      "TableField": {
        "type": "string",
        "description": "The field of the table that produced the change."
      },
      "TableName": {
        "type": "string",
        "description": "The name of the table that produced the change."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time when the record was generated."
      },
      "TransactionCode": {
        "type": "string",
        "description": "The transaction code of the event."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UpdatedOn": {
        "type": "datetime",
        "description": "The date and time of the event occured in the SAP system in UTC format."
      },
      "User": {
        "type": "string",
        "description": "The User who performed the a specific event or activity."
      },
      "VersionNumber": {
        "type": "string",
        "description": "The version number of the event."
      }
    }
  },
  "ABAPUserDetails": {
    "tableName": "ABAPUserDetails",
    "description": "SAP User details, such as roles and profiles assigned.",
    "columns": {
      "AgentId": {
        "type": "string",
        "description": "Unique agent or integration suite identifier."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ChangedOn": {
        "type": "datetime",
        "description": "Last changed on date and time."
      },
      "ClientId": {
        "type": "string",
        "description": "The ClientId is a three-digit number that identifies a specific client within an"
      },
      "CreatedOn": {
        "type": "datetime",
        "description": "Day on which user was created."
      },
      "Email": {
        "type": "string",
        "description": "Email address."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LastChangedBy": {
        "type": "string",
        "description": "Last changed by."
      },
      "LastSeen": {
        "type": "datetime",
        "description": "User last logon."
      },
      "LockedStatus": {
        "type": "string",
        "description": "Locked status: 0: Not Locked, 32: Locked Globally By Administrator, 64:"
      },
      "Profiles": {
        "type": "dynamic",
        "description": "List of profiles generated for the user."
      },
      "Roles": {
        "type": "dynamic",
        "description": "List of roles assigned to user."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "SystemId": {
        "type": "string",
        "description": "The SystemId is a unique identifier for a specific SAP system. It is a three-"
      },
      "SystemRole": {
        "type": "string",
        "description": "The SAP system's role."
      },
      "SystemUniqueId": {
        "type": "string",
        "description": "Unique system identifier."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time when the record was sent to Sentinel."
      },
      "Timezone": {
        "type": "string",
        "description": "User default Time zone."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "User": {
        "type": "string",
        "description": "SAP User."
      },
      "UserGroup": {
        "type": "string",
        "description": "SAP User group."
      },
      "UserType": {
        "type": "string",
        "description": "User Type (dialog, system)."
      },
      "ValidityDate": {
        "type": "datetime",
        "description": "Last valid day for login in."
      }
    }
  },
  "ABSBotRequests": {
    "tableName": "ABSBotRequests",
    "description": "Logs of requests made by Azure Bot Service onbehalf of a bot such as requests from channel to bot and to other dependencies.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "BotId": {
        "type": "string",
        "description": "Name of the bot or the bot handle."
      },
      "Category": {
        "type": "string",
        "description": "Classification of the log."
      },
      "Channel": {
        "type": "string",
        "description": "Name of the Channel generating the log such as Direct Line, MS Teams,"
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID for the correlated events. Can be used to identify correlated events"
      },
      "DurationMs": {
        "type": "real",
        "description": "Duration of the request."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Level": {
        "type": "string",
        "description": "log level of message such as Information, Warning, Error, etc."
      },
      "Location": {
        "type": "string",
        "description": "Location of the service sending the log (Azure region name e.g. West US)."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with the log record."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultCode": {
        "type": "int",
        "description": "HTTP request response code."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "ACICollaborationAudit": {
    "tableName": "ACICollaborationAudit",
    "description": "Audits of collaborative resources approval and access during pipeline execution.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID for correlated pipeline run events. Can be used to identify"
      },
      "EntitlementResult": {
        "type": "string",
        "description": "The result of the entitlement evaluation. Options are: Granted ="
      },
      "EntitlementSummary": {
        "type": "string",
        "description": "Textual summary of the granted access."
      },
      "GrantCorrelationId": {
        "type": "string",
        "description": "The ID for the grant events. Can be used to correlate between"
      },
      "GrantSource": {
        "type": "string",
        "description": "The azure resource ID of the resource the grant is based on."
      },
      "GrantSourceType": {
        "type": "string",
        "description": "The type of the the resource the grant is based on."
      },
      "GrantType": {
        "type": "string",
        "description": "The method used to grant access to the resource (Owned,"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Location": {
        "type": "string",
        "description": "The Location (Region) the resource was accessed in."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with audit record."
      },
      "ParticipantName": {
        "type": "string",
        "description": "The participant friendly name as used in the contract negotiation."
      },
      "ParticipantTenantId": {
        "type": "string",
        "description": "The participant tenant id. Enable query by the granted tenant"
      },
      "ReferencedResourceId": {
        "type": "string",
        "description": "The storage resource that the accessed CI resource points to, if"
      },
      "ReferencedResourceType": {
        "type": "string",
        "description": "The storage resource type that the accessed CI resource points to,"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TargetResourceId": {
        "type": "string",
        "description": "The azure resource ID of the accessed resource."
      },
      "TargetResourceType": {
        "type": "string",
        "description": "The resource type of the accessed resource."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the audit was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserName": {
        "type": "string",
        "description": "Name of the user that initiated the pipeline. Available only if the"
      }
    }
  },
  "ACRConnectedClientList": {
    "tableName": "ACRConnectedClientList",
    "description": "Logs count of Redis clients connected to a cache instance and their IP addresses, logged at a 10-second interval.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CacheName": {
        "type": "string",
        "description": "The name of the Azure Cache for Redis instance."
      },
      "ClientCount": {
        "type": "int",
        "description": "The number of Redis client connections from the associated IP address."
      },
      "ClientIp": {
        "type": "string",
        "description": "The Redis client IP address."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Location": {
        "type": "string",
        "description": "The location (region) the Azure Cache for Redis instance was accessed in."
      },
      "OperationName": {
        "type": "string",
        "description": "The Redis operation associated with the log record."
      },
      "PrivateLinkIpv6": {
        "type": "string",
        "description": "The Redis client private link IPv6 address (if applicable)."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "RoleInstance": {
        "type": "string",
        "description": "The role instance which logged the client list."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp of when the log was generated in UTC."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "ACREntraAuthenticationAuditLog": {
    "tableName": "ACREntraAuthenticationAuditLog",
    "description": "Logs Microsoft Entra authentication audit events for Azure Cache for Redis.",
    "columns": {
      "Authentication": {
        "type": "string",
        "description": "Authentication result."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CacheName": {
        "type": "string",
        "description": "The name of the Azure Cache for Redis instance."
      },
      "ClientId": {
        "type": "string",
        "description": "Client identifier."
      },
      "ClientName": {
        "type": "string",
        "description": "Client name."
      },
      "IpAddress": {
        "type": "string",
        "description": "The IP address and port associated with the log event."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Lifetime": {
        "type": "string",
        "description": "Duration of Microsoft Entra authentication validity, measured in"
      },
      "Location": {
        "type": "string",
        "description": "The location (region) the Azure Cache for Redis instance was accessed in."
      },
      "Message": {
        "type": "string",
        "description": "The message associated with the log event."
      },
      "OperationName": {
        "type": "string",
        "description": "The Redis operation associated with the log record."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "RoleInstance": {
        "type": "int",
        "description": "The role instance associated with the log event."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp of when the log was generated in UTC."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "Username": {
        "type": "string",
        "description": "The user's identifier or username."
      }
    }
  },
  "ACSAdvancedMessagingOperations": {
    "tableName": "ACSAdvancedMessagingOperations",
    "description": "Communication Services logs of incoming requests to Advanced Messaging operations.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CallerIpAddress": {
        "type": "string",
        "description": "The caller IP address, if the operation corresponds to an API call that"
      },
      "Category": {
        "type": "string",
        "description": "The log category of the event. Logs with the same log category and"
      },
      "ChannelId": {
        "type": "string",
        "description": "The Channel Registration ID of the channel used to send the request."
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID for correlated events. Can be used to identify correlated events"
      },
      "DurationMs": {
        "type": "int",
        "description": "The duration of the operation in milliseconds."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Level": {
        "type": "string",
        "description": "The severity level of the operation."
      },
      "Location": {
        "type": "string",
        "description": "The location the request was processed."
      },
      "MessageStatus": {
        "type": "string",
        "description": "The status result of the message send. Possible values include: \"delivered\","
      },
      "MessageType": {
        "type": "string",
        "description": "The type of message in the request. Possible values include: \"text\","
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The API-version associated with the operation or version of the operation"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultDescription": {
        "type": "string",
        "description": "The static text description of this operation."
      },
      "ResultSignature": {
        "type": "string",
        "description": "The sub status of the operation. If this operation corresponds to a REST"
      },
      "ResultType": {
        "type": "string",
        "description": "The status of the operation."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "URI": {
        "type": "string",
        "description": "The URI of the request."
      }
    }
  },
  "ACSAuthIncomingOperations": {
    "tableName": "ACSAuthIncomingOperations",
    "description": "Communication Services logs of incoming requests to auth operations.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The log category of the event. Logs with the same log category and"
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID for correlated events. Can be used to identify correlated events"
      },
      "DurationMs": {
        "type": "int",
        "description": "The duration of the operation in milliseconds."
      },
      "Identity": {
        "type": "string",
        "description": "The request sender's identity"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Level": {
        "type": "string",
        "description": "The severity level of the operation."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The API-version associated with the operation or version of the operation"
      },
      "PlatformType": {
        "type": "string",
        "description": "The platform type being used in the request."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultDescription": {
        "type": "string",
        "description": "The static text description of this operation."
      },
      "ResultSignature": {
        "type": "string",
        "description": "The sub status of the operation. If this operation corresponds to a REST"
      },
      "ResultType": {
        "type": "string",
        "description": "The status of the operation."
      },
      "Scopes": {
        "type": "dynamic",
        "description": "Scopes for the auth request (e.g. Chat, SMS, etc.)"
      },
      "SdkType": {
        "type": "string",
        "description": "The SDK type being used in the request."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "URI": {
        "type": "string",
        "description": "The URI of the request"
      }
    }
  },
  "ACSBillingUsage": {
    "tableName": "ACSBillingUsage",
    "description": "Usage records across all modes of Communication Services.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The log category of the event. Logs with the same log category and"
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID for correlated events. Can be used to identify correlated events"
      },
      "EndTime": {
        "type": "datetime",
        "description": "The time when resource consumption ended. Optional, as some events"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The API-version associated with the operation or version of the operation"
      },
      "ParticipantId": {
        "type": "string",
        "description": "Participant Id is the link between billing data and calling data."
      },
      "Quantity": {
        "type": "real",
        "description": "The amount of usage in terms of the specified unit."
      },
      "RecordId": {
        "type": "string",
        "description": "The unique ID for a given usage record."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "StartTime": {
        "type": "datetime",
        "description": "Time when the resource consumption started."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UnitType": {
        "type": "string",
        "description": "The unit in which the type of usage is measured."
      },
      "UsageType": {
        "type": "string",
        "description": "The type of resource being consumed."
      },
      "UserIdA": {
        "type": "string",
        "description": "User ID consuming the resource."
      },
      "UserIdB": {
        "type": "string",
        "description": "User ID consuming the resource for consumables involving two users."
      }
    }
  },
  "ACSCallAutomationIncomingOperations": {
    "tableName": "ACSCallAutomationIncomingOperations",
    "description": "Communication Services logs of incoming requests to Call Automation operations. Every entry corresponds to the result of a call to the Call Automation APIs, e.g. CreateCall, AnswerCall, Play, Recognize, etc.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CallConnectionId": {
        "type": "string",
        "description": "Id of the call connection/leg, if available."
      },
      "CallerIpAddress": {
        "type": "string",
        "description": "The caller IP address, if the operation corresponds to an API call that"
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID for correlated events. Can be used to identify correlated events"
      },
      "DurationMs": {
        "type": "int",
        "description": "The duration of the operation in milliseconds."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Level": {
        "type": "string",
        "description": "The severity level of the operation."
      },
      "OperationId": {
        "type": "string",
        "description": "The ID for media events. Can be used to identify operation events"
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The API version associated with the operation or version of the"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultSignature": {
        "type": "int",
        "description": "The sub status of the operation. If this operation corresponds to a REST"
      },
      "ResultType": {
        "type": "string",
        "description": "The status of the operation."
      },
      "SdkType": {
        "type": "string",
        "description": "The SDK type used in the request."
      },
      "SdkVersion": {
        "type": "string",
        "description": "SDK Version."
      },
      "ServerCallId": {
        "type": "string",
        "description": "Server Call Id."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "SubOperationName": {
        "type": "string",
        "description": "Denotes the operation specific configuration (e.g. Recognize Dtmf, Play"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "URI": {
        "type": "string",
        "description": "The URI of the request."
      }
    }
  },
  "ACSCallAutomationMediaSummary": {
    "tableName": "ACSCallAutomationMediaSummary",
    "description": "Communication Services summary logs of Call Automation Media operations. Every entry corresponds to the result of a call to the Call Automation Media APIs. (e.g. Play, Recognize).",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID for correlated events. Can be used to identify correlated"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Level": {
        "type": "string",
        "description": "The severity level of the operation."
      },
      "OperationId": {
        "type": "string",
        "description": "The ID for media events. Can be used to identify"
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "PlayInLoop": {
        "type": "bool",
        "description": "Describes if the Play was requested to loop."
      },
      "PlayInterrupted": {
        "type": "bool",
        "description": "Describes if the play operation was interrupted."
      },
      "PlayToParticipant": {
        "type": "bool",
        "description": "True if Play request was targeted to a single"
      },
      "RecognizePromptSubOperationName": {
        "type": "string",
        "description": "Describes the Recognize request's prompt kind, i.e."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "ResultCode": {
        "type": "int",
        "description": "The HTTP result code for the operation."
      },
      "ResultMessage": {
        "type": "string",
        "description": "The result message related to the operation."
      },
      "ResultSubcode": {
        "type": "int",
        "description": "The sub status code for the operation."
      },
      "ResultType": {
        "type": "string",
        "description": "The status of the operation."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "CallConnectionId": {
        "type": "string",
        "description": "Id of the call connection/leg, if available."
      },
      "ParticipantId": {
        "type": "string",
        "description": "The participantId of the current participant record for unmixed"
      },
      "StreamingDurationInMs": {
        "type": "real",
        "description": "The duration of the streaming session in milliseconds"
      },
      "StreamingModality": {
        "type": "string",
        "description": "The modality of streaming being recorded, eg."
      },
      "StreamingSessionId": {
        "type": "string",
        "description": "The ID associated with the streaming session belonging to the"
      },
      "StreamingStartTime": {
        "type": "datetime",
        "description": "The start time of the streaming session."
      }
    }
  },
  "ACSCallClientMediaStatsTimeSeries": {
    "tableName": "ACSCallClientMediaStatsTimeSeries",
    "description": "Call client media stats logs provide media statistics about a call made through ACS. These los are used to provide granular timeseries for quality metrics in Call Diagnostics Center. The logs contains information about media stream type, direction, codec as well as bitrate properties (e.g. max, min, average).",
    "columns": {
      "AggregationIntervalSeconds": {
        "type": "int",
        "description": "ACS calling media stats aggregation interval in seconds."
      },
      "Average": {
        "type": "real",
        "description": "The average of a certain media metric statistics."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CallClientTimeStamp": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the ACS client's media stats log"
      },
      "CallId": {
        "type": "string",
        "description": "The identifier of the call used to correlate. Can be used to"
      },
      "ClientInstanceId": {
        "type": "string",
        "description": "Client instance ID."
      },
      "Count": {
        "type": "long",
        "description": "The count of a certain media metric statistics."
      },
      "EndpointId": {
        "type": "string",
        "description": "ACS calling endpoint ID."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable"
      },
      "Maximum": {
        "type": "real",
        "description": "The maximum of a certain media metric statistics."
      },
      "MediaStreamCodec": {
        "type": "string",
        "description": "Client media stream codec."
      },
      "MediaStreamDirection": {
        "type": "string",
        "description": "Client media stream direction, i.e. recv or send."
      },
      "MediaStreamId": {
        "type": "string",
        "description": "ACS calling media stream ID."
      },
      "MediaStreamType": {
        "type": "string",
        "description": "Client media stream type, i.e. video or screen."
      },
      "MetricName": {
        "type": "string",
        "description": "Client metric name."
      },
      "Minimum": {
        "type": "real",
        "description": "The minimum of a certain media metric statistics."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "ParticipantId": {
        "type": "string",
        "description": "ID of the participant."
      },
      "RemoteEndpointId": {
        "type": "string",
        "description": "ACS calling remote endpoint ID."
      },
      "RemoteParticipantId": {
        "type": "string",
        "description": "ACS remote participant ID."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "Sum": {
        "type": "real",
        "description": "The sum of a certain media metric statistics."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "ACSCallClientOperations": {
    "tableName": "ACSCallClientOperations",
    "description": "Call client operation logs provide information regarding operations performed by clients using the Azure Communication Service Calling client SDK. It includes information regarding events raised by the SDK, such as state changes, e.g. createView, startAudio,DevicePermissionRequest. This log will be used by Call Diagnostics Center to visualize a call flow in a time series manner.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CallClientTimeStamp": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the call client log was generated."
      },
      "CallId": {
        "type": "string",
        "description": "The identifier of the call used to correlate. Can be used to identify"
      },
      "ClientInstanceId": {
        "type": "string",
        "description": "Client instance ID."
      },
      "DurationMs": {
        "type": "long",
        "description": "Client operation duration in millisecond."
      },
      "EndpointId": {
        "type": "string",
        "description": "Azure Communication Service calling endpoint ID."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "OperationId": {
        "type": "string",
        "description": "Client operation ID."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "OperationPayload": {
        "type": "dynamic",
        "description": "Azure Communication Service calling specific operation payload"
      },
      "OperationType": {
        "type": "string",
        "description": "Client operation type."
      },
      "ParticipantId": {
        "type": "string",
        "description": "ID of the participant."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultSignature": {
        "type": "int",
        "description": "Client operation event result network code."
      },
      "ResultType": {
        "type": "string",
        "description": "Client operation event result type."
      },
      "SdkVersion": {
        "type": "string",
        "description": "Azure Communication Service calling client SDK version associated"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The user agent string of the client application."
      }
    }
  },
  "ACSCallClientServiceRequestAndOutcome": {
    "tableName": "ACSCallClientServiceRequestAndOutcome",
    "description": "Service side request and outcome logs from calling SDK like call join, hangup and state updates as outcomes with http request/response payloads in the property bag.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The log category of the event. Logs with the same log category and"
      },
      "CorrelationId": {
        "type": "string",
        "description": "The unique gguid per dimension."
      },
      "DurationMs": {
        "type": "int",
        "description": "Duration of an operation in milliseconds."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Level": {
        "type": "string",
        "description": "Log level like info/error."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "Properties": {
        "type": "dynamic",
        "description": "Properties payload based on request/outcome of various calling"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultSignature": {
        "type": "int",
        "description": "HTTP result signature."
      },
      "ResultType": {
        "type": "string",
        "description": "Result type like Success/UnexpectedServerError."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "ACSCallClosedCaptionsSummary": {
    "tableName": "ACSCallClosedCaptionsSummary",
    "description": "Call closed captions summary logs provide an overview about a closed captions made through ACS. There is one log for every closed captions done, and logs contain information about the duration of the closed captions, start time, spoken language and end reason, as well as the cancel reason of closed captions.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CancelReason": {
        "type": "string",
        "description": "The reason why the closed captions cancelled."
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID for correlated events. Can be used to identify correlated"
      },
      "Duration": {
        "type": "real",
        "description": "Duration of the closed captions in seconds."
      },
      "EndReason": {
        "type": "string",
        "description": "The reason why the closed captions ended."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "Level": {
        "type": "string",
        "description": "The severity level of the operation."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "ResultType": {
        "type": "string",
        "description": "The status of the operation."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "SpeechRecognitionSessionId": {
        "type": "string",
        "description": "The ID given to the closed captions this log refers to."
      },
      "SpokenLanguage": {
        "type": "string",
        "description": "The spoken language of the closed captions."
      },
      "StartTime": {
        "type": "datetime",
        "description": "The time that the closed captions started."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "ACSCallDiagnostics": {
    "tableName": "ACSCallDiagnostics",
    "description": "Diagnostics logs provide information about the media transfers that occur in a call. Every log corresponds to an individual media stream and contains information about the emitting endpoint (e.g. the user sending the stream).",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The log category of the event. Logs with the same log"
      },
      "CodecName": {
        "type": "string",
        "description": "Codec used for the media stream."
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID for correlated events. Can be used to identify"
      },
      "EndpointId": {
        "type": "string",
        "description": "ID of the endpoint."
      },
      "EndpointType": {
        "type": "string",
        "description": "Type of the endpoint."
      },
      "HealedDataRatioAvg": {
        "type": "real",
        "description": "Average healed data ratio for incoming audio."
      },
      "HealedDataRatioMax": {
        "type": "real",
        "description": "Maximum healed data ratio for incoming audio."
      },
      "Identifier": {
        "type": "string",
        "description": "The indentifier of the call used to correlate. Can be used"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "JitterAvg": {
        "type": "int",
        "description": "Average delay of sending the packages in milliseconds."
      },
      "JitterBufferSizeAvg": {
        "type": "int",
        "description": "Average jitter buffer size in milliseconds."
      },
      "JitterBufferSizeMax": {
        "type": "int",
        "description": "Maximum jitter buffer size in milliseconds."
      },
      "JitterMax": {
        "type": "int",
        "description": "Max delay of sending the packages in milliseconds."
      },
      "MediaType": {
        "type": "string",
        "description": "Type of Media."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The API-version associated with the operation or version"
      },
      "Ops": {
        "type": "bool",
        "description": "Boolean value that identify OPS calls."
      },
      "PacketLossRateAvg": {
        "type": "real",
        "description": "Average lost packages."
      },
      "PacketLossRateMax": {
        "type": "real",
        "description": "Max lost packages."
      },
      "PacketUtilization": {
        "type": "int",
        "description": "Utilized packets for the media stream."
      },
      "ParticipantId": {
        "type": "string",
        "description": "ID of the participant."
      },
      "RecvFreezeDurationPerMinuteInMs": {
        "type": "real",
        "description": "Average receive freeze duration per minute in"
      },
      "RecvResolutionHeight": {
        "type": "int",
        "description": "Receive average resolution height."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "RoundTripTimeAvg": {
        "type": "int",
        "description": "Average time of a round trip in milliseconds."
      },
      "RoundTripTimeMax": {
        "type": "int",
        "description": "Max time of a trip in milliseconds."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For"
      },
      "StreamDirection": {
        "type": "string",
        "description": "The direction of the stream, can be inbound or"
      },
      "StreamId": {
        "type": "long",
        "description": "ID of the stream."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "TransportType": {
        "type": "string",
        "description": "Type of the internet transport layer, it can be UDP, TCP"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "VideoBitRateAvg": {
        "type": "int",
        "description": "Average bitrate."
      },
      "VideoBitRateMax": {
        "type": "int",
        "description": "Maximum bitrate."
      },
      "VideoFrameRateAvg": {
        "type": "real",
        "description": "Average frames per second."
      }
    }
  },
  "ACSCallDiagnosticsUpdates": {
    "tableName": "ACSCallDiagnosticsUpdates",
    "description": "Diagnostics logs provide information about the media transfers that occur in a call. Every log corresponds to an individual media stream and contains information about the emitting endpoint (e.g. the user sending the stream).",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CallUpdatesVersion": {
        "type": "int",
        "description": "Experience Version of the log."
      },
      "Category": {
        "type": "string",
        "description": "The log category of the event. Logs with the same log"
      },
      "CodecName": {
        "type": "string",
        "description": "Codec used for the media stream."
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID for correlated events. Can be used to identify"
      },
      "EndpointId": {
        "type": "string",
        "description": "ID of the endpoint."
      },
      "EndpointType": {
        "type": "string",
        "description": "Type of the endpoint."
      },
      "HealedDataRatioAvg": {
        "type": "real",
        "description": "Average healed data ratio for incoming audio."
      },
      "HealedDataRatioMax": {
        "type": "real",
        "description": "Maximum healed data ratio for incoming audio."
      },
      "Identifier": {
        "type": "string",
        "description": "The indentifier of the call used to correlate. Can be used"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "JitterAvg": {
        "type": "int",
        "description": "Average delay of sending the packages in milliseconds."
      },
      "JitterBufferSizeAvg": {
        "type": "int",
        "description": "Average jitter buffer size in milliseconds."
      },
      "JitterBufferSizeMax": {
        "type": "int",
        "description": "Maximum jitter buffer size in milliseconds."
      },
      "JitterMax": {
        "type": "int",
        "description": "Max delay of sending the packages in milliseconds."
      },
      "MediaType": {
        "type": "string",
        "description": "Type of Media."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The API-version associated with the operation or version"
      },
      "PacketLossRateAvg": {
        "type": "real",
        "description": "Average lost packages."
      },
      "PacketLossRateMax": {
        "type": "real",
        "description": "Max lost packages."
      },
      "PacketUtilization": {
        "type": "int",
        "description": "Utilized packets for the media stream."
      },
      "ParticipantId": {
        "type": "string",
        "description": "ID of the participant."
      },
      "RecvFreezeDurationPerMinuteInMs": {
        "type": "real",
        "description": "Average receive freeze duration per minute in"
      },
      "RecvResolutionHeight": {
        "type": "int",
        "description": "Receive average resolution height."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "RoundTripTimeAvg": {
        "type": "int",
        "description": "Average time of a round trip in milliseconds."
      },
      "RoundTripTimeMax": {
        "type": "int",
        "description": "Max time of a trip in milliseconds."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For"
      },
      "StreamDirection": {
        "type": "string",
        "description": "The direction of the stream, can be inbound or"
      },
      "StreamId": {
        "type": "long",
        "description": "ID of the stream."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "TransportType": {
        "type": "string",
        "description": "Type of the internet transport layer, it can be UDP, TCP"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "VideoBitRateAvg": {
        "type": "int",
        "description": "Average bitrate."
      },
      "VideoBitRateMax": {
        "type": "int",
        "description": "Maximum bitrate."
      },
      "VideoFrameRateAvg": {
        "type": "real",
        "description": "Average frames per second."
      }
    }
  },
  "ACSCallRecordingIncomingOperations": {
    "tableName": "ACSCallRecordingIncomingOperations",
    "description": "Communication Services logs of incoming requests to Call Recording operations. Every entry corresponds to the result of a call to the Call Recording APIs, e.g. StartRecording, StopRecording, PauseRecording, ResumeRecording, etc.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CallConnectionId": {
        "type": "string",
        "description": "Id of the call connection/leg, if available."
      },
      "CallerIpAddress": {
        "type": "string",
        "description": "The caller IP address, if the operation corresponds to an API call that"
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID for correlated events. Can be used to identify correlated events"
      },
      "DurationMs": {
        "type": "int",
        "description": "The duration of the operation in milliseconds."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Level": {
        "type": "string",
        "description": "The severity level of the operation."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The API version associated with the operation or version of the operation"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultSignature": {
        "type": "int",
        "description": "The sub status of the operation. If this operation corresponds to a REST"
      },
      "ResultType": {
        "type": "string",
        "description": "The status of the operation."
      },
      "SdkType": {
        "type": "string",
        "description": "The SDK type used in the request."
      },
      "SdkVersion": {
        "type": "string",
        "description": "SDK Version."
      },
      "ServerCallId": {
        "type": "string",
        "description": "Server Call Id."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "URI": {
        "type": "string",
        "description": "The URI of the request."
      }
    }
  },
  "ACSCallRecordingSummary": {
    "tableName": "ACSCallRecordingSummary",
    "description": "Call recording summary logs provide an overview about a recording maed through ACS. There is one log for every recording done, and logs contain information about the duration of the recording, the content (e.g. Audio-Video, Unmixed, Transcription, etc.) and format (e.g. WAV, MP4, etc) types used for the recording, as well as the end reason of recording.",
    "columns": {
      "AudioChannelsCount": {
        "type": "int",
        "description": "Total number of audio channels in the recording."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ChannelType": {
        "type": "string",
        "description": "The recording's channel type, i.e. mixed, unmixed."
      },
      "ChunkCount": {
        "type": "int",
        "description": "The total number of chunks created fot the recording."
      },
      "ContentType": {
        "type": "string",
        "description": "The recording's content, i.e. Audio Only, Audio - Video, Transcription,"
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID for correlated events. Can be used to identify correlated events"
      },
      "FormatType": {
        "type": "string",
        "description": "The recording's file format."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Level": {
        "type": "string",
        "description": "The severity level of the operation."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "RecordingEndReason": {
        "type": "string",
        "description": "The reason why the recording ended."
      },
      "RecordingId": {
        "type": "string",
        "description": "The ID given to the recording this log refers to."
      },
      "RecordingLength": {
        "type": "real",
        "description": "Duration of the recording in seconds."
      },
      "RecordingStartTime": {
        "type": "datetime",
        "description": "The time that the recording started."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultType": {
        "type": "string",
        "description": "The status of the operation."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "ACSCallSummary": {
    "tableName": "ACSCallSummary",
    "description": "Call summary logs provide an overview about a call made through ACS. There is one log for every participant in the call, and logs contain information about the duration of the call, the duration of the individual participant, the type of participant (e.g. VoIP, PSTN, etc.), as well as the endpoint information like the OS version being used, or the SDK version of the ACS platform.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CallDebuggingInfo": {
        "type": "string",
        "description": "JSON containing the fields with debug details about the call."
      },
      "CallDuration": {
        "type": "long",
        "description": "Duration of the call in seconds."
      },
      "CallStartTime": {
        "type": "datetime",
        "description": "Start time of the call."
      },
      "CallType": {
        "type": "string",
        "description": "Type of the call, for example P2P (peer to peer)."
      },
      "Category": {
        "type": "string",
        "description": "The log category of the event. Logs with the same log category and"
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID for correlated events. Can be used to identify correlated"
      },
      "DiagnosticOptions": {
        "type": "string",
        "description": "JSON containing the DiagnosticOptions provided during client"
      },
      "EndpointId": {
        "type": "string",
        "description": "The ID of the endpoint."
      },
      "EndpointType": {
        "type": "string",
        "description": "Type of the endpoint, for example VoIP (voice over IP)."
      },
      "Identifier": {
        "type": "string",
        "description": "The indentifier of the call used to correlate. Can be used to identify"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The API-version associated with the operation or version of the"
      },
      "OsVersion": {
        "type": "string",
        "description": "Operating System version."
      },
      "ParticipantDuration": {
        "type": "long",
        "description": "Duration of the participant call in seconds."
      },
      "ParticipantEndReason": {
        "type": "string",
        "description": "Participant's call end reason."
      },
      "ParticipantEndSubCode": {
        "type": "string",
        "description": "Participant's call end reason sub code."
      },
      "ParticipantId": {
        "type": "string",
        "description": "ID of the participant."
      },
      "ParticipantStartTime": {
        "type": "datetime",
        "description": "Start time of the participant."
      },
      "ParticipantTenantId": {
        "type": "string",
        "description": "The ID of the Microsoft tenant associated with the identity of the"
      },
      "ParticipantType": {
        "type": "string",
        "description": "Description of the participant as a combination of its client (Azure"
      },
      "PstnParticipantCallType": {
        "type": "string",
        "description": "The type and direction of PSTN participants, including emergency"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "ResultCategory": {
        "type": "string",
        "description": "The category of participant call end reason."
      },
      "SdkVersion": {
        "type": "string",
        "description": "SDK version."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TeamsThreadId": {
        "type": "string",
        "description": "Thread ID of the team."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "ACSCallSummaryUpdates": {
    "tableName": "ACSCallSummaryUpdates",
    "description": "Call summary logs provide an overview about a call made through ACS. There is one log for every participant in the call, and logs contain information about the duration of the call, the duration of the individual participant, the type of participant (e.g. VoIP, PSTN, etc.), as well as the endpoint information like the OS version being used, or the SDK version of the ACS platform.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CallDebuggingInfo": {
        "type": "string",
        "description": "JSON containing the fields with debug details about the call."
      },
      "CallDuration": {
        "type": "long",
        "description": "Duration of the call in seconds."
      },
      "CallStartTime": {
        "type": "datetime",
        "description": "Start time of the call."
      },
      "CallType": {
        "type": "string",
        "description": "Type of the call, for example P2P (peer to peer)."
      },
      "CallUpdatesVersion": {
        "type": "int",
        "description": "Experience Version of the log."
      },
      "Category": {
        "type": "string",
        "description": "The log category of the event. Logs with the same log category and"
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID for correlated events. Can be used to identify correlated"
      },
      "DiagnosticOptions": {
        "type": "string",
        "description": "JSON containing the DiagnosticOptions provided during client"
      },
      "EndpointId": {
        "type": "string",
        "description": "The ID of the endpoint."
      },
      "EndpointType": {
        "type": "string",
        "description": "Type of the endpoint, for example VoIP (voice over IP)."
      },
      "Identifier": {
        "type": "string",
        "description": "The indentifier of the call used to correlate. Can be used to identify"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The API-version associated with the operation or version of the"
      },
      "OsVersion": {
        "type": "string",
        "description": "Operating System version."
      },
      "ParticipantDuration": {
        "type": "long",
        "description": "Duration of the participant call in seconds."
      },
      "ParticipantEndReason": {
        "type": "string",
        "description": "Participant's call end reason."
      },
      "ParticipantEndSubCode": {
        "type": "string",
        "description": "Participant's call end reason sub code."
      },
      "ParticipantId": {
        "type": "string",
        "description": "ID of the participant."
      },
      "ParticipantStartTime": {
        "type": "datetime",
        "description": "Start time of the participant."
      },
      "ParticipantTenantId": {
        "type": "string",
        "description": "The ID of the Microsoft tenant associated with the identity of the"
      },
      "ParticipantType": {
        "type": "string",
        "description": "Description of the participant as a combination of its client (Azure"
      },
      "PstnParticipantCallType": {
        "type": "string",
        "description": "The type and direction of PSTN participants, including emergency"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "ResultCategory": {
        "type": "string",
        "description": "The category of participant call end reason."
      },
      "SdkVersion": {
        "type": "string",
        "description": "SDK version."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TeamsThreadId": {
        "type": "string",
        "description": "Thread ID of the team."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "ACSCallSurvey": {
    "tableName": "ACSCallSurvey",
    "description": "Call survey provides information about the call surveys submitted by the participants.",
    "columns": {
      "AudioIssues": {
        "type": "string",
        "description": "Comma separated audio issues reported by the"
      },
      "AudioRatingScore": {
        "type": "int",
        "description": "Audio experience rated by the participant."
      },
      "AudioRatingScoreLowerBound": {
        "type": "int",
        "description": "Minimum value of the AudioRatingScore scale."
      },
      "AudioRatingScoreThreshold": {
        "type": "int",
        "description": "The AudioRatingScore greater than this value indicates"
      },
      "AudioRatingScoreUpperBound": {
        "type": "int",
        "description": "Maximum value of the AudioRatingScore scale."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CallId": {
        "type": "string",
        "description": "The identifier of the call used to correlate. Can be used"
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID for correlated events. This field contains the"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The API-version associated with the operation or"
      },
      "OverallCallIssues": {
        "type": "string",
        "description": "Comma separated overall issues reported by the"
      },
      "OverallRatingScore": {
        "type": "int",
        "description": "Overall call experience rated by the participant."
      },
      "OverallRatingScoreLowerBound": {
        "type": "int",
        "description": "Minimum value of the OverallRatingScore scale."
      },
      "OverallRatingScoreThreshold": {
        "type": "int",
        "description": "The OverallRatingScore greater than this value"
      },
      "OverallRatingScoreUpperBound": {
        "type": "int",
        "description": "Maximum value of the OverallRatingScore scale."
      },
      "ParticipantId": {
        "type": "string",
        "description": "ID of the participant."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "ScreenshareIssues": {
        "type": "string",
        "description": "Comma separated screenshare issues reported by the"
      },
      "ScreenshareRatingScore": {
        "type": "int",
        "description": "Screenshare experience rated by the participant."
      },
      "ScreenshareRatingScoreLowerBound": {
        "type": "int",
        "description": "Minimum value of the ScreenshareRatingScore scale."
      },
      "ScreenshareRatingScoreThreshold": {
        "type": "int",
        "description": "The ScreenshareRatingScore greater than this value"
      },
      "ScreenshareRatingScoreUpperBound": {
        "type": "int",
        "description": "Maximum value of the ScreenshareRatingScore scale."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record"
      },
      "SurveyId": {
        "type": "string",
        "description": "The ID of the survey uniquely identifies the call survey."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "VideoIssues": {
        "type": "string",
        "description": "Comma separated video issues reported by the"
      },
      "VideoRatingScore": {
        "type": "int",
        "description": "Video experience rated by the participant."
      },
      "VideoRatingScoreLowerBound": {
        "type": "int",
        "description": "Minimum value of the VideoRatingScore scale."
      },
      "VideoRatingScoreThreshold": {
        "type": "int",
        "description": "The VideoRatingScore greater than this value indicates"
      },
      "VideoRatingScoreUpperBound": {
        "type": "int",
        "description": "Maximum value of the VideoRatingScore scale."
      }
    }
  },
  "ACSCallingMetrics": {
    "tableName": "ACSCallingMetrics",
    "description": "Aggregated Calling metrics in daily bins based on dimensions like SDK Version, OS name, Subcode.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CallsDcount": {
        "type": "int",
        "description": "Count of total Call per dimension."
      },
      "CallType": {
        "type": "string",
        "description": "Call type dimension."
      },
      "Category": {
        "type": "string",
        "description": "The log category of the event. Logs with the same log category"
      },
      "CorrelationId": {
        "type": "string",
        "description": "The unique gguid per dimension."
      },
      "DeviceBrand": {
        "type": "string",
        "description": "Device brand dimension."
      },
      "DeviceBrowser": {
        "type": "string",
        "description": "Device browser dimension."
      },
      "DeviceBrowserVersionMajor": {
        "type": "string",
        "description": "Device browser major dimension."
      },
      "DeviceBrowserVersionMinor": {
        "type": "string",
        "description": "Device browser minor dimension."
      },
      "DeviceFamily": {
        "type": "string",
        "description": "Device Family dimension."
      },
      "DeviceModel": {
        "type": "string",
        "description": "Device model dimension."
      },
      "DeviceOsName": {
        "type": "string",
        "description": "Device OS name dimension."
      },
      "DeviceOsVersionMajor": {
        "type": "string",
        "description": "Device OS version major dimension."
      },
      "DeviceOsVersionMinor": {
        "type": "string",
        "description": "Device OS version minor dimension."
      },
      "FailedLegsDcount": {
        "type": "int",
        "description": "Number of failed participants per dimension."
      },
      "Goal": {
        "type": "string",
        "description": "Threshold defined for a leg to succeed."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable"
      },
      "LegsDcount": {
        "type": "int",
        "description": "Count of total participants per dimension."
      },
      "MetricName": {
        "type": "string",
        "description": "Metric name dimension."
      },
      "MetricValueAvg": {
        "type": "real",
        "description": "The average value of metric per dimension."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The API-version associated with the operation or version of the"
      },
      "Platform": {
        "type": "string",
        "description": "Platform dimension."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "ResultType": {
        "type": "string",
        "description": "Result type dimension."
      },
      "SdkVersion": {
        "type": "string",
        "description": "SDK version dimension."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "SubCode": {
        "type": "string",
        "description": "Subcode dimension."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "SuccessLegsDcount": {
        "type": "int",
        "description": "Count of succeeded participants per dimension."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "TimestampBin": {
        "type": "datetime",
        "description": "The daily timestamp bin for each dimension."
      },
      "TimestampMax": {
        "type": "datetime",
        "description": "The max timestamp for each dimension."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "Unit": {
        "type": "string",
        "description": "Unit of metric"
      }
    }
  },
  "ACSChatIncomingOperations": {
    "tableName": "ACSChatIncomingOperations",
    "description": "Communication Services logs of incoming requests to chat operations.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CallerIpAddress": {
        "type": "string",
        "description": "The caller IP address, if the operation corresponds to an API call that"
      },
      "Category": {
        "type": "string",
        "description": "The log category of the event. Logs with the same log category and"
      },
      "ChatMessageId": {
        "type": "int",
        "description": "The chat message ID associated with the request."
      },
      "ChatThreadId": {
        "type": "string",
        "description": "The chat thread ID associated with the request."
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID for correlated events. Can be used to identify correlated events"
      },
      "DurationMs": {
        "type": "int",
        "description": "The duration of the operation in milliseconds."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Level": {
        "type": "string",
        "description": "The severity level of the operation."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The API-version associated with the operation or version of the operation"
      },
      "PlatformType": {
        "type": "string",
        "description": "The platform type used in the request."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultDescription": {
        "type": "string",
        "description": "The static text description of this operation."
      },
      "ResultSignature": {
        "type": "string",
        "description": "The sub status of the operation. If this operation corresponds to a REST"
      },
      "ResultType": {
        "type": "string",
        "description": "The status of the operation."
      },
      "SdkType": {
        "type": "string",
        "description": "The SDK type used in the request."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "URI": {
        "type": "string",
        "description": "The URI of the request."
      },
      "UserId": {
        "type": "string",
        "description": "The request sender's user ID."
      }
    }
  },
  "ACSEmailSendMailOperational": {
    "tableName": "ACSEmailSendMailOperational",
    "description": "Email Communication Services logs for send operations.",
    "columns": {
      "AttachmentsCount": {
        "type": "int",
        "description": "The count of attachments attached to a request."
      },
      "BccRecipientsCount": {
        "type": "int",
        "description": "The count of unique recipients on the 'Bcc' line."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The log category of the event. Logs with the same log category and"
      },
      "CcRecipientsCount": {
        "type": "int",
        "description": "The count of unique recipients on the 'Cc' line."
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID for correlated events. This value is populated with the"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Location": {
        "type": "string",
        "description": "The location the request was processed."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The API-version associated with the operation or version of the"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "Size": {
        "type": "real",
        "description": "The size of the email in megabypes."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "ToRecipientsCount": {
        "type": "int",
        "description": "The count of unique recipients on the 'To' line."
      },
      "TrafficSource": {
        "type": "string",
        "description": "The traffic source of a request."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UniqueRecipientsCount": {
        "type": "int",
        "description": "The unique count of all recipients."
      }
    }
  },
  "ACSEmailStatusUpdateOperational": {
    "tableName": "ACSEmailStatusUpdateOperational",
    "description": "Email Communication Services logs for message and recipient delivery status update operations.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The log category of the event. Logs with the same log"
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID for correlated events. This value is populated with the"
      },
      "DeliveryStatus": {
        "type": "string",
        "description": "The terminal status of a message. If the recipientId is null, this"
      },
      "EnhancedSmtpStatusCode": {
        "type": "string",
        "description": "The enhanced SMTP status code returned from the recipient"
      },
      "FailureMessage": {
        "type": "string",
        "description": "Verbatim error message for the given SMTP or"
      },
      "FailureReason": {
        "type": "string",
        "description": "Failure reason for the given SMTP or EnhancedSmtp status"
      },
      "InternetMessageId": {
        "type": "string",
        "description": "The internet message id of the recipient."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "IsHardBounce": {
        "type": "string",
        "description": "Signifies whether a delivery failure was due to a permanent"
      },
      "Location": {
        "type": "string",
        "description": "The location the request was processed."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The API-version associated with the operation or version of"
      },
      "RecipientId": {
        "type": "string",
        "description": "The email address of the recipient who received the message."
      },
      "RecipientMailServerHostName": {
        "type": "string",
        "description": "The mail server host name of recipient."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "SenderDomain": {
        "type": "string",
        "description": "The domain portion of the SenderAddress used in sending"
      },
      "SenderUsername": {
        "type": "string",
        "description": "The username portion of the SenderAddress used in sending"
      },
      "SmtpStatusCode": {
        "type": "string",
        "description": "The SMTP status code returned from the recipient email"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "ACSEmailUserEngagementOperational": {
    "tableName": "ACSEmailUserEngagementOperational",
    "description": "Email Communication Services logs for message and recipient delivery status update operations.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The log category of the event. Logs with the same log category and"
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID for correlated events. This value is populated with the"
      },
      "EngagementContext": {
        "type": "string",
        "description": "The context of the user interaction."
      },
      "EngagementType": {
        "type": "string",
        "description": "The type of user engagement."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Location": {
        "type": "string",
        "description": "The location the request was processed."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The API-version associated with the operation or version of the"
      },
      "RecipientId": {
        "type": "string",
        "description": "The count of unique recipients on the To line."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The user agent string of the client application."
      }
    }
  },
  "ACSJobRouterIncomingOperations": {
    "tableName": "ACSJobRouterIncomingOperations",
    "description": "Communication Services logs of incoming requests to Job Router operations.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CallerIpAddress": {
        "type": "string",
        "description": "The caller IP address, if the operation corresponds to an API call that"
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID for correlated events. Can be used to identify correlated events"
      },
      "DurationMs": {
        "type": "real",
        "description": "The duration of the operation in milliseconds."
      },
      "EntityId": {
        "type": "string",
        "description": "The Entity Id for the request."
      },
      "EntityType": {
        "type": "string",
        "description": "The Entity Type for the request."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Level": {
        "type": "string",
        "description": "The severity level of the operation."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The API-version associated with the operation or version of the operation"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultDescription": {
        "type": "string",
        "description": "The static text description of this operation."
      },
      "ResultSignature": {
        "type": "string",
        "description": "The sub status of the operation. If this operation corresponds to a REST"
      },
      "ResultType": {
        "type": "string",
        "description": "The status of the operation."
      },
      "SdkType": {
        "type": "string",
        "description": "The SDK type used in the request."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "URI": {
        "type": "string",
        "description": "The URI of the request."
      }
    }
  },
  "ACSOptOutManagementOperations": {
    "tableName": "ACSOptOutManagementOperations",
    "description": "Communication Services logs of opt-out operations independently from other SMS services.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CallerIpAddress": {
        "type": "string",
        "description": "The caller IP address, if the operation corresponds to an API call that"
      },
      "Category": {
        "type": "string",
        "description": "The log category of the event. Logs with the same log category and"
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID for correlated events. Can be used to identify correlated events"
      },
      "Country": {
        "type": "string",
        "description": "Represent the countries where the SMS messages were sent to or received"
      },
      "DurationMs": {
        "type": "int",
        "description": "The duration of the operation in milliseconds."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Level": {
        "type": "string",
        "description": "The severity level of the operation."
      },
      "Method": {
        "type": "string",
        "description": "The method used in the request."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The API-version associated with the operation or version of the operation"
      },
      "PhoneNumber": {
        "type": "string",
        "description": "Represents the phone number or identifier (short code, toll-free number,"
      },
      "or": {
        "type": "long",
        "description": "code) used by the application to send or manage SMS messages."
      },
      "PlatformType": {
        "type": "string",
        "description": "The platform type being used in the request."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultDescription": {
        "type": "string",
        "description": "The status text response of the result of this operation."
      },
      "ResultSignature": {
        "type": "string",
        "description": "The sub status of the operation. If this operation corresponds to a REST"
      },
      "ResultType": {
        "type": "string",
        "description": "The status of the operation."
      },
      "SdkType": {
        "type": "string",
        "description": "The SDK type being used in the request."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "URI": {
        "type": "string",
        "description": "The URI of the request."
      }
    }
  },
  "ACSRoomsIncomingOperations": {
    "tableName": "ACSRoomsIncomingOperations",
    "description": "Communication Services logs of incoming requests to rooms operations, with summaries of room object, lifespan, participants and roles count etc.",
    "columns": {
      "AddedRoomParticipantsCount": {
        "type": "int",
        "description": "The count of participants added to a room."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID for correlated events. Can be used to identify correlated"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Level": {
        "type": "string",
        "description": "The severity level of the operation."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The API-version associated with the operation or version of the"
      },
      "PstnDialOutEnabled": {
        "type": "bool",
        "description": "Flag to true if, at the time of the call, dial out to a PSTN"
      },
      "RemovedRoomParticipantsCount": {
        "type": "int",
        "description": "The count of participants removed in a room."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "ResultSignature": {
        "type": "string",
        "description": "The sub status of the operation. If this operation corresponds to a"
      },
      "ResultType": {
        "type": "string",
        "description": "The status of the operation."
      },
      "RoomId": {
        "type": "string",
        "description": "The ID of the room."
      },
      "RoomLifespan": {
        "type": "int",
        "description": "The Room lifespan in minutes."
      },
      "RoomParticipantsAttendee": {
        "type": "int",
        "description": "The participants count with attendee role."
      },
      "RoomParticipantsConsumer": {
        "type": "int",
        "description": "The participants count with consumer role."
      },
      "RoomParticipantsCount": {
        "type": "int",
        "description": "The count of participants in a room."
      },
      "RoomParticipantsPresenter": {
        "type": "int",
        "description": "The participants count with presenter role."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UpsertedRoomParticipantsCount": {
        "type": "int",
        "description": "The count of participants upserted in a room."
      },
      "CallerIpAddress": {
        "type": "string",
        "description": "The caller IP address, if the operation corresponds to an API call"
      },
      "Category": {
        "type": "string",
        "description": "The log category of the event. Logs with the same log category"
      },
      "Country": {
        "type": "string",
        "description": "The recipient country."
      },
      "DeliveryAttempts": {
        "type": "int",
        "description": "The number of attempts made to deliver this message."
      },
      "DurationMs": {
        "type": "int",
        "description": "The duration of the operation in milliseconds."
      },
      "IncomingMessageLength": {
        "type": "int",
        "description": "The number of characters in the incoming message."
      },
      "MessageId": {
        "type": "string",
        "description": "The identifier of the outgoing Sms message. Only present if"
      },
      "Method": {
        "type": "string",
        "description": "The method used in the request."
      },
      "NumberType": {
        "type": "string",
        "description": "The type of number used for sending or receiving the SMS"
      },
      "OutgoingMessageLength": {
        "type": "int",
        "description": "The number of characters in the outgoing message."
      },
      "PhoneNumber": {
        "type": "string",
        "description": "The number used for sending or receiving the SMS message (e.g."
      },
      "PlatformType": {
        "type": "string",
        "description": "The platform type being used in the request."
      },
      "ResultDescription": {
        "type": "string",
        "description": "The status text response of the result of this operation."
      },
      "SdkType": {
        "type": "string",
        "description": "The SDK type being used in the request."
      },
      "URI": {
        "type": "string",
        "description": "The URI of the request."
      }
    }
  },
  "ADAssessmentRecommendation": {
    "tableName": "ADAssessmentRecommendation",
    "description": "Recommendations generated by AD assessments that are started through a scheduled task. When you schedule the assessment it runs by default every 7 days and upload the data into Azure Log Analytics",
    "columns": {
      "ActionArea": {
        "type": "string",
        "description": "The segment in which action is to be performed"
      },
      "ActionAreaId": {
        "type": "string",
        "description": "ID generated for Action Area"
      },
      "AffectedObjectName": {
        "type": "string",
        "description": "Name of the affected object"
      },
      "AffectedObjectType": {
        "type": "string",
        "description": "Type of object which is affected"
      },
      "AssessmentId": {
        "type": "string",
        "description": "ID of the assessment"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Computer": {
        "type": "string",
        "description": "The machine from which data is uploaded"
      },
      "CustomData": {
        "type": "string",
        "description": ""
      },
      "Description": {
        "type": "string",
        "description": "Description of the recommendation"
      },
      "Domain": {
        "type": "string",
        "description": "Domain of the system"
      },
      "DomainController": {
        "type": "string",
        "description": ""
      },
      "FocusArea": {
        "type": "string",
        "description": "Area to be focussed on"
      },
      "FocusAreaId": {
        "type": "string",
        "description": "ID of the Focus Area"
      },
      "Forest": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Recommendation": {
        "type": "string",
        "description": "Generated recommendation"
      },
      "RecommendationId": {
        "type": "string",
        "description": "ID of the recommendation generated"
      },
      "RecommendationResult": {
        "type": "string",
        "description": "Result of the recommendation generated"
      },
      "RecommendationWeight": {
        "type": "real",
        "description": "Weight of recommendation"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "Technology": {
        "type": "string",
        "description": ""
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time the record was created."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "ADFActivityRun": {
    "tableName": "ADFActivityRun",
    "description": "",
    "columns": {
      "ActivityIterationCount": {
        "type": "int",
        "description": ""
      },
      "ActivityName": {
        "type": "string",
        "description": ""
      },
      "ActivityRunId": {
        "type": "string",
        "description": ""
      },
      "ActivityType": {
        "type": "string",
        "description": ""
      },
      "Annotations": {
        "type": "string",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": ""
      },
      "CorrelationId": {
        "type": "string",
        "description": ""
      },
      "EffectiveIntegrationRuntime": {
        "type": "string",
        "description": ""
      },
      "End": {
        "type": "datetime",
        "description": ""
      },
      "Error": {
        "type": "string",
        "description": ""
      },
      "ErrorCode": {
        "type": "string",
        "description": ""
      },
      "ErrorMessage": {
        "type": "string",
        "description": ""
      },
      "EventMessage": {
        "type": "string",
        "description": ""
      },
      "FailureType": {
        "type": "string",
        "description": ""
      },
      "Input": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable"
      },
      "Level": {
        "type": "string",
        "description": ""
      },
      "LinkedServiceName": {
        "type": "string",
        "description": ""
      },
      "Location": {
        "type": "string",
        "description": ""
      },
      "OperationName": {
        "type": "string",
        "description": ""
      },
      "Output": {
        "type": "string",
        "description": ""
      },
      "PipelineName": {
        "type": "string",
        "description": ""
      },
      "PipelineRunId": {
        "type": "string",
        "description": ""
      },
      "ResourceId": {
        "type": "string",
        "description": ""
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "Start": {
        "type": "datetime",
        "description": ""
      },
      "Status": {
        "type": "string",
        "description": ""
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "Tags": {
        "type": "string",
        "description": ""
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserProperties": {
        "type": "string",
        "description": ""
      }
    }
  },
  "ADFAirflowSchedulerLogs": {
    "tableName": "ADFAirflowSchedulerLogs",
    "description": "ADF Airflow scheduler logs",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The category of the log that belongs to Airflow application."
      },
      "CorrelationId": {
        "type": "string",
        "description": "The correlation id of the event."
      },
      "DataFactoryName": {
        "type": "string",
        "description": "The name of the Data factory."
      },
      "IntegrationRuntimeName": {
        "type": "string",
        "description": "The name of the Integration runtime."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Message": {
        "type": "string",
        "description": "The application log of the Airflow event."
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation represented by this event."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of the log."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "ADFAirflowTaskLogs": {
    "tableName": "ADFAirflowTaskLogs",
    "description": "ADF Airflow task logs",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The category of the log that belongs to Airflow application."
      },
      "CorrelationId": {
        "type": "string",
        "description": "The correlation id of the event."
      },
      "DagId": {
        "type": "string",
        "description": "The dag ID of the Airflow task run."
      },
      "DataFactoryName": {
        "type": "string",
        "description": "The name of the Data factory."
      },
      "IntegrationRuntimeName": {
        "type": "string",
        "description": "The name of the Integration runtime."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Message": {
        "type": "string",
        "description": "The application log of the Airflow event."
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation represented by this event."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TaskId": {
        "type": "string",
        "description": "The task ID of the Airflow task run."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of the log."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "ADFAirflowWebLogs": {
    "tableName": "ADFAirflowWebLogs",
    "description": "ADF Airflow web logs",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The category of the log that belongs to Airflow application."
      },
      "CorrelationId": {
        "type": "string",
        "description": "The correlation id of the event."
      },
      "DataFactoryName": {
        "type": "string",
        "description": "The name of the Data factory."
      },
      "IntegrationRuntimeName": {
        "type": "string",
        "description": "The name of the Integration runtime."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Message": {
        "type": "string",
        "description": "The application log of the Airflow event."
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation represented by this event."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of the log."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "ADFAirflowWorkerLogs": {
    "tableName": "ADFAirflowWorkerLogs",
    "description": "ADF Airflow worker logs",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The category of the log that belongs to Airflow application."
      },
      "CorrelationId": {
        "type": "string",
        "description": "The correlation id of the event."
      },
      "DataFactoryName": {
        "type": "string",
        "description": "The name of the Data factory."
      },
      "IntegrationRuntimeName": {
        "type": "string",
        "description": "The name of the Integration runtime."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Message": {
        "type": "string",
        "description": "The application log of the Airflow event."
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation represented by this event."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of the log."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "ADFPipelineRun": {
    "tableName": "ADFPipelineRun",
    "description": "",
    "columns": {
      "Annotations": {
        "type": "string",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": ""
      },
      "CorrelationId": {
        "type": "string",
        "description": ""
      },
      "End": {
        "type": "datetime",
        "description": ""
      },
      "ErrorCode": {
        "type": "string",
        "description": ""
      },
      "ErrorMessage": {
        "type": "string",
        "description": ""
      },
      "EventMessage": {
        "type": "string",
        "description": ""
      },
      "FailureType": {
        "type": "string",
        "description": ""
      },
      "Input": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Level": {
        "type": "string",
        "description": ""
      },
      "Location": {
        "type": "string",
        "description": ""
      },
      "OperationName": {
        "type": "string",
        "description": ""
      },
      "Output": {
        "type": "string",
        "description": ""
      },
      "Parameters": {
        "type": "string",
        "description": ""
      },
      "PipelineName": {
        "type": "string",
        "description": ""
      },
      "Predecessors": {
        "type": "string",
        "description": ""
      },
      "ResourceId": {
        "type": "string",
        "description": ""
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "RunId": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "Start": {
        "type": "datetime",
        "description": ""
      },
      "Status": {
        "type": "string",
        "description": ""
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "SystemParameters": {
        "type": "string",
        "description": ""
      },
      "Tags": {
        "type": "string",
        "description": ""
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserProperties": {
        "type": "string",
        "description": ""
      }
    }
  },
  "ADFSSISIntegrationRuntimeLogs": {
    "tableName": "ADFSSISIntegrationRuntimeLogs",
    "description": "ADF SSIS integration runtime logs",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The name of the log that belongs to"
      },
      "CorrelationId": {
        "type": "string",
        "description": "correlation id"
      },
      "DataFactoryName": {
        "type": "string",
        "description": "Data factory name"
      },
      "IntegrationRuntimeName": {
        "type": "string",
        "description": "Integration runtime name"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Level": {
        "type": "string",
        "description": "Verbosity level of log"
      },
      "Message": {
        "type": "string",
        "description": "Event message"
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation represented by this event"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "ResultType": {
        "type": "string",
        "description": "Status of the log"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of the log"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "ADFSSISPackageEventMessageContext": {
    "tableName": "ADFSSISPackageEventMessageContext",
    "description": "ADF SSIS package execution event message context",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The name of the log that belongs to"
      },
      "ContextDepth": {
        "type": "int",
        "description": "Context depth"
      },
      "ContextSourceId": {
        "type": "string",
        "description": "Context source Id"
      },
      "ContextSourceName": {
        "type": "string",
        "description": "Context source name"
      },
      "ContextType": {
        "type": "int",
        "description": "Context type"
      },
      "CorrelationId": {
        "type": "string",
        "description": "correlation id"
      },
      "DataFactoryName": {
        "type": "string",
        "description": "Data factory name"
      },
      "IntegrationRuntimeName": {
        "type": "string",
        "description": "Integration runtime name"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Level": {
        "type": "string",
        "description": "Verbosity level of log"
      },
      "OperationId": {
        "type": "long",
        "description": "Operation id"
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation represented by this event"
      },
      "PackagePath": {
        "type": "string",
        "description": "Package path"
      },
      "PropertyName": {
        "type": "string",
        "description": "Property name"
      },
      "PropertyValue": {
        "type": "dynamic",
        "description": "Property value"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of the log"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "ADFSSISPackageEventMessages": {
    "tableName": "ADFSSISPackageEventMessages",
    "description": "ADF SSIS package execution event messages",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The name of the log that belongs to"
      },
      "CorrelationId": {
        "type": "string",
        "description": "correlation id"
      },
      "DataFactoryName": {
        "type": "string",
        "description": "Data factory name"
      },
      "EventMessageGuid": {
        "type": "string",
        "description": "Event message guid"
      },
      "EventName": {
        "type": "string",
        "description": "Event name"
      },
      "ExecutionPath": {
        "type": "string",
        "description": "Execution path"
      },
      "ExtendedInfoId": {
        "type": "long",
        "description": "Extended info id"
      },
      "IntegrationRuntimeName": {
        "type": "string",
        "description": "Integration runtime name"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Level": {
        "type": "string",
        "description": "Verbosity level of log"
      },
      "Message": {
        "type": "string",
        "description": "Event message"
      },
      "MessageCode": {
        "type": "int",
        "description": "Message code"
      },
      "MessageSourceId": {
        "type": "string",
        "description": "Message source id"
      },
      "MessageSourceName": {
        "type": "string",
        "description": "Message source name"
      },
      "MessageSourceType": {
        "type": "int",
        "description": "Message source type"
      },
      "MessageTime": {
        "type": "datetime",
        "description": "Message time"
      },
      "MessageType": {
        "type": "int",
        "description": "Message type"
      },
      "OperationId": {
        "type": "long",
        "description": "Operation id"
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation represented by this event"
      },
      "PackageName": {
        "type": "string",
        "description": "Package name"
      },
      "PackagePath": {
        "type": "string",
        "description": "Package path"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "SubcomponentName": {
        "type": "string",
        "description": "Subcomponent name"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "ThreadId": {
        "type": "int",
        "description": "Thread id"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of the log"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "ADFSSISPackageExecutableStatistics": {
    "tableName": "ADFSSISPackageExecutableStatistics",
    "description": "ADF SSIS package execution executable statistics",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The name of the log that belongs to"
      },
      "CorrelationId": {
        "type": "string",
        "description": "correlation id"
      },
      "DataFactoryName": {
        "type": "string",
        "description": "Data factory name"
      },
      "EndTime": {
        "type": "datetime",
        "description": "End time"
      },
      "ExecutionDuration": {
        "type": "int",
        "description": "Executable execution duration"
      },
      "ExecutionId": {
        "type": "long",
        "description": "Execution id"
      },
      "ExecutionPath": {
        "type": "string",
        "description": "Execution path"
      },
      "ExecutionResult": {
        "type": "int",
        "description": "Execution result"
      },
      "ExecutionValue": {
        "type": "dynamic",
        "description": "Execution value"
      },
      "IntegrationRuntimeName": {
        "type": "string",
        "description": "Integration runtime name"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Level": {
        "type": "string",
        "description": "Verbosity level of log"
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation represented by this event"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "StartTime": {
        "type": "datetime",
        "description": "Start time"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of the log"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "PackageName": {
        "type": "string",
        "description": "Package name"
      },
      "Phase": {
        "type": "string",
        "description": "Phase"
      },
      "SubcomponentName": {
        "type": "string",
        "description": "Subcomponent name"
      },
      "TaskName": {
        "type": "string",
        "description": "Task name"
      }
    }
  },
  "ADFSSISPackageExecutionDataStatistics": {
    "tableName": "ADFSSISPackageExecutionDataStatistics",
    "description": "ADF SSIS package execution data statistics",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The name of the log that belongs to"
      },
      "CorrelationId": {
        "type": "string",
        "description": "correlation id"
      },
      "CreatedTime": {
        "type": "datetime",
        "description": "Created time"
      },
      "DataFactoryName": {
        "type": "string",
        "description": "Data factory name"
      },
      "DataflowPathIdString": {
        "type": "string",
        "description": "Dataflow path Id string"
      },
      "DataflowPathName": {
        "type": "string",
        "description": "Dataflow path name"
      },
      "DestinationComponentName": {
        "type": "string",
        "description": "Destination component name"
      },
      "ExecutionId": {
        "type": "long",
        "description": "Execution id"
      },
      "ExecutionPath": {
        "type": "string",
        "description": "Execution path"
      },
      "IntegrationRuntimeName": {
        "type": "string",
        "description": "Integration runtime name"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "Level": {
        "type": "string",
        "description": "Verbosity level of log"
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation represented by this event"
      },
      "PackageName": {
        "type": "string",
        "description": "Package name"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "RowsSent": {
        "type": "long",
        "description": "Rows sent"
      },
      "SourceComponentName": {
        "type": "string",
        "description": "Source somponent name"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TaskName": {
        "type": "string",
        "description": "Task name"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of the log"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "ADFSSignInLogs": {
    "tableName": "ADFSSignInLogs",
    "description": "Logs generated by Active Directory Federation Service.",
    "columns": {
      "AlternateSignInName": {
        "type": "string",
        "description": "Provides the on-premises UPN of the user sign-ing into"
      },
      "AppDisplayName": {
        "type": "string",
        "description": "The string name of the OAuth client in the request"
      },
      "AppId": {
        "type": "string",
        "description": "A unique ID of the Oauth Client ID in the request"
      },
      "AuthenticationDetails": {
        "type": "string",
        "description": "A record of each step of authentication undertaken in"
      },
      "AuthenticationProcessingDetails": {
        "type": "string",
        "description": "Provides the details associated with authentication"
      },
      "AuthenticationRequirement": {
        "type": "string",
        "description": "Type of authentication required for the sign-in. If set to"
      },
      "AuthenticationRequirementPolicies": {
        "type": "string",
        "description": "Set of CA policies that apply to this sign-in, each as CA:"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "Category of the sign-in event"
      },
      "ConditionalAccessPolicies": {
        "type": "string",
        "description": "Details of the conditional access policies being applied"
      },
      "ConditionalAccessStatus": {
        "type": "string",
        "description": "Status of all the conditionalAccess policies related to the"
      },
      "CorrelationId": {
        "type": "string",
        "description": "ID to provide sign-in trail"
      },
      "CreatedDateTime": {
        "type": "datetime",
        "description": "Datetime of the sign-in activity"
      },
      "DeviceDetail": {
        "type": "string",
        "description": "Details of the device used for the sign-in"
      },
      "DurationMs": {
        "type": "long",
        "description": "The duration of the operation in milliseconds"
      },
      "Id": {
        "type": "string",
        "description": "Unique ID representing the sign-in activity"
      },
      "Identity": {
        "type": "string",
        "description": "The identity from the token that was presented when"
      },
      "IPAddress": {
        "type": "string",
        "description": "IP address of the client used to sign in"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "IsInteractive": {
        "type": "bool",
        "description": "Indicates if a sign-in is interactive or not"
      },
      "Level": {
        "type": "string",
        "description": "The severity level of the event"
      },
      "Location": {
        "type": "string",
        "description": "The region of the resource emitting the event"
      },
      "NetworkLocationDetails": {
        "type": "string",
        "description": "Provides the details associated with authentication"
      },
      "OperationName": {
        "type": "string",
        "description": "For sign-ins, this value is always Sign-in activity"
      },
      "OperationVersion": {
        "type": "string",
        "description": "The REST API version that's requested by the client"
      },
      "OriginalRequestId": {
        "type": "string",
        "description": "The request id of the first request in the authentication"
      },
      "ProcessingTimeInMs": {
        "type": "string",
        "description": "Request processing time in milliseconds in AD STS"
      },
      "Requirement": {
        "type": "string",
        "description": "If the authentication is a primary or secondary"
      },
      "ResourceDisplayName": {
        "type": "string",
        "description": "The string name of the application the user signed into"
      },
      "ResourceGroup": {
        "type": "string",
        "description": "Resource group for the logs"
      },
      "ResourceIdentity": {
        "type": "string",
        "description": "A unique ID application ID the user signed into of the"
      },
      "ResourceTenantId": {
        "type": "string",
        "description": "The resource tenant ID for cross-tenant scenarios"
      },
      "ResultDescription": {
        "type": "string",
        "description": "Provides the error description for the sign-in operation"
      },
      "ResultSignature": {
        "type": "string",
        "description": "Contains the error code, if any, for the sign-in operation"
      },
      "ResultType": {
        "type": "string",
        "description": "The result of the sign-in operation can be Success or"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For"
      },
      "Status": {
        "type": "string",
        "description": "Details of the sign-in status"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The date and time of the event in UTC"
      },
      "TokenIssuerName": {
        "type": "string",
        "description": "Name of the identity provider (e.g. sts.microsoft.com )"
      },
      "TokenIssuerType": {
        "type": "string",
        "description": "Type of identityProvider (Azure AD, AD Federation"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UniqueTokenIdentifier": {
        "type": "string",
        "description": "Unique token identifier for the request"
      },
      "UserAgent": {
        "type": "string",
        "description": "User Agent for the sign-in"
      },
      "UserDisplayName": {
        "type": "string",
        "description": "Display name of the user that initiated the sign-in"
      },
      "UserId": {
        "type": "string",
        "description": "ID of the user that initiated the sign-in"
      },
      "UserPrincipalName": {
        "type": "string",
        "description": "User principal name of the user that initiated the sign-in"
      }
    }
  },
  "ADFSandboxActivityRun": {
    "tableName": "ADFSandboxActivityRun",
    "description": "",
    "columns": {
      "ActivityIterationCount": {
        "type": "int",
        "description": ""
      },
      "ActivityName": {
        "type": "string",
        "description": ""
      },
      "ActivityRunId": {
        "type": "string",
        "description": ""
      },
      "ActivityType": {
        "type": "string",
        "description": ""
      },
      "Annotations": {
        "type": "string",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": ""
      },
      "CorrelationId": {
        "type": "string",
        "description": ""
      },
      "EffectiveIntegrationRuntime": {
        "type": "string",
        "description": ""
      },
      "End": {
        "type": "datetime",
        "description": ""
      },
      "Error": {
        "type": "string",
        "description": ""
      },
      "ErrorCode": {
        "type": "string",
        "description": ""
      },
      "ErrorMessage": {
        "type": "string",
        "description": ""
      },
      "EventMessage": {
        "type": "string",
        "description": ""
      },
      "FailureType": {
        "type": "string",
        "description": ""
      },
      "Input": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable"
      },
      "Level": {
        "type": "string",
        "description": ""
      },
      "LinkedServiceName": {
        "type": "string",
        "description": ""
      },
      "Location": {
        "type": "string",
        "description": ""
      },
      "OperationName": {
        "type": "string",
        "description": ""
      },
      "Output": {
        "type": "string",
        "description": ""
      },
      "PipelineName": {
        "type": "string",
        "description": ""
      },
      "PipelineRunId": {
        "type": "string",
        "description": ""
      },
      "ResourceId": {
        "type": "string",
        "description": ""
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "Start": {
        "type": "datetime",
        "description": ""
      },
      "Status": {
        "type": "string",
        "description": ""
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "Tags": {
        "type": "string",
        "description": ""
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserProperties": {
        "type": "string",
        "description": ""
      }
    }
  },
  "ADFSandboxPipelineRun": {
    "tableName": "ADFSandboxPipelineRun",
    "description": "",
    "columns": {
      "Annotations": {
        "type": "string",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": ""
      },
      "CorrelationId": {
        "type": "string",
        "description": ""
      },
      "End": {
        "type": "datetime",
        "description": ""
      },
      "ErrorCode": {
        "type": "string",
        "description": ""
      },
      "ErrorMessage": {
        "type": "string",
        "description": ""
      },
      "EventMessage": {
        "type": "string",
        "description": ""
      },
      "FailureType": {
        "type": "string",
        "description": ""
      },
      "Input": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Level": {
        "type": "string",
        "description": ""
      },
      "Location": {
        "type": "string",
        "description": ""
      },
      "OperationName": {
        "type": "string",
        "description": ""
      },
      "Output": {
        "type": "string",
        "description": ""
      },
      "Parameters": {
        "type": "string",
        "description": ""
      },
      "PipelineName": {
        "type": "string",
        "description": ""
      },
      "Predecessors": {
        "type": "string",
        "description": ""
      },
      "ResourceId": {
        "type": "string",
        "description": ""
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "RunId": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "Start": {
        "type": "datetime",
        "description": ""
      },
      "Status": {
        "type": "string",
        "description": ""
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "SystemParameters": {
        "type": "string",
        "description": ""
      },
      "Tags": {
        "type": "string",
        "description": ""
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserProperties": {
        "type": "string",
        "description": ""
      }
    }
  },
  "ADFTriggerRun": {
    "tableName": "ADFTriggerRun",
    "description": "",
    "columns": {
      "Annotations": {
        "type": "string",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": ""
      },
      "CorrelationId": {
        "type": "string",
        "description": ""
      },
      "ErrorCode": {
        "type": "string",
        "description": ""
      },
      "ErrorMessage": {
        "type": "string",
        "description": ""
      },
      "EventMessage": {
        "type": "string",
        "description": ""
      },
      "Input": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Level": {
        "type": "string",
        "description": ""
      },
      "Location": {
        "type": "string",
        "description": ""
      },
      "OperationName": {
        "type": "string",
        "description": ""
      },
      "Output": {
        "type": "string",
        "description": ""
      },
      "Parameters": {
        "type": "string",
        "description": ""
      },
      "ResourceId": {
        "type": "string",
        "description": ""
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "Start": {
        "type": "datetime",
        "description": ""
      },
      "Status": {
        "type": "string",
        "description": ""
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "SystemParameters": {
        "type": "string",
        "description": ""
      },
      "Tags": {
        "type": "string",
        "description": ""
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "TriggerEvent": {
        "type": "string",
        "description": ""
      },
      "TriggerFailureType": {
        "type": "string",
        "description": ""
      },
      "TriggerId": {
        "type": "string",
        "description": ""
      },
      "TriggerName": {
        "type": "string",
        "description": ""
      },
      "TriggerType": {
        "type": "string",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserProperties": {
        "type": "string",
        "description": ""
      }
    }
  },
  "ADReplicationResult": {
    "tableName": "ADReplicationResult",
    "description": "The AD Replication Status solution regularly monitors your Active Directory environment for any replication failures.",
    "columns": {
      "AssessmentId": {
        "type": "string",
        "description": "Unique Guid corresponding to each run"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Computer": {
        "type": "string",
        "description": "Computer Name where the solution ran"
      },
      "ConsecutiveFailures": {
        "type": "int",
        "description": "Number of consecutive replication failures between two Domain"
      },
      "DestinationServer": {
        "type": "string",
        "description": "AD Replication Destination Server"
      },
      "DestinationSiteName": {
        "type": "string",
        "description": "AD Replication Destination Site Name"
      },
      "HelpLink": {
        "type": "string",
        "description": "Help Link for more information"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable"
      },
      "IsDestinationGC": {
        "type": "bool",
        "description": "Is Destinationation Global Catalog"
      },
      "IsSourceGC": {
        "type": "bool",
        "description": "Is Source Global Catalog"
      },
      "LastAttemptedSync": {
        "type": "datetime",
        "description": "Last Attempted Replication DateTime"
      },
      "LastSuccessfulSync": {
        "type": "datetime",
        "description": "Last Successful DateTime"
      },
      "LastSyncMessage": {
        "type": "string",
        "description": "Last Replication Sync Message"
      },
      "LastSyncResult": {
        "type": "int",
        "description": "Last Replication Sync Success / Failure Code"
      },
      "PartitionName": {
        "type": "string",
        "description": "Partition Name"
      },
      "PercentOfTSL": {
        "type": "real",
        "description": "Percentage of Tombstone Lifecycle"
      },
      "ReplicationNeighborOption": {
        "type": "string",
        "description": ""
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "SourceInvocationId": {
        "type": "string",
        "description": "Unique Id assigned to a Domain Controller"
      },
      "SourceServer": {
        "type": "string",
        "description": "Source Server Name"
      },
      "SourceSiteName": {
        "type": "string",
        "description": "Source Site Name"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time the record was created."
      },
      "TombstoneLifetime": {
        "type": "string",
        "description": "Length of time a deleted object persisted in the database"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "ADSecurityAssessmentRecommendation": {
    "tableName": "ADSecurityAssessmentRecommendation",
    "description": "Recommendations generated by AD Security assessments that are started through a scheduled task. When you schedule the assessment it runs by default every 7 days and upload the data into Azure Log Analytics",
    "columns": {
      "ActionArea": {
        "type": "string",
        "description": ""
      },
      "ActionAreaId": {
        "type": "string",
        "description": ""
      },
      "AffectedObjectName": {
        "type": "string",
        "description": ""
      },
      "AffectedObjectType": {
        "type": "string",
        "description": ""
      },
      "AssessmentId": {
        "type": "string",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Computer": {
        "type": "string",
        "description": ""
      },
      "CustomData": {
        "type": "string",
        "description": ""
      },
      "Description": {
        "type": "string",
        "description": ""
      },
      "DNSServer": {
        "type": "string",
        "description": ""
      },
      "DNSZone": {
        "type": "string",
        "description": ""
      },
      "Domain": {
        "type": "string",
        "description": ""
      },
      "DomainController": {
        "type": "string",
        "description": ""
      },
      "FocusArea": {
        "type": "string",
        "description": ""
      },
      "FocusAreaId": {
        "type": "string",
        "description": ""
      },
      "Forest": {
        "type": "string",
        "description": ""
      },
      "GroupPolicyObject": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "NamingContext": {
        "type": "string",
        "description": ""
      },
      "Recommendation": {
        "type": "string",
        "description": ""
      },
      "RecommendationId": {
        "type": "string",
        "description": ""
      },
      "RecommendationResult": {
        "type": "string",
        "description": ""
      },
      "RecommendationWeight": {
        "type": "real",
        "description": ""
      },
      "Site": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "Technology": {
        "type": "string",
        "description": ""
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "ADTDataHistoryOperation": {
    "tableName": "ADTDataHistoryOperation",
    "description": "This table tracks all data history events being published to time series database connections.",
    "columns": {
      "ApplicationId": {
        "type": "string",
        "description": "Application ID used in bearer authorization."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CallerIpAddress": {
        "type": "string",
        "description": "A masked source IP address for the event."
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID for correlated events. Can be used to identify correlated events"
      },
      "DurationMs": {
        "type": "long",
        "description": "How long it took to perform the event in milliseconds."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Level": {
        "type": "int",
        "description": "The logging severity of the event."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The API version utilized during the event."
      },
      "ParentId": {
        "type": "string",
        "description": "ParentId as part of W3C's trace context. A request without a parent id is"
      },
      "Region": {
        "type": "string",
        "description": "Azure region in which the Digital Twins instance is located."
      },
      "RequestUri": {
        "type": "string",
        "description": "The time series database connection's eventhub endpoint."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultDescription": {
        "type": "string",
        "description": "Additional details about the event."
      },
      "ResultSignature": {
        "type": "int",
        "description": "Http status code of the event (if applicable)."
      },
      "ResultType": {
        "type": "string",
        "description": "Result of the event. For example: Success, Failure, ClientFalure, etc."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "SpanId": {
        "type": "string",
        "description": "SpanId as part of W3C's trace context. The ID of this request in the trace."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) when the log was generated."
      },
      "TraceFlags": {
        "type": "string",
        "description": "TraceFlags as part of W3C's trace context. Controls tracing flags such as"
      },
      "TraceId": {
        "type": "string",
        "description": "TraceId as part of W3C's trace context. The ID of the whole trace used to"
      },
      "TraceState": {
        "type": "string",
        "description": "TraceState as part of W3C's trace context. Additional vendor-specific trace"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "ADTDigitalTwinsOperation": {
    "tableName": "ADTDigitalTwinsOperation",
    "description": "Schema for Azure Digital Twins' Digital Twin operations. The Digital Twins Operation category tracks all customer requests to manage a digital twin, including CRUD on Twins and Relationships.",
    "columns": {
      "ApplicationId": {
        "type": "string",
        "description": "Application ID used in bearer authorization"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CallerIpAddress": {
        "type": "string",
        "description": "A masked source IP address for the event"
      },
      "Category": {
        "type": "string",
        "description": "The type of resource being emitted"
      },
      "CorrelationId": {
        "type": "string",
        "description": "Customer provided unique identifier for the event"
      },
      "DurationMs": {
        "type": "string",
        "description": "How long it took to perform the event in milliseconds"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Level": {
        "type": "string",
        "description": "The logging severity of the event"
      },
      "Location": {
        "type": "string",
        "description": "Azure region in which the Digital Twins instance is located"
      },
      "OperationName": {
        "type": "string",
        "description": "The type of action being performed during the event"
      },
      "OperationVersion": {
        "type": "string",
        "description": "The API Version utilized during the event"
      },
      "ParentId": {
        "type": "string",
        "description": "ParentId as part of W3C's Trace Context. A request without a parent id is"
      },
      "RequestUri": {
        "type": "string",
        "description": "The endpoint utilized during the event"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultDescription": {
        "type": "string",
        "description": "Additional details about the event"
      },
      "ResultSignature": {
        "type": "string",
        "description": "Http status code of the event (if applicable)"
      },
      "ResultType": {
        "type": "string",
        "description": "Outcome of the event"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "SpanId": {
        "type": "string",
        "description": "SpanId as part of W3C's Trace Context. The ID of this request in the trace"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The date and time that this event occurred, in UTC"
      },
      "TraceFlags": {
        "type": "string",
        "description": "TraceFlags as part of W3C's Trace Context. Controls tracing flags such as"
      },
      "TraceId": {
        "type": "string",
        "description": "TraceId as part of W3C's Trace Context. The ID of the whole trace used to"
      },
      "TraceState": {
        "type": "string",
        "description": "TraceState as part of W3C's Trace Context. Additional vendor-specific trace"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "ADTEventRoutesOperation": {
    "tableName": "ADTEventRoutesOperation",
    "description": "Schema for Azure Digital Twins' Event Routes operations. The Event Routes Operation category tracks all events being published to endpoints, which are other Azure services.",
    "columns": {
      "ApplicationId": {
        "type": "string",
        "description": "Application ID used in bearer authorization"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CallerIpAddress": {
        "type": "string",
        "description": "A masked source IP address for the event"
      },
      "Category": {
        "type": "string",
        "description": "The type of resource being emitted"
      },
      "CorrelationId": {
        "type": "string",
        "description": "Customer provided unique identifier for the event"
      },
      "DurationMs": {
        "type": "string",
        "description": "How long it took to perform the event in milliseconds"
      },
      "EndpointName": {
        "type": "string",
        "description": "The name of egress endpoint created in Azure Digital Twins"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Level": {
        "type": "string",
        "description": "The logging severity of the event"
      },
      "Location": {
        "type": "string",
        "description": "Azure region in which the Digital Twins instance is located"
      },
      "OperationName": {
        "type": "string",
        "description": "The type of action being performed during the event"
      },
      "OperationVersion": {
        "type": "string",
        "description": "The API Version utilized during the event"
      },
      "ParentId": {
        "type": "string",
        "description": "ParentId as part of W3C's Trace Context. A request without a parent id is"
      },
      "RequestUri": {
        "type": "string",
        "description": "The endpoint utilized during the event"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultDescription": {
        "type": "string",
        "description": "Additional details about the event"
      },
      "ResultSignature": {
        "type": "string",
        "description": "Http status code of the event (if applicable)"
      },
      "ResultType": {
        "type": "string",
        "description": "Outcome of the event"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "SpanId": {
        "type": "string",
        "description": "SpanId as part of W3C's Trace Context. The ID of this request in the trace"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The date and time that this event occurred, in UTC"
      },
      "TraceFlags": {
        "type": "string",
        "description": "TraceFlags as part of W3C's Trace Context. Controls tracing flags such as"
      },
      "TraceId": {
        "type": "string",
        "description": "TraceId as part of W3C's Trace Context. The ID of the whole trace used to"
      },
      "TraceState": {
        "type": "string",
        "description": "TraceState as part of W3C's Trace Context. Additional vendor-specific trace"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "ADTModelsOperation": {
    "tableName": "ADTModelsOperation",
    "description": "Schema for Azure Digital Twins' Models operations. The Models Operation category tracks all customer requests to manage models in a digital twins instance.",
    "columns": {
      "ApplicationId": {
        "type": "string",
        "description": "Application ID used in bearer authorization"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CallerIpAddress": {
        "type": "string",
        "description": "A masked source IP address for the event"
      },
      "Category": {
        "type": "string",
        "description": "The type of resource being emitted"
      },
      "CorrelationId": {
        "type": "string",
        "description": "Customer provided unique identifier for the event"
      },
      "DurationMs": {
        "type": "string",
        "description": "How long it took to perform the event in milliseconds"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Level": {
        "type": "string",
        "description": "The logging severity of the event"
      },
      "Location": {
        "type": "string",
        "description": "Azure region in which the Digital Twins instance is located"
      },
      "OperationName": {
        "type": "string",
        "description": "The type of action being performed during the event"
      },
      "OperationVersion": {
        "type": "string",
        "description": "The API Version utilized during the event"
      },
      "ParentId": {
        "type": "string",
        "description": "ParentId as part of W3C's Trace Context. A request without a parent id is"
      },
      "RequestUri": {
        "type": "string",
        "description": "The endpoint utilized during the event"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultDescription": {
        "type": "string",
        "description": "Additional details about the event"
      },
      "ResultSignature": {
        "type": "string",
        "description": "Http status code of the event (if applicable)"
      },
      "ResultType": {
        "type": "string",
        "description": "Outcome of the event"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "SpanId": {
        "type": "string",
        "description": "SpanId as part of W3C's Trace Context. The ID of this request in the trace"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The date and time that this event occurred, in UTC"
      },
      "TraceFlags": {
        "type": "string",
        "description": "TraceFlags as part of W3C's Trace Context. Controls tracing flags such as"
      },
      "TraceId": {
        "type": "string",
        "description": "TraceId as part of W3C's Trace Context. The ID of the whole trace used to"
      },
      "TraceState": {
        "type": "string",
        "description": "TraceState as part of W3C's Trace Context. Additional vendor-specific trace"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "ADTQueryOperation": {
    "tableName": "ADTQueryOperation",
    "description": "Schema for Azure Digital Twins' Query operations. The Query Operation category tracks all customer requests to query their digital twins instance.",
    "columns": {
      "ApplicationId": {
        "type": "string",
        "description": "Application ID used in bearer authorization"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CallerIpAddress": {
        "type": "string",
        "description": "A masked source IP address for the event"
      },
      "Category": {
        "type": "string",
        "description": "The type of resource being emitted"
      },
      "CorrelationId": {
        "type": "string",
        "description": "Customer provided unique identifier for the event"
      },
      "DurationMs": {
        "type": "string",
        "description": "How long it took to perform the event in milliseconds"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Level": {
        "type": "string",
        "description": "The logging severity of the event"
      },
      "Location": {
        "type": "string",
        "description": "Azure region in which the Digital Twins instance is located"
      },
      "OperationName": {
        "type": "string",
        "description": "The type of action being performed during the event"
      },
      "OperationVersion": {
        "type": "string",
        "description": "The API Version utilized during the event"
      },
      "ParentId": {
        "type": "string",
        "description": "ParentId as part of W3C's Trace Context. A request without a parent id is"
      },
      "QueryCharge": {
        "type": "real",
        "description": "The QueryCharge for this event in the trace."
      },
      "RequestUri": {
        "type": "string",
        "description": "The endpoint utilized during the event"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultDescription": {
        "type": "string",
        "description": "Additional details about the event"
      },
      "ResultSignature": {
        "type": "string",
        "description": "Http status code of the event (if applicable)"
      },
      "ResultType": {
        "type": "string",
        "description": "Outcome of the event"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "SpanId": {
        "type": "string",
        "description": "SpanId as part of W3C's Trace Context. The ID of this request in the trace"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The date and time that this event occurred, in UTC"
      },
      "TraceFlags": {
        "type": "string",
        "description": "TraceFlags as part of W3C's Trace Context. Controls tracing flags such as"
      },
      "TraceId": {
        "type": "string",
        "description": "TraceId as part of W3C's Trace Context. The ID of the whole trace used to"
      },
      "TraceState": {
        "type": "string",
        "description": "TraceState as part of W3C's Trace Context. Additional vendor-specific trace"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "ADXCommand": {
    "tableName": "ADXCommand",
    "description": "Azure Data Explorer command execution summary.",
    "columns": {
      "ApplicationName": {
        "type": "string",
        "description": "The name of the application that invoked the command"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The category of this log for this events it will be Command"
      },
      "ClientRequestProperties": {
        "type": "dynamic",
        "description": "The client request properties of the command"
      },
      "CommandType": {
        "type": "string",
        "description": "Command type"
      },
      "CorrelationId": {
        "type": "string",
        "description": "The client request ID"
      },
      "DatabaseName": {
        "type": "string",
        "description": "The name of the database the command ran on"
      },
      "Duration": {
        "type": "string",
        "description": "Command duration"
      },
      "FailureReason": {
        "type": "string",
        "description": "The failure reason"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "LastUpdatedOn": {
        "type": "datetime",
        "description": "Time (UTC) at which this command ended"
      },
      "OperationName": {
        "type": "string",
        "description": "The name of this operation"
      },
      "Principal": {
        "type": "string",
        "description": "The principal that invoked the query"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "ResourceUtilization": {
        "type": "dynamic",
        "description": "Command resource utilization"
      },
      "RootActivityId": {
        "type": "string",
        "description": "The root activity ID"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "StartedOn": {
        "type": "datetime",
        "description": "Time (UTC) at which this command started"
      },
      "State": {
        "type": "string",
        "description": "The State the command ended with"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "Text": {
        "type": "string",
        "description": "The text of the invoked command"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The time (UTC) at which this event was generated"
      },
      "TotalCPU": {
        "type": "string",
        "description": "Total CPU duration"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "User": {
        "type": "string",
        "description": "The user that invoked the query"
      },
      "WorkloadGroup": {
        "type": "string",
        "description": "The workload group the command was classified to"
      }
    }
  },
  "ADXDataOperation": {
    "tableName": "ADXDataOperation",
    "description": "Azure Data Explorer data operation summary.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The category of this log for this events it will be DataOperation"
      },
      "CorrelationId": {
        "type": "string",
        "description": "The client request id"
      },
      "DatabaseName": {
        "type": "string",
        "description": "The name of the database related to this data operation"
      },
      "DataOperationKind": {
        "type": "string",
        "description": "The kind of the data operation activity"
      },
      "Duration": {
        "type": "string",
        "description": "Data operation duration"
      },
      "ExtentCount": {
        "type": "int",
        "description": "The total number of extents ingested on this operation"
      },
      "ExtentSize": {
        "type": "long",
        "description": "The size of extents (compressed size + index size) ingested (in bytes)"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "OperationName": {
        "type": "string",
        "description": "The name of this operation"
      },
      "OriginalSize": {
        "type": "long",
        "description": "The original size of data ingested (in bytes)"
      },
      "Principal": {
        "type": "string",
        "description": "The principal that invoked the data operation"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "RootActivityId": {
        "type": "string",
        "description": "The root activity id"
      },
      "RowCount": {
        "type": "long",
        "description": "The number of rows ingested"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TableName": {
        "type": "string",
        "description": "The name of the table related to this data operation"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The time (UTC) at which this event was generated"
      },
      "TotalCPU": {
        "type": "string",
        "description": "Total CPU duration"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "ADXIngestionBatching": {
    "tableName": "ADXIngestionBatching",
    "description": "Azure Data Explorer ingestion batching operations. These logs have detailed statistics of batches ready for ingestion (duration, batch size and blobs count).",
    "columns": {
      "BatchingType": {
        "type": "string",
        "description": "Trigger of sealing a batch: whether the batch reached batching time,"
      },
      "BatchSizeBytes": {
        "type": "long",
        "description": "Total uncompressed size of data in this batch (bytes)"
      },
      "BatchTimeSeconds": {
        "type": "real",
        "description": "Total batching time of this batch (seconds)"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Database": {
        "type": "string",
        "description": "Name of the database holding the target table"
      },
      "DataSourcesInBatch": {
        "type": "int",
        "description": "Number of data sources in this batch"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "RootActivityId": {
        "type": "string",
        "description": "The operation's activity ID"
      },
      "SourceCreationTime": {
        "type": "datetime",
        "description": "Minimal time (UTC) at which blobs in this batch were created"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "Table": {
        "type": "string",
        "description": "Name of the target table into which the data is ingested"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The time (UTC) at which this event was generated"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "ADXJournal": {
    "tableName": "ADXJournal",
    "description": "Azure Data Explorer journal (metadata operations).",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ChangeCommand": {
        "type": "string",
        "description": "The executed control command that triggered the metadata change"
      },
      "CorrelationId": {
        "type": "string",
        "description": "The client request ID"
      },
      "DatabaseName": {
        "type": "string",
        "description": "The name of the database changed following the event"
      },
      "EntityContainerName": {
        "type": "string",
        "description": "The entity container name (entity=column, container=table), or the"
      },
      "EntityName": {
        "type": "string",
        "description": "The entity name that the operation was executed on, before the"
      },
      "EntityVersion": {
        "type": "string",
        "description": "The new metadata version (DB/cluster) following the change"
      },
      "Event": {
        "type": "string",
        "description": "The metadata change event name"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "OperationTimestamp": {
        "type": "datetime",
        "description": "The timestamp (UTC) at which the metadata operation completed"
      },
      "OriginalEntityState": {
        "type": "string",
        "description": "The state of the entity (entity properties) before the change"
      },
      "OriginalEntityVersion": {
        "type": "string",
        "description": "The version of the entity (entity properties) before the change"
      },
      "Principal": {
        "type": "string",
        "description": "The principal (user/app) that executed the control command"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "RootActivityId": {
        "type": "string",
        "description": "The root activity ID of the operation that caused the metadata change"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The time (UTC) at which this log was sent to Log Analytics"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UpdatedEntityName": {
        "type": "string",
        "description": "The new entity name after the change"
      },
      "UpdatedEntityState": {
        "type": "string",
        "description": "The new state after the change"
      },
      "User": {
        "type": "string",
        "description": "The user that executed the control command"
      }
    }
  },
  "ADXQuery": {
    "tableName": "ADXQuery",
    "description": "Azure Data Explorer query execution summary.",
    "columns": {
      "ApplicationName": {
        "type": "string",
        "description": "The name of the application that invoked the query"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CacheDiskHits": {
        "type": "long",
        "description": "Disk cache hits"
      },
      "CacheDiskMisses": {
        "type": "long",
        "description": "Disk cache misses"
      },
      "CacheMemoryHits": {
        "type": "long",
        "description": "Memory cache hits"
      },
      "CacheMemoryMisses": {
        "type": "long",
        "description": "Memory cache misses"
      },
      "CacheShardsBypassBytes": {
        "type": "long",
        "description": "Shards cache bypass bytes"
      },
      "CacheShardsColdHits": {
        "type": "long",
        "description": "Shards cold cache hits"
      },
      "CacheShardsColdMisses": {
        "type": "long",
        "description": "Shards cold cache misses"
      },
      "CacheShardsHotHits": {
        "type": "long",
        "description": "Shards hot cache hits"
      },
      "CacheShardsHotMisses": {
        "type": "long",
        "description": "Shards hot cache misses"
      },
      "Category": {
        "type": "string",
        "description": "The category of this log for this events it will be Query"
      },
      "ClientRequestProperties": {
        "type": "dynamic",
        "description": "The client request properties of the query"
      },
      "ComponentFault": {
        "type": "string",
        "description": "The entity that caused the query to fail. For example, if the"
      },
      "an": {
        "type": "int",
        "description": "ernal error occured, it will be 'Server'"
      },
      "CorrelationId": {
        "type": "string",
        "description": "The client request ID"
      },
      "DatabaseName": {
        "type": "string",
        "description": "The name of the database that the command ran on"
      },
      "Duration": {
        "type": "string",
        "description": "Command duration"
      },
      "ExtentsMaxDataScannedTime": {
        "type": "datetime",
        "description": "Maximum data scan time"
      },
      "ExtentsMinDataScannedTime": {
        "type": "datetime",
        "description": "Minimum data scan time"
      },
      "FailureReason": {
        "type": "string",
        "description": "The failure reason"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "LastUpdatedOn": {
        "type": "datetime",
        "description": "Time (UTC) at which this command ended"
      },
      "MemoryPeak": {
        "type": "long",
        "description": "Memory peak"
      },
      "OperationName": {
        "type": "string",
        "description": "The name of this operation"
      },
      "Principal": {
        "type": "string",
        "description": "The principal that invoked the query"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "RootActivityId": {
        "type": "string",
        "description": "The root activity ID"
      },
      "ScannedExtentsCount": {
        "type": "long",
        "description": "Scanned extents count"
      },
      "ScannedRowsCount": {
        "type": "long",
        "description": "Scanned rows count"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "StartedOn": {
        "type": "datetime",
        "description": "Time (UTC) at which this command started"
      },
      "State": {
        "type": "string",
        "description": "The state the command ended with"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TableCount": {
        "type": "int",
        "description": "Table count"
      },
      "TablesStatistics": {
        "type": "dynamic",
        "description": "Tables statistics"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "Text": {
        "type": "string",
        "description": "The text of the invoked query"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The time (UTC) at which this event was generated"
      },
      "TotalCPU": {
        "type": "string",
        "description": "Total CPU duration"
      },
      "TotalExtentsCount": {
        "type": "long",
        "description": "Total extents count"
      },
      "TotalRowsCount": {
        "type": "long",
        "description": "Total rows count"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "User": {
        "type": "string",
        "description": "The user that invoked the query"
      },
      "WorkloadGroup": {
        "type": "string",
        "description": "The workload group the query was classified to"
      }
    }
  },
  "ADXTableDetails": {
    "tableName": "ADXTableDetails",
    "description": "Azure Data Explorer table details.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CachingPolicy": {
        "type": "dynamic",
        "description": "The table's effective entity caching policy, serialized as JSON"
      },
      "CachingPolicyOrigin": {
        "type": "string",
        "description": "Caching policy origin entity (Table/Database/Cluster)"
      },
      "CorrelationId": {
        "type": "string",
        "description": "The client request ID"
      },
      "DatabaseName": {
        "type": "string",
        "description": "The name of the database"
      },
      "EntityType": {
        "type": "string",
        "description": "The type of the table. Can be Table or MaterializedView"
      },
      "HotExtentCount": {
        "type": "long",
        "description": "The total number of extents in the table, stored in the hot cache"
      },
      "HotExtentSize": {
        "type": "real",
        "description": "The total size of extents (compressed size + index size) in the table,"
      },
      "HotOriginalSize": {
        "type": "long",
        "description": "The total original size of data in the table, stored in the hot cache"
      },
      "HotRowCount": {
        "type": "long",
        "description": "The total number of rows in the table, stored in the hot cache"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "MaxExtentsCreationTime": {
        "type": "datetime",
        "description": "The maximum creation time of an extent in the table (or null, if"
      },
      "MinExtentsCreationTime": {
        "type": "datetime",
        "description": "The minimum creation time of an extent in the table (or null, if"
      },
      "OperationName": {
        "type": "string",
        "description": "The name of this operation"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "RetentionPolicy": {
        "type": "dynamic",
        "description": "The table's effective entity retention policy, serialized as JSON"
      },
      "RetentionPolicyOrigin": {
        "type": "string",
        "description": "Retention policy origin entity (Table/Database/Cluster)"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TableName": {
        "type": "string",
        "description": "The name of the table"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The time (UTC) at which this event was generated."
      },
      "TotalExtentCount": {
        "type": "long",
        "description": "The total number of extents in the table"
      },
      "TotalExtentSize": {
        "type": "real",
        "description": "The total size of extents (compressed size + index size) in the table"
      },
      "TotalOriginalSize": {
        "type": "real",
        "description": "The total original size of data in the table (in bytes)"
      },
      "TotalRowCount": {
        "type": "long",
        "description": "The total number of rows in the table"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "ADXTableUsageStatistics": {
    "tableName": "ADXTableUsageStatistics",
    "description": "Azure Data Explorer table usage statistics.",
    "columns": {
      "ApplicationName": {
        "type": "string",
        "description": "The name of the application that invoked the command"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CorrelationId": {
        "type": "string",
        "description": "The client request ID"
      },
      "DatabaseName": {
        "type": "string",
        "description": "The name of the database"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "MaxCreatedOn": {
        "type": "datetime",
        "description": "Lastest extent time of the table"
      },
      "MinCreatedOn": {
        "type": "datetime",
        "description": "Oldest extent time of the table"
      },
      "OperationName": {
        "type": "string",
        "description": "The name of this operation"
      },
      "Principal": {
        "type": "string",
        "description": "The principal that invoked the query"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "RootActivityId": {
        "type": "string",
        "description": "The root activity ID"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "StartedOn": {
        "type": "datetime",
        "description": "Time (UTC) at which table usage statistics operation started"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TableName": {
        "type": "string",
        "description": "The name of the table"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The time (UTC) at which this event was generated"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "User": {
        "type": "string",
        "description": "The user that invoked the query"
      }
    }
  },
  "AEWAssignmentBlobLogs": {
    "tableName": "AEWAssignmentBlobLogs",
    "description": "Assignment blob upload events for the Experiment Workspace.",
    "columns": {
      "AssignmentBlobDataVersion": {
        "type": "int",
        "description": "Data version (gets incremented with every experiment"
      },
      "AssignmentBlobLastOperationId": {
        "type": "string",
        "description": "The last operation id that got published for an"
      },
      "AssignmentBlobNewOperationIds": {
        "type": "dynamic",
        "description": "List of new operation ids (changes) that are getting"
      },
      "AssignmentBlobSchemaVersion": {
        "type": "string",
        "description": "Schema version of assignment blob data associated with"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID for correlated events. Can be used to identify"
      },
      "DurationMs": {
        "type": "int",
        "description": "The duration of the operation (to upload blob file) in"
      },
      "ExperimentWorkspaceId": {
        "type": "string",
        "description": "The Guid of your experimentation workspace."
      },
      "HttpStatusCode": {
        "type": "int",
        "description": "The HTTP status code of the corresponding REST API call"
      },
      "Identity": {
        "type": "string",
        "description": "The resource id of the user assigned managed identity"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "Level": {
        "type": "string",
        "description": "The severity level of the operation. Will be one of"
      },
      "Location": {
        "type": "string",
        "description": "The location of the resource."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "ResultDescription": {
        "type": "string",
        "description": "The static text description of this operation."
      },
      "ResultType": {
        "type": "string",
        "description": "The status of the event. Typical values include Succeeded,"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "URI": {
        "type": "string",
        "description": "The request Url."
      }
    }
  },
  "AEWAuditLogs": {
    "tableName": "AEWAuditLogs",
    "description": "Audit, activity and status for the Experiment Workspace.",
    "columns": {
      "ActionName": {
        "type": "string",
        "description": "The event name."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The event category. Typical log categories are Audit, Operational,"
      },
      "ExpComponentName": {
        "type": "string",
        "description": "The Exp component sending the log."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Message": {
        "type": "string",
        "description": "The message in the log."
      },
      "Operator": {
        "type": "string",
        "description": "The user identity triggering the event."
      },
      "RequestUri": {
        "type": "string",
        "description": "The event URI."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Time (UTC) of the HTTP request."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AEWComputePipelinesLogs": {
    "tableName": "AEWComputePipelinesLogs",
    "description": "AEWComputePipelines Events for the Experiment Workspace.",
    "columns": {
      "AnalysisId": {
        "type": "string",
        "description": "The ID of your experiment study."
      },
      "AnalysisType": {
        "type": "string",
        "description": "The type of your analysis."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "EventName": {
        "type": "string",
        "description": "The event name."
      },
      "ExperimentationGroup": {
        "type": "string",
        "description": "Experimentation group name of your experiment."
      },
      "ExperimentId": {
        "type": "string",
        "description": "The GUID of your experiment."
      },
      "ExperimentStepId": {
        "type": "string",
        "description": "The GUID of your experiment step."
      },
      "ExperimentWorkspaceId": {
        "type": "string",
        "description": "The Guid ID of your experimentation workspace."
      },
      "FeatureId": {
        "type": "string",
        "description": "The GUID of your experiment feature."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Properties": {
        "type": "dynamic",
        "description": "Event properties in Experimentation Platform Compute Pipeline"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "ScorecardId": {
        "type": "string",
        "description": "The ID of your experiment scorecard."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Time (UTC) of the HTTP request."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AEWExperimentAssignmentSummary": {
    "tableName": "AEWExperimentAssignmentSummary",
    "description": "Experiment variant assignment summary from feature evaluation events. Used to monitor experiment activities.",
    "columns": {
      "AllocationId": {
        "type": "string",
        "description": "The Id of the allocation used for the feature evaluation."
      },
      "AssignmentEventCount": {
        "type": "long",
        "description": "Total number of assignment events."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "BinSize": {
        "type": "long",
        "description": "The duration of assignment summary time range (in minutes)."
      },
      "BinStartTime": {
        "type": "datetime",
        "description": "The bin start time of assignment summary."
      },
      "FeatureFlagReference": {
        "type": "string",
        "description": "The fully qualified Id of the feature flag."
      },
      "FeatureName": {
        "type": "string",
        "description": "The name of the feature flag."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "IsControlVariant": {
        "type": "bool",
        "description": "Whether the feature variant assigned is the control for the"
      },
      "MaxTimeGenerated": {
        "type": "datetime",
        "description": "The timestamp of latest assignment event in time range."
      },
      "MinTimeGenerated": {
        "type": "datetime",
        "description": "The timestamp of earliest assignment event in time range."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The ingestion time of the experiment assignment summary."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "Variant": {
        "type": "string",
        "description": "The Id of the feature variant assigned."
      },
      "VariantAssignmentPercentage": {
        "type": "real",
        "description": "The variant assignment percentage of the feature variant."
      }
    }
  },
  "AEWExperimentScorecardMetricPairs": {
    "tableName": "AEWExperimentScorecardMetricPairs",
    "description": "Detailed experiment results including metric comparisons and any metric-level derived insights.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ControlCount": {
        "type": "long",
        "description": "The sample count of the control variant."
      },
      "ControlMetricValue": {
        "type": "real",
        "description": "The metric value for the control variant."
      },
      "ControlMetricValueNormalized": {
        "type": "real",
        "description": "The normalized metric value for the control variant."
      },
      "ControlStandardErrorNormalized": {
        "type": "real",
        "description": "The standard error (StandardDeviation / sqrt(Count)) of"
      },
      "ControlVariant": {
        "type": "string",
        "description": "The Id of the control variant."
      },
      "DesiredDirection": {
        "type": "string",
        "description": "Desirable direction for the metric. Possible values:"
      },
      "Insights": {
        "type": "dynamic",
        "description": "Metric-level Insights derived from the analysis results in"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "MetricDescription": {
        "type": "string",
        "description": "The description of the metric."
      },
      "MetricDisplayName": {
        "type": "string",
        "description": "The display name of the metric."
      },
      "MetricETag": {
        "type": "string",
        "description": "The ETag of the metric."
      },
      "MetricId": {
        "type": "string",
        "description": "The Id of the metric."
      },
      "MetricKind": {
        "type": "string",
        "description": "The metric kind. Possible values include EventCount,"
      },
      "MetricLifecycle": {
        "type": "string",
        "description": "The lifecycle stage of the metric. Possible values include"
      },
      "MetricTags": {
        "type": "dynamic",
        "description": "Metric tags in the form of string array."
      },
      "MetricVersion": {
        "type": "string",
        "description": "The version of the metric."
      },
      "PValue": {
        "type": "real",
        "description": "The P-Value of the comparison. Used to indicate if the"
      },
      "RelativeDifference": {
        "type": "real",
        "description": "The relative difference of the comparison based on"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "ScorecardId": {
        "type": "string",
        "description": "The Id of the experiment scorecard."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp when the scorecard results were"
      },
      "TreatmentCount": {
        "type": "long",
        "description": "The sample count of the treatment variant."
      },
      "TreatmentEffect": {
        "type": "string",
        "description": "The effect of the treatment variant on the metric."
      },
      "TreatmentMetricValue": {
        "type": "real",
        "description": "The metric value for the treatment variant."
      },
      "TreatmentMetricValueNormalized": {
        "type": "real",
        "description": "The normalized metric value for the treatment variant."
      },
      "TreatmentStandardErrorNormalized": {
        "type": "real",
        "description": "The standard error (StandardDeviation / sqrt(Count)) of"
      },
      "TreatmentVariant": {
        "type": "string",
        "description": "The Id of the treatment variant."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AEWExperimentScorecards": {
    "tableName": "AEWExperimentScorecards",
    "description": "Experimet scorecard metadata and insights.",
    "columns": {
      "AllocationId": {
        "type": "string",
        "description": "The Id of the allocation used for the feature evaluation."
      },
      "AnalysisEndTime": {
        "type": "datetime",
        "description": "The end name of the scorecard analysis."
      },
      "AnalysisStartTime": {
        "type": "datetime",
        "description": "The start time of the scorecard analysis."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "FeatureFlagReference": {
        "type": "string",
        "description": "The fully qualified Id of the feature."
      },
      "FeatureName": {
        "type": "string",
        "description": "The name of the feature."
      },
      "Insights": {
        "type": "dynamic",
        "description": "Scorecard-level Insights derived from the analysis results in JSON"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ScorecardId": {
        "type": "string",
        "description": "The Id of the experiment scorecard."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp when the scorecard results were ingested."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AFSAuditLogs": {
    "tableName": "AFSAuditLogs",
    "description": "This table contains audit logs retrieved from your Azure Managed Lustre filesystem resource. These logs capture all priviledged operations performed on each Azure Managed Lustre resource. They can be used to monitor events and configure alerts on your resource.",
    "columns": {
      "ActivityId": {
        "type": "string",
        "description": "Internal identifier used for tracking."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Identity": {
        "type": "dynamic",
        "description": "JSON structure that describes the identity of the user or application that"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Location": {
        "type": "string",
        "description": "The region of the resource associated with the event."
      },
      "OperationName": {
        "type": "string",
        "description": "Name of the operation."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultDescription": {
        "type": "string",
        "description": "Details about the result of the operation, if available."
      },
      "ResultSignature": {
        "type": "int",
        "description": "HTTP status of API request."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Time (UTC) when the log was created."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "BackendHost": {
        "type": "string",
        "description": "Address of backend target with appended port. For example"
      },
      "BackendIp": {
        "type": "string",
        "description": "IP address of backend target Application Gateway for Containers"
      },
      "BackendPort": {
        "type": "int",
        "description": "Port number of the backend target."
      },
      "BackendResponseLatency": {
        "type": "real",
        "description": "Time in milliseconds to receive first byte from Application"
      },
      "BackendTimeTaken": {
        "type": "int",
        "description": "Time in milliseconds for the response to be transmitted from the"
      },
      "ClientIp": {
        "type": "string",
        "description": "Originating IP for the request."
      },
      "FrontendName": {
        "type": "string",
        "description": "Name of the Application Gateway for Containers frontend that"
      },
      "FrontendPort": {
        "type": "int",
        "description": "Port number the request was listened on by Application Gateway"
      },
      "HostName": {
        "type": "string",
        "description": "Host header value received from the client by Application"
      },
      "HttpMethod": {
        "type": "string",
        "description": "HTTP Method of the request received from the client by"
      },
      "HttpStatusCode": {
        "type": "int",
        "description": "HTTP Status code returned from Application Gateway for"
      },
      "HttpVersion": {
        "type": "string",
        "description": "HTTP version of the request received from the client by"
      },
      "Referrer": {
        "type": "string",
        "description": "Referrer header of the request received from the client by"
      },
      "Region": {
        "type": "string",
        "description": "The region where Application Gateway for Containers association"
      },
      "RequestBodyBytes": {
        "type": "long",
        "description": "Size in bytes of the body payload of the request received from the"
      },
      "RequestHeaderBytes": {
        "type": "long",
        "description": "Size in bytes of the headers of the request received from the"
      },
      "RequestUri": {
        "type": "string",
        "description": "URL of the received request."
      },
      "ResponseBodyBytes": {
        "type": "long",
        "description": "Size in bytes of the body payload of the response returned to the"
      },
      "ResponseHeaderBytes": {
        "type": "long",
        "description": "Size in bytes of the headers of the response returned to the client"
      },
      "TimeTaken": {
        "type": "real",
        "description": "Time in milliseconds of the client request received by Application"
      },
      "TlsCipher": {
        "type": "string",
        "description": "TLS cipher suite negotiated between the client and Application"
      },
      "TlsProtocol": {
        "type": "string",
        "description": "TLS version negotiated between the client and Application"
      },
      "TrackingId": {
        "type": "string",
        "description": "Generated guid by Application Gateway for Containers to help with"
      },
      "UserAgent": {
        "type": "string",
        "description": "User-Agent header of the request received from the client by"
      },
      "Action": {
        "type": "string",
        "description": "Action taken on the request. Available values are Blocked and Allowed"
      },
      "ClientPort": {
        "type": "int",
        "description": "Originating port for the request."
      },
      "DetailedData": {
        "type": "string",
        "description": "Specific data found in request that matched the rule for the triggered"
      },
      "DetailedMessage": {
        "type": "string",
        "description": "Description of the rule for the triggered event."
      },
      "FileDetails": {
        "type": "string",
        "description": "Configuration file that contained the rule for the triggered event."
      },
      "Hostname": {
        "type": "string",
        "description": "Hostname or IP address of the Application Gateway."
      },
      "InstanceId": {
        "type": "string",
        "description": "Application Gateway instance for which firewall data is being generated."
      },
      "LineDetails": {
        "type": "string",
        "description": "Line number in the configuration file that triggered the event."
      },
      "Message": {
        "type": "string",
        "description": "User-friendly message for the triggering event. More details are provided"
      },
      "PolicyId": {
        "type": "string",
        "description": "Resource ID of the web application firewall policy."
      },
      "PolicyScope": {
        "type": "string",
        "description": "A named scope consisting of Kubernetes resource references the scope is"
      },
      "PolicyScopeName": {
        "type": "string",
        "description": "The name to the type of scope assignment the web application firewall"
      },
      "RuleId": {
        "type": "string",
        "description": "Rule ID of the triggering event."
      },
      "RuleSetType": {
        "type": "string",
        "description": "Rule set type. The available value is Microsoft_DefaultRuleSet or"
      },
      "RuleSetVersion": {
        "type": "string",
        "description": "Rule set version used for Microsoft_DefaultRuleSet or"
      }
    }
  },
  "AGSGrafanaLoginEvents": {
    "tableName": "AGSGrafanaLoginEvents",
    "description": "Login events for an instance of Azure Managed Workspace for Grafana including user identity, user Grafana role (in success) and detailed message (in failure).",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The category of the log record."
      },
      "CorrelationId": {
        "type": "string",
        "description": "GUID for the correlated logs."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Level": {
        "type": "string",
        "description": "The severity level of the log record."
      },
      "Location": {
        "type": "string",
        "description": "The location (region) the Azure Managed Grafana instance was accessed in."
      },
      "Message": {
        "type": "string",
        "description": "The inner message of the log record."
      },
      "OperationName": {
        "type": "string",
        "description": "The Grafana operation associated with the log record."
      },
      "ResourceGroup": {
        "type": "string",
        "description": "The resource group containing the resource corresponding to the log"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TargetResource": {
        "type": "string",
        "description": "The corresponding resource name of the log record."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (UTC) when the log record was generated."
      },
      "TraceContext": {
        "type": "dynamic",
        "description": "The W3C distributed tracing context for the log record."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "User": {
        "type": "string",
        "description": "The user identity of the login event."
      },
      "UserRole": {
        "type": "string",
        "description": "The Grafana role of the user for the login event."
      }
    }
  },
  "AGSGrafanaUsageInsightsEvents": {
    "tableName": "AGSGrafanaUsageInsightsEvents",
    "description": "Usage insights events for an instance of Azure Managed Workspace for Grafana.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The category of the log record."
      },
      "Details": {
        "type": "dynamic",
        "description": "The usage insights details"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Level": {
        "type": "string",
        "description": "The severity level of the log record."
      },
      "Location": {
        "type": "string",
        "description": "The location (region) the Azure Managed Grafana instance was accessed in."
      },
      "OperationName": {
        "type": "string",
        "description": "Name of the operation."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Time (UTC) when the log was created."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "BackendPoolName": {
        "type": "string",
        "description": "The backend pool associated with the given request log."
      },
      "BackendSettingName": {
        "type": "string",
        "description": "The backend setting name associated with the given request"
      },
      "ClientIp": {
        "type": "string",
        "description": "Originating IP for the request."
      },
      "ClientResponseTime": {
        "type": "real",
        "description": "Time difference (in seconds) between first byte received from"
      },
      "ErrorInfo": {
        "type": "string",
        "description": "Error category of the failing request."
      },
      "Host": {
        "type": "string",
        "description": "Address listed in the host header of the request. If rewritten"
      },
      "HttpMethod": {
        "type": "string",
        "description": "HTTP method used by the request."
      },
      "HttpStatus": {
        "type": "int",
        "description": "HTTP status code returned to the client from Application"
      },
      "HttpVersion": {
        "type": "string",
        "description": "HTTP version of the request."
      },
      "InstanceId": {
        "type": "string",
        "description": "Application Gateway instance for which performance data is being"
      },
      "ListenerName": {
        "type": "string",
        "description": "The listener associated with given request log."
      },
      "OriginalHost": {
        "type": "string",
        "description": "This field contains the original request host name."
      },
      "OriginalRequestUriWithArgs": {
        "type": "string",
        "description": "This field contains the original request URL."
      },
      "ReceivedBytes": {
        "type": "int",
        "description": "Size of packet received, in bytes."
      },
      "RequestUri": {
        "type": "string",
        "description": "URL of the received request."
      },
      "RuleName": {
        "type": "string",
        "description": "The rule associated with the given request log."
      },
      "SentBytes": {
        "type": "int",
        "description": "Size of packet sent, in bytes."
      },
      "ServerResponseLatency": {
        "type": "real",
        "description": "Latency of the response (in seconds) from the backend server."
      },
      "ServerRouted": {
        "type": "string",
        "description": "The backend server that application gateway routes the request"
      },
      "ServerStatus": {
        "type": "int",
        "description": "HTTP status code of the backend server."
      },
      "SslCipher": {
        "type": "string",
        "description": "Cipher suite being used for TLS communication (if TLS is"
      },
      "SslEnabled": {
        "type": "string",
        "description": "Whether communication to the backend pools used TLS. Valid"
      },
      "SslProtocol": {
        "type": "string",
        "description": "SSL/TLS protocol being used (if TLS is enabled)."
      },
      "TimeTaken": {
        "type": "real",
        "description": "Length of time (in seconds) that it takes for the first byte of a"
      },
      "TransactionId": {
        "type": "string",
        "description": "Unique ID for a given transaction which helps group multiple rule"
      },
      "UpstreamSourcePort": {
        "type": "int",
        "description": "The source port used by Application Gateway when initiating a"
      },
      "UserAgent": {
        "type": "string",
        "description": "User agent from the HTTP request header."
      },
      "WafEvaluationTime": {
        "type": "real",
        "description": "Length of time (in seconds) that it takes for the request to be"
      },
      "WafMode": {
        "type": "string",
        "description": "Value can be either Detection or Prevention."
      },
      "Action": {
        "type": "string",
        "description": "Action taken on the request. Available values are Blocked and Allowed (for"
      },
      "ClientPort": {
        "type": "int",
        "description": "Originating port for the request."
      },
      "DetailedData": {
        "type": "string",
        "description": "Specific data found in request that matched the rule for the triggered"
      },
      "DetailedMessage": {
        "type": "string",
        "description": "Description of the rule for the triggered event."
      },
      "FileDetails": {
        "type": "string",
        "description": "Configuration file that contained the rule for the triggered event."
      },
      "Hostname": {
        "type": "string",
        "description": "Hostname or IP address of the Application Gateway."
      },
      "LineDetails": {
        "type": "string",
        "description": "Line number in the configuration file that triggered the event."
      },
      "Message": {
        "type": "string",
        "description": "User-friendly message for the triggering event. More details are provided"
      },
      "RuleId": {
        "type": "string",
        "description": "Rule ID of the triggering event."
      },
      "RuleSetType": {
        "type": "string",
        "description": "Rule set type. The available value is OWASP."
      },
      "RuleSetVersion": {
        "type": "string",
        "description": "Rule set version used. Available values are 2.2.9 and 3.0."
      },
      "Site": {
        "type": "string",
        "description": "Site for which the log was generated. Currently, only Global is listed"
      },
      "FailedRequestCount": {
        "type": "int",
        "description": "Number of failed requests."
      },
      "HealthyHostCount": {
        "type": "int",
        "description": "Number of healthy hosts in the backend pool."
      },
      "Latency": {
        "type": "int",
        "description": "Average latency (in milliseconds) of requests from the instance to the"
      },
      "RequestCount": {
        "type": "int",
        "description": "Number of requests served."
      },
      "Throughput": {
        "type": "int",
        "description": "Average throughput since the last log, measured in bytes per second."
      },
      "UnHealthyHostCount": {
        "type": "int",
        "description": "Number of unhealthy hosts in the backend pool."
      }
    }
  },
  "AHDSDeidAuditLogs": {
    "tableName": "AHDSDeidAuditLogs",
    "description": "Data plane audit logs of privileged actions made against Azure Health Data Services de- identificiation service, such as initiating a de-identification job.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CorrelationId": {
        "type": "string",
        "description": "An identifier used to group together a set of related events."
      },
      "Identity": {
        "type": "dynamic",
        "description": "Identity of the issuer of the request."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "OperationName": {
        "type": "string",
        "description": "The operation name for which the log entry was generated."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "StatusCode": {
        "type": "int",
        "description": "HTTP status code returned for the request."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Time (UTC) when the log was created."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "Uri": {
        "type": "string",
        "description": "URI of the request."
      }
    }
  },
  "AHDSDicomAuditLogs": {
    "tableName": "AHDSDicomAuditLogs",
    "description": "Data plane audit logs of privileged actions made against Azure Health Data DICOM service. For example, storing a DICOM instance.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CorrelationId": {
        "type": "string",
        "description": "An identifier used to group together a set of related events."
      },
      "Identity": {
        "type": "dynamic",
        "description": "Identity of the issuer of the request."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Level": {
        "type": "string",
        "description": "The log's severity level. Possible values are Informational, Warning, and"
      },
      "OperationName": {
        "type": "string",
        "description": "The operation name for which the log entry was generated."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultType": {
        "type": "string",
        "description": "Indicates whether the operation started or ended."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "StatusCode": {
        "type": "int",
        "description": "Status code returned for the request."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Time (UTC) when the log was created."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "Uri": {
        "type": "string",
        "description": "URI of the request."
      }
    }
  },
  "AHDSDicomDiagnosticLogs": {
    "tableName": "AHDSDicomDiagnosticLogs",
    "description": "Actionable logs generated from your Azure Health Data DICOM service, including events information like, warning logs per tag per DICOM instance denoting validation issues.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CorrelationId": {
        "type": "string",
        "description": "An identifier used to group together a set of related events."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Location": {
        "type": "string",
        "description": "Azure region of service from which log was generated. Examples are"
      },
      "LogLevel": {
        "type": "string",
        "description": "The log's severity level. Possible values are Informational, Warning, and"
      },
      "Message": {
        "type": "string",
        "description": "Description of the log entry."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation name for which the log entry was generated. For example,"
      },
      "Properties": {
        "type": "dynamic",
        "description": "Additional information about the event in JSON array format. Examples"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Time (UTC) when the log was created."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AHDSMedTechDiagnosticLogs": {
    "tableName": "AHDSMedTechDiagnosticLogs",
    "description": "Actionable logs generated from your MedTech application.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogType": {
        "type": "string",
        "description": "Type of the log entry."
      },
      "Message": {
        "type": "string",
        "description": "Description of the log entry."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation stage of the service from which the log entry was generated."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Time (UTC) when the log was created."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AKSAudit": {
    "tableName": "AKSAudit",
    "description": "Contains all Kubernetes API Server audit logs including events with the get and list verbs. These events are useful for monitoring all of the interactions with the Kubernetes API. To limit the scope to modifying operations see the AKSAuditAdmin table. Requires Diagnostic Settings to use the Resource Specific destination table.",
    "columns": {
      "Annotations": {
        "type": "dynamic",
        "description": "An unstructed key-value map associated with this audit event. These"
      },
      "AuditId": {
        "type": "string",
        "description": "Unique audit ID that is generated for each request."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Level": {
        "type": "string",
        "description": "Level (Metadata, Request, RequestResponse) of the audit event."
      },
      "ObjectRef": {
        "type": "dynamic",
        "description": "The Kubernetes object reference this event was targeted for. This field"
      },
      "PodName": {
        "type": "string",
        "description": "Name of the pod emitting this audit event."
      },
      "RequestObject": {
        "type": "dynamic",
        "description": "Kubernetes API object from the request in object format or the string"
      },
      "RequestReceivedTime": {
        "type": "datetime",
        "description": "Time when the API Server first received the request."
      },
      "RequestUri": {
        "type": "string",
        "description": "The URI of the request made by the client to the server."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResponseObject": {
        "type": "dynamic",
        "description": "Kubernetes API object from the response, in object format or the"
      },
      "ResponseStatus": {
        "type": "dynamic",
        "description": "Response status for the request, which includes the response code. In"
      },
      "SourceIps": {
        "type": "dynamic",
        "description": "The list of source IP addresses for the originating client and"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "Stage": {
        "type": "string",
        "description": "The request handling stage (RequestReceived, ResponseStarted,"
      },
      "StageReceivedTime": {
        "type": "datetime",
        "description": "Time when the request reached the current audit stage."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Event generation time."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "User": {
        "type": "dynamic",
        "description": "Authenticated user metadata of the requesting client, including"
      },
      "UserAgent": {
        "type": "string",
        "description": "The user agent string presented by the originating client."
      },
      "Verb": {
        "type": "string",
        "description": "The Kubernetes verb associated with the request. For non-resource"
      }
    }
  },
  "AKSAuditAdmin": {
    "tableName": "AKSAuditAdmin",
    "description": "Contains Kubernetes API Server audit logs excluding events with the get and list verbs. These events are useful for monitoring resource modification requests made to the Kubernetes API. To see all modifying and non-modifying operations see the AKSAudit table. Requires Diagnostic Settings to use the Resource Specific destination table.",
    "columns": {
      "Annotations": {
        "type": "dynamic",
        "description": "An unstructed key-value map associated with this audit event. These"
      },
      "AuditId": {
        "type": "string",
        "description": "Unique audit ID that is generated for each request."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Level": {
        "type": "string",
        "description": "Level (Fatal, Error, Warning, Info) of the log message."
      },
      "ObjectRef": {
        "type": "dynamic",
        "description": "The Kubernetes object reference this event was targeted for. This field"
      },
      "PodName": {
        "type": "string",
        "description": "Name of the pod logging the request."
      },
      "RequestObject": {
        "type": "dynamic",
        "description": "Kubernetes API object from the request in object format or the string"
      },
      "RequestReceivedTime": {
        "type": "datetime",
        "description": "Time when the API Server first received the request."
      },
      "RequestUri": {
        "type": "string",
        "description": "The URI of the request made by the client to the server."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResponseObject": {
        "type": "dynamic",
        "description": "Kubernetes API object from the response, in object format or the"
      },
      "ResponseStatus": {
        "type": "dynamic",
        "description": "Response status for the request, which includes the response code. In"
      },
      "SourceIps": {
        "type": "dynamic",
        "description": "The list of source IP addresses for the originating client and"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "Stage": {
        "type": "string",
        "description": "The request handling stage (RequestReceived, ResponseStarted,"
      },
      "StageReceivedTime": {
        "type": "datetime",
        "description": "Time when the request reached the current audit stage."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Event generation time."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "User": {
        "type": "dynamic",
        "description": "Authenticated user metadata of the requesting client, including"
      },
      "UserAgent": {
        "type": "string",
        "description": "The user agent string presented by the originating client."
      },
      "Verb": {
        "type": "string",
        "description": "The Kubernetes verb associated with the request. For non-resource"
      },
      "Category": {
        "type": "string",
        "description": "Service log category describing the service logging the message."
      },
      "Message": {
        "type": "string",
        "description": "Log message body."
      },
      "Stream": {
        "type": "string",
        "description": "Output stream (stdout, stderr) source of the log message."
      }
    }
  },
  "ALBHealthEvent": {
    "tableName": "ALBHealthEvent",
    "description": "Table of events related to the availability and health of a load balancer resource.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Description": {
        "type": "string",
        "description": "Description of the health event."
      },
      "FrontendIP": {
        "type": "string",
        "description": "Frontend IP of the health event."
      },
      "HealthEventType": {
        "type": "string",
        "description": "Type of the health event."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "LoadBalancerResourceId": {
        "type": "string",
        "description": "Load Balancer Resource ID of the health event."
      },
      "operationName": {
        "type": "string",
        "description": "The operation when the record is generated"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "Severity": {
        "type": "string",
        "description": "Severity of the health event."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time the record was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AMSKeyDeliveryRequests": {
    "tableName": "AMSKeyDeliveryRequests",
    "description": "Key delivery requests logs from Azure Media Services. This table captures details for every HTTP request for key or license acquisition sent to Azure Media Services. It can be used to monitor encrypted content playback, and to diagnose issues with DRM license acquisition or Clear Key acquisition.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DurationMs": {
        "type": "int",
        "description": "Azure Media Services operation duration in milli-seconds."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "KeyId": {
        "type": "string",
        "description": "The ID of the requested key."
      },
      "KeyType": {
        "type": "string",
        "description": "Could be one of the following values: Clear (no encryption), FairPlay,"
      },
      "Level": {
        "type": "string",
        "description": "Log level of message, e.g. Informational."
      },
      "Location": {
        "type": "string",
        "description": "Location of the service sending the log."
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation that triggered the event."
      },
      "OperationVersion": {
        "type": "string",
        "description": "Azure Media Services operation version."
      },
      "PolicyName": {
        "type": "string",
        "description": "The Azure Resource Manager name of the policy."
      },
      "RequestId": {
        "type": "string",
        "description": "Id of the request."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultSignature": {
        "type": "string",
        "description": "Azure Media Services operation result signature."
      },
      "ResultType": {
        "type": "string",
        "description": "Azure Media Services operation result type."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "StatusMessage": {
        "type": "string",
        "description": "The status message."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the event was generated."
      },
      "TokenType": {
        "type": "string",
        "description": "The token type."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AMSLiveEventOperations": {
    "tableName": "AMSLiveEventOperations",
    "description": "Contains logs related to a Live Event. Logs are sent when an encoder connects, disconnects, or if there is a discontinuity in the media data.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Level": {
        "type": "string",
        "description": "Message level. Possible values are Informational, Warning, Error, Critical and"
      },
      "Location": {
        "type": "string",
        "description": "Location of the service sending the log."
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation that triggered the event."
      },
      "Properties": {
        "type": "dynamic",
        "description": "Operation details."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the event was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "EventCode": {
        "type": "string",
        "description": "The event code."
      },
      "EventMessage": {
        "type": "string",
        "description": "The event status message."
      }
    }
  },
  "AMSStreamingEndpointRequests": {
    "tableName": "AMSStreamingEndpointRequests",
    "description": "Contains information about requests to streaming endpoints. A streaming endpoint receives HTTP requests needed to stream video content. These requests usually come from video players or from the CDN.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClientIP": {
        "type": "string",
        "description": "IP address of the client."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Level": {
        "type": "string",
        "description": "Message level. Possible values are Informational, Warning, Error, Critical"
      },
      "Location": {
        "type": "string",
        "description": "Location of the service sending the event."
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation that triggered the event."
      },
      "OperationVersion": {
        "type": "string",
        "description": "Azure Media Services operation version."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "Status": {
        "type": "string",
        "description": "Status code of the request."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) when the event was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "URL": {
        "type": "string",
        "description": "The streaming URL from Azure Media Services."
      }
    }
  },
  "AMWMetricsUsageDetails": {
    "tableName": "AMWMetricsUsageDetails",
    "description": "Table that breaks down data quantities and query usage of metrics sent to an Azure Monitor Workspace.",
    "columns": {
      "AMWResourceName": {
        "type": "string",
        "description": "Azure Monitor Workspace resource name."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DailyTimeseriesCount": {
        "type": "long",
        "description": "Daily timeseries count associated with the labels/dimensions for"
      },
      "DaysSinceMetricQueried": {
        "type": "int",
        "description": "Number of days from the specified date range when the metric"
      },
      "DimensionsList": {
        "type": "string",
        "description": "The set of labels/dimensions being described."
      },
      "EndTime": {
        "type": "datetime",
        "description": "The end time (UTC) of the date range being described."
      },
      "IncomingEventsCount": {
        "type": "long",
        "description": "Number of events received for the specified date range."
      },
      "IngestedSamplesCount": {
        "type": "long",
        "description": "Number of samples ingested in the specified date range."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "MetricName": {
        "type": "string",
        "description": "The name of the metric the insights is generated for."
      },
      "MetricNamespace": {
        "type": "string",
        "description": "Namespace in the Azure Monitor Workspace the metric belongs to."
      },
      "NumberOfQueries": {
        "type": "int",
        "description": "Number of queries received for the specified date range."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "StartTime": {
        "type": "datetime",
        "description": "The start time (UTC) of the date range being described."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) when the summary data for the row was"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AOIDatabaseQuery": {
    "tableName": "AOIDatabaseQuery",
    "description": "Audit logs related to queries run on database, in dataproduct environment.",
    "columns": {
      "ApplicationName": {
        "type": "string",
        "description": "The name of the application that invoked the query."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CacheDiskHits": {
        "type": "long",
        "description": "Disk cache hits."
      },
      "CacheDiskMisses": {
        "type": "long",
        "description": "Disk cache misses."
      },
      "CacheMemoryHits": {
        "type": "long",
        "description": "Memory cache hits."
      },
      "CacheMemoryMisses": {
        "type": "long",
        "description": "Memory cache misses."
      },
      "CacheShardsBypassBytes": {
        "type": "long",
        "description": "Shards cache bypass bytes."
      },
      "CacheShardsColdHits": {
        "type": "long",
        "description": "Shards cold cache hits."
      },
      "CacheShardsColdMisses": {
        "type": "long",
        "description": "Shards cold cache misses."
      },
      "CacheShardsHotHits": {
        "type": "long",
        "description": "Shards hot cache hits."
      },
      "CacheShardsHotMisses": {
        "type": "long",
        "description": "Shards hot cache misses."
      },
      "ComponentFault": {
        "type": "string",
        "description": "The entity that caused the query to fail. For example, if the query"
      },
      "CorrelationId": {
        "type": "string",
        "description": "The client request ID."
      },
      "DatabaseName": {
        "type": "string",
        "description": "The name of the database that the command ran on."
      },
      "DurationMs": {
        "type": "string",
        "description": "Command duration in milliseconds."
      },
      "FailureReason": {
        "type": "string",
        "description": "The failure reason."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "LastUpdatedOn": {
        "type": "datetime",
        "description": "Time (UTC) at which this command ended."
      },
      "Location": {
        "type": "string",
        "description": "The region where this query was executed."
      },
      "MaxDataScannedTime": {
        "type": "datetime",
        "description": "Maximum data scan time."
      },
      "MemoryPeak": {
        "type": "long",
        "description": "Memory peak."
      },
      "MinDataScannedTime": {
        "type": "datetime",
        "description": "Minimum data scan time."
      },
      "OperationName": {
        "type": "string",
        "description": "The name of this operation."
      },
      "Principal": {
        "type": "string",
        "description": "The principal that invoked the query."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "RootActivityId": {
        "type": "string",
        "description": "The root activity ID."
      },
      "ScannedExtentsCount": {
        "type": "long",
        "description": "Scanned extents count."
      },
      "ScannedRowsCount": {
        "type": "long",
        "description": "Scanned rows count."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "StartedOn": {
        "type": "datetime",
        "description": "Time (UTC) at which this command started."
      },
      "State": {
        "type": "string",
        "description": "The state the command ended with."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TableCount": {
        "type": "int",
        "description": "Table count."
      },
      "TablesStatistics": {
        "type": "dynamic",
        "description": "Tables statistics."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "Text": {
        "type": "string",
        "description": "The text of the invoked query."
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The time (UTC) at which this event was generated."
      },
      "TotalCPU": {
        "type": "string",
        "description": "Total CPU duration time."
      },
      "TotalExtentsCount": {
        "type": "long",
        "description": "Total extents count."
      },
      "TotalRowsCount": {
        "type": "long",
        "description": "Total rows count."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "User": {
        "type": "string",
        "description": "The user that invoked the query."
      },
      "WorkloadGroup": {
        "type": "string",
        "description": "The workload group the query was classified to."
      }
    }
  },
  "AOIDigestion": {
    "tableName": "AOIDigestion",
    "description": "Logs related to digestion of files added to the input storage account. These can be used to verify that data is being successfully passed through to enrichment, or to troubleshoot issues with processing the raw data.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Datatype": {
        "type": "string",
        "description": "The datatype of the file that was digested."
      },
      "FilePath": {
        "type": "string",
        "description": "The path of the file that was digested."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Level": {
        "type": "string",
        "description": "The level of the log."
      },
      "Message": {
        "type": "string",
        "description": "The log message."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The time (UTC) when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AOIStorage": {
    "tableName": "AOIStorage",
    "description": "These are Audit logs related to ingestion of files on the input storage account.",
    "columns": {
      "AccessTier": {
        "type": "string",
        "description": "The access tier of the storage account."
      },
      "AccountName": {
        "type": "string",
        "description": "The name of the storage account."
      },
      "AuthenticationHash": {
        "type": "string",
        "description": "The hash of authentication token."
      },
      "AuthenticationType": {
        "type": "string",
        "description": "The type of authentication that was used to make the request."
      },
      "AuthorizationDetails": {
        "type": "dynamic",
        "description": "Detailed policy information used to authorize the request."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CallerIpAddress": {
        "type": "string",
        "description": "The IP address of the requester, including the port number."
      },
      "Category": {
        "type": "string",
        "description": "The category to which this row belongs to, it will be one of Ingestion,"
      },
      "ClientRequestId": {
        "type": "string",
        "description": "The x-ms-client-request-id header value of the request."
      },
      "ConditionsUsed": {
        "type": "string",
        "description": "A semicolon-separated list of key-value pairs that represent a"
      },
      "ContentLengthHeader": {
        "type": "long",
        "description": "The value of the Content-Length header for the request sent to the"
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID that is used to correlate logs across resources."
      },
      "DestinationUri": {
        "type": "string",
        "description": "Records the destination URI for operations."
      },
      "DurationMs": {
        "type": "real",
        "description": "The total time, expressed in milliseconds, to perform the requested"
      },
      "Etag": {
        "type": "string",
        "description": "The ETag identifier for the returned object, in quotes."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "LastModifiedTime": {
        "type": "datetime",
        "description": "The Last Modified Time (LMT) for the returned object. This field is"
      },
      "Location": {
        "type": "string",
        "description": "The location of storage account."
      },
      "MetricResponseType": {
        "type": "string",
        "description": "Records the metric response for correlation between metrics and"
      },
      "ObjectKey": {
        "type": "string",
        "description": "The key of the requested object, in quotes."
      },
      "OperationCount": {
        "type": "int",
        "description": "The number of each logged operation that is involved in the request."
      },
      "OperationName": {
        "type": "string",
        "description": "The type of REST operation that was performed."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The storage service version that was specified when the request was"
      },
      "Protocol": {
        "type": "string",
        "description": "The protocol that is used in the operation."
      },
      "ReferrerHeader": {
        "type": "string",
        "description": "The Referer header value."
      },
      "RehydratePriority": {
        "type": "string",
        "description": "The priority used to rehydrate an archived blob."
      },
      "RequestBodySize": {
        "type": "long",
        "description": "The size of the request packets, expressed in bytes, that are read by"
      },
      "RequesterAppId": {
        "type": "string",
        "description": "The Open Authorization (OAuth) application ID that is used as the"
      },
      "RequesterAudience": {
        "type": "string",
        "description": "The OAuth audience of the request."
      },
      "RequesterObjectId": {
        "type": "string",
        "description": "The OAuth object ID of the requester."
      },
      "RequesterTenantId": {
        "type": "string",
        "description": "The OAuth tenant ID of identity."
      },
      "RequesterTokenIssuer": {
        "type": "string",
        "description": "The OAuth token issuer."
      },
      "RequesterUpn": {
        "type": "string",
        "description": "The User Principal Names of requestor."
      },
      "RequestHeaderSize": {
        "type": "long",
        "description": "The size of the request header expressed in bytes. If a request is"
      },
      "RequestMd5": {
        "type": "string",
        "description": "The value of either the Content-MD5 header or the x-ms-content-"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResponseBodySize": {
        "type": "long",
        "description": "The size of the response packets written by the storage service, in"
      },
      "ResponseHeaderSize": {
        "type": "long",
        "description": "The size of the response header expressed in bytes. If a request is"
      },
      "ResponseMd5": {
        "type": "string",
        "description": "The value of the MD5 hash calculated by the storage service."
      },
      "SasExpiryStatus": {
        "type": "string",
        "description": "Records any violations in the request SAS token as per the SAS policy"
      },
      "SchemaVersion": {
        "type": "string",
        "description": "The schema version of the log."
      },
      "ServerLatencyMs": {
        "type": "real",
        "description": "The total time expressed in milliseconds to perform the requested"
      },
      "ServiceType": {
        "type": "string",
        "description": "The service associated with this request."
      },
      "SourceAccessTier": {
        "type": "string",
        "description": "The source tier of the storage account."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "SourceUri": {
        "type": "string",
        "description": "Records the source URI for operations."
      },
      "StatusCode": {
        "type": "string",
        "description": "The HTTP status code for the request. If the request is interrupted,"
      },
      "StatusText": {
        "type": "string",
        "description": "The status of the requested operation."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The time (UTC) at which this event was generated."
      },
      "TlsVersion": {
        "type": "string",
        "description": "The TLS version used in the connection of request."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "Uri": {
        "type": "string",
        "description": "Uniform resource identifier that is requested."
      },
      "UserAgentHeader": {
        "type": "string",
        "description": "The User-Agent header value, in quotes."
      }
    }
  },
  "APIMDevPortalAuditDiagnosticLog": {
    "tableName": "APIMDevPortalAuditDiagnosticLog",
    "description": "Diagnostic Logs for API Management Developer Portal API.",
    "columns": {
      "ActivityId": {
        "type": "string",
        "description": "An unique identifier represented as a GUID (Globally Unique Identifier). It"
      },
      "ApimClient": {
        "type": "string",
        "description": "The field refers to the HTTP header X-Ms-Apim-Client sent by Developer"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "Distinct group or type of record."
      },
      "HashedUserId": {
        "type": "string",
        "description": "The field represents a hashed or encrypted form of a user identifier."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "OperationName": {
        "type": "string",
        "description": "Field denotes the specific name or identifier of the operation being"
      },
      "Region": {
        "type": "string",
        "description": "The field indicates the geographical location or data center region within"
      },
      "RequestMethod": {
        "type": "string",
        "description": "The field indicates the type of HTTP method used in an incoming request."
      },
      "RequestPath": {
        "type": "string",
        "description": "The field contains the path or endpoint of an incoming request."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResponseCode": {
        "type": "int",
        "description": "The field indicates the HTTP status code associated with the server's"
      },
      "ResultType": {
        "type": "string",
        "description": "This field signifies the outcome or type of result associated with this"
      },
      "ServiceName": {
        "type": "string",
        "description": "API Management service name"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Represents the date and time when the associated event or record was"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The field refers to the HTTP header that provides information about the"
      },
      "Version": {
        "type": "string",
        "description": "API Management version"
      }
    }
  },
  "ASCAuditLogs": {
    "tableName": "ASCAuditLogs",
    "description": "Contains audit logs generated by Azure Sphere service and devices. Logs can be used for audit and troubleshooting.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CorrelationId": {
        "type": "string",
        "description": "A unique correlation ID for the log event."
      },
      "DurationMs": {
        "type": "int",
        "description": "The total duration (in milliseconds) for the log event."
      },
      "Identity": {
        "type": "dynamic",
        "description": "Identity of the user or application responsible for the log event."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Location": {
        "type": "string",
        "description": "The location and region where the log event was generated."
      },
      "OperationName": {
        "type": "string",
        "description": "The Azure Sphere operation associated with the log event."
      },
      "Properties": {
        "type": "dynamic",
        "description": "Additional properties related to the log event."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultDescription": {
        "type": "string",
        "description": "The result description for the log event."
      },
      "ResultType": {
        "type": "string",
        "description": "The result type (success, failure) for the log event."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp(UTC) when the log event was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "ASCDeviceEvents": {
    "tableName": "ASCDeviceEvents",
    "description": "Contains event details for operations generated by Azure Sphere devices. These logs contain information about event types, event categories, event classes, event descriptions etc. that can be used for monitoring and troubleshooting app crashes on devices.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CatalogId": {
        "type": "string",
        "description": "The catalog ID of the device where the log event was generated."
      },
      "CorrelationId": {
        "type": "string",
        "description": "A unique correlation ID for the log event."
      },
      "DeviceId": {
        "type": "string",
        "description": "The ID of the device where the log event was generated."
      },
      "DurationMs": {
        "type": "int",
        "description": "The total duration (in milliseconds) for the log event."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Location": {
        "type": "string",
        "description": "The location and region where the log event was generated."
      },
      "OperationName": {
        "type": "string",
        "description": "The Azure Sphere operation associated with the log event."
      },
      "Properties": {
        "type": "dynamic",
        "description": "Additional properties related to the log event."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultDescription": {
        "type": "string",
        "description": "The result description for the log event."
      },
      "ResultType": {
        "type": "string",
        "description": "The result type (success, failure) for the log event."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp(UTC) when the log event was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "ASRJobs": {
    "tableName": "ASRJobs",
    "description": "This table contains records of Azure Site Recovery (ASR) jobs such as failover, test failover, reprotection etc., with key details for monitoring and diagnostics, such as the replicated item information, duration, status, description and so on. Whenever an ASR job is completed (i.e., succeeded or failed), a corresponding record for the job is sent to this table. You can view history of ASR jobs by querying this table over a larger time range, provided your workspace has the required retention configured.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The category of the log."
      },
      "CorrelationId": {
        "type": "string",
        "description": "Correlation ID associated with the ASR job for debugging"
      },
      "DurationMs": {
        "type": "int",
        "description": "Duration of the ASR job."
      },
      "EndTime": {
        "type": "datetime",
        "description": "End time of the ASR job."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "JobUniqueId": {
        "type": "string",
        "description": "Unique ID of the ASR job."
      },
      "OperationName": {
        "type": "string",
        "description": "Type of ASR job, for example, Test failover."
      },
      "PolicyFriendlyName": {
        "type": "string",
        "description": "Friendly name of the replication policy applied to the"
      },
      "PolicyId": {
        "type": "string",
        "description": "ARM ID of the replication policy applied to the replicated item"
      },
      "PolicyUniqueId": {
        "type": "string",
        "description": "Unique ID of the replication policy applied to the replicated"
      },
      "ReplicatedItemFriendlyName": {
        "type": "string",
        "description": "Friendly name of replicated item associated with the ASR job"
      },
      "ReplicatedItemId": {
        "type": "string",
        "description": "ARM ID of the replicated item associated with the ASR job (if"
      },
      "ReplicatedItemUniqueId": {
        "type": "string",
        "description": "Unique ID of the replicated item associated with the ASR job (if"
      },
      "ReplicationScenario": {
        "type": "string",
        "description": "Field used to identify whether the replication is being done for"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "ResultDescription": {
        "type": "string",
        "description": "Result of the ASR job."
      },
      "SourceFriendlyName": {
        "type": "string",
        "description": "Friendly name of the resource on which the ASR job was"
      },
      "SourceResourceGroup": {
        "type": "string",
        "description": "Resource Group of the source."
      },
      "SourceResourceId": {
        "type": "string",
        "description": "ARM ID of the resource on which the ASR job was executed."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "SourceType": {
        "type": "string",
        "description": "Type of resource on which the ASR job was executed."
      },
      "StartTime": {
        "type": "datetime",
        "description": "Start time of the ASR job."
      },
      "Status": {
        "type": "string",
        "description": "Status of the ASR job."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "VaultLocation": {
        "type": "string",
        "description": "Location of the vault associated with the ASR job."
      },
      "VaultName": {
        "type": "string",
        "description": "Name of the vault associated with the ASR job."
      },
      "VaultType": {
        "type": "string",
        "description": "Type of the vault associated with the ASR job."
      },
      "Version": {
        "type": "string",
        "description": "The API version."
      }
    }
  },
  "ASRReplicatedItems": {
    "tableName": "ASRReplicatedItems",
    "description": "This table contains details of Azure Site Recovery (ASR) replicated items, such as associated vault, policy, replication health, failover readiness. etc. Data is pushed once a day to this table for all replicated items, to provide the latest information for each item.",
    "columns": {
      "ActiveLocation": {
        "type": "string",
        "description": "Current active location for the replicated item. If the item is"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The category of the log."
      },
      "DatasourceFriendlyName": {
        "type": "string",
        "description": "Friendly name of the datasource being replicated."
      },
      "DatasourceType": {
        "type": "string",
        "description": "ARM type of the resource configured for replication."
      },
      "DatasourceUniqueId": {
        "type": "string",
        "description": "Unique ID of the datasource being replicated."
      },
      "FailoverReadiness": {
        "type": "string",
        "description": "Denotes whether there are any configuration issues that"
      },
      "IRProgressPercentage": {
        "type": "int",
        "description": "Progress percentage of the initial replication phase for the"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "LastHeartbeat": {
        "type": "datetime",
        "description": "Time at which the ASR agent associated with the replicated"
      },
      "LastRpoCalculatedTime": {
        "type": "datetime",
        "description": "Time at which the RPO was last calculated by the ASR service"
      },
      "LastSuccessfulTestFailoverTime": {
        "type": "datetime",
        "description": "Time of the last successful faliover performed on the"
      },
      "MultiVMGroupId": {
        "type": "string",
        "description": "For scenarios where multi-VM consistency feature is enabled"
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation."
      },
      "OSFamily": {
        "type": "string",
        "description": "OS family of the resource being replicated."
      },
      "PolicyFriendlyName": {
        "type": "string",
        "description": "Friendly name of the replication policy applied to the"
      },
      "PolicyId": {
        "type": "string",
        "description": "ARM ID of the replication policy applied to the replicated"
      },
      "PolicyUniqueId": {
        "type": "string",
        "description": "Unique ID of the replication policy applied for the replicated"
      },
      "PrimaryFabricName": {
        "type": "string",
        "description": "Represents the source region of the replicated item. By"
      },
      "PrimaryFabricType": {
        "type": "string",
        "description": "Fabric type associated with the source region of the"
      },
      "ProtectionInfo": {
        "type": "string",
        "description": "Protection status of the replicated item."
      },
      "RecoveryFabricName": {
        "type": "string",
        "description": "Represents the target region of the replicated item. By"
      },
      "RecoveryFabricType": {
        "type": "string",
        "description": "Fabric type associated with the target region of the"
      },
      "RecoveryRegion": {
        "type": "string",
        "description": "Target region to which the resource is replicated."
      },
      "ReplicatedItemFriendlyName": {
        "type": "string",
        "description": "Friendly name of the resource being replicated."
      },
      "ReplicatedItemId": {
        "type": "string",
        "description": "ARM ID of the replicated item."
      },
      "ReplicatedItemUniqueId": {
        "type": "string",
        "description": "Unique ID of the replicated item."
      },
      "ReplicationHealthErrors": {
        "type": "string",
        "description": "List of issues that might be affecting the recovery point"
      },
      "ReplicationStatus": {
        "type": "string",
        "description": "Status of replication for the ASR replicated item."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "SourceResourceId": {
        "type": "string",
        "description": "ARM ID of the datasource being replicated."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "VaultLocation": {
        "type": "string",
        "description": "Location of the vault associated with the replicated item."
      },
      "VaultName": {
        "type": "string",
        "description": "Name of the vault associated with the replicated item."
      },
      "VaultType": {
        "type": "string",
        "description": "Type of the vault associated with the replicated item."
      },
      "Version": {
        "type": "string",
        "description": "The API version."
      }
    }
  },
  "ASRv2HealthEvents": {
    "tableName": "ASRv2HealthEvents",
    "description": "This table contains records of Azure Site Recovery v2 (ASRv2) health related events.",
    "columns": {
      "AffectedResourceId": {
        "type": "string",
        "description": "The affected resource Id."
      },
      "AffectedResourceName": {
        "type": "string",
        "description": "The affected resource name."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The category of the log."
      },
      "CorrelationId": {
        "type": "string",
        "description": "The correlation Id of the event."
      },
      "EventName": {
        "type": "string",
        "description": "The health event name."
      },
      "EventSeverity": {
        "type": "string",
        "description": "The health event severity."
      },
      "EventType": {
        "type": "string",
        "description": "The health event type."
      },
      "HealthErrors": {
        "type": "dynamic",
        "description": "The errors associated with the health event."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "LogId": {
        "type": "string",
        "description": "The event log Id for the health event."
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) when the log was generated."
      },
      "TimeOfOccurrence": {
        "type": "datetime",
        "description": "The time of occurrence of the event."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "Version": {
        "type": "string",
        "description": "The version for the event properties."
      }
    }
  },
  "ASRv2JobEvents": {
    "tableName": "ASRv2JobEvents",
    "description": "This table contains records of Azure Site Recovery v2 (ASRv2) jobs such as replication, migration, etc., with key details for monitoring and diagnostics, such as protected item's information, duration, status, description and so on. Whenever an ASRv2 job is completed (i.e., succeeded or failed), a corresponding record for the job is sent to this table. You can view history of ASRv2 jobs by querying this table over a larger time range, provided your workspace has the required retention configured.",
    "columns": {
      "AffectedObjectId": {
        "type": "string",
        "description": "The affected object Id."
      },
      "AffectedObjectName": {
        "type": "string",
        "description": "The affected object name."
      },
      "AffectedObjectType": {
        "type": "string",
        "description": "The affected object type."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The category of the log."
      },
      "CorrelationId": {
        "type": "string",
        "description": "The correlation Id of the event."
      },
      "EndTime": {
        "type": "datetime",
        "description": "The operation end time."
      },
      "HasErrors": {
        "type": "bool",
        "description": "Whether the operation has critical errors logged."
      },
      "HasInformation": {
        "type": "bool",
        "description": "Whether the operation has informational messages logged."
      },
      "HasWarnings": {
        "type": "bool",
        "description": "Whether the operation has warnings logged."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Message": {
        "type": "string",
        "description": "The description for the event."
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "StartTime": {
        "type": "datetime",
        "description": "The operation start time."
      },
      "State": {
        "type": "string",
        "description": "The operation state."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) when the log was generated."
      },
      "TimeTaken": {
        "type": "real",
        "description": "The duration of the operation in milliseconds."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "Version": {
        "type": "string",
        "description": "The version for the event properties."
      }
    }
  },
  "ASRv2ProtectedItems": {
    "tableName": "ASRv2ProtectedItems",
    "description": "This table contains records of Azure Site Recovery v2 (ASRv2) protected item related events.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The category of the log."
      },
      "CorrelationId": {
        "type": "string",
        "description": "The correlation Id of the event."
      },
      "FabricAgentId": {
        "type": "string",
        "description": "The fabric agent Id."
      },
      "FabricId": {
        "type": "string",
        "description": "The fabric Id."
      },
      "FabricObjectId": {
        "type": "string",
        "description": "The fabric object Id."
      },
      "FabricObjectName": {
        "type": "string",
        "description": "The fabric object name."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "LastSuccessfulPlannedFailoverTime": {
        "type": "datetime",
        "description": "The time of the last successful failover the protected"
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation."
      },
      "PolicyName": {
        "type": "string",
        "description": "The name of the replication policy."
      },
      "ProtectionState": {
        "type": "string",
        "description": "The current protection state."
      },
      "ProviderId": {
        "type": "string",
        "description": "The replication provider Id."
      },
      "ReplicationExtensionName": {
        "type": "string",
        "description": "The name of the replication extension."
      },
      "ReplicationHealth": {
        "type": "string",
        "description": "The health of the protected item."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "SourceFabricProviderId": {
        "type": "string",
        "description": "The source fabric provider Id."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TargetFabricAgentId": {
        "type": "string",
        "description": "The target fabric agent Id."
      },
      "TargetFabricId": {
        "type": "string",
        "description": "The target fabric Id."
      },
      "TargetFabricProviderId": {
        "type": "string",
        "description": "The target fabric provider Id."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "ASRv2ReplicationExtensions": {
    "tableName": "ASRv2ReplicationExtensions",
    "description": "This table contains records of Azure Site Recovery v2 (ASRv2) replication extension related events.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The category of the log."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation."
      },
      "ProvisioningState": {
        "type": "string",
        "description": "The provisioning state of the replication extension."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "ASRv2ReplicationPolicies": {
    "tableName": "ASRv2ReplicationPolicies",
    "description": "This table contains records of Azure Site Recovery v2 (ASRv2) replication policy related events.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The category of the log."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation."
      },
      "ProvisioningState": {
        "type": "string",
        "description": "The provisioning state of the replication policy."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "ASRv2ReplicationVaults": {
    "tableName": "ASRv2ReplicationVaults",
    "description": "This table contains records of Azure Site Recovery v2 (ASRv2) replication vault related events.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The category of the log."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Location": {
        "type": "string",
        "description": "The location of the replication vault."
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation."
      },
      "ProvisioningState": {
        "type": "string",
        "description": "The provisioning state of the replication vault."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ServiceResourceId": {
        "type": "string",
        "description": "The replication vault service resource Id."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "ASimAuditEventLogs": {
    "tableName": "ASimAuditEventLogs",
    "description": "Microsoft Sentinel normalized audit events table. Stores events associated with the audit trail of information systems and audit trail logs system configuration activities and policy changes. Such changes are often performed by system administrators, but can also be performed by users when configuring the settings of their own applications.",
    "columns": {
      "ActingAppId": {
        "type": "string",
        "description": "The ID of the application authorizing on behalf of the actor,"
      },
      "ActingAppName": {
        "type": "string",
        "description": "The name of the application authorizing on behalf of the actor,"
      },
      "ActingAppType": {
        "type": "string",
        "description": "The type of acting application."
      },
      "ActingOriginalAppType": {
        "type": "string",
        "description": "The acting application type as reported by the reporting device."
      },
      "ActorOriginalUserType": {
        "type": "string",
        "description": "The user type as reported by the reporting device."
      },
      "ActorScope": {
        "type": "string",
        "description": "The scope, such as Azure AD tenant, in which ActorUserId and"
      },
      "ActorScopeId": {
        "type": "string",
        "description": "The scope ID, such as Azure AD tenant ID, in which ActorUserId"
      },
      "ActorSessionId": {
        "type": "string",
        "description": "The unique ID of the sign-in session of the Actor."
      },
      "ActorUserAadId": {
        "type": "string",
        "description": "The Azure Active Directory ID of the actor."
      },
      "ActorUserId": {
        "type": "string",
        "description": "A machine-readable, alphanumeric, unique representation of the"
      },
      "ActorUserIdType": {
        "type": "string",
        "description": "The type of the ID stored in the ActorUserId field."
      },
      "ActorUsername": {
        "type": "string",
        "description": "The Actor's username, including domain information when"
      },
      "ActorUsernameType": {
        "type": "string",
        "description": "Specifies the type of the user name stored in the ActorUsername"
      },
      "ActorUserSid": {
        "type": "string",
        "description": "The Windows user ID (SIDs) of the actor."
      },
      "ActorUserType": {
        "type": "string",
        "description": "The type of the Actor."
      },
      "AdditionalFields": {
        "type": "dynamic",
        "description": "Additional information, represented using key/value pairs"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DvcAction": {
        "type": "string",
        "description": "For reporting security systems, the action taken by the system."
      },
      "DvcDescription": {
        "type": "string",
        "description": "A descriptive text associated with the device."
      },
      "DvcDomain": {
        "type": "string",
        "description": "The domain of the device reporting the event."
      },
      "DvcDomainType": {
        "type": "string",
        "description": "The type of DvcDomain."
      },
      "DvcFQDN": {
        "type": "string",
        "description": "The hostname of the device on which the event occurred or"
      },
      "DvcHostname": {
        "type": "string",
        "description": "The hostname of the device reporting the event."
      },
      "DvcId": {
        "type": "string",
        "description": "The unique ID of the device on which the event occurred or"
      },
      "DvcIdType": {
        "type": "string",
        "description": "The type of DvcId."
      },
      "DvcInterface": {
        "type": "string",
        "description": "The network interface on which data was captured."
      },
      "DvcIpAddr": {
        "type": "string",
        "description": "The IP Address of the device reporting the event."
      },
      "DvcMacAddr": {
        "type": "string",
        "description": "The MAC address of the device on which the event occurred or"
      },
      "DvcOriginalAction": {
        "type": "string",
        "description": "The original DvcAction as provided by the reporting device."
      },
      "DvcOs": {
        "type": "string",
        "description": "The operating system running on the device on which the event"
      },
      "DvcOsVersion": {
        "type": "string",
        "description": "The version of the operating system on the device on which the"
      },
      "DvcScope": {
        "type": "string",
        "description": "The cloud platform scope the device belongs to. DvcScope map"
      },
      "DvcScopeId": {
        "type": "string",
        "description": "The cloud platform scope ID the device belongs to. DvcScopeId"
      },
      "DvcZone": {
        "type": "string",
        "description": "The network on which the event occurred or which reported the"
      },
      "EventCount": {
        "type": "int",
        "description": "The number of events described by the record."
      },
      "EventEndTime": {
        "type": "datetime",
        "description": "The time in which the event ended. If the source supports"
      },
      "EventMessage": {
        "type": "string",
        "description": "A general message or description."
      },
      "EventOriginalResultDetails": {
        "type": "string",
        "description": "The original result details provided by the source."
      },
      "EventOriginalSeverity": {
        "type": "string",
        "description": "The original severity as provided by the reporting device."
      },
      "EventOriginalSubType": {
        "type": "string",
        "description": "The original event subtype or ID, if provided by the source."
      },
      "EventOriginalType": {
        "type": "string",
        "description": "The original event type or ID, if provided by the source."
      },
      "EventOriginalUid": {
        "type": "string",
        "description": "A unique ID of the original record, if provided by the source."
      },
      "EventOwner": {
        "type": "string",
        "description": "The owner of the event, which is usually the department or"
      },
      "EventProduct": {
        "type": "string",
        "description": "The product generating the event."
      },
      "EventProductVersion": {
        "type": "string",
        "description": "The version of the product generating the event."
      },
      "EventReportUrl": {
        "type": "string",
        "description": "A URL provided in the event for a resource that provides more"
      },
      "EventResult": {
        "type": "string",
        "description": "The outcome of the event, represented by one of the following"
      },
      "EventResultDetails": {
        "type": "string",
        "description": "The details associated with the event result. This field is typically"
      },
      "EventSchemaVersion": {
        "type": "string",
        "description": "The version of the schema."
      },
      "EventSeverity": {
        "type": "string",
        "description": "The severity of the event. Valid values are: Informational, Low,"
      },
      "EventStartTime": {
        "type": "datetime",
        "description": "The time in which the event started. If the source supports"
      },
      "EventSubType": {
        "type": "string",
        "description": "The sign-in type for example System, Interactive,"
      },
      "EventType": {
        "type": "string",
        "description": "Describes the operation reported by the record"
      },
      "EventVendor": {
        "type": "string",
        "description": "The vendor of the product generating the event."
      },
      "HttpUserAgent": {
        "type": "string",
        "description": "When authentication is performed over HTTP or HTTPS, this"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "NewValue": {
        "type": "string",
        "description": "The new value of Object after the operation was performed."
      },
      "Object": {
        "type": "string",
        "description": "The name of the object on which the operation identified by"
      },
      "ObjectId": {
        "type": "string",
        "description": "The name of the object on which the operation identified by"
      },
      "ObjectType": {
        "type": "string",
        "description": "The type of Object."
      },
      "OldValue": {
        "type": "string",
        "description": "The old value of Object prior to the operation."
      },
      "Operation": {
        "type": "string",
        "description": "The operation audited as reported by the reporting device."
      },
      "OriginalObjectType": {
        "type": "string",
        "description": "The object type as reported by the reporting device."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "RuleName": {
        "type": "string",
        "description": "The name or ID of the rule associated with the inspection results."
      },
      "RuleNumber": {
        "type": "int",
        "description": "The number of the rule associated with the inspection results."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "SrcDescription": {
        "type": "string",
        "description": "A descriptive text associated with the source device."
      },
      "SrcDeviceType": {
        "type": "string",
        "description": "The type of the source device."
      },
      "SrcDomain": {
        "type": "string",
        "description": "The domain of the source device."
      },
      "SrcDomainType": {
        "type": "string",
        "description": "The type of SrcDomain."
      },
      "SrcDvcId": {
        "type": "string",
        "description": "The ID of the source device."
      },
      "SrcDvcIdType": {
        "type": "string",
        "description": "The type of SrcDvcId."
      },
      "SrcDvcScope": {
        "type": "string",
        "description": "The cloud platform scope the source device belongs to."
      },
      "SrcDvcScopeId": {
        "type": "string",
        "description": "The cloud platform scope ID the source device belongs to."
      },
      "SrcFQDN": {
        "type": "string",
        "description": "The source device hostname, including domain information when"
      },
      "SrcGeoCity": {
        "type": "string",
        "description": "The city associated with the source IP address."
      },
      "SrcGeoCountry": {
        "type": "string",
        "description": "The country associated with the source IP address."
      },
      "SrcGeoLatitude": {
        "type": "real",
        "description": "The latitude of the geographical coordinate associated with the"
      },
      "SrcGeoLongitude": {
        "type": "real",
        "description": "The longitude of the geographical coordinate associated with the"
      },
      "SrcGeoRegion": {
        "type": "string",
        "description": "The region within a country associated with the source IP"
      },
      "SrcHostname": {
        "type": "string",
        "description": "The source device hostname, excluding domain information."
      },
      "SrcIpAddr": {
        "type": "string",
        "description": "The IP address of the source device."
      },
      "SrcOriginalRiskLevel": {
        "type": "string",
        "description": "The risk level associaeted with the identified Source as reported"
      },
      "SrcPortNumber": {
        "type": "int",
        "description": "The IP port from which the connection originated."
      },
      "SrcRiskLevel": {
        "type": "int",
        "description": "The risk level associated with the identified Source."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TargetAppId": {
        "type": "string",
        "description": "The ID of the application to which the authorization is required,"
      },
      "TargetAppName": {
        "type": "string",
        "description": "The name of the application to which the authorization is"
      },
      "TargetAppType": {
        "type": "string",
        "description": "The type of the application authorizing on behalf of the Actor."
      },
      "TargetDescription": {
        "type": "string",
        "description": "A descriptive text associated with the target device."
      },
      "TargetDeviceType": {
        "type": "string",
        "description": "The type of the target device."
      },
      "TargetDomain": {
        "type": "string",
        "description": "The domain of the target device."
      },
      "TargetDomainType": {
        "type": "string",
        "description": "The type of TargetDomain."
      },
      "TargetDvcId": {
        "type": "string",
        "description": "The ID of the target device."
      },
      "TargetDvcIdType": {
        "type": "string",
        "description": "The type of TargetDvcId."
      },
      "TargetDvcOs": {
        "type": "string",
        "description": "The OS of the target device."
      },
      "TargetDvcScope": {
        "type": "string",
        "description": "The cloud platform scope the target device belongs to."
      },
      "TargetDvcScopeId": {
        "type": "string",
        "description": "The cloud platform scope ID the target device belongs to."
      },
      "TargetFQDN": {
        "type": "string",
        "description": "The target device hostname, including domain information when"
      },
      "TargetGeoCity": {
        "type": "string",
        "description": "The city associated with the target IP address."
      },
      "TargetGeoCountry": {
        "type": "string",
        "description": "The country associated with the target IP address."
      },
      "TargetGeoLatitude": {
        "type": "real",
        "description": "The latitude of the geographical coordinate associated with the"
      },
      "TargetGeoLongitude": {
        "type": "real",
        "description": "The longitude of the geographical coordinate associated with the"
      },
      "TargetGeoRegion": {
        "type": "string",
        "description": "The region within a country associated with the target IP address."
      },
      "TargetHostname": {
        "type": "string",
        "description": "The target device hostname, excluding domain information."
      },
      "TargetIpAddr": {
        "type": "string",
        "description": "The IP address of the target device."
      },
      "TargetOriginalAppType": {
        "type": "string",
        "description": "The target application type as reported by the reporting device."
      },
      "TargetOriginalRiskLevel": {
        "type": "string",
        "description": "The risk level associated with the target, as reported by the"
      },
      "TargetPortNumber": {
        "type": "int",
        "description": "The port of the target device."
      },
      "TargetRiskLevel": {
        "type": "int",
        "description": "The risk level associated with the target."
      },
      "TargetUrl": {
        "type": "string",
        "description": "A URL associated with the target application."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "ThreatCategory": {
        "type": "string",
        "description": "The category of the threat or malware identified in audit activity."
      },
      "ThreatConfidence": {
        "type": "int",
        "description": "The confidence level of the threat identified, normalized to a"
      },
      "ThreatField": {
        "type": "string",
        "description": "The field for which a threat was identified."
      },
      "ThreatFirstReportedTime": {
        "type": "datetime",
        "description": "The first time the IP address or domain were identified as a"
      },
      "ThreatId": {
        "type": "string",
        "description": "The ID of the threat or malware identified in the audit activity."
      },
      "ThreatIpAddr": {
        "type": "string",
        "description": "An IP address for which a threat was identified."
      },
      "ThreatIsActive": {
        "type": "bool",
        "description": "True if the threat identified is considered an active threat."
      },
      "ThreatLastReportedTime": {
        "type": "datetime",
        "description": "The last time the IP address or domain were identified as a threat."
      },
      "ThreatName": {
        "type": "string",
        "description": "The name of the threat or malware identified in the audit activity."
      },
      "ThreatOriginalConfidence": {
        "type": "string",
        "description": "The original confidence level of the threat identified, as reported"
      },
      "ThreatOriginalRiskLevel": {
        "type": "string",
        "description": "The risk level as reported by the reporting device."
      },
      "ThreatRiskLevel": {
        "type": "int",
        "description": "The risk level associated with the identified threat. The level"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) reflecting the time in which the event was"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "ValueType": {
        "type": "string",
        "description": "The type of the old and new values."
      },
      "LogonMethod": {
        "type": "string",
        "description": "The method used to perform authentication."
      },
      "LogonProtocol": {
        "type": "string",
        "description": "The protocol used to perform authentication."
      },
      "SrcDvcOs": {
        "type": "string",
        "description": "The OS of the source device."
      },
      "SrcIsp": {
        "type": "string",
        "description": "The Internet Service Provider (ISP) used by the source device to"
      },
      "TargetOriginalUserType": {
        "type": "string",
        "description": "The user type as reported by the reporting device."
      },
      "TargetSessionId": {
        "type": "string",
        "description": "The unique ID of the sign-in session of the Target actor."
      },
      "TargetUserId": {
        "type": "string",
        "description": "A machine-readable, alphanumeric, unique representation of the"
      },
      "TargetUserIdType": {
        "type": "string",
        "description": "The type of the ID stored in the TargetUserId field."
      },
      "TargetUsername": {
        "type": "string",
        "description": "The Target actor's username, including domain information when"
      },
      "TargetUsernameType": {
        "type": "string",
        "description": "The type of the Target actor's username specified in"
      },
      "TargetUserScope": {
        "type": "string",
        "description": "The scope, such as Azure AD tenant, in which TargetUserId and"
      },
      "TargetUserScopeId": {
        "type": "string",
        "description": "The scope ID, such as Azure AD tenant ID, in which TargetUserId"
      },
      "TargetUserType": {
        "type": "string",
        "description": "The type of the Target actor."
      }
    }
  },
  "ASimDhcpEventLogs": {
    "tableName": "ASimDhcpEventLogs",
    "description": "The ASIM DHCP schema represents DHCP server activity, including serving requests for DHCP IP address leased from client systems and updating a DNS server with the leases granted.",
    "columns": {
      "AdditionalFields": {
        "type": "dynamic",
        "description": "Additional information, represented using key/value pairs"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DhcpCircuitId": {
        "type": "string",
        "description": "The DHCP circuit ID, as defined by RFC3046."
      },
      "DhcpLeaseDuration": {
        "type": "int",
        "description": "The length of the lease granted to a client, in seconds."
      },
      "DhcpSessionDuration": {
        "type": "int",
        "description": "The amount of time, in milliseconds, for the completion of the"
      },
      "DhcpSessionId": {
        "type": "string",
        "description": "The session identifier as reported by the reporting device. For the"
      },
      "DhcpSrcDHCId": {
        "type": "string",
        "description": "The DHCP client ID, as defined by RFC4701."
      },
      "DhcpSubscriberId": {
        "type": "string",
        "description": "The DHCP subscriber ID, as defined by RFC3993."
      },
      "DhcpUserClass": {
        "type": "string",
        "description": "The DHCP User Class, as defined by RFC3004."
      },
      "DhcpUserClassId": {
        "type": "string",
        "description": "The DHCP User Class Id, as defined by RFC3004."
      },
      "DhcpVendorClass": {
        "type": "string",
        "description": "The DHCP Vendor Class, as defined by RFC3925."
      },
      "DhcpVendorClassId": {
        "type": "string",
        "description": "The DHCP Vendor Class Id, as defined by RFC3925."
      },
      "DvcAction": {
        "type": "string",
        "description": "For reporting security systems, the action taken by the system, if"
      },
      "DvcDescription": {
        "type": "string",
        "description": "A descriptive text associated with the device."
      },
      "DvcDomain": {
        "type": "string",
        "description": "The domain of the device on which the event occurred or which"
      },
      "DvcDomainType": {
        "type": "string",
        "description": "The type of DvcDomain."
      },
      "DvcFQDN": {
        "type": "string",
        "description": "The hostname of the device on which the event occurred or"
      },
      "DvcHostname": {
        "type": "string",
        "description": "The hostname of the device on which the event occurred or"
      },
      "DvcId": {
        "type": "string",
        "description": "The unique ID of the device on which the event occurred or"
      },
      "DvcIdType": {
        "type": "string",
        "description": "The type of DvcId."
      },
      "DvcInterface": {
        "type": "string",
        "description": "The network interface on which data was captured. This field is"
      },
      "an": {
        "type": "int",
        "description": "ermediate or tap device."
      },
      "DvcIpAddr": {
        "type": "string",
        "description": "The IP address of the device on which the event occurred or"
      },
      "DvcMacAddr": {
        "type": "string",
        "description": "The MAC address of the device on which the event occurred or"
      },
      "DvcOriginalAction": {
        "type": "string",
        "description": "The original DvcAction as provided by the reporting device."
      },
      "DvcOs": {
        "type": "string",
        "description": "The operating system running on the device on which the event"
      },
      "DvcOsVersion": {
        "type": "string",
        "description": "The version of the operating system on the device on which the"
      },
      "DvcScope": {
        "type": "string",
        "description": "The cloud platform scope the device belongs to. DvcScope map"
      },
      "DvcScopeId": {
        "type": "string",
        "description": "The cloud platform scope ID the device belongs to. DvcScopeId"
      },
      "DvcZone": {
        "type": "string",
        "description": "The network on which the event occurred or which reported the"
      },
      "EventCount": {
        "type": "int",
        "description": "The number of events described by the record. This value is used"
      },
      "EventEndTime": {
        "type": "datetime",
        "description": "The time in which the event ended. If the source supports"
      },
      "EventMessage": {
        "type": "string",
        "description": "A general message or description, either included in or generated"
      },
      "EventOriginalResultDetails": {
        "type": "string",
        "description": "The original result details provided by the source. This value is"
      },
      "EventOriginalSeverity": {
        "type": "string",
        "description": "The original severity as provided by the reporting device. This"
      },
      "EventOriginalSubType": {
        "type": "string",
        "description": "The original event subtype or ID, if provided by the source."
      },
      "EventOriginalType": {
        "type": "string",
        "description": "The original event type or ID, if provided by the source."
      },
      "EventOriginalUid": {
        "type": "string",
        "description": "A unique ID of the original record, if provided by the source."
      },
      "EventOwner": {
        "type": "string",
        "description": "The owner of the event, which is usually the department or"
      },
      "EventProduct": {
        "type": "string",
        "description": "The product generating the event. The value should be one of"
      },
      "EventProductVersion": {
        "type": "string",
        "description": "The version of the product generating the event."
      },
      "EventReportUrl": {
        "type": "string",
        "description": "A URL provided in the event for a resource that provides more"
      },
      "EventResult": {
        "type": "string",
        "description": "The outcome of the event, represented by one of the following"
      },
      "EventResultDetails": {
        "type": "string",
        "description": "Reason or details for the result reported in the EventResult field."
      },
      "EventSchema": {
        "type": "string",
        "description": "The schema the event is normalized to. Each schema documents"
      },
      "EventSchemaVersion": {
        "type": "string",
        "description": "The version of the schema. Each schema documents its current"
      },
      "EventSeverity": {
        "type": "string",
        "description": "The severity of the event."
      },
      "EventStartTime": {
        "type": "datetime",
        "description": "The time in which the event started. If the source supports"
      },
      "EventSubType": {
        "type": "string",
        "description": "Describes a subdivision of the operation reported in the"
      },
      "EventType": {
        "type": "string",
        "description": "Describes the operation reported by the record."
      },
      "EventVendor": {
        "type": "string",
        "description": "The vendor of the product generating the event. The value"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "RequestedIpAddr": {
        "type": "string",
        "description": "The IP address requested by the DHCP client, when available."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "RuleName": {
        "type": "string",
        "description": "The name or ID of the rule by associated with the inspection"
      },
      "RuleNumber": {
        "type": "int",
        "description": "The number of the rule associated with the inspection results."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "SrcDescription": {
        "type": "string",
        "description": "A descriptive text associated with the device."
      },
      "SrcDeviceType": {
        "type": "string",
        "description": "The type of the device."
      },
      "SrcDomain": {
        "type": "string",
        "description": "The domain of the device."
      },
      "SrcDomainType": {
        "type": "string",
        "description": "The type of the domain."
      },
      "SrcDvcId": {
        "type": "string",
        "description": "The ID of the device."
      },
      "SrcDvcIdType": {
        "type": "string",
        "description": "The type of the DvcId."
      },
      "SrcDvcScope": {
        "type": "string",
        "description": "The cloud platform scope the device belongs to."
      },
      "SrcDvcScopeId": {
        "type": "string",
        "description": "The cloud platform scope ID the device belongs to."
      },
      "SrcFQDN": {
        "type": "string",
        "description": "The device hostname, including domain information when"
      },
      "SrcGeoCity": {
        "type": "string",
        "description": "The city associated with the source IP address."
      },
      "SrcGeoCountry": {
        "type": "string",
        "description": "The country associated with the source IP address."
      },
      "SrcGeoLatitude": {
        "type": "real",
        "description": "The latitude of the geographical coordinate associated with the"
      },
      "SrcGeoLongitude": {
        "type": "real",
        "description": "The longitude of the geographical coordinate associated with the"
      },
      "SrcGeoRegion": {
        "type": "string",
        "description": "The region within a country associated with the source IP"
      },
      "SrcHostname": {
        "type": "string",
        "description": "The device hostname, excluding domain information."
      },
      "SrcIpAddr": {
        "type": "string",
        "description": "The IP address of the source device."
      },
      "SrcMacAddr": {
        "type": "string",
        "description": "The MAC address of the network interface from which the"
      },
      "SrcOriginalRiskLevel": {
        "type": "string",
        "description": "The risk level associaeted with the identified Source as reported"
      },
      "SrcOriginalUserType": {
        "type": "string",
        "description": "The original source user type, if provided by the source."
      },
      "SrcPortNumber": {
        "type": "int",
        "description": "The IP port on which the device communicated, if applicable."
      },
      "SrcRiskLevel": {
        "type": "int",
        "description": "The risk level associated with the identified Source."
      },
      "SrcUserId": {
        "type": "string",
        "description": "A machine-readable, alphanumeric, unique representation of the"
      },
      "SrcUserIdType": {
        "type": "string",
        "description": "The type of SrcUserId."
      },
      "SrcUsername": {
        "type": "string",
        "description": "The user's username, including domain information when"
      },
      "SrcUsernameType": {
        "type": "string",
        "description": "The type of username."
      },
      "SrcUserScope": {
        "type": "string",
        "description": "The type of username."
      },
      "SrcUserScopeId": {
        "type": "string",
        "description": "The scope ID, such as Azure AD tenant ID, in which UserId and"
      },
      "SrcUserSessionId": {
        "type": "string",
        "description": "The unique ID of the sign-in session of the user."
      },
      "SrcUserType": {
        "type": "string",
        "description": "The type of user"
      },
      "SrcUserUid": {
        "type": "string",
        "description": "The Unix or Linux user ID of the user."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "ThreatCategory": {
        "type": "string",
        "description": "The category of the threat or malware identified in activity."
      },
      "ThreatConfidence": {
        "type": "int",
        "description": "The confidence level of the threat identified, normalized to a"
      },
      "ThreatField": {
        "type": "string",
        "description": "The field for which a threat was identified."
      },
      "ThreatFirstReportedTime": {
        "type": "datetime",
        "description": "The first time the IP address or domain were identified as a"
      },
      "ThreatId": {
        "type": "string",
        "description": "The ID of the threat or malware identified in the activity."
      },
      "ThreatIsActive": {
        "type": "bool",
        "description": "True ID the threat identified is considered an active threat."
      },
      "ThreatLastReportedTime": {
        "type": "datetime",
        "description": "The last time the IP address or domain were identified as a threat."
      },
      "ThreatName": {
        "type": "string",
        "description": "The name of the threat or malware identified in the activity."
      },
      "ThreatOriginalConfidence": {
        "type": "string",
        "description": "The original confidence level of the threat identified, as reported"
      },
      "ThreatOriginalRiskLevel": {
        "type": "string",
        "description": "The risk level as reported by the reporting device."
      },
      "ThreatRiskLevel": {
        "type": "int",
        "description": "The risk level associated with the identified threat. The level"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) reflecting the time in which the event was"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "ASimDnsActivityLogs": {
    "tableName": "ASimDnsActivityLogs",
    "description": "The ASim DNS activity schema represents DNS protocol activity, which may be logged either by a DNS server or by a device sending DNS requests to a DNS server. The DNS protocol activity includes DNS queries, DNS server updates, and DNS bulk data transfers. Since the schema represents protocol activity, it is governed by RFCs and officially assigned parameter lists. The DNS activity schema does not represent DNS server audit events.",
    "columns": {
      "AdditionalFields": {
        "type": "dynamic",
        "description": "Additional information, represented using key/value pairs"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DnsFlags": {
        "type": "string",
        "description": "The DNS request flags, as provided by the reporting device. The"
      },
      "DnsFlagsAuthenticated": {
        "type": "bool",
        "description": "The DNS authenticated answer flag, which is related to DNSSEC,"
      },
      "DnsFlagsAuthoritative": {
        "type": "bool",
        "description": "The DNS authoritative answer flag indicates whether the"
      },
      "DnsFlagsCheckingDisabled": {
        "type": "bool",
        "description": "The DNS CD flag, which is related to DNSSEC, indicates in a"
      },
      "DnsFlagsRecursionAvailable": {
        "type": "bool",
        "description": "The DNS RA flag indicates in a response that that server"
      },
      "DnsFlagsRecursionDesired": {
        "type": "bool",
        "description": "The DNS recursion desired flag indicates in a request that that"
      },
      "DnsFlagsTruncated": {
        "type": "bool",
        "description": "The DNS TC flag indicates that a response was truncates as it"
      },
      "DnsFlagsZ": {
        "type": "bool",
        "description": "The DNS Z flag is a deprecated DNS flag, which might be"
      },
      "DnsNetworkDuration": {
        "type": "int",
        "description": "The amount of time, in milliseconds, for the completion of DNS"
      },
      "DnsQuery": {
        "type": "string",
        "description": "The domain that needs to be resolved."
      },
      "DnsQueryClass": {
        "type": "int",
        "description": "The DNS class ID as defined by the Internet Assigned Numbers"
      },
      "DnsQueryClassName": {
        "type": "string",
        "description": "The DNS class name as defined by the Internet Assigned"
      },
      "DnsQueryType": {
        "type": "int",
        "description": "The DNS resource record type codes as defined by the Internet"
      },
      "DnsQueryTypeName": {
        "type": "string",
        "description": "The DNS resource record type name as defined by the Internet"
      },
      "DnsResponseCode": {
        "type": "int",
        "description": "The DNS numerical response code as defined by the Internet"
      },
      "DnsResponseIpCity": {
        "type": "string",
        "description": "The city associated with the response IP address."
      },
      "DnsResponseIpCountry": {
        "type": "string",
        "description": "The country associated with the response IP address."
      },
      "DnsResponseIpLatitude": {
        "type": "real",
        "description": "The Latitude of the geographical coordinate associated with the"
      },
      "DnsResponseIpLongitude": {
        "type": "real",
        "description": "The longitude of the geographical coordinate associated with"
      },
      "DnsResponseIpRegion": {
        "type": "string",
        "description": "The region, or state, within a country, associated with the source"
      },
      "DnsResponseName": {
        "type": "string",
        "description": "The content of the response, as included in the record. The"
      },
      "DnsSessionId": {
        "type": "string",
        "description": "The DNS session identifier as reported by the reporting device."
      },
      "Dst": {
        "type": "string",
        "description": "A unique identifier of the server that received the DNS request."
      },
      "DstDescription": {
        "type": "string",
        "description": "A descriptive text associated with the destination."
      },
      "DstDeviceType": {
        "type": "string",
        "description": "The type of the destination device."
      },
      "DstDomain": {
        "type": "string",
        "description": "The domain of the destination device."
      },
      "DstDomainType": {
        "type": "string",
        "description": "The type of DstDomain."
      },
      "DstDvcId": {
        "type": "string",
        "description": "The ID of the destination device."
      },
      "DstDvcIdType": {
        "type": "string",
        "description": "The type of DstDvcId."
      },
      "DstDvcScope": {
        "type": "string",
        "description": "The cloud platform scope the destination device belongs to."
      },
      "DstDvcScopeId": {
        "type": "string",
        "description": "The cloud platform scope ID the destination device belongs to."
      },
      "DstFQDN": {
        "type": "string",
        "description": "The destination device hostname, including domain information"
      },
      "DstGeoCity": {
        "type": "string",
        "description": "The city associated with the destination IP address."
      },
      "DstGeoCountry": {
        "type": "string",
        "description": "The country associated with the destination IP address."
      },
      "DstGeoLatitude": {
        "type": "real",
        "description": "The latitude of the geographical coordinate associated with the"
      },
      "DstGeoLongitude": {
        "type": "real",
        "description": "The longitude of the geographical coordinate associated with"
      },
      "DstGeoRegion": {
        "type": "string",
        "description": "The region, or state, within a country, associated with the"
      },
      "DstHostname": {
        "type": "string",
        "description": "The destination device hostname, excluding domain"
      },
      "DstIpAddr": {
        "type": "string",
        "description": "The IP address of the server receiving the DNS request. For a"
      },
      "DstOriginalRiskLevel": {
        "type": "string",
        "description": "The risk level associated with the destination device as reported"
      },
      "DstPortNumber": {
        "type": "int",
        "description": "Destination Port number."
      },
      "DstRiskLevel": {
        "type": "int",
        "description": "The risk level associated with the destination device."
      },
      "Dvc": {
        "type": "string",
        "description": "A unique identifier of the device reporting the event. The"
      },
      "DvcAction": {
        "type": "string",
        "description": "The action taken by the the reporting device on the request,"
      },
      "DvcDescription": {
        "type": "string",
        "description": "A descriptive text associated with the device. For example:"
      },
      "DvcDomain": {
        "type": "string",
        "description": "The domain of the device reporting the event."
      },
      "DvcDomainType": {
        "type": "string",
        "description": "The type of DvcDomain. Possible values include \"Windows\" and"
      },
      "DvcFQDN": {
        "type": "string",
        "description": "The fully qualified hostname, including domain information, of"
      },
      "DvcHostname": {
        "type": "string",
        "description": "The hostname of the device reporting the event."
      },
      "DvcId": {
        "type": "string",
        "description": "The unique ID of the device reporting the event."
      },
      "DvcIdType": {
        "type": "string",
        "description": "The type of DvcId."
      },
      "DvcInterface": {
        "type": "string",
        "description": "The network interface on which data was captured. This field is"
      },
      "DvcIpAddr": {
        "type": "string",
        "description": "The IP Address of the device reporting the event."
      },
      "DvcMacAddr": {
        "type": "string",
        "description": "The MAC address of the device reporting the event."
      },
      "DvcOriginalAction": {
        "type": "string",
        "description": "The original DvcAction as provided by the reporting device."
      },
      "DvcOs": {
        "type": "string",
        "description": "The operating system running on the device reporting the"
      },
      "DvcOsVersion": {
        "type": "string",
        "description": "The version of the operating system on the device reporting the"
      },
      "DvcScope": {
        "type": "string",
        "description": "The cloud platform scope the device belongs to. DvcScope map"
      },
      "DvcScopeId": {
        "type": "string",
        "description": "The cloud platform scope ID the device belongs to. DvcScopeId"
      },
      "DvcZone": {
        "type": "string",
        "description": "The network segment of the device reporting the event."
      },
      "EventCount": {
        "type": "int",
        "description": "The number of events described by the record. This value is"
      },
      "EventEndTime": {
        "type": "datetime",
        "description": "The time at which the event ended. If the source supports"
      },
      "EventMessage": {
        "type": "string",
        "description": "A general message or description."
      },
      "EventOriginalSeverity": {
        "type": "string",
        "description": "The original severity as provided by the reporting device. This"
      },
      "EventOriginalType": {
        "type": "string",
        "description": "The original event type or ID, for example, the original Windows"
      },
      "EventOriginalUid": {
        "type": "string",
        "description": "A unique ID of the original record."
      },
      "EventOwner": {
        "type": "string",
        "description": "The owner of the event, which is usually the department or"
      },
      "EventProduct": {
        "type": "string",
        "description": "The product generating the event."
      },
      "EventProductVersion": {
        "type": "string",
        "description": "The version of the product generating the event."
      },
      "EventReportUrl": {
        "type": "string",
        "description": "A URL of a resource that provides additional information about"
      },
      "EventResult": {
        "type": "string",
        "description": "The outcome of the event, represented by one of the following"
      },
      "EventResultDetails": {
        "type": "string",
        "description": "The DNS response code as defined by the Internet Assigned"
      },
      "EventSchemaVersion": {
        "type": "string",
        "description": "The version of the schema."
      },
      "EventSeverity": {
        "type": "string",
        "description": "The severity of the event. Valid values are: Informational, Low,"
      },
      "EventStartTime": {
        "type": "datetime",
        "description": "The time at which the event started. If the source supports"
      },
      "EventSubType": {
        "type": "string",
        "description": "Either request or response."
      },
      "EventType": {
        "type": "string",
        "description": "Indicates the operation reported by the record. For DNS activity"
      },
      "EventVendor": {
        "type": "string",
        "description": "The vendor of the product generating the event."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable"
      },
      "NetworkProtocol": {
        "type": "string",
        "description": "The transport protocol used by the network resolution event."
      },
      "NetworkProtocolVersion": {
        "type": "string",
        "description": "The version of the network protocol. Typically used to"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "RuleName": {
        "type": "string",
        "description": "The name or ID of the rule by associated with the inspection"
      },
      "RuleNumber": {
        "type": "int",
        "description": "The number of the rule associated with the inspection results."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "Src": {
        "type": "string",
        "description": "A unique identifier of the source device."
      },
      "SrcDescription": {
        "type": "string",
        "description": "The number of the rule associated with the inspection results."
      },
      "SrcDeviceType": {
        "type": "string",
        "description": "The type of the source device."
      },
      "SrcDomain": {
        "type": "string",
        "description": "The domain of the source device."
      },
      "SrcDomainType": {
        "type": "string",
        "description": "The type of SrcDomain."
      },
      "SrcDvcId": {
        "type": "string",
        "description": "The ID of the source device."
      },
      "SrcDvcIdType": {
        "type": "string",
        "description": "The type of SrcDvcId."
      },
      "SrcDvcScope": {
        "type": "string",
        "description": "The cloud platform scope the source device belongs to."
      },
      "SrcDvcScopeId": {
        "type": "string",
        "description": "The cloud platform scope ID the source device belongs to."
      },
      "SrcFQDN": {
        "type": "string",
        "description": "The source device hostname, including domain information."
      },
      "SrcGeoCity": {
        "type": "string",
        "description": "The city associated with the source IP address."
      },
      "SrcGeoCountry": {
        "type": "string",
        "description": "The country associated with the source IP address."
      },
      "SrcGeoLatitude": {
        "type": "real",
        "description": "The latitude of the geographical coordinate associated with the"
      },
      "SrcGeoLongitude": {
        "type": "real",
        "description": "The longitude of the geographical coordinate associated with"
      },
      "SrcGeoRegion": {
        "type": "string",
        "description": "The region, or state, within a country, associated with the source"
      },
      "SrcHostname": {
        "type": "string",
        "description": "The source device hostname, excluding domain information."
      },
      "SrcIpAddr": {
        "type": "string",
        "description": "The IP address of the client sending the DNS request. For a"
      },
      "SrcOriginalRiskLevel": {
        "type": "string",
        "description": "The risk level associated with the source device as reported by"
      },
      "SrcOriginalUserType": {
        "type": "string",
        "description": "The original source user type, as provided by the source."
      },
      "SrcPortNumber": {
        "type": "int",
        "description": "Source port of the DNS query."
      },
      "SrcProcessGuid": {
        "type": "string",
        "description": "A generated unique identifier (GUID) of the process that"
      },
      "SrcProcessId": {
        "type": "string",
        "description": "The process ID (PID) of the process that initiated the DNS"
      },
      "SrcProcessName": {
        "type": "string",
        "description": "The name of the process that initiated the DNS request."
      },
      "SrcRiskLevel": {
        "type": "int",
        "description": "The risk level associated with the source device."
      },
      "SrcUserId": {
        "type": "string",
        "description": "A machine-readable, alphanumeric, unique representation of"
      },
      "SrcUserIdType": {
        "type": "string",
        "description": "The type of the ID stored in the SrcUserId field."
      },
      "SrcUsername": {
        "type": "string",
        "description": "The Source username, including domain information when"
      },
      "SrcUsernameType": {
        "type": "string",
        "description": "The type of the username stored in the SrcUsername field."
      },
      "SrcUserScope": {
        "type": "string",
        "description": "The scope, such as Azure AD tenant, in which SrcUserId and"
      },
      "SrcUserScopeId": {
        "type": "string",
        "description": "The ID of the scope, such as Azure AD tenant, in which"
      },
      "SrcUserSessionId": {
        "type": "string",
        "description": "The unique ID of the sign-in session of the source user."
      },
      "SrcUserType": {
        "type": "string",
        "description": "The type of the source user."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "ThreatCategory": {
        "type": "string",
        "description": "If a DNS event source also provides DNS security, it may also"
      },
      "ThreatConfidence": {
        "type": "int",
        "description": "The confidence level of the threat identified, normalized to a"
      },
      "ThreatField": {
        "type": "string",
        "description": "The field for which a threat was identified. The value is either"
      },
      "ThreatFirstReportedTime": {
        "type": "string",
        "description": "The first time the IP address or domain were identified as a"
      },
      "ThreatFirstReportedTime_d": {
        "type": "datetime",
        "description": "The first time the IP address or domain were identified as a"
      },
      "ThreatId": {
        "type": "string",
        "description": "The ID of the threat or malware identified in the web session."
      },
      "ThreatIpAddr": {
        "type": "string",
        "description": "An IP address for which a threat was identified. The field"
      },
      "ThreatIsActive": {
        "type": "bool",
        "description": "True ID the threat identified is considered an active threat."
      },
      "ThreatLastReportedTime": {
        "type": "string",
        "description": "The last time the IP address or domain were identified as a"
      },
      "ThreatLastReportedTime_d": {
        "type": "datetime",
        "description": "The last time the IP address or domain were identified as a"
      },
      "ThreatName": {
        "type": "string",
        "description": "The name of the threat identified, as reported by the reporting"
      },
      "ThreatOriginalConfidence": {
        "type": "string",
        "description": "The original confidence level of the threat identified, as"
      },
      "ThreatOriginalRiskLevel": {
        "type": "int",
        "description": "The original risk level associated with the threat identified, as"
      },
      "ThreatOriginalRiskLevel_s": {
        "type": "string",
        "description": "The risk level associated with the threat identified, normalized"
      },
      "ThreatRiskLevel": {
        "type": "int",
        "description": "The risk level associated with the threat identified, normalized"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) reflecting the time in which the event was"
      },
      "TransactionIdHex": {
        "type": "string",
        "description": "The DNS unique hex transaction ID."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UrlCategory": {
        "type": "string",
        "description": "A DNS event source may also look up the category of the"
      }
    }
  },
  "ASimFileEventLogs": {
    "tableName": "ASimFileEventLogs",
    "description": "The Advanced Security Information Model (ASIM) File Event normalization schema describes file activity such as creating, modifying, or deleting files or documents.",
    "columns": {
      "ActingProcessCommandLine": {
        "type": "string",
        "description": "The command line used to run the acting process."
      },
      "ActingProcessGuid": {
        "type": "string",
        "description": "A generated unique identifier (GUID) of the acting process."
      },
      "ActingProcessId": {
        "type": "string",
        "description": "The process ID (PID) of the acting process."
      },
      "ActingProcessName": {
        "type": "string",
        "description": "The name of the acting process."
      },
      "ActorOriginalUserType": {
        "type": "string",
        "description": "The original actor user type as provided by the reporting"
      },
      "ActorScope": {
        "type": "string",
        "description": "The scope, such as Azure AD tenant, in which ActorUserId and"
      },
      "ActorScopeId": {
        "type": "string",
        "description": "The scope ID, such as Azure AD Directory ID, in which"
      },
      "ActorSessionId": {
        "type": "string",
        "description": "The unique ID of the login session of the Actor."
      },
      "ActorUserAadId": {
        "type": "string",
        "description": "The Azure Active Directory ID of the actor."
      },
      "ActorUserId": {
        "type": "string",
        "description": "A machine-readable, alphanumeric, unique representation of"
      },
      "ActorUserIdType": {
        "type": "string",
        "description": "The type of the ID stored in the ActorUserId field."
      },
      "ActorUsername": {
        "type": "string",
        "description": "The Actor username, including domain information when"
      },
      "ActorUsernameType": {
        "type": "string",
        "description": "Specifies the type of the user name stored in the"
      },
      "ActorUserSid": {
        "type": "string",
        "description": "The Windows user ID (SIDs) of the actor."
      },
      "ActorUserType": {
        "type": "string",
        "description": "The type of actor."
      },
      "AdditionalFields": {
        "type": "dynamic",
        "description": "Additional information, represented using key/value pairs"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DvcAction": {
        "type": "string",
        "description": "The action taken on the web session."
      },
      "DvcDescription": {
        "type": "string",
        "description": "A descriptive text associated with the device."
      },
      "DvcDomain": {
        "type": "string",
        "description": "The domain of the device reporting the event."
      },
      "DvcDomainType": {
        "type": "string",
        "description": "The type of DvcDomain. Valid values include 'Windows' and"
      },
      "DvcFQDN": {
        "type": "string",
        "description": "The hostname of the device on which the event occurred or"
      },
      "DvcHostname": {
        "type": "string",
        "description": "The hostname of the device reporting the event."
      },
      "DvcId": {
        "type": "string",
        "description": "The unique ID of the device on which the event occurred or"
      },
      "DvcIdType": {
        "type": "string",
        "description": "The type of DvcId."
      },
      "DvcInterface": {
        "type": "string",
        "description": "The original DvcAction as provided by the reporting device."
      },
      "DvcIpAddr": {
        "type": "string",
        "description": "The IP address of the device reporting the event."
      },
      "DvcMacAddr": {
        "type": "string",
        "description": "The MAC address of the device on which the event occurred or"
      },
      "DvcOriginalAction": {
        "type": "string",
        "description": "The original DvcAction as provided by the reporting device."
      },
      "DvcOs": {
        "type": "string",
        "description": "The operating system running on the device on which the"
      },
      "DvcOsVersion": {
        "type": "string",
        "description": "The version of the operating system on the device on which"
      },
      "DvcScope": {
        "type": "string",
        "description": "The cloud platform scope the device belongs to. DvcScope"
      },
      "DvcScopeId": {
        "type": "string",
        "description": "The cloud platform scope ID the device belongs to."
      },
      "DvcZone": {
        "type": "string",
        "description": "The network on which the event occurred or which reported"
      },
      "EventCount": {
        "type": "int",
        "description": "This value is used when the source supports aggregation, and a"
      },
      "EventEndTime": {
        "type": "datetime",
        "description": "The time in which the event ended. If the source supports"
      },
      "EventMessage": {
        "type": "string",
        "description": "A general message or description."
      },
      "EventOriginalResultDetails": {
        "type": "string",
        "description": "The original result details provided by the source. This value is"
      },
      "EventOriginalSeverity": {
        "type": "string",
        "description": "The original severity as provided by the reporting device. This"
      },
      "EventOriginalSubType": {
        "type": "string",
        "description": "The original event subtype or ID, if provided by the source. For"
      },
      "EventOriginalType": {
        "type": "string",
        "description": "The original event type or ID, if provided by the source."
      },
      "EventOriginalUid": {
        "type": "string",
        "description": "A unique ID of the original record, if provided by the source."
      },
      "EventOwner": {
        "type": "string",
        "description": "The owner of the event, which is usually the department or"
      },
      "EventProduct": {
        "type": "string",
        "description": "The product generating the event."
      },
      "EventProductVersion": {
        "type": "string",
        "description": "The version of the product generating the event."
      },
      "EventReportUrl": {
        "type": "string",
        "description": "A URL provided in the event for a resource that provides more"
      },
      "EventResult": {
        "type": "string",
        "description": "The outcome of the event, represented by one of the following"
      },
      "EventResultDetails": {
        "type": "string",
        "description": "The HTTP status code."
      },
      "EventSchema": {
        "type": "string",
        "description": "The schema the event is normalized to. Each schema"
      },
      "EventSchemaVersion": {
        "type": "string",
        "description": "The version of the schema."
      },
      "EventSeverity": {
        "type": "string",
        "description": "The severity of the event. Valid values are: Informational, Low,"
      },
      "EventStartTime": {
        "type": "datetime",
        "description": "The time in which the event started. If the source supports"
      },
      "EventSubType": {
        "type": "string",
        "description": "Additional description of the event type, if applicable."
      },
      "EventType": {
        "type": "string",
        "description": "The operation reported by the record."
      },
      "EventVendor": {
        "type": "string",
        "description": "The vendor of the product generating the event."
      },
      "HashType": {
        "type": "string",
        "description": "The type of hash stored in the Hash alias field."
      },
      "HttpUserAgent": {
        "type": "string",
        "description": "When the operation is initiated using HTTP or HTTPS, the HTTP"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "NetworkApplicationProtocol": {
        "type": "string",
        "description": "When the operation is initiated by a remote system, the"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "RuleName": {
        "type": "string",
        "description": "The name or ID of the rule by associated with the inspection"
      },
      "RuleNumber": {
        "type": "int",
        "description": "The number of the rule associated with the inspection results."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "SrcDescription": {
        "type": "string",
        "description": "A descriptive text associated with the device."
      },
      "SrcDeviceType": {
        "type": "string",
        "description": "The type of the source device."
      },
      "SrcDomain": {
        "type": "string",
        "description": "The domain of the source device."
      },
      "SrcDomainType": {
        "type": "string",
        "description": "The type of SrcDomain."
      },
      "SrcDvcId": {
        "type": "string",
        "description": "The ID of the source device."
      },
      "SrcDvcIdType": {
        "type": "string",
        "description": "The type of SrcDvcId."
      },
      "SrcDvcScope": {
        "type": "string",
        "description": "The cloud platform scope the device belongs to."
      },
      "SrcDvcScopeId": {
        "type": "string",
        "description": "The cloud platform scope ID the device belongs to."
      },
      "SrcFileCreationTime": {
        "type": "datetime",
        "description": "The time at which the source file was created."
      },
      "SrcFileDirectory": {
        "type": "string",
        "description": "The source file folder or location."
      },
      "SrcFileExtension": {
        "type": "string",
        "description": "The source file extension."
      },
      "SrcFileMD5": {
        "type": "string",
        "description": "The MD5 hash of the source file."
      },
      "SrcFileMimeType": {
        "type": "string",
        "description": "The Mime or Media type of the source file."
      },
      "SrcFileName": {
        "type": "string",
        "description": "The name of the source file, without a path or a location, but"
      },
      "SrcFilePath": {
        "type": "string",
        "description": "The full, normalized path of the source file, including the folder"
      },
      "SrcFilePathType": {
        "type": "string",
        "description": "The type of SrcFilePath."
      },
      "SrcFileSHA1": {
        "type": "string",
        "description": "The SHA-1 hash of the source file."
      },
      "SrcFileSHA256": {
        "type": "string",
        "description": "The SHA-256 hash of the source file."
      },
      "SrcFileSHA512": {
        "type": "string",
        "description": "The SHA-512 hash of the source file."
      },
      "SrcFileSize": {
        "type": "long",
        "description": "The size of the source file in bytes."
      },
      "SrcFQDN": {
        "type": "string",
        "description": "The source device hostname, including domain information"
      },
      "SrcGeoCity": {
        "type": "string",
        "description": "The city associated with the source IP address."
      },
      "SrcGeoCountry": {
        "type": "string",
        "description": "The country associated with the source IP address."
      },
      "SrcGeoLatitude": {
        "type": "real",
        "description": "The latitude of the geographical coordinate associated with the"
      },
      "SrcGeoLongitude": {
        "type": "real",
        "description": "The longitude of the geographical coordinate associated with"
      },
      "SrcGeoRegion": {
        "type": "string",
        "description": "The region within a country associated with the source IP"
      },
      "SrcHostname": {
        "type": "string",
        "description": "The source device hostname, excluding domain information. If"
      },
      "SrcIpAddr": {
        "type": "string",
        "description": "When the operation is initiated by a remote system, the IP"
      },
      "SrcMacAddr": {
        "type": "string",
        "description": "The MAC address of the source device."
      },
      "SrcOriginalRiskLevel": {
        "type": "string",
        "description": "The risk level associated with the source. As reported by the"
      },
      "SrcPortNumber": {
        "type": "int",
        "description": "When the operation is initiated by a remote system, the port"
      },
      "SrcRiskLevel": {
        "type": "int",
        "description": "The risk level associated with the source."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TargetAppId": {
        "type": "string",
        "description": "The ID of the destination application, as reported by the"
      },
      "TargetAppName": {
        "type": "string",
        "description": "The name of the destination application."
      },
      "TargetAppType": {
        "type": "string",
        "description": "The type of the destination application."
      },
      "TargetFileCreationTime": {
        "type": "datetime",
        "description": "The time at which the target file was created."
      },
      "TargetFileDirectory": {
        "type": "string",
        "description": "The target file folder or location."
      },
      "TargetFileExtension": {
        "type": "string",
        "description": "The target file extension."
      },
      "TargetFileMD5": {
        "type": "string",
        "description": "The MD5 hash of the target file."
      },
      "TargetFileMimeType": {
        "type": "string",
        "description": "The Mime or Media type of the target file."
      },
      "TargetFileName": {
        "type": "string",
        "description": "The name of the target file, without a path or a location, but"
      },
      "TargetFilePath": {
        "type": "string",
        "description": "The full, normalized path of the target file, including the folder"
      },
      "TargetFilePathType": {
        "type": "string",
        "description": "The type of TargetFilePath."
      },
      "TargetFileSHA1": {
        "type": "string",
        "description": "The SHA-1 hash of the target file."
      },
      "TargetFileSHA256": {
        "type": "string",
        "description": "The SHA-256 hash of the target file."
      },
      "TargetFileSHA512": {
        "type": "string",
        "description": "The SHA-512 hash of the source file."
      },
      "TargetFileSize": {
        "type": "long",
        "description": "The size of the target file in bytes."
      },
      "TargetOriginalAppType": {
        "type": "string",
        "description": "The target application type as reported by the reporting"
      },
      "TargetUrl": {
        "type": "string",
        "description": "When the operation is initiated using HTTP or HTTPS, the URL"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "ThreatCategory": {
        "type": "string",
        "description": "The category of the threat or malware identified in the file"
      },
      "ThreatConfidence": {
        "type": "int",
        "description": "The confidence level of the threat identified, normalized to a"
      },
      "ThreatField": {
        "type": "string",
        "description": "The field for which a threat was identified. The value is either"
      },
      "ThreatFilePath": {
        "type": "string",
        "description": "A file path for which a threat was identified. The field"
      },
      "ThreatFirstReportedTime": {
        "type": "datetime",
        "description": "The first time the IP address or domain were identified as a"
      },
      "ThreatId": {
        "type": "string",
        "description": "The ID of the threat or malware identified in the file activity."
      },
      "ThreatIsActive": {
        "type": "bool",
        "description": "True ID the threat identified is considered an active threat."
      },
      "ThreatLastReportedTime": {
        "type": "datetime",
        "description": "The last time the IP address or domain were identified as a"
      },
      "ThreatName": {
        "type": "string",
        "description": "The name of the threat or malware identified in the file activity."
      },
      "ThreatOriginalConfidence": {
        "type": "string",
        "description": "The original confidence level of the threat identified, as"
      },
      "ThreatOriginalRiskLevel": {
        "type": "string",
        "description": "The risk level as reported by the reporting device."
      },
      "ThreatRiskLevel": {
        "type": "int",
        "description": "The risk level associated with the identified threat. The level"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp reflecting the time in which the event was"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "ASimNetworkSessionLogs": {
    "tableName": "ASimNetworkSessionLogs",
    "description": "The Microsoft Sentinel network session normalization schema represents an IP network activity, such as network connections and network sessions. Such events are reported, for example, by operating systems, routers, firewalls, and intrusion prevention systems.",
    "columns": {
      "AdditionalFields": {
        "type": "dynamic",
        "description": "Additional information, represented using key/value pairs"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DstAppId": {
        "type": "string",
        "description": "The ID of the destination application, as reported by the"
      },
      "DstAppName": {
        "type": "string",
        "description": "The name of the destination application."
      },
      "DstAppType": {
        "type": "string",
        "description": "The type of the destination application."
      },
      "DstBytes": {
        "type": "long",
        "description": "The number of bytes sent from the destination to the source"
      },
      "DstDescription": {
        "type": "string",
        "description": "A descriptive text associated with the destination."
      },
      "DstDeviceType": {
        "type": "string",
        "description": "The type of the destination device."
      },
      "DstDomain": {
        "type": "string",
        "description": "The domain of the destination device."
      },
      "DstDomainType": {
        "type": "string",
        "description": "The type of DstDomain."
      },
      "DstDvcId": {
        "type": "string",
        "description": "The ID of the destination device."
      },
      "DstDvcIdType": {
        "type": "string",
        "description": "The type of DstDvcId."
      },
      "DstFQDN": {
        "type": "string",
        "description": "The destination device hostname, including domain"
      },
      "DstGeoCity": {
        "type": "string",
        "description": "The city associated with the destination IP address."
      },
      "DstGeoCountry": {
        "type": "string",
        "description": "The country associated with the destination IP address."
      },
      "DstGeoLatitude": {
        "type": "real",
        "description": "The latitude of the geographical coordinate associated with the"
      },
      "DstGeoLongitude": {
        "type": "real",
        "description": "The longitude of the geographical coordinate associated with"
      },
      "DstGeoRegion": {
        "type": "string",
        "description": "The region, or state, within a country associated with the"
      },
      "DstHostname": {
        "type": "string",
        "description": "The destination device hostname, excluding domain"
      },
      "DstInterfaceGuid": {
        "type": "string",
        "description": "The GUID of the network interface used on the destination"
      },
      "DstInterfaceName": {
        "type": "string",
        "description": "The network interface used for the connection or session by"
      },
      "DstIpAddr": {
        "type": "string",
        "description": "The IP address of the connection or session destination."
      },
      "DstMacAddr": {
        "type": "string",
        "description": "The MAC address of the network interface used for the"
      },
      "DstNatIpAddr": {
        "type": "string",
        "description": "The DstNatIpAddr represents either of: The original address of"
      },
      "DstNatPortNumber": {
        "type": "int",
        "description": "If reported by an intermediary NAT device, the port used by the"
      },
      "DstOriginalUserType": {
        "type": "string",
        "description": "The original destination user type, if provided by the source."
      },
      "DstPackets": {
        "type": "long",
        "description": "The number of packets sent from the destination to the source"
      },
      "DstPortNumber": {
        "type": "int",
        "description": "The destination IP port."
      },
      "DstSubscriptionId": {
        "type": "string",
        "description": "The cloud platform subscription ID the destination device"
      },
      "DstUserId": {
        "type": "string",
        "description": "A machine-readable, alphanumeric, unique representation of"
      },
      "DstUserIdType": {
        "type": "string",
        "description": "The type of the ID stored in the DstUserId field."
      },
      "DstUsername": {
        "type": "string",
        "description": "The destination username, including domain information when"
      },
      "DstUsernameType": {
        "type": "string",
        "description": "Specifies the type of the username stored in the DstUsername"
      },
      "DstUserType": {
        "type": "string",
        "description": "The type of destination user."
      },
      "DstVlanId": {
        "type": "string",
        "description": "The VLAN ID related to the destination device."
      },
      "DstZone": {
        "type": "string",
        "description": "The network zone of the destination, as defined by the"
      },
      "Dvc": {
        "type": "string",
        "description": "A unique identifier of the device on which the event occurred"
      },
      "DvcAction": {
        "type": "string",
        "description": "The action taken on the network session."
      },
      "DvcDescription": {
        "type": "string",
        "description": "A descriptive text associated with the device. For example:"
      },
      "DvcDomain": {
        "type": "string",
        "description": "The domain of the device reporting the event."
      },
      "DvcDomainType": {
        "type": "string",
        "description": "The type of DvcDomain. Possible values include 'Windows' and"
      },
      "DvcFQDN": {
        "type": "string",
        "description": "The hostname of the device on which the event occurred or"
      },
      "DvcHostname": {
        "type": "string",
        "description": "The hostname of the device reporting the event."
      },
      "DvcId": {
        "type": "string",
        "description": "The unique ID of the device on which the event occurred or"
      },
      "DvcIdType": {
        "type": "string",
        "description": "The type of DvcId."
      },
      "DvcInboundInterface": {
        "type": "string",
        "description": "If reported by an intermediary device, the network interface"
      },
      "DvcInterface": {
        "type": "string",
        "description": "The network interface on which data was captured. This field is"
      },
      "DvcIpAddr": {
        "type": "string",
        "description": "The IP Address of the device reporting the event."
      },
      "DvcMacAddr": {
        "type": "string",
        "description": "The MAC address of the device on which the event occurred or"
      },
      "DvcOriginalAction": {
        "type": "string",
        "description": "The original DvcAction as provided by the reporting device."
      },
      "DvcOs": {
        "type": "string",
        "description": "The operating system running on the device reporting the"
      },
      "DvcOsVersion": {
        "type": "string",
        "description": "The version of the operating system on the device reporting"
      },
      "DvcOutboundInterface": {
        "type": "string",
        "description": "If reported by an intermediary device, the network interface"
      },
      "DvcSubscriptionId": {
        "type": "string",
        "description": "The cloud platform subscription ID the device belongs to."
      },
      "DvcZone": {
        "type": "string",
        "description": "The network on which the event occurred or which reported"
      },
      "EventCount": {
        "type": "int",
        "description": "This value is used when the source supports aggregation, and a"
      },
      "EventEndTime": {
        "type": "datetime",
        "description": "The time in which the event ended. If the source supports"
      },
      "EventMessage": {
        "type": "string",
        "description": "A general message or description."
      },
      "EventOriginalResultDetails": {
        "type": "string",
        "description": "The original result details provided by the source. This value is"
      },
      "EventOriginalSeverity": {
        "type": "string",
        "description": "The original severity as provided by the reporting device. This"
      },
      "EventOriginalSubType": {
        "type": "string",
        "description": "The original event subtype or ID, if provided by the source. For"
      },
      "EventOriginalType": {
        "type": "string",
        "description": "The original event type or ID, if provided by the source."
      },
      "EventOriginalUid": {
        "type": "string",
        "description": "A unique ID of the original record, if provided by the source."
      },
      "EventProduct": {
        "type": "string",
        "description": "The product generating the event."
      },
      "EventProductVersion": {
        "type": "string",
        "description": "The version of the product generating the event."
      },
      "EventReportUrl": {
        "type": "string",
        "description": "A URL provided in the event for a resource that provides more"
      },
      "EventResult": {
        "type": "string",
        "description": "The outcome of the event, represented by one of the following"
      },
      "EventResultDetails": {
        "type": "string",
        "description": "Reason or details for the result reported in the EventResult"
      },
      "EventSchemaVersion": {
        "type": "string",
        "description": "The version of the schema."
      },
      "EventSeverity": {
        "type": "string",
        "description": "The severity of the event. Valid values are: Informational, Low,"
      },
      "EventStartTime": {
        "type": "datetime",
        "description": "The time in which the event started. If the source supports"
      },
      "EventSubType": {
        "type": "string",
        "description": "Additional description of the event type, if applicable."
      },
      "EventType": {
        "type": "string",
        "description": "The operation reported by the record."
      },
      "EventVendor": {
        "type": "string",
        "description": "The vendor of the product generating the event."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable"
      },
      "NetworkApplicationProtocol": {
        "type": "string",
        "description": "The application layer protocol used by the connection or"
      },
      "NetworkBytes": {
        "type": "long",
        "description": "Number of bytes sent in both directions. If both BytesReceived"
      },
      "NetworkConnectionHistory": {
        "type": "string",
        "description": "TCP flags and other potential IP header information."
      },
      "NetworkDirection": {
        "type": "string",
        "description": "The direction of the connection or session."
      },
      "NetworkDuration": {
        "type": "int",
        "description": "The amount of time, in milliseconds, for the completion of the"
      },
      "NetworkIcmpCode": {
        "type": "int",
        "description": "For an ICMP message, the ICMP message type numeric value"
      },
      "NetworkIcmpType": {
        "type": "string",
        "description": "For an ICMP message, the ICMP message type text"
      },
      "NetworkPackets": {
        "type": "long",
        "description": "The number of packets sent in both directions. If both"
      },
      "NetworkProtocol": {
        "type": "string",
        "description": "The IP protocol used by the connection or session as listed in"
      },
      "NetworkProtocolVersion": {
        "type": "string",
        "description": "The version of NetworkProtocol."
      },
      "NetworkRuleName": {
        "type": "string",
        "description": "The name or ID of the rule by which DvcAction was decided"
      },
      "NetworkRuleNumber": {
        "type": "int",
        "description": "The number of the rule by which DvcAction was decided upon."
      },
      "NetworkSessionId": {
        "type": "string",
        "description": "The session identifier as reported by the reporting device."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "SrcAppId": {
        "type": "string",
        "description": "The ID of the source application, as reported by the reporting"
      },
      "SrcAppName": {
        "type": "string",
        "description": "The name of the source application."
      },
      "SrcAppType": {
        "type": "string",
        "description": "The type of the source application."
      },
      "SrcBytes": {
        "type": "long",
        "description": "The number of bytes sent from the source to the destination"
      },
      "SrcDescription": {
        "type": "string",
        "description": "A descriptive text associated with the source."
      },
      "SrcDeviceType": {
        "type": "string",
        "description": "The type of the source device."
      },
      "SrcDomain": {
        "type": "string",
        "description": "The domain of the source device."
      },
      "SrcDomainType": {
        "type": "string",
        "description": "The type of SrcDomain."
      },
      "SrcDvcId": {
        "type": "string",
        "description": "The ID of the source device."
      },
      "SrcDvcIdType": {
        "type": "string",
        "description": "The type of SrcDvcId."
      },
      "SrcFQDN": {
        "type": "string",
        "description": "The source device hostname, including domain information"
      },
      "SrcGeoCity": {
        "type": "string",
        "description": "The city associated with the source IP address."
      },
      "SrcGeoCountry": {
        "type": "string",
        "description": "The country associated with the source IP address."
      },
      "SrcGeoLatitude": {
        "type": "real",
        "description": "The latitude of the geographical coordinate associated with the"
      },
      "SrcGeoLongitude": {
        "type": "real",
        "description": "The longitude of the geographical coordinate associated with"
      },
      "SrcGeoRegion": {
        "type": "string",
        "description": "The region within a country associated with the source IP"
      },
      "SrcHostname": {
        "type": "string",
        "description": "The source device hostname, excluding domain information. If"
      },
      "SrcInterfaceGuid": {
        "type": "string",
        "description": "The GUID of the network interface used on the source device."
      },
      "SrcInterfaceName": {
        "type": "string",
        "description": "The network interface used for the connection or session by"
      },
      "SrcIpAddr": {
        "type": "string",
        "description": "The IP address from which the connection or session"
      },
      "SrcMacAddr": {
        "type": "string",
        "description": "The MAC address of the network interface from which the"
      },
      "SrcNatIpAddr": {
        "type": "string",
        "description": "The SrcNatIpAddr represents either of: The original address of"
      },
      "SrcNatPortNumber": {
        "type": "int",
        "description": "If reported by an intermediary NAT device, the port used by the"
      },
      "SrcOriginalUserType": {
        "type": "string",
        "description": "The original destination user type, if provided by the by the"
      },
      "SrcPackets": {
        "type": "long",
        "description": "The number of packets sent from the source to the destination"
      },
      "SrcPortNumber": {
        "type": "int",
        "description": "The IP port from which the connection originated. Might not be"
      },
      "SrcSubscriptionId": {
        "type": "string",
        "description": "The cloud platform subscription ID the source device belongs"
      },
      "SrcUserId": {
        "type": "string",
        "description": "A machine-readable, alphanumeric, unique representation of"
      },
      "SrcUserIdType": {
        "type": "string",
        "description": "The type of the ID stored in the SrcUserId field."
      },
      "SrcUsername": {
        "type": "string",
        "description": "The source username, including domain information when"
      },
      "SrcUsernameType": {
        "type": "string",
        "description": "Specifies the type of the username stored in the SrcUsername"
      },
      "SrcUserType": {
        "type": "string",
        "description": "The type of the source user."
      },
      "SrcVlanId": {
        "type": "string",
        "description": "The VLAN ID related to the source device."
      },
      "SrcZone": {
        "type": "string",
        "description": "The network zone of the source, as defined by the reporting"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TcpFlagsAck": {
        "type": "bool",
        "description": "The TCP ACK flag reported. The acknowledgment flag is used"
      },
      "TcpFlagsFin": {
        "type": "bool",
        "description": "The TCP FIN flag reported. The finished flag means there is no"
      },
      "TcpFlagsPsh": {
        "type": "bool",
        "description": "The TCP PSH flag reported. The push flag is somewhat similar"
      },
      "TcpFlagsRst": {
        "type": "bool",
        "description": "The TCP RST flag reported. The reset flag gets sent from the"
      },
      "TcpFlagsSyn": {
        "type": "bool",
        "description": "The TCP SYN flag reported. The synchronisation flag is used as"
      },
      "TcpFlagsUrg": {
        "type": "bool",
        "description": "The TCP URG flag reported. The urgent flag is used to notify"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "ThreatCategory": {
        "type": "string",
        "description": "The category of the threat or malware identified in the network"
      },
      "ThreatConfidence": {
        "type": "int",
        "description": "The confidence level of the threat identified, normalized to a"
      },
      "ThreatField": {
        "type": "string",
        "description": "The field for which a threat was identified. The value is either"
      },
      "ThreatFirstReportedTime": {
        "type": "datetime",
        "description": "The first time the IP address or domain were identified as a"
      },
      "ThreatId": {
        "type": "string",
        "description": "The ID of the threat or malware identified in the network"
      },
      "ThreatIpAddr": {
        "type": "string",
        "description": "An IP address for which a threat was identified. The field"
      },
      "ThreatIsActive": {
        "type": "bool",
        "description": "True ID the threat identified is considered an active threat."
      },
      "ThreatLastReportedTime": {
        "type": "datetime",
        "description": "The last time the IP address or domain were identified as a"
      },
      "ThreatName": {
        "type": "string",
        "description": "The name of the threat or malware identified in the network"
      },
      "ThreatOriginalConfidence": {
        "type": "string",
        "description": "The original confidence level of the threat identified, as"
      },
      "ThreatOriginalRiskLevel": {
        "type": "string",
        "description": "The risk level as reported by the reporting device."
      },
      "ThreatRiskLevel": {
        "type": "int",
        "description": "The risk level associated with the session. The level is a number"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) reflecting the time in which the event was"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "ASimProcessEventLogs": {
    "tableName": "ASimProcessEventLogs",
    "description": "The Microsoft Sentinel process events normalized table stores events using the Process Event ASIM normalized schema associated with creation or termination of a process. Such events are reported by operating systems and security systems, such as EDR (End Point Detection and Response) systems.",
    "columns": {
      "ActingProcessCommandLine": {
        "type": "string",
        "description": "The command line used to run the acting process."
      },
      "ActingProcessCreationTime": {
        "type": "datetime",
        "description": "The date and time when the acting process was started."
      },
      "ActingProcessFileCompany": {
        "type": "string",
        "description": "The company that created the acting process image file."
      },
      "ActingProcessFileDescription": {
        "type": "string",
        "description": "The description embedded in the version information of the"
      },
      "ActingProcessFileInternalName": {
        "type": "string",
        "description": "The product internal file name from the version information"
      },
      "ActingProcessFilename": {
        "type": "string",
        "description": "The product file name from the version information of the"
      },
      "ActingProcessFileOriginalName": {
        "type": "string",
        "description": "The product original file name from the version information"
      },
      "ActingProcessFileProduct": {
        "type": "string",
        "description": "The product name from the version information in the"
      },
      "ActingProcessFileSize": {
        "type": "long",
        "description": "The size of the file in bytes that ran the acting process."
      },
      "ActingProcessFileVersion": {
        "type": "string",
        "description": "The product version from the version information of the"
      },
      "ActingProcessGuid": {
        "type": "string",
        "description": "A GUID of the acting process."
      },
      "ActingProcessId": {
        "type": "string",
        "description": "The process ID of the acting process."
      },
      "ActingProcessIMPHASH": {
        "type": "string",
        "description": "The Import Hash of all the library DLLs that are used by the"
      },
      "ActingProcessInjectedAddress": {
        "type": "string",
        "description": "The memory address in which the responsible acting"
      },
      "ActingProcessIntegrityLevel": {
        "type": "string",
        "description": "Integrity Level for acting process."
      },
      "ActingProcessIsHidden": {
        "type": "bool",
        "description": "An indication of whether the acting process is in hidden"
      },
      "ActingProcessMD5": {
        "type": "string",
        "description": "The MD5 hash of the acting process image file."
      },
      "ActingProcessName": {
        "type": "string",
        "description": "The name of the acting process."
      },
      "ActingProcessSHA1": {
        "type": "string",
        "description": "The SHA-1 hash of the acting process image file."
      },
      "ActingProcessSHA256": {
        "type": "string",
        "description": "The SHA-256 hash of the acting process image file."
      },
      "ActingProcessSHA512": {
        "type": "string",
        "description": "The SHA-512 hash of the acting process image file."
      },
      "ActingProcessTokenElevation": {
        "type": "string",
        "description": "A token indicating the presence or absence of User Access"
      },
      "ActorOriginalUserType": {
        "type": "string",
        "description": "The user type as reported by the reporting device."
      },
      "ActorScope": {
        "type": "string",
        "description": "The scope, such as Azure AD tenant, in which ActorUserId"
      },
      "ActorScopeId": {
        "type": "string",
        "description": "The scope ID, such as Azure AD tenant ID, in which"
      },
      "ActorSessionId": {
        "type": "string",
        "description": "The unique ID of the sign-in session of the Actor."
      },
      "ActorUserId": {
        "type": "string",
        "description": "A machine-readable, alphanumeric, unique representation"
      },
      "ActorUserIdType": {
        "type": "string",
        "description": "The type of the ID stored in the ActorUserId field."
      },
      "ActorUsername": {
        "type": "string",
        "description": "The Actor's username, including domain information when"
      },
      "ActorUsernameType": {
        "type": "string",
        "description": "The type of the Actor's username specified in"
      },
      "ActorUserType": {
        "type": "string",
        "description": "The type of the Actor."
      },
      "AdditionalFields": {
        "type": "dynamic",
        "description": "Additional information, represented using key and value"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DvcAction": {
        "type": "string",
        "description": "For reporting security systems, the action taken by the"
      },
      "DvcDescription": {
        "type": "string",
        "description": "A descriptive text associated with the device."
      },
      "DvcDomain": {
        "type": "string",
        "description": "The domain of the device reporting the event."
      },
      "DvcDomainType": {
        "type": "string",
        "description": "The type of DvcDomain. Possible values include \"Windows\""
      },
      "DvcFQDN": {
        "type": "string",
        "description": "The hostname of the device on which the event occurred or"
      },
      "DvcHostname": {
        "type": "string",
        "description": "The hostname of the device reporting the event."
      },
      "DvcId": {
        "type": "string",
        "description": "The unique ID of the device on which the event occurred or"
      },
      "DvcIdType": {
        "type": "string",
        "description": "The type of DvcId."
      },
      "DvcInterface": {
        "type": "string",
        "description": "The network interface on which data was captured."
      },
      "DvcIpAddr": {
        "type": "string",
        "description": "The IP Address of the device reporting the event."
      },
      "DvcMacAddr": {
        "type": "string",
        "description": "The MAC address of the device on which the event occurred"
      },
      "DvcOriginalAction": {
        "type": "string",
        "description": "The original DvcAction as provided by the reporting device."
      },
      "DvcOs": {
        "type": "string",
        "description": "The operating system running on the device on which the"
      },
      "DvcOsVersion": {
        "type": "string",
        "description": "The version of the operating system on the device on which"
      },
      "DvcScope": {
        "type": "string",
        "description": "The cloud platform scope the device belongs to. DvcScope"
      },
      "DvcScopeId": {
        "type": "string",
        "description": "The cloud platform scope ID the device belongs to."
      },
      "DvcZone": {
        "type": "string",
        "description": "The network on which the event occurred or which reported"
      },
      "EventCount": {
        "type": "int",
        "description": "The number of events described by the record."
      },
      "EventEndTime": {
        "type": "datetime",
        "description": "The time in which the event ended. If the source supports"
      },
      "EventMessage": {
        "type": "string",
        "description": "A general message or description."
      },
      "EventOriginalResultDetails": {
        "type": "string",
        "description": "The original result details provided by the source."
      },
      "EventOriginalSeverity": {
        "type": "string",
        "description": "The original severity as provided by the reporting device."
      },
      "EventOriginalSubType": {
        "type": "string",
        "description": "The original event subtype or ID, if provided by the source."
      },
      "EventOriginalType": {
        "type": "string",
        "description": "The original event type or ID, if provided by the source."
      },
      "EventOriginalUid": {
        "type": "string",
        "description": "A unique ID of the original record, if provided by the source."
      },
      "EventOwner": {
        "type": "string",
        "description": "The owner of the event, which is usually the department or"
      },
      "EventProduct": {
        "type": "string",
        "description": "The product generating the event."
      },
      "EventProductVersion": {
        "type": "string",
        "description": "The version of the product generating the event."
      },
      "EventReportUrl": {
        "type": "string",
        "description": "A URL provided in the event for a resource that provides"
      },
      "EventResult": {
        "type": "string",
        "description": "The outcome of the event, represented by one of the"
      },
      "EventResultDetails": {
        "type": "string",
        "description": "Reason or details for the result reported in the EventResult"
      },
      "EventSchemaVersion": {
        "type": "string",
        "description": "The version of the schema."
      },
      "EventSeverity": {
        "type": "string",
        "description": "The severity of the event. Valid values are: Informational,"
      },
      "EventStartTime": {
        "type": "datetime",
        "description": "The time in which the event started. If the source supports"
      },
      "EventSubType": {
        "type": "string",
        "description": "Describes a subdivision of the operation reported in the"
      },
      "EventType": {
        "type": "string",
        "description": "Describes the operation reported by the record"
      },
      "EventVendor": {
        "type": "string",
        "description": "The vendor of the product generating the event."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "ParentProcessCreationTime": {
        "type": "datetime",
        "description": "The date and time when the parent process was started."
      },
      "ParentProcessFileCompany": {
        "type": "string",
        "description": "The company that created the parent process image file."
      },
      "ParentProcessFileDescription": {
        "type": "string",
        "description": "The description from the version information of the parent"
      },
      "ParentProcessFileProduct": {
        "type": "string",
        "description": "The product name from the version information in the"
      },
      "ParentProcessFileVersion": {
        "type": "string",
        "description": "The product version from the version information of the"
      },
      "ParentProcessGuid": {
        "type": "string",
        "description": "A GUID of the parent process."
      },
      "ParentProcessId": {
        "type": "string",
        "description": "The process ID of the parent process."
      },
      "ParentProcessIMPHASH": {
        "type": "string",
        "description": "The Import Hash of all the library DLLs that are used by the"
      },
      "ParentProcessInjectedAddress": {
        "type": "string",
        "description": "The memory address in which the responsible parent"
      },
      "ParentProcessIntegrityLevel": {
        "type": "string",
        "description": "Integrity Level for parent process."
      },
      "ParentProcessIsHidden": {
        "type": "bool",
        "description": "An indication of whether the parent process is in hidden"
      },
      "ParentProcessMD5": {
        "type": "string",
        "description": "The MD5 hash of the parent process image file."
      },
      "ParentProcessName": {
        "type": "string",
        "description": "The name of the parent process."
      },
      "ParentProcessSHA1": {
        "type": "string",
        "description": "The SHA-1 hash of the parent process image file."
      },
      "ParentProcessSHA256": {
        "type": "string",
        "description": "The SHA-256 hash of the parent process image file."
      },
      "ParentProcessSHA512": {
        "type": "string",
        "description": "The SHA-512 hash of the parent process image file."
      },
      "ParentProcessTokenElevation": {
        "type": "string",
        "description": "A token indicating the presence or absence of User Access"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "RuleName": {
        "type": "string",
        "description": "The name or ID of the rule by associated with the inspection"
      },
      "RuleNumber": {
        "type": "int",
        "description": "The number of the rule associated with the inspection"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TargetOriginalUserType": {
        "type": "string",
        "description": "The user type as reported by the reporting device."
      },
      "TargetProcessCommandLine": {
        "type": "string",
        "description": "The command line used to run the target process."
      },
      "TargetProcessCreationTime": {
        "type": "datetime",
        "description": "The date and time when the target process was started."
      },
      "TargetProcessCurrentDirectory": {
        "type": "string",
        "description": "The current directory in which the target process is"
      },
      "TargetProcessFileCompany": {
        "type": "string",
        "description": "The company that created the target process image file."
      },
      "TargetProcessFileDescription": {
        "type": "string",
        "description": "The description from the version information of the target"
      },
      "TargetProcessFileInternalName": {
        "type": "string",
        "description": "The product internal file name from the version information"
      },
      "TargetProcessFilename": {
        "type": "string",
        "description": "The product file name from the version information of the"
      },
      "TargetProcessFileOriginalName": {
        "type": "string",
        "description": "The product original file name from the version information"
      },
      "TargetProcessFileProduct": {
        "type": "string",
        "description": "The product name from the version information in the"
      },
      "TargetProcessFileSize": {
        "type": "long",
        "description": "Size of the file in bytes that ran the process responsible for"
      },
      "TargetProcessFileVersion": {
        "type": "string",
        "description": "The product version from the version information of the"
      },
      "TargetProcessGuid": {
        "type": "string",
        "description": "A GUID of the target process."
      },
      "TargetProcessId": {
        "type": "string",
        "description": "The process ID of the target process."
      },
      "TargetProcessIMPHASH": {
        "type": "string",
        "description": "The Import Hash of all the library DLLs that are used by the"
      },
      "TargetProcessInjectedAddress": {
        "type": "string",
        "description": "The memory address in which the responsible target"
      },
      "TargetProcessIntegrityLevel": {
        "type": "string",
        "description": "Integrity Level for target process."
      },
      "TargetProcessIsHidden": {
        "type": "bool",
        "description": "An indication of whether the target process is in hidden"
      },
      "TargetProcessMD5": {
        "type": "string",
        "description": "The MD5 hash of the target process image file."
      },
      "TargetProcessName": {
        "type": "string",
        "description": "The name of the target process."
      },
      "TargetProcessSHA1": {
        "type": "string",
        "description": "The SHA-1 hash of the target process image file."
      },
      "TargetProcessSHA256": {
        "type": "string",
        "description": "The SHA-256 hash of the target process image file."
      },
      "TargetProcessSHA512": {
        "type": "string",
        "description": "The SHA-512 hash of the target process image file."
      },
      "TargetProcessStatusCode": {
        "type": "string",
        "description": "The exit code returned by the target process when"
      },
      "TargetProcessTokenElevation": {
        "type": "string",
        "description": "A token indicating the presence or absence of User Access"
      },
      "TargetScope": {
        "type": "string",
        "description": "The scope, such as Azure AD tenant, in which TargetUserId"
      },
      "TargetScopeId": {
        "type": "string",
        "description": "The scope ID, such as Azure AD tenant ID, in which"
      },
      "TargetUserId": {
        "type": "string",
        "description": "A machine-readable, alphanumeric, unique representation"
      },
      "TargetUserIdType": {
        "type": "string",
        "description": "The type of the ID stored in the TargetUserId field."
      },
      "TargetUsername": {
        "type": "string",
        "description": "The Target actor's username, including domain information"
      },
      "TargetUsernameType": {
        "type": "string",
        "description": "The type of the Target actor's username specified in"
      },
      "TargetUserSessionGuid": {
        "type": "string",
        "description": "The unique guid of the sign-in session of the Target actor."
      },
      "TargetUserSessionId": {
        "type": "string",
        "description": "The unique ID of the sign-in session of the Target actor."
      },
      "TargetUserType": {
        "type": "string",
        "description": "The type of the Target actor."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "ThreatCategory": {
        "type": "string",
        "description": "The category of the threat or malware identified in activity."
      },
      "ThreatConfidence": {
        "type": "int",
        "description": "The confidence level of the threat identified, normalized to a"
      },
      "ThreatField": {
        "type": "string",
        "description": "The field for which a threat was identified."
      },
      "ThreatFirstReportedTime": {
        "type": "datetime",
        "description": "The first time the IP address or domain were identified as a"
      },
      "ThreatId": {
        "type": "string",
        "description": "The ID of the threat or malware identified in the activity."
      },
      "ThreatIsActive": {
        "type": "bool",
        "description": "True ID the threat identified is considered an active threat."
      },
      "ThreatLastReportedTime": {
        "type": "datetime",
        "description": "The last time the IP address or domain were identified as a"
      },
      "ThreatName": {
        "type": "string",
        "description": "The name of the threat or malware identified in the activity."
      },
      "ThreatOriginalConfidence": {
        "type": "string",
        "description": "The original confidence level of the threat identified, as"
      },
      "ThreatOriginalRiskLevel": {
        "type": "string",
        "description": "The risk level as reported by the reporting device."
      },
      "ThreatRiskLevel": {
        "type": "int",
        "description": "The risk level associated with the identified threat. The level"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) reflecting the time in which the event"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "ASimRegistryEventLogs": {
    "tableName": "ASimRegistryEventLogs",
    "description": "The ASim Registry Event schema represents Windows activity of creating, modifying, or deleting Windows Registry entities. Registry events are specific to Windows systems, but are reported by different systems that monitor Windows, such as EDR (End Point Detection and Response) systems, Sysmon, or Windows itself.",
    "columns": {
      "ActingProcessCommandLine": {
        "type": "string",
        "description": "The command line used to run the process."
      },
      "ActingProcessGuid": {
        "type": "string",
        "description": "A generated unique identifier of the acting process."
      },
      "ActingProcessId": {
        "type": "string",
        "description": "The process ID of the acting process."
      },
      "ActingProcessName": {
        "type": "string",
        "description": "The file name of the acting process image file."
      },
      "ActorOriginalUserType": {
        "type": "string",
        "description": "The original actor user type, if provided by the source."
      },
      "ActorScope": {
        "type": "string",
        "description": "The scope, such as Azure AD tenant, in which ActorUserId and"
      },
      "ActorScopeId": {
        "type": "string",
        "description": "The scope ID, such as Azure AD tenant ID, in which ActorUserId"
      },
      "ActorSessionId": {
        "type": "string",
        "description": "The unique ID of the login session of the Actor."
      },
      "ActorUserAadId": {
        "type": "string",
        "description": "The Azure Active Directory ID of the actor."
      },
      "ActorUserId": {
        "type": "string",
        "description": "A unique ID of the Actor."
      },
      "ActorUserIdType": {
        "type": "string",
        "description": "The type of the ID stored in the ActorUserId field."
      },
      "ActorUsername": {
        "type": "string",
        "description": "The user name of the user who initiated the event."
      },
      "ActorUsernameType": {
        "type": "string",
        "description": "Specifies the type of the user name stored in the"
      },
      "ActorUserSid": {
        "type": "string",
        "description": "The Windows user ID (SIDs) of the actor."
      },
      "ActorUserType": {
        "type": "string",
        "description": "The type of the Actor."
      },
      "AdditionalFields": {
        "type": "dynamic",
        "description": "Additional information, represented using key/value pairs"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DvcAction": {
        "type": "string",
        "description": "For reporting security systems, the action taken by the system."
      },
      "DvcDescription": {
        "type": "string",
        "description": "A descriptive text associated with the device."
      },
      "DvcDomain": {
        "type": "string",
        "description": "The domain of the device reporting the event."
      },
      "DvcDomainType": {
        "type": "string",
        "description": "The type of DvcDomain."
      },
      "DvcFQDN": {
        "type": "string",
        "description": "The hostname of the device on which the event occurred or"
      },
      "DvcHostname": {
        "type": "string",
        "description": "The hostname of the device reporting the event."
      },
      "DvcId": {
        "type": "string",
        "description": "The unique ID of the device on which the event occurred or"
      },
      "DvcIdType": {
        "type": "string",
        "description": "The type of DvcId."
      },
      "DvcInterface": {
        "type": "string",
        "description": "The network interface on which data was captured."
      },
      "DvcIpAddr": {
        "type": "string",
        "description": "The IP Address of the device reporting the event."
      },
      "DvcMacAddr": {
        "type": "string",
        "description": "The MAC address of the device on which the event occurred or"
      },
      "DvcOriginalAction": {
        "type": "string",
        "description": "The original DvcAction as provided by the reporting device."
      },
      "DvcOs": {
        "type": "string",
        "description": "The operating system running on the device on which the"
      },
      "DvcOsVersion": {
        "type": "string",
        "description": "The version of the operating system on the device on which"
      },
      "DvcScope": {
        "type": "string",
        "description": "The cloud platform scope the device belongs to. DvcScope"
      },
      "DvcScopeId": {
        "type": "string",
        "description": "The cloud platform scope ID the device belongs to."
      },
      "DvcZone": {
        "type": "string",
        "description": "The network on which the event occurred or which reported"
      },
      "EventCount": {
        "type": "int",
        "description": "The number of events described by the record."
      },
      "EventEndTime": {
        "type": "datetime",
        "description": "The time in which the event ended. If the source supports"
      },
      "EventMessage": {
        "type": "string",
        "description": "A general message or description."
      },
      "EventOriginalResultDetails": {
        "type": "string",
        "description": "The original result details provided by the source."
      },
      "EventOriginalSeverity": {
        "type": "string",
        "description": "The original severity as provided by the reporting device."
      },
      "EventOriginalSubType": {
        "type": "string",
        "description": "The original event subtype or ID, if provided by the source."
      },
      "EventOriginalType": {
        "type": "string",
        "description": "A unique ID of the original record, if provided by the source."
      },
      "EventOriginalUid": {
        "type": "string",
        "description": "."
      },
      "EventOwner": {
        "type": "string",
        "description": "The owner of the event, which is usually the department or"
      },
      "EventProduct": {
        "type": "string",
        "description": "The product generating the event."
      },
      "EventProductVersion": {
        "type": "string",
        "description": "The version of the product generating the event."
      },
      "EventReportUrl": {
        "type": "string",
        "description": "A URL provided in the event for a resource that provides more"
      },
      "EventResult": {
        "type": "string",
        "description": "The outcome of the event, represented by one of the following"
      },
      "EventResultDetails": {
        "type": "string",
        "description": "Reason or details for the result reported in the EventResult"
      },
      "EventSchema": {
        "type": "string",
        "description": "The name of the schema."
      },
      "EventSchemaVersion": {
        "type": "string",
        "description": "The version of the schema."
      },
      "EventSeverity": {
        "type": "string",
        "description": "The severity of the event. Valid values are: Informational, Low,"
      },
      "EventStartTime": {
        "type": "datetime",
        "description": "The time in which the event started. If the source supports"
      },
      "EventSubType": {
        "type": "string",
        "description": "Describes a subdivision of the operation reported in the"
      },
      "EventType": {
        "type": "string",
        "description": "Describes the operation reported by the record."
      },
      "EventVendor": {
        "type": "string",
        "description": "The vendor of the product generating the event."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "ParentProcessCommandLine": {
        "type": "string",
        "description": "The command line used to run the process."
      },
      "ParentProcessGuid": {
        "type": "string",
        "description": "A generated unique identifier of the parent process."
      },
      "ParentProcessId": {
        "type": "string",
        "description": "The process ID of the parent process."
      },
      "ParentProcessName": {
        "type": "string",
        "description": "The file name of the parent process image file."
      },
      "RegistryKey": {
        "type": "string",
        "description": "The registry key associated with the operation, normalized to"
      },
      "RegistryPreviousKey": {
        "type": "string",
        "description": "For operations that modify the registry, the original registry"
      },
      "RegistryPreviousValue": {
        "type": "string",
        "description": "For operations that modify the registry, the original value type,"
      },
      "RegistryPreviousValueData": {
        "type": "string",
        "description": "The original registry data, for operations that modify the"
      },
      "RegistryPreviousValueType": {
        "type": "string",
        "description": "For operations that modify the registry, the original value type."
      },
      "RegistryValue": {
        "type": "string",
        "description": "The registry value associated with the operation."
      },
      "RegistryValueData": {
        "type": "string",
        "description": "The data stored in the registry value."
      },
      "RegistryValueType": {
        "type": "string",
        "description": "The type of registry value, normalized to standard form."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "RuleName": {
        "type": "string",
        "description": "The name or ID of the rule by associated with the inspection"
      },
      "RuleNumber": {
        "type": "int",
        "description": "The number of the rule associated with the inspection results."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "ThreatCategory": {
        "type": "string",
        "description": "The category of the threat or malware identified in activity."
      },
      "ThreatConfidence": {
        "type": "int",
        "description": "The confidence level of the threat identified, normalized to a"
      },
      "ThreatField": {
        "type": "string",
        "description": "The field for which a threat was identified."
      },
      "ThreatFirstReportedTime": {
        "type": "datetime",
        "description": "The first time the IP address or domain were identified as a"
      },
      "ThreatId": {
        "type": "string",
        "description": "The ID of the threat or malware identified in the activity."
      },
      "ThreatIsActive": {
        "type": "bool",
        "description": "True ID the threat identified is considered an active threat."
      },
      "ThreatLastReportedTime": {
        "type": "datetime",
        "description": "The last time the IP address or domain were identified as a"
      },
      "ThreatName": {
        "type": "string",
        "description": "The name of the threat or malware identified in the activity."
      },
      "ThreatOriginalConfidence": {
        "type": "string",
        "description": "The original confidence level of the threat identified, as"
      },
      "ThreatOriginalRiskLevel": {
        "type": "string",
        "description": "The risk level as reported by the reporting device."
      },
      "ThreatRiskLevel": {
        "type": "int",
        "description": "The risk level associated with the identified threat. The level"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) reflecting the time in which the event was"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "ASimUserManagementActivityLogs": {
    "tableName": "ASimUserManagementActivityLogs",
    "description": "The ASim User Management schema represents user management activities, such as creating a user or a group, changing user attribute, or adding a user to a group. Such events are reported, for example, by operating systems, directory services, identity management systems, and any other system reporting on its local user management activity.",
    "columns": {
      "ActingAppId": {
        "type": "string",
        "description": "The ID of the application used by the actor to perform the"
      },
      "ActingAppName": {
        "type": "string",
        "description": "The name of the application used by the actor to perform the"
      },
      "ActingAppType": {
        "type": "string",
        "description": "The type of acting application."
      },
      "ActingOriginalAppType": {
        "type": "string",
        "description": "The acting application type as reported by the reporting device."
      },
      "ActorOriginalUserType": {
        "type": "string",
        "description": "The original actor user type, if provided by the source."
      },
      "ActorScope": {
        "type": "string",
        "description": "The scope, such as Azure AD tenant, in which ActorUserId and"
      },
      "ActorScopeId": {
        "type": "string",
        "description": "The scope ID, such as Azure AD tenant ID, in which ActorUserId"
      },
      "ActorSessionId": {
        "type": "string",
        "description": "The unique ID of the sign-in session of the Actor."
      },
      "ActorUserAadId": {
        "type": "string",
        "description": "The Azure Active Directory ID of the actor."
      },
      "ActorUserId": {
        "type": "string",
        "description": "A machine-readable, alphanumeric, unique representation of the"
      },
      "ActorUserIdType": {
        "type": "string",
        "description": "The type of the ID stored in the ActorUserId field."
      },
      "ActorUsername": {
        "type": "string",
        "description": "The Actor's username, including domain information when"
      },
      "ActorUsernameType": {
        "type": "string",
        "description": "Specifies the type of the user name stored in the ActorUsername"
      },
      "ActorUserSid": {
        "type": "string",
        "description": "The Windows user ID (SIDs) of the actor."
      },
      "ActorUserType": {
        "type": "string",
        "description": "The type of the Actor."
      },
      "AdditionalFields": {
        "type": "dynamic",
        "description": "Additional information, represented using key/value pairs"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DvcAction": {
        "type": "string",
        "description": "For reporting security systems, the action taken by the system."
      },
      "DvcDescription": {
        "type": "string",
        "description": "A descriptive text associated with the device."
      },
      "DvcDomain": {
        "type": "string",
        "description": "The domain of the device reporting the event."
      },
      "DvcDomainType": {
        "type": "string",
        "description": "The type of DvcDomain."
      },
      "DvcFQDN": {
        "type": "string",
        "description": "The hostname of the device on which the event occurred or"
      },
      "DvcHostname": {
        "type": "string",
        "description": "The hostname of the device reporting the event."
      },
      "DvcId": {
        "type": "string",
        "description": "The unique ID of the device on which the event occurred or"
      },
      "DvcIdType": {
        "type": "string",
        "description": "The type of DvcId."
      },
      "DvcInterface": {
        "type": "string",
        "description": "The network interface on which data was captured."
      },
      "DvcIpAddr": {
        "type": "string",
        "description": "The IP Address of the device reporting the event."
      },
      "DvcMacAddr": {
        "type": "string",
        "description": "The MAC address of the device on which the event occurred or"
      },
      "DvcOriginalAction": {
        "type": "string",
        "description": "The original DvcAction as provided by the reporting device."
      },
      "DvcOs": {
        "type": "string",
        "description": "The operating system running on the device on which the event"
      },
      "DvcOsVersion": {
        "type": "string",
        "description": "The version of the operating system on the device on which the"
      },
      "DvcScope": {
        "type": "string",
        "description": "The cloud platform scope the device belongs to. DvcScope map"
      },
      "DvcScopeId": {
        "type": "string",
        "description": "The cloud platform scope ID the device belongs to. DvcScopeId"
      },
      "DvcZone": {
        "type": "string",
        "description": "The network on which the event occurred or which reported the"
      },
      "EventCount": {
        "type": "int",
        "description": "The number of events described by the record."
      },
      "EventEndTime": {
        "type": "datetime",
        "description": "The time in which the event ended. If the source supports"
      },
      "EventMessage": {
        "type": "string",
        "description": "A general message or description."
      },
      "EventOriginalResultDetails": {
        "type": "string",
        "description": "The original result details provided by the source."
      },
      "EventOriginalSeverity": {
        "type": "string",
        "description": "The original severity as provided by the reporting device."
      },
      "EventOriginalSubType": {
        "type": "string",
        "description": "The original event subtype or ID, if provided by the source."
      },
      "EventOriginalType": {
        "type": "string",
        "description": "The original event type or ID, if provided by the source."
      },
      "EventOriginalUid": {
        "type": "string",
        "description": "A unique ID of the original record, if provided by the source."
      },
      "EventOwner": {
        "type": "string",
        "description": "The owner of the event, which is usually the department or"
      },
      "EventProduct": {
        "type": "string",
        "description": "The product generating the event."
      },
      "EventProductVersion": {
        "type": "string",
        "description": "The version of the product generating the event."
      },
      "EventReportUrl": {
        "type": "string",
        "description": "A URL provided in the event for a resource that provides more"
      },
      "EventResult": {
        "type": "string",
        "description": "The outcome of the event, represented by one of the following"
      },
      "EventResultDetails": {
        "type": "string",
        "description": "Reason or details for the result reported in the EventResult field."
      },
      "EventSchema": {
        "type": "string",
        "description": "The name of the schema"
      },
      "EventSchemaVersion": {
        "type": "string",
        "description": "The version of the schema."
      },
      "EventSeverity": {
        "type": "string",
        "description": "The severity of the event. Valid values are: Informational, Low,"
      },
      "EventStartTime": {
        "type": "datetime",
        "description": "The time in which the event started. If the source supports"
      },
      "EventSubType": {
        "type": "string",
        "description": "Describes a subdivision of the operation reported in the"
      },
      "EventType": {
        "type": "string",
        "description": "Describes the operation reported by the record."
      },
      "EventVendor": {
        "type": "string",
        "description": "The vendor of the product generating the event."
      },
      "GroupId": {
        "type": "string",
        "description": "A machine-readable, alphanumeric, unique representation of the"
      },
      "GroupIdType": {
        "type": "string",
        "description": "The type of the ID stored in the GroupId field."
      },
      "GroupName": {
        "type": "string",
        "description": "The group name, including domain information when available,"
      },
      "GroupNameType": {
        "type": "string",
        "description": "Specifies the type of the group name stored in the GroupName"
      },
      "GroupOriginalType": {
        "type": "string",
        "description": "The original group type, if provided by the source."
      },
      "GroupType": {
        "type": "string",
        "description": "The type of the group, for activities involving a group."
      },
      "HttpUserAgent": {
        "type": "string",
        "description": "When authentication is performed over HTTP or HTTPS, this"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "NewPropertyValue": {
        "type": "string",
        "description": "The new value stored in the specified property."
      },
      "PreviousPropertyValue": {
        "type": "string",
        "description": "The previous value that was stored in the specified property."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "RuleName": {
        "type": "string",
        "description": "The name or ID of the rule by associated with the inspection"
      },
      "RuleNumber": {
        "type": "int",
        "description": "The number of the rule associated with the inspection results."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "SrcDescription": {
        "type": "string",
        "description": "A descriptive text associated with the source device."
      },
      "SrcDeviceType": {
        "type": "string",
        "description": "The type of the source device."
      },
      "SrcDomain": {
        "type": "string",
        "description": "The domain of the source device."
      },
      "SrcDomainType": {
        "type": "string",
        "description": "The type of SrcDomain."
      },
      "SrcDvcId": {
        "type": "string",
        "description": "The ID of the source device as reported in the record."
      },
      "SrcDvcIdType": {
        "type": "string",
        "description": "The type of SrcDvcId."
      },
      "SrcDvcScope": {
        "type": "string",
        "description": "The cloud platform scope the source device belongs to."
      },
      "SrcDvcScopeId": {
        "type": "string",
        "description": "The cloud platform scope ID the source device belongs to."
      },
      "SrcFQDN": {
        "type": "string",
        "description": "The source device hostname, including domain information when"
      },
      "SrcGeoCity": {
        "type": "string",
        "description": "The city associated with the source IP address."
      },
      "SrcGeoCountry": {
        "type": "string",
        "description": "The country associated with the source IP address."
      },
      "SrcGeoLatitude": {
        "type": "real",
        "description": "The latitude of the geographical coordinate associated with the"
      },
      "SrcGeoLongitude": {
        "type": "real",
        "description": "The longitude of the geographical coordinate associated with the"
      },
      "SrcGeoRegion": {
        "type": "string",
        "description": "The region within a country associated with the source IP"
      },
      "SrcHostname": {
        "type": "string",
        "description": "The source device hostname, excluding domain information."
      },
      "SrcIpAddr": {
        "type": "string",
        "description": "The IP address of the source device."
      },
      "SrcMacAddr": {
        "type": "string",
        "description": "The MAC address of the source device."
      },
      "SrcOriginalRiskLevel": {
        "type": "string",
        "description": "The risk level associaeted with the identified Source as reported"
      },
      "SrcPortNumber": {
        "type": "int",
        "description": "The Source IP port from which the connection originated."
      },
      "SrcRiskLevel": {
        "type": "int",
        "description": "The risk level associated with the identified Source."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TargetOriginalUserType": {
        "type": "string",
        "description": "The original destination user type, if provided by the source."
      },
      "TargetUserId": {
        "type": "string",
        "description": "A machine-readable, alphanumeric, unique representation of the"
      },
      "TargetUserIdType": {
        "type": "string",
        "description": "The type of the ID stored in the TargetUserId field."
      },
      "TargetUsername": {
        "type": "string",
        "description": "The target username, including domain information when"
      },
      "TargetUsernameType": {
        "type": "string",
        "description": "Specifies the type of the username stored in the TargetUsername"
      },
      "TargetUserScope": {
        "type": "string",
        "description": "The scope, such as Azure AD tenant name, in which TargetUserId"
      },
      "TargetUserScopeId": {
        "type": "string",
        "description": "The scope ID, such as Azure AD tenant ID, in which TargetUserId"
      },
      "TargetUserSessionId": {
        "type": "string",
        "description": "The unique ID of the sign-in session of the user."
      },
      "TargetUserType": {
        "type": "string",
        "description": "The type of target user."
      },
      "TargetUserUid": {
        "type": "string",
        "description": "The Unix or Linux user ID of the user."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "ThreatCategory": {
        "type": "string",
        "description": "The category of the threat or malware identified in activity."
      },
      "ThreatConfidence": {
        "type": "int",
        "description": "The confidence level of the threat identified, normalized to a"
      },
      "ThreatField": {
        "type": "string",
        "description": "The field for which a threat was identified."
      },
      "ThreatFirstReportedTime": {
        "type": "datetime",
        "description": "The first time the IP address or domain were identified as a"
      },
      "ThreatId": {
        "type": "string",
        "description": "The ID of the threat or malware identified in the activity."
      },
      "ThreatIsActive": {
        "type": "bool",
        "description": "True ID the threat identified is considered an active threat."
      },
      "ThreatLastReportedTime": {
        "type": "datetime",
        "description": "The last time the IP address or domain were identified as a threat."
      },
      "ThreatName": {
        "type": "string",
        "description": "The name of the threat or malware identified in the activity."
      },
      "ThreatOriginalConfidence": {
        "type": "string",
        "description": "The original confidence level of the threat identified, as reported"
      },
      "ThreatOriginalRiskLevel": {
        "type": "string",
        "description": "The risk level as reported by the reporting device."
      },
      "ThreatRiskLevel": {
        "type": "int",
        "description": "The risk level associated with the identified threat. The level"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) reflecting the time in which the event was"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "ASimWebSessionLogs": {
    "tableName": "ASimWebSessionLogs",
    "description": "The Advanced Security Information Model (ASIM) Web Session normalization schema - describe an IP network activity. For example, IP network activities are reported by web servers, web proxies, and web security gateways.",
    "columns": {
      "AdditionalFields": {
        "type": "dynamic",
        "description": "Additional information, represented using key/value pairs"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DstAppId": {
        "type": "string",
        "description": "The ID of the destination application, as reported by the"
      },
      "DstAppName": {
        "type": "string",
        "description": "The name of the destination application."
      },
      "DstAppType": {
        "type": "string",
        "description": "The type of the destination application."
      },
      "DstBytes": {
        "type": "long",
        "description": "The number of bytes sent from the destination to the source"
      },
      "DstDeviceType": {
        "type": "string",
        "description": "The type of the destination device."
      },
      "DstDomain": {
        "type": "string",
        "description": "The domain of the destination device."
      },
      "DstDomainType": {
        "type": "string",
        "description": "The type of DstDomain."
      },
      "DstDvcId": {
        "type": "string",
        "description": "The ID of the destination device."
      },
      "DstDvcIdType": {
        "type": "string",
        "description": "The type of DstDvcId."
      },
      "DstDvcScope": {
        "type": "string",
        "description": "The cloud platform scope the destination device belongs to."
      },
      "DstDvcScopeId": {
        "type": "string",
        "description": "The cloud platform scope ID the destination device belongs to."
      },
      "DstFQDN": {
        "type": "string",
        "description": "The destination device hostname, including domain"
      },
      "DstGeoCity": {
        "type": "string",
        "description": "The city associated with the destination IP address."
      },
      "DstGeoCountry": {
        "type": "string",
        "description": "The country associated with the destination IP address."
      },
      "DstGeoLatitude": {
        "type": "real",
        "description": "The latitude of the geographical coordinate associated with the"
      },
      "DstGeoLongitude": {
        "type": "real",
        "description": "The longitude of the geographical coordinate associated with"
      },
      "DstGeoRegion": {
        "type": "string",
        "description": "The region, or state, within a country associated with the"
      },
      "DstHostname": {
        "type": "string",
        "description": "The destination device hostname, excluding domain"
      },
      "DstIpAddr": {
        "type": "string",
        "description": "The IP address of the connection or session destination."
      },
      "DstMacAddr": {
        "type": "string",
        "description": "The MAC address of the network interface used for the"
      },
      "DstNatIpAddr": {
        "type": "string",
        "description": "The DstNatIpAddr represents either of: The original address of"
      },
      "DstNatPortNumber": {
        "type": "int",
        "description": "If reported by an intermediary NAT device, the port used by the"
      },
      "DstOriginalUserType": {
        "type": "string",
        "description": "The original destination user type, if provided by the source."
      },
      "DstPackets": {
        "type": "long",
        "description": "The number of packets sent from the destination to the source"
      },
      "DstPortNumber": {
        "type": "int",
        "description": "The destination IP port."
      },
      "DstUserId": {
        "type": "string",
        "description": "A machine-readable, alphanumeric, unique representation of"
      },
      "DstUserIdType": {
        "type": "string",
        "description": "The type of the ID stored in the DstUserId field."
      },
      "DstUsername": {
        "type": "string",
        "description": "The destination username, including domain information when"
      },
      "DstUsernameType": {
        "type": "string",
        "description": "Specifies the type of the username stored in the DstUsername"
      },
      "DstUserType": {
        "type": "string",
        "description": "The type of destination user."
      },
      "Dvc": {
        "type": "string",
        "description": "A unique identifier of the device on which the event occurred"
      },
      "DvcAction": {
        "type": "string",
        "description": "The action taken on the web session."
      },
      "DvcDomain": {
        "type": "string",
        "description": "The domain of the device reporting the event."
      },
      "DvcDomainType": {
        "type": "string",
        "description": "The type of DvcDomain. Possible values include 'Windows' and"
      },
      "DvcFQDN": {
        "type": "string",
        "description": "The hostname of the device on which the event occurred or"
      },
      "DvcHostname": {
        "type": "string",
        "description": "The hostname of the device reporting the event."
      },
      "DvcId": {
        "type": "string",
        "description": "The unique ID of the device on which the event occurred or"
      },
      "DvcIdType": {
        "type": "string",
        "description": "The type of DvcId."
      },
      "DvcIpAddr": {
        "type": "string",
        "description": "The IP Address of the device reporting the event."
      },
      "DvcOriginalAction": {
        "type": "string",
        "description": "The original DvcAction as provided by the reporting device."
      },
      "EventCount": {
        "type": "int",
        "description": "This value is used when the source supports aggregation, and a"
      },
      "EventEndTime": {
        "type": "datetime",
        "description": "The time in which the event ended. If the source supports"
      },
      "EventMessage": {
        "type": "string",
        "description": "A general message or description."
      },
      "EventOriginalResultDetails": {
        "type": "string",
        "description": "The original result details provided by the source. This value is"
      },
      "EventOriginalSeverity": {
        "type": "string",
        "description": "The original severity as provided by the reporting device. This"
      },
      "EventOriginalSubType": {
        "type": "string",
        "description": "The original event subtype or ID, if provided by the source. For"
      },
      "EventOriginalType": {
        "type": "string",
        "description": "The original event type or ID, if provided by the source."
      },
      "EventOriginalUid": {
        "type": "string",
        "description": "A unique ID of the original record, if provided by the source."
      },
      "EventOwner": {
        "type": "string",
        "description": "The owner of the event, which is usually the department or"
      },
      "EventProduct": {
        "type": "string",
        "description": "The product generating the event."
      },
      "EventProductVersion": {
        "type": "string",
        "description": "The version of the product generating the event."
      },
      "EventReportUrl": {
        "type": "string",
        "description": "A URL provided in the event for a resource that provides more"
      },
      "EventResult": {
        "type": "string",
        "description": "The outcome of the event, represented by one of the following"
      },
      "EventResultDetails": {
        "type": "string",
        "description": "The HTTP status code."
      },
      "EventSchemaVersion": {
        "type": "string",
        "description": "The version of the schema."
      },
      "EventSeverity": {
        "type": "string",
        "description": "The severity of the event. Valid values are: Informational, Low,"
      },
      "EventStartTime": {
        "type": "datetime",
        "description": "The time in which the event started. If the source supports"
      },
      "EventSubType": {
        "type": "string",
        "description": "Additional description of the event type, if applicable."
      },
      "EventType": {
        "type": "string",
        "description": "The operation reported by the record."
      },
      "EventVendor": {
        "type": "string",
        "description": "The vendor of the product generating the event."
      },
      "FileContentType": {
        "type": "string",
        "description": "For HTTP uploads, the content type of the uploaded file."
      },
      "FileMD5": {
        "type": "string",
        "description": "For HTTP uploads, the MD5 hash of the uploaded file."
      },
      "FileName": {
        "type": "string",
        "description": "For HTTP uploads, the name of the uploaded file."
      },
      "FileSHA1": {
        "type": "string",
        "description": "For HTTP uploads, the SHA1 hash of the uploaded file."
      },
      "FileSHA256": {
        "type": "string",
        "description": "For HTTP uploads, the SHA256 hash of the uploaded file."
      },
      "FileSHA512": {
        "type": "string",
        "description": "For HTTP uploads, the SHA512 hash of the uploaded file."
      },
      "FileSize": {
        "type": "int",
        "description": "For HTTP uploads, the size in bytes of the uploaded file."
      },
      "HttpContentFormat": {
        "type": "string",
        "description": "The content format part of the HttpContentType"
      },
      "HttpContentType": {
        "type": "string",
        "description": "The HTTP Response content type header."
      },
      "HttpHost": {
        "type": "string",
        "description": "The virtual web server the HTTP request has targeted."
      },
      "HttpReferrer": {
        "type": "string",
        "description": "The HTTP referrer header."
      },
      "HttpRequestMethod": {
        "type": "string",
        "description": "The HTTP Method."
      },
      "HttpRequestTime": {
        "type": "int",
        "description": "The amount of time, in milliseconds, it took to send the request"
      },
      "HttpRequestXff": {
        "type": "string",
        "description": "The HTTP X-Forwarded-For header."
      },
      "HttpResponseTime": {
        "type": "int",
        "description": "The amount of time, in milliseconds, it took to receive a"
      },
      "HttpUserAgent": {
        "type": "string",
        "description": "The HTTP user agent header."
      },
      "HttpVersion": {
        "type": "string",
        "description": "The HTTP Request Version."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable"
      },
      "NetworkApplicationProtocol": {
        "type": "string",
        "description": "The application layer protocol used by the connection or"
      },
      "NetworkBytes": {
        "type": "long",
        "description": "Number of bytes sent in both directions. If both BytesReceived"
      },
      "NetworkConnectionHistory": {
        "type": "string",
        "description": "TCP flags and other potential IP header information."
      },
      "NetworkDirection": {
        "type": "string",
        "description": "The direction of the connection or session."
      },
      "NetworkDuration": {
        "type": "int",
        "description": "The amount of time, in milliseconds, for the completion of the"
      },
      "NetworkIcmpCode": {
        "type": "int",
        "description": "For an ICMP message, the ICMP message type numeric value"
      },
      "NetworkIcmpType": {
        "type": "string",
        "description": "For an ICMP message, the ICMP message type text"
      },
      "NetworkPackets": {
        "type": "long",
        "description": "The number of packets sent in both directions. If both"
      },
      "NetworkProtocol": {
        "type": "string",
        "description": "The IP protocol used by the connection or session as listed in"
      },
      "NetworkProtocolVersion": {
        "type": "string",
        "description": "The version of NetworkProtocol."
      },
      "NetworkSessionId": {
        "type": "string",
        "description": "The session identifier as reported by the reporting device."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "Rule": {
        "type": "string",
        "description": "Either NetworkRuleName or NetworkRuleNumber"
      },
      "RuleName": {
        "type": "string",
        "description": "The name or ID of the rule by which DvcAction was decided"
      },
      "RuleNumber": {
        "type": "int",
        "description": "The number of the rule by which DvcAction was decided upon."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "SrcAppId": {
        "type": "string",
        "description": "The ID of the source application, as reported by the reporting"
      },
      "SrcAppName": {
        "type": "string",
        "description": "The name of the source application."
      },
      "SrcAppType": {
        "type": "string",
        "description": "The type of the source application."
      },
      "SrcBytes": {
        "type": "long",
        "description": "The number of bytes sent from the source to the destination"
      },
      "SrcDeviceType": {
        "type": "string",
        "description": "The type of the source device."
      },
      "SrcDomain": {
        "type": "string",
        "description": "The domain of the source device."
      },
      "SrcDomainType": {
        "type": "string",
        "description": "The type of SrcDomain."
      },
      "SrcDvcId": {
        "type": "string",
        "description": "The ID of the source device."
      },
      "SrcDvcIdType": {
        "type": "string",
        "description": "The type of SrcDvcId."
      },
      "SrcDvcScope": {
        "type": "string",
        "description": "The cloud platform scope the source device belongs to."
      },
      "SrcDvcScopeId": {
        "type": "string",
        "description": "The cloud platform scope ID the source device belongs to."
      },
      "SrcFQDN": {
        "type": "string",
        "description": "The source device hostname, including domain information"
      },
      "SrcGeoCity": {
        "type": "string",
        "description": "The city associated with the source IP address."
      },
      "SrcGeoCountry": {
        "type": "string",
        "description": "The country associated with the source IP address."
      },
      "SrcGeoLatitude": {
        "type": "real",
        "description": "The latitude of the geographical coordinate associated with the"
      },
      "SrcGeoLongitude": {
        "type": "real",
        "description": "The longitude of the geographical coordinate associated with"
      },
      "SrcGeoRegion": {
        "type": "string",
        "description": "The region within a country associated with the source IP"
      },
      "SrcHostname": {
        "type": "string",
        "description": "The source device hostname, excluding domain information. If"
      },
      "SrcIpAddr": {
        "type": "string",
        "description": "The IP address from which the connection or session"
      },
      "SrcMacAddr": {
        "type": "string",
        "description": "The MAC address of the network interface from which the"
      },
      "SrcNatIpAddr": {
        "type": "string",
        "description": "The SrcNatIpAddr represents either of: The original address of"
      },
      "SrcNatPortNumber": {
        "type": "int",
        "description": "If reported by an intermediary NAT device, the port used by the"
      },
      "SrcOriginalUserType": {
        "type": "string",
        "description": "The original destination user type, if provided by the by the"
      },
      "SrcPackets": {
        "type": "long",
        "description": "The number of packets sent from the source to the destination"
      },
      "SrcPortNumber": {
        "type": "int",
        "description": "The IP port from which the connection originated. Might not be"
      },
      "SrcProcessGuid": {
        "type": "string",
        "description": "A generated unique identifier (GUID) of the source process."
      },
      "SrcProcessId": {
        "type": "string",
        "description": "The process ID (PID) of the source process."
      },
      "SrcProcessName": {
        "type": "string",
        "description": "The name of the source process."
      },
      "SrcUserId": {
        "type": "string",
        "description": "A machine-readable, alphanumeric, unique representation of"
      },
      "SrcUserIdType": {
        "type": "string",
        "description": "The type of the ID stored in the SrcUserId field."
      },
      "SrcUsername": {
        "type": "string",
        "description": "The source username, including domain information when"
      },
      "SrcUsernameType": {
        "type": "string",
        "description": "Specifies the type of the username stored in the SrcUsername"
      },
      "SrcUserScope": {
        "type": "string",
        "description": "The scope, such as Azure AD tenant, in which SrcUserId and"
      },
      "SrcUserScopeId": {
        "type": "string",
        "description": "The ID of the scope, such as Azure AD tenant, in which"
      },
      "SrcUserType": {
        "type": "string",
        "description": "The type of the source user."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "ThreatCategory": {
        "type": "string",
        "description": "The category of the threat or malware identified in the web"
      },
      "ThreatConfidence": {
        "type": "int",
        "description": "The confidence level of the threat identified, normalized to a"
      },
      "ThreatField": {
        "type": "string",
        "description": "The field for which a threat was identified. The value is either"
      },
      "ThreatFirstReportedTime": {
        "type": "datetime",
        "description": "The first time the IP address or domain were identified as a"
      },
      "ThreatId": {
        "type": "string",
        "description": "The ID of the threat or malware identified in the web session."
      },
      "ThreatIpAddr": {
        "type": "string",
        "description": "An IP address for which a threat was identified. The field"
      },
      "ThreatIsActive": {
        "type": "bool",
        "description": "True ID the threat identified is considered an active threat."
      },
      "ThreatLastReportedTime": {
        "type": "datetime",
        "description": "The last time the IP address or domain were identified as a"
      },
      "ThreatName": {
        "type": "string",
        "description": "The name of the threat or malware identified in the web"
      },
      "ThreatOriginalConfidence": {
        "type": "string",
        "description": "The original confidence level of the threat identified, as"
      },
      "ThreatOriginalRiskLevel": {
        "type": "string",
        "description": "The risk level as reported by the reporting device."
      },
      "ThreatRiskLevel": {
        "type": "int",
        "description": "The risk level associated with the session. The level is a number"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) reflecting the time in which the event was"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "Url": {
        "type": "string",
        "description": "The full HTTP request URL, including parameters."
      },
      "UrlCategory": {
        "type": "string",
        "description": "The defined grouping of a URL or the domain part of the URL."
      },
      "UrlOriginal": {
        "type": "string",
        "description": "The original value of the URL, when the URL was modified by"
      }
    }
  },
  "ATCExpressRouteCircuitIpfix": {
    "tableName": "ATCExpressRouteCircuitIpfix",
    "description": "This table has Express Route Circuit IPFIX flow records. Flow records are captured and emitted by Azure Traffic Collector (ATC).",
    "columns": {
      "ATCRegion": {
        "type": "string",
        "description": "Azure Traffic Collector (ATC) deployment region."
      },
      "ATCResourceId": {
        "type": "string",
        "description": "Azure resource ID of Azure Traffic Collector (ATC)."
      },
      "BgpNextHop": {
        "type": "string",
        "description": "Border Gateway Protocol (BGP) next hop as defined in the routing"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DestinationIp": {
        "type": "string",
        "description": "Destination IP address."
      },
      "DestinationPort": {
        "type": "int",
        "description": "TCP destination port."
      },
      "Dot1qCustomerVlanId": {
        "type": "int",
        "description": "Dot1q Customer VlanId."
      },
      "Dot1qVlanId": {
        "type": "int",
        "description": "Dot1q VlanId."
      },
      "DstAsn": {
        "type": "int",
        "description": "Destination Autonomous System Number (ASN)."
      },
      "DstMask": {
        "type": "int",
        "description": "Mask of destination subnet."
      },
      "DstSubnet": {
        "type": "string",
        "description": "Destination subnet of destination IP."
      },
      "ExRCircuitDirectPortId": {
        "type": "string",
        "description": "Azure resource ID of Express Route Circuit's direct port."
      },
      "ExRCircuitId": {
        "type": "string",
        "description": "Azure resource ID of Express Route Circuit."
      },
      "ExRCircuitServiceKey": {
        "type": "string",
        "description": "Service key of Express Route Circuit."
      },
      "FlowRecordTime": {
        "type": "datetime",
        "description": "Timestamp (UTC) when Express Route Circuit emitted this flow"
      },
      "Flowsequence": {
        "type": "long",
        "description": "Flow sequence of this flow."
      },
      "IcmpType": {
        "type": "int",
        "description": "Protocol type as specified in IP header."
      },
      "IpClassOfService": {
        "type": "int",
        "description": "IP Class of service as specified in IP header."
      },
      "IpProtocolIdentifier": {
        "type": "int",
        "description": "Protocol type as specified in IP header."
      },
      "IpVerCode": {
        "type": "int",
        "description": "IP version as defined in the IP header."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "MaxTtl": {
        "type": "int",
        "description": "Maximum time to live (TTL) as defined in the IP header."
      },
      "MinTtl": {
        "type": "int",
        "description": "Minimum time to live (TTL) as defined in the IP header."
      },
      "NextHop": {
        "type": "string",
        "description": "Next hop as per forwarding table."
      },
      "NumberOfBytes": {
        "type": "long",
        "description": "Total number of bytes of packets captured in this flow."
      },
      "NumberOfPackets": {
        "type": "long",
        "description": "Total number of packets captured in this flow."
      },
      "OperationName": {
        "type": "string",
        "description": "The specific Azure Traffic Collector (ATC) operation that emitted this"
      },
      "PeeringType": {
        "type": "string",
        "description": "Express Route Circuit peering type."
      },
      "Protocol": {
        "type": "int",
        "description": "Protocol type as specified in IP header."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SchemaVersion": {
        "type": "string",
        "description": "Flow record schema version."
      },
      "SourceIp": {
        "type": "string",
        "description": "Source IP address."
      },
      "SourcePort": {
        "type": "int",
        "description": "TCP source port."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "SrcAsn": {
        "type": "int",
        "description": "Source Autonomous System Number (ASN)."
      },
      "SrcMask": {
        "type": "int",
        "description": "Mask of source subnet."
      },
      "SrcSubnet": {
        "type": "string",
        "description": "Source subnet of source IP."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TcpFlag": {
        "type": "int",
        "description": "TCP flag as defined in the TCP header."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (UTC) when the Azure Traffic Collector (ATC) emitted this"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "ATCMicrosoftPeeringMetadata": {
    "tableName": "ATCMicrosoftPeeringMetadata",
    "description": "This table has Microsoft Peering public IP metadata.",
    "columns": {
      "ATCRegion": {
        "type": "string",
        "description": "Azure Traffic Collector (ATC) deployment region."
      },
      "ATCResourceId": {
        "type": "string",
        "description": "Azure resource ID of Azure Traffic Collector (ATC)."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "IpMask": {
        "type": "string",
        "description": "Mask of Microsoft Peering IP prefix."
      },
      "IpSubnet": {
        "type": "string",
        "description": "Subnet of Microsoft Peering IP prefix."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "OperationName": {
        "type": "string",
        "description": "The specific Azure Traffic Collector (ATC) operation that emitted this"
      },
      "PrefixRegion": {
        "type": "string",
        "description": "Azure region of the IP prefix."
      },
      "RegionalBgpCommunity": {
        "type": "string",
        "description": "Region-based Border Gateway Protocol (BGP) Community tag."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "SchemaVersion": {
        "type": "string",
        "description": "Flow record schema version."
      },
      "ServiceBgpCommunity": {
        "type": "string",
        "description": "Service-based Border Gateway Protocol (BGP) Community tag."
      },
      "ServiceName": {
        "type": "string",
        "description": "Type of service the IP prefix is."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (UTC) when the Azure Traffic Collector (ATC) emitted"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "ATCPrivatePeeringMetadata": {
    "tableName": "ATCPrivatePeeringMetadata",
    "description": "This table has Private Peering Vnet metadata.",
    "columns": {
      "ATCRegion": {
        "type": "string",
        "description": "Azure Traffic Collector (ATC) deployment region."
      },
      "ATCResourceId": {
        "type": "string",
        "description": "Azure resource ID of Azure Traffic Collector (ATC)."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ExRCircuitId": {
        "type": "string",
        "description": "Azure resource ID of Express Route Circuit."
      },
      "ExRCircuitServiceKey": {
        "type": "string",
        "description": "Service key of Express Route Circuit."
      },
      "IpMask": {
        "type": "int",
        "description": "Mask of Virtual Network resource."
      },
      "IpSubnet": {
        "type": "dynamic",
        "description": "Azure resource ID of subnet and subnet IP address."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "OperationName": {
        "type": "string",
        "description": "The specific Azure Traffic Collector (ATC) operation that emitted this"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SchemaVersion": {
        "type": "string",
        "description": "Flow record schema version."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (UTC) when the Azure Traffic Collector (ATC) emitted this"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "VnetAddressPrefix": {
        "type": "string",
        "description": "IP address of Virtual Network resource."
      },
      "VnetId": {
        "type": "string",
        "description": "Azure resource ID of Virtual Network."
      },
      "VnetLocation": {
        "type": "string",
        "description": "Azure region of Virtual Network resource."
      },
      "VnetName": {
        "type": "string",
        "description": "Virtual Network resource name."
      },
      "VnetResourceGroup": {
        "type": "string",
        "description": "Azure resource group of Virtual Network."
      },
      "VnetSubscriptionId": {
        "type": "string",
        "description": "Azure subscription ID of Virtual Network."
      }
    }
  },
  "AVNMConnectivityConfigurationChange": {
    "tableName": "AVNMConnectivityConfigurationChange",
    "description": "Includes logs related to application or removal of connectivity configuration, on network resources like a virtual network.",
    "columns": {
      "AppliedConnectivityConfigurations": {
        "type": "dynamic",
        "description": "List of connectivity configuration IDs along with the"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CorrelationId": {
        "type": "string",
        "description": "The correlation ID associated with the connectivity"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "Location": {
        "type": "string",
        "description": "Region of the network resource managed by network"
      },
      "LogLevel": {
        "type": "string",
        "description": "Indicates the log level and can include: Info, Warning,"
      },
      "Message": {
        "type": "string",
        "description": "A brief success or failure message."
      },
      "NetworkResourceIds": {
        "type": "dynamic",
        "description": "Virtual Network IDs for which applied connectivity"
      },
      "OperationName": {
        "type": "string",
        "description": "Name of the operation that applies connectivity"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "ResultType": {
        "type": "string",
        "description": "Indicates the operation status and can include: Success,"
      },
      "SelfDiagnosis": {
        "type": "string",
        "description": "A descriptive self diagnosis message that can include"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The date and time the event was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AVNMIPAMPoolAllocationChange": {
    "tableName": "AVNMIPAMPoolAllocationChange",
    "description": "Includes changes to allocations of an IPAM Pool such as Virtual Networks, static CIDRs, or child pools.",
    "columns": {
      "AllocationResources": {
        "type": "dynamic",
        "description": "Details about resources allocated to the pool that changed, including"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ChangeReason": {
        "type": "string",
        "description": "The reason why allocations were changed and can include:"
      },
      "ChangeType": {
        "type": "string",
        "description": "The type of allocation change and can include: Add, Remove, Update."
      },
      "CorrelationId": {
        "type": "string",
        "description": "The correlation ID associated with the pool allocation change"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Location": {
        "type": "string",
        "description": "Region of the IPAM Pool."
      },
      "LogLevel": {
        "type": "string",
        "description": "Indicates the log level and can include: Info, Warning, Error."
      },
      "Message": {
        "type": "string",
        "description": "A brief success or failure message."
      },
      "OperationName": {
        "type": "string",
        "description": "Name of the operation that triggered the pool allocation change."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultType": {
        "type": "string",
        "description": "Indicates the operation status and can include: Success, Failure."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The date and time the event was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AVNMNetworkGroupMembershipChange": {
    "tableName": "AVNMNetworkGroupMembershipChange",
    "description": "Includes changes to network group membership of network resources like a virtual network.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CorrelationId": {
        "type": "string",
        "description": "The correlation ID associated with the network group membership"
      },
      "DetailedMessage": {
        "type": "string",
        "description": "A descriptive message that can include explanations and resolution"
      },
      "GroupMemberships": {
        "type": "dynamic",
        "description": "Details about the Virtual Network's membership of Network Group(s),"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Location": {
        "type": "string",
        "description": "Region of the Virtual Network."
      },
      "LogLevel": {
        "type": "string",
        "description": "Indicates the log level and can include: Info, Warning, Error."
      },
      "Message": {
        "type": "string",
        "description": "A brief success or failure message."
      },
      "NetworkResourceIds": {
        "type": "dynamic",
        "description": "Virtual Network IDs for which network group membership changed"
      },
      "OperationName": {
        "type": "string",
        "description": "Name of the operation that triggered the Virtual Network's addition or"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultType": {
        "type": "string",
        "description": "Indicates the operation status and can include: Success, Failure."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The date and time the event was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AVNMRuleCollectionChange": {
    "tableName": "AVNMRuleCollectionChange",
    "description": "Include logs related to application or removal of rule collections, on network resources like a virtual network or a subnet.",
    "columns": {
      "AppliedRuleCollectionIds": {
        "type": "dynamic",
        "description": "List of current applied rule collections to the network resources"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CorrelationId": {
        "type": "string",
        "description": "The correlation ID associated with the rule collection change"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Location": {
        "type": "string",
        "description": "Region of the network resource managed by network manager like"
      },
      "LogLevel": {
        "type": "string",
        "description": "Indicates the log level and can include: Info, Warning, Error."
      },
      "Message": {
        "type": "string",
        "description": "A brief success or failure message."
      },
      "NetworkResourceIds": {
        "type": "dynamic",
        "description": "Virtual Network or Subnet IDs for which applied rule collections"
      },
      "OperationName": {
        "type": "string",
        "description": "Name of the operation that applies rule collections or removes"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "ResultType": {
        "type": "string",
        "description": "Indicates the operation status and can include: Success, Failure."
      },
      "SelfDiagnosis": {
        "type": "string",
        "description": "A descriptive self diagnosis message that can include explanations"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The date and time the event was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AVSEsxiFirewallSyslog": {
    "tableName": "AVSEsxiFirewallSyslog",
    "description": "Contains firewall logs generated by ESXi hosts (distributed firewall and IDS/IPS where available).",
    "columns": {
      "AppName": {
        "type": "string",
        "description": "The name of the application that generated this log, if available."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Facility": {
        "type": "string",
        "description": "Indicates the source that generated the syslog (e.g., an operating system, a"
      },
      "HostName": {
        "type": "string",
        "description": "The name of the host that generated this log, if available."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogCreationTime": {
        "type": "datetime",
        "description": "The time at which the log was created, if available."
      },
      "Message": {
        "type": "string",
        "description": "The entire syslog message."
      },
      "MsgId": {
        "type": "string",
        "description": "Identifies the type of message. For example, a firewall might use MSGID"
      },
      "ProcId": {
        "type": "string",
        "description": "Identifies a process; specific usage varies from application to application."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Severity": {
        "type": "string",
        "description": "The severity of the log. Acceptable values, in ascending level of severity:"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The time at which the log was ingested."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AVSEsxiSyslog": {
    "tableName": "AVSEsxiSyslog",
    "description": "Contains logs generated by ESXi hosts, other than firewall and IDS/IPS entries.",
    "columns": {
      "AppName": {
        "type": "string",
        "description": "The name of the application that generated this log, if available."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Facility": {
        "type": "string",
        "description": "Indicates the source that generated the syslog (e.g., an operating system, a"
      },
      "HostName": {
        "type": "string",
        "description": "The name of the host that generated this log, if available."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogCreationTime": {
        "type": "datetime",
        "description": "The time at which the log was created, if available."
      },
      "Message": {
        "type": "string",
        "description": "The entire syslog message."
      },
      "MsgId": {
        "type": "string",
        "description": "Identifies the type of message. For example, a firewall might use MSGID"
      },
      "ProcId": {
        "type": "string",
        "description": "Identifies a process; specific usage varies from application to application."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Severity": {
        "type": "string",
        "description": "The severity of the log. Acceptable values, in ascending level of severity:"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The time at which the log was ingested."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AVSNsxEdgeSyslog": {
    "tableName": "AVSNsxEdgeSyslog",
    "description": "Contains logs generated by NSX Edges.",
    "columns": {
      "AppName": {
        "type": "string",
        "description": "The name of the application that generated this log, if available."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Facility": {
        "type": "string",
        "description": "Indicates the source that generated the syslog (e.g., an operating system, a"
      },
      "HostName": {
        "type": "string",
        "description": "The name of the host that generated this log, if available."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogCreationTime": {
        "type": "datetime",
        "description": "The time at which the log was created, if available."
      },
      "Message": {
        "type": "string",
        "description": "The entire syslog message."
      },
      "MsgId": {
        "type": "string",
        "description": "Identifies the type of message. For example, a firewall might use MSGID"
      },
      "ProcId": {
        "type": "string",
        "description": "Identifies a process; specific usage varies from application to application."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Severity": {
        "type": "string",
        "description": "The severity of the log. Acceptable values, in ascending level of severity:"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The time at which the log was ingested."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AVSNsxManagerSyslog": {
    "tableName": "AVSNsxManagerSyslog",
    "description": "Contains logs generated by NSX Managers.",
    "columns": {
      "AppName": {
        "type": "string",
        "description": "The name of the application that generated this log, if available."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Facility": {
        "type": "string",
        "description": "Indicates the source that generated the syslog (e.g., an operating system, a"
      },
      "HostName": {
        "type": "string",
        "description": "The name of the host that generated this log, if available."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogCreationTime": {
        "type": "datetime",
        "description": "The time at which the log was created, if available."
      },
      "Message": {
        "type": "string",
        "description": "The entire syslog message."
      },
      "MsgId": {
        "type": "string",
        "description": "Identifies the type of message. For example, a firewall might use MSGID"
      },
      "ProcId": {
        "type": "string",
        "description": "Identifies a process; specific usage varies from application to application."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Severity": {
        "type": "string",
        "description": "The severity of the log. Acceptable values, in ascending level of severity:"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The time at which the log was ingested."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AVSSyslog": {
    "tableName": "AVSSyslog",
    "description": "Contains all system logs generated by VMWare applications, including (but not limited to) VCenter, NSX, and more.",
    "columns": {
      "AppName": {
        "type": "string",
        "description": "The name of the application that generated this log, if available."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Facility": {
        "type": "string",
        "description": "Indicates the source that generated the syslog (e.g., an operating system, a"
      },
      "HostName": {
        "type": "string",
        "description": "The name of the host that generated this log, if available."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogCreationTime": {
        "type": "datetime",
        "description": "The time at which the log was created, if available."
      },
      "Message": {
        "type": "string",
        "description": "The entire syslog message."
      },
      "MsgId": {
        "type": "string",
        "description": "Identifies the type of message. For example, a firewall might use MSGID"
      },
      "ProcId": {
        "type": "string",
        "description": "Identifies a process; specific usage varies from application to application."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Severity": {
        "type": "string",
        "description": "The severity of the log. Acceptable values, in ascending level of severity:"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The time at which the log was ingested."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AVSVcSyslog": {
    "tableName": "AVSVcSyslog",
    "description": "Contains all system logs generated by vCenter appliance.",
    "columns": {
      "AppName": {
        "type": "string",
        "description": "The name of the application that generated this log, if available."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Facility": {
        "type": "string",
        "description": "Indicates the source that generated the syslog (e.g., an operating system, a"
      },
      "HostName": {
        "type": "string",
        "description": "The name of the host that generated this log, if available."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogCreationTime": {
        "type": "datetime",
        "description": "The time at which the log was created, if available."
      },
      "Message": {
        "type": "string",
        "description": "The entire syslog message."
      },
      "MsgId": {
        "type": "string",
        "description": "Identifies the type of message. For example, a firewall might use MSGID"
      },
      "ProcId": {
        "type": "string",
        "description": "Identifies a process; specific usage varies from application to application."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Severity": {
        "type": "string",
        "description": "The severity of the log. Acceptable values, in ascending level of severity:"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The time at which the log was ingested."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AWSCloudTrail": {
    "tableName": "AWSCloudTrail",
    "description": "CloudTrail logs, which ingested from Sentinel's connector, holds all your data and management events of your Amazon Wev Services account.",
    "columns": {
      "AdditionalEventData": {
        "type": "string",
        "description": "Additional data about the event that was not part of the request"
      },
      "APIVersion": {
        "type": "string",
        "description": "Identifies the API version associated with the AwsApiCall"
      },
      "AwsEventId": {
        "type": "string",
        "description": "GUID generated by CloudTrail to uniquely identify each event."
      },
      "AWSRegion": {
        "type": "string",
        "description": "The AWS region that the request was made to."
      },
      "AwsRequestId": {
        "type": "string",
        "description": "deprecated, please use AwsRequestId_ instead."
      },
      "AwsRequestId_": {
        "type": "string",
        "description": "The value that identifies the request. The service being called"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "Shows the event category that is used in LookupEvents calls."
      },
      "CidrIp": {
        "type": "string",
        "description": "The CIDR IP is located under RequestParameters in CloudTrail,"
      },
      "CipherSuite": {
        "type": "string",
        "description": "Optional. Part of tlsDetails. The cipher suite (combination of"
      },
      "ClientProvidedHostHeader": {
        "type": "string",
        "description": "Optional. Part of tlsDetails. The client-provided host name used"
      },
      "DestinationPort": {
        "type": "string",
        "description": "The DestinationPort is located under RequestParameters in"
      },
      "EC2RoleDelivery": {
        "type": "string",
        "description": "The friendly name of the user or role that issued the session."
      },
      "ErrorCode": {
        "type": "string",
        "description": "The AWS service error if the request returns an error."
      },
      "ErrorMessage": {
        "type": "string",
        "description": "The error description when available. This message includes"
      },
      "EventName": {
        "type": "string",
        "description": "The requested action, which is one of the actions in the API for"
      },
      "EventSource": {
        "type": "string",
        "description": "The service that the request was made to. This name is typically a"
      },
      "EventTypeName": {
        "type": "string",
        "description": "Identifies the type of event that generated the event record. This"
      },
      "EventVersion": {
        "type": "string",
        "description": "The version of the log event format."
      },
      "IpProtocol": {
        "type": "string",
        "description": "The IP protocol is located under RequestParameters in CloudTrail,"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable"
      },
      "ManagementEvent": {
        "type": "bool",
        "description": "A Boolean value that identifies whether the event is a"
      },
      "OperationName": {
        "type": "string",
        "description": "Constant value: CloudTrail."
      },
      "ReadOnly": {
        "type": "bool",
        "description": "Identifies whether this operation is a read-only operation."
      },
      "RecipientAccountId": {
        "type": "string",
        "description": "Represents the account ID that received this event. The"
      },
      "RequestParameters": {
        "type": "string",
        "description": "The parameters, if any, that were sent with the request. These"
      },
      "Resources": {
        "type": "string",
        "description": "A list of resources accessed in the event."
      },
      "ResponseElements": {
        "type": "string",
        "description": "The response element for actions that make changes (create,"
      },
      "ServiceEventDetails": {
        "type": "string",
        "description": "Identifies the service event, including what triggered the event"
      },
      "SessionCreationDate": {
        "type": "datetime",
        "description": "The date and time when the temporary security credentials were"
      },
      "SessionIssuerAccountId": {
        "type": "string",
        "description": "The account that owns the entity that was used to get"
      },
      "SessionIssuerArn": {
        "type": "string",
        "description": "The ARN of the source (account, IAM user, or role) that was used"
      },
      "SessionIssuerPrincipalId": {
        "type": "string",
        "description": "The internal ID of the entity that was used to get credentials."
      },
      "SessionIssuerType": {
        "type": "string",
        "description": "The source of the temporary security credentials, such as Root,"
      },
      "SessionIssuerUserName": {
        "type": "string",
        "description": "The friendly name of the user or role that issued the session."
      },
      "SessionMfaAuthenticated": {
        "type": "bool",
        "description": "The value is true if the root user or IAM user whose credentials"
      },
      "SharedEventId": {
        "type": "string",
        "description": "GUID generated by CloudTrail to uniquely identify CloudTrail"
      },
      "SourceIpAddress": {
        "type": "string",
        "description": "The IP address that the request was made from. For actions that"
      },
      "SourcePort": {
        "type": "string",
        "description": "The SourcePort is located under RequestParameters in CloudTrail,"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC). An event's time stamp comes from the"
      },
      "TlsVersion": {
        "type": "string",
        "description": "Optional. Part of tlsDetails. The TLS version of a request."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The agent through which the request was made, such as the AWS"
      },
      "UserIdentityAccessKeyId": {
        "type": "string",
        "description": "The access key ID that was used to sign the request."
      },
      "UserIdentityAccountId": {
        "type": "string",
        "description": "The account that owns the entity that granted permissions for"
      },
      "UserIdentityArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the principal that made"
      },
      "UserIdentityInvokedBy": {
        "type": "string",
        "description": "The name of the AWS service that made the request."
      },
      "UserIdentityPrincipalid": {
        "type": "string",
        "description": "A unique identifier for the entity that made the call."
      },
      "UserIdentityType": {
        "type": "string",
        "description": "The type of the identity. The following values are possible: Root,"
      },
      "UserIdentityUserName": {
        "type": "string",
        "description": "The name of the identity that made the call."
      },
      "VpcEndpointId": {
        "type": "string",
        "description": "Identifies the VPC endpoint in which requests were made from a"
      }
    }
  },
  "AWSCloudWatch": {
    "tableName": "AWSCloudWatch",
    "description": "The CloudWatch Logs provide performance and billing data from the AWS CloudWatch service which helps the user better understand and operate the AWS system and application.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ExtractedTime": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the event was generated."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Message": {
        "type": "string",
        "description": "The data contained within logs from CloudWatch."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) when the event was generated and equals to"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AWSGuardDuty": {
    "tableName": "AWSGuardDuty",
    "description": "Guard Duty Findings, which ingested from Sentinel's connector, represents a potential security issue detected within your network. GuardDuty generates a finding whenever it detects unexpected and potentially malicious activity in your AWS environment.",
    "columns": {
      "AccountId": {
        "type": "string",
        "description": "The AWS account ID that owns the VPC which sent the query."
      },
      "ActivityType": {
        "type": "string",
        "description": "A formatted string representing the type of activity that triggered the"
      },
      "Arn": {
        "type": "string",
        "description": "Amazon resource name of the finding."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Description": {
        "type": "string",
        "description": "Description of the primary purpose of the threat or attack related to the"
      },
      "Id": {
        "type": "string",
        "description": "A unique Finding ID for this finding type and set of parameters. New"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Partition": {
        "type": "string",
        "description": "The AWS partition in which the finding was generated."
      },
      "Region": {
        "type": "string",
        "description": "AWS region where the log was generated."
      },
      "ResourceDetails": {
        "type": "dynamic",
        "description": "Gives details on the AWS resource that was targeted by the trigger activity."
      },
      "SchemaVersion": {
        "type": "string",
        "description": "The Guard Duty finding version."
      },
      "ServiceDetails": {
        "type": "dynamic",
        "description": "Gives details on the AWS service that was related to the finding, including"
      },
      "Severity": {
        "type": "string",
        "description": "The severity level of the event, typically based on Suricata rule"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeCreated": {
        "type": "datetime",
        "description": "The time and date when this finding was first created. If this value differs"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The time the AWS Server Access log was received by the S3 bucket, in"
      },
      "Title": {
        "type": "string",
        "description": "Summary of the primary purpose of the threat or attack related to the"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "AlertAction": {
        "type": "string",
        "description": "The action taken when an alert was triggered (e.g., allowed, dropped,"
      },
      "AppProto": {
        "type": "string",
        "description": "The application layer protocol detected (e.g., HTTP, HTTPS, DNS)."
      },
      "AvailabilityZone": {
        "type": "string",
        "description": "The AWS Availability Zone where the firewall instance is located."
      },
      "Category": {
        "type": "string",
        "description": "The category of the detected threat or network activity."
      },
      "DestIp": {
        "type": "string",
        "description": "The destination IP address of the packet."
      },
      "DestPort": {
        "type": "string",
        "description": "The destination port to which the packet was sent."
      },
      "Direction": {
        "type": "string",
        "description": "The direction of the traffic (e.g., inbound, outbound)."
      },
      "EventTimestamp": {
        "type": "datetime",
        "description": "The epoch timestamp of when the event occurred."
      },
      "EventType": {
        "type": "string",
        "description": "The type of event recorded (e.g., flow, alert, drop, pass)."
      },
      "FirewallName": {
        "type": "string",
        "description": "The name of the AWS Network Firewall instance generating the"
      },
      "FlowId": {
        "type": "string",
        "description": "A unique identifier for the network flow related to this event."
      },
      "PktSrc": {
        "type": "string",
        "description": "The source of the packet (e.g., internal, external, firewall rule)."
      },
      "Proto": {
        "type": "string",
        "description": "The protocol used (e.g., TCP, UDP, ICMP)."
      },
      "Rev": {
        "type": "string",
        "description": "The revision number of the matched Suricata rule."
      },
      "Signature": {
        "type": "string",
        "description": "The name or description of the Suricata rule that triggered the alert."
      },
      "SignatureId": {
        "type": "string",
        "description": "The unique identifier of the Suricata rule that matched the event."
      },
      "Sni": {
        "type": "string",
        "description": "The Server Name Indication (SNI) from TLS traffic."
      },
      "SrcIp": {
        "type": "string",
        "description": "The source IP address of the packet that triggered the event."
      },
      "SrcPort": {
        "type": "string",
        "description": "The source port on the instance that made the query."
      },
      "Timestamp": {
        "type": "datetime",
        "description": "The exact timestamp when the event was captured."
      },
      "TxId": {
        "type": "string",
        "description": "The transaction ID associated with the specific network flow."
      },
      "VerdictAction": {
        "type": "string",
        "description": "The final decision made by the firewall (e.g., pass, drop, alert)."
      },
      "Version": {
        "type": "string",
        "description": "Version of the log format."
      },
      "Ack": {
        "type": "bool",
        "description": "Indicates whether the ACK flag is set in the TCP packet (true/false)."
      },
      "Ecn": {
        "type": "bool",
        "description": "Indicates whether the ECN flag is set in the TCP packet (true/false)."
      },
      "Fin": {
        "type": "bool",
        "description": "Indicates whether the FIN flag is set in the TCP packet (true/false)."
      },
      "NetFlowAge": {
        "type": "string",
        "description": "The duration of the network flow in seconds."
      },
      "NetFlowBytes": {
        "type": "string",
        "description": "The total number of bytes transferred in the network flow."
      },
      "NetFlowEnd": {
        "type": "datetime",
        "description": "The timestamp when the network flow ended."
      },
      "NetFlowMaxttl": {
        "type": "string",
        "description": "The maximum Time-to-Live (TTL) observed in the network flow."
      },
      "NetFlowMinttl": {
        "type": "string",
        "description": "The minimum Time-to-Live (TTL) observed in the network flow."
      },
      "NetFlowPkts": {
        "type": "string",
        "description": "The number of packets in the network flow."
      },
      "NetFlowStart": {
        "type": "datetime",
        "description": "The timestamp when the network flow started."
      },
      "Psh": {
        "type": "bool",
        "description": "Indicates whether the PSH flag is set in the TCP packet (true/false)."
      },
      "Rst": {
        "type": "bool",
        "description": "Indicates whether the RST flag is set in the TCP packet (true/false)."
      },
      "Syn": {
        "type": "bool",
        "description": "Indicates whether the SYN flag is set in the TCP packet (true/false)."
      },
      "TCPFlags": {
        "type": "string",
        "description": "The TCP flags observed in the packet"
      },
      "Action": {
        "type": "string",
        "description": "The action taken by the firewall (e.g., allowed, dropped, inspected)."
      },
      "ErrorMessage": {
        "type": "string",
        "description": "Any error message associated with the event, if applicable."
      },
      "LeafCertificateFingerprint": {
        "type": "string",
        "description": "The SHA-256 fingerprint of the leaf certificate observed in the TLS"
      },
      "Status": {
        "type": "string",
        "description": "The status of the TLS inspection event (e.g., success, failure)."
      },
      "Answers": {
        "type": "dynamic",
        "description": "Array of DNS response records, including resolved IP addresses and"
      },
      "FirewallDomainListId": {
        "type": "string",
        "description": "ID of the domain list that matched the query domain."
      },
      "FirewallRuleAction": {
        "type": "string",
        "description": "Rule action from the matching firewall rule."
      },
      "FirewallRuleGroupId": {
        "type": "string",
        "description": "ID of the firewall rule group that applied to the query."
      },
      "LogType": {
        "type": "string",
        "description": "Indicates the type of DNS log (e.g. ResolverQueryLogs)."
      },
      "QueryClass": {
        "type": "string",
        "description": "The DNS query class. Usually IN (Internet)."
      },
      "QueryName": {
        "type": "string",
        "description": "The domain name that was queried."
      },
      "QueryType": {
        "type": "string",
        "description": "The DNS record type requested (e.g. A, AAAA, MX)."
      },
      "Rcode": {
        "type": "string",
        "description": "Textual DNS response code (e.g. NOERROR, NXDOMAIN)."
      },
      "SrcAddr": {
        "type": "string",
        "description": "The source IP address of the instance that made the query."
      },
      "SrcIds": {
        "type": "dynamic",
        "description": "Identifiers related to the source instance where the DNS query"
      },
      "Transport": {
        "type": "string",
        "description": "The protocol used to send the query (e.g. UDP, TCP, TLS)."
      },
      "VpcId": {
        "type": "string",
        "description": "The ID of the VPC where the DNS query originated."
      },
      "AccessPointARN": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the S3 access point used for the"
      },
      "ACLRequired": {
        "type": "string",
        "description": "Indicates if an ACL was required for the request: 'Yes' if required, '-'"
      },
      "AuthenticationType": {
        "type": "string",
        "description": "The authentication type used: AuthHeader, QueryString, or '-' for"
      },
      "Bucket": {
        "type": "string",
        "description": "The name of the S3 bucket against which the request was processed."
      },
      "BucketOwner": {
        "type": "string",
        "description": "The canonical user ID of the owner of the source bucket (another form"
      },
      "BytesSent": {
        "type": "int",
        "description": "Number of response bytes sent, excluding HTTP overhead, or 0."
      },
      "CipherSuite": {
        "type": "string",
        "description": "The TLS cipher suite negotiated for HTTPS, or '-' for HTTP."
      },
      "ErrorCode": {
        "type": "string",
        "description": "The S3 error code returned in the response, or '-' if none."
      },
      "HostHeader": {
        "type": "string",
        "description": "The endpoint (host header) used to connect to S3 (e.g., s3.us-west-"
      },
      "HostId": {
        "type": "string",
        "description": "Amazon S3 extended request ID (x-amz-id-2)."
      },
      "HttpStatus": {
        "type": "int",
        "description": "The HTTP status code returned in the response."
      },
      "Key": {
        "type": "string",
        "description": "The object key (name) involved in the request."
      },
      "ObjectSize": {
        "type": "int",
        "description": "The size of the object in bytes."
      },
      "Operation": {
        "type": "string",
        "description": "The operation type (e.g., REST.PUT.OBJECT,"
      },
      "Referer": {
        "type": "string",
        "description": "The value of the HTTP Referer header (linking page URL), if present."
      },
      "RemoteIp": {
        "type": "string",
        "description": "The apparent IP address of the requester (may be obscured by proxies"
      },
      "Requester": {
        "type": "string",
        "description": "The canonical user ID, IAM user, or assumed role making the request, or"
      },
      "RequestId": {
        "type": "string",
        "description": "A unique string ID generated by Amazon S3 to identify the request."
      },
      "RequestUri": {
        "type": "string",
        "description": "The URI part of the HTTP request."
      },
      "SignatureVersion": {
        "type": "string",
        "description": "The signature version (SigV2 or SigV4) used to authenticate the request,"
      },
      "TLSVersion": {
        "type": "string",
        "description": "The TLS version used by the client (e.g., TLSv1.2), or '-' if TLS wasn't"
      },
      "TotalTime": {
        "type": "int",
        "description": "The total time in milliseconds the request was in flight (from receipt to"
      },
      "TurnAroundTime": {
        "type": "string",
        "description": "The time in milliseconds S3 spent processing the request (from last"
      },
      "UserAgent": {
        "type": "string",
        "description": "The value of the HTTP User-Agent header (e.g., client software or"
      },
      "VersionId": {
        "type": "string",
        "description": "The version ID of the object involved in the request, or '-' if not"
      }
    }
  },
  "AWSSecurityHubFindings": {
    "tableName": "AWSSecurityHubFindings",
    "description": "AWS Security Hub Findings, which are collected in AWS S3 buckets, into Microsoft Sentinel. AWS Security Hub Finding is a detailed record of a security check or security-related detection, which can originate from various sources like enabled controls, integrations with other AWS services, third-party products, or custom integrations.",
    "columns": {
      "AwsAccountId": {
        "type": "string",
        "description": "The AWS account ID associated with the event."
      },
      "AwsRegion": {
        "type": "string",
        "description": "The AWS region where the event occurred."
      },
      "AwsSecurityFindingCreatedAt": {
        "type": "datetime",
        "description": "The timestamp when the security finding was"
      },
      "AwsSecurityFindingDescription": {
        "type": "string",
        "description": "A detailed description of the AWS security finding."
      },
      "AwsSecurityFindingFirstObservedAt": {
        "type": "datetime",
        "description": "The timestamp when the security finding was first"
      },
      "AwsSecurityFindingGeneratorId": {
        "type": "string",
        "description": "The ID of the generator that created the security"
      },
      "AwsSecurityFindingId": {
        "type": "string",
        "description": "The unique identifier for the AWS security finding."
      },
      "AwsSecurityFindingLastObservedAt": {
        "type": "datetime",
        "description": "The timestamp when the security finding was last"
      },
      "AwsSecurityFindingProcessedAt": {
        "type": "datetime",
        "description": "The timestamp when the security finding was"
      },
      "AwsSecurityFindingProductArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the product"
      },
      "AwsSecurityFindingProductFields": {
        "type": "dynamic",
        "description": "Additional fields provided by the product that"
      },
      "AwsSecurityFindingProductName": {
        "type": "string",
        "description": "The name of the product that generated the finding."
      },
      "AwsSecurityFindingSeverity": {
        "type": "dynamic",
        "description": "The severity level of the security finding."
      },
      "AwsSecurityFindingTitle": {
        "type": "string",
        "description": "The title of the AWS security finding."
      },
      "AwsSecurityFindingTypes": {
        "type": "dynamic",
        "description": "The types or categories of the AWS security finding."
      },
      "AwsSecurityFindingUpdatedAt": {
        "type": "datetime",
        "description": "The timestamp when the security finding was last"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ComplianceAssociatedStandards": {
        "type": "dynamic",
        "description": "The compliance standards associated with the"
      },
      "ComplianceRelatedRequirements": {
        "type": "dynamic",
        "description": "The related compliance requirements."
      },
      "ComplianceSecurityControlId": {
        "type": "string",
        "description": "The ID of the security control related to compliance."
      },
      "ComplianceSecurityControlParameters": {
        "type": "dynamic",
        "description": "Parameters associated with the security control."
      },
      "ComplianceStatus": {
        "type": "string",
        "description": "The compliance status of the resource (e.g.,"
      },
      "ComplianceStatusReasons": {
        "type": "dynamic",
        "description": "The reasons for the compliance status."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "RawData": {
        "type": "dynamic",
        "description": "The raw data associated with the finding."
      },
      "RecordState": {
        "type": "string",
        "description": "The state of the record (e.g., ACTIVE, ARCHIVED)."
      },
      "Remediation": {
        "type": "dynamic",
        "description": "Details about how to remediate the security finding."
      },
      "Resources": {
        "type": "dynamic",
        "description": "The resources associated with the security finding."
      },
      "SchemaVersion": {
        "type": "string",
        "description": "The version of the schema used for the finding."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp when the event was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "WorkflowState": {
        "type": "string",
        "description": "The workflow state of the finding (e.g., NEW,"
      }
    }
  },
  "AWSVPCFlow": {
    "tableName": "AWSVPCFlow",
    "description": "VPC Flow Logs, which ingested from Sentinel's connector, enables you to capture IP traffic going to and from your AWS VPC network interfaces.",
    "columns": {
      "AccountId": {
        "type": "string",
        "description": "The AWS account ID of the owner of the source network interface for"
      },
      "Action": {
        "type": "string",
        "description": "The action that is associated with the traffic."
      },
      "AzId": {
        "type": "string",
        "description": "The ID of the Availability Zone."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Bytes": {
        "type": "long",
        "description": "The number of bytes transferred during the flow."
      },
      "DstAddr": {
        "type": "string",
        "description": "The destination address for outgoing traffic."
      },
      "DstPort": {
        "type": "int",
        "description": "The destination port of the traffic."
      },
      "End": {
        "type": "datetime",
        "description": "The time when the last packet of the flow was received within the"
      },
      "aggregation": {
        "type": "int",
        "description": "erval."
      },
      "FlowDirection": {
        "type": "string",
        "description": "The direction of the flow with respect to the interface where traffic is"
      },
      "InstanceId": {
        "type": "string",
        "description": "The ID of the instance that's associated with network interface for which"
      },
      "InterfaceId": {
        "type": "string",
        "description": "The ID of the network interface for which the traffic is recorded."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogStatus": {
        "type": "string",
        "description": "The logging status of the flow log."
      },
      "Packets": {
        "type": "int",
        "description": "The number of packets transferred during the flow."
      },
      "PktDstAddr": {
        "type": "string",
        "description": "The packet-level (original) destination IP address for the traffic."
      },
      "PktDstAwsService": {
        "type": "string",
        "description": "The name of the subset of IP address ranges for the PktDstAddr field, if"
      },
      "PktSrcAddr": {
        "type": "string",
        "description": "The packet-level (original) source IP address of the traffic."
      },
      "PktSrcAwsService": {
        "type": "string",
        "description": "The name of the subset of IP address ranges for the PktSrcAddr field, if"
      },
      "Protocol": {
        "type": "int",
        "description": "The IANA protocol number of the traffic."
      },
      "Region": {
        "type": "string",
        "description": "The Region that contains the network interface for which traffic is"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "SrcAddr": {
        "type": "string",
        "description": "The source address for incoming traffic."
      },
      "SrcPort": {
        "type": "int",
        "description": "The source port of the traffic."
      },
      "SublocationId": {
        "type": "string",
        "description": "The ID of the sublocation that contains the network interface for which"
      },
      "SublocationType": {
        "type": "string",
        "description": "The type of sublocation that is returned in the sublocationId field."
      },
      "SubnetId": {
        "type": "string",
        "description": "The ID of the subnet."
      },
      "TcpFlags": {
        "type": "int",
        "description": "The bitmask value for the following TCP flags."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the event was generated. This value will be"
      },
      "TrafficPath": {
        "type": "string",
        "description": "The path that egress traffic takes to the destination."
      },
      "TrafficType": {
        "type": "string",
        "description": "The type of traffic. The possible values are: IPv4, IPv6, and EFA. For more"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "Version": {
        "type": "int",
        "description": "The VPC Flow Logs version."
      },
      "VpcId": {
        "type": "string",
        "description": "The ID of the VPC."
      }
    }
  },
  "AWSWAF": {
    "tableName": "AWSWAF",
    "description": "AWS WAF logs, collected in AWS S3 buckets, to Microsoft Sentinel. AWS WAF logs are detailed records of traffic that web access control lists (ACLs) analyze, which are essential for maintaining the security and performance of web applications.",
    "columns": {
      "Action": {
        "type": "string",
        "description": "Action taken by the firewall following the Application rule hit."
      },
      "Args": {
        "type": "string",
        "description": "The query string parameters of the request."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CaptchaResponse": {
        "type": "dynamic",
        "description": "Status of the CAPTCHA action for the request."
      },
      "ChallengeResponse": {
        "type": "dynamic",
        "description": "Status of the security challenge for the request."
      },
      "ClientIp": {
        "type": "string",
        "description": "IP address of the client making the request."
      },
      "Country": {
        "type": "string",
        "description": "Country of origin for the request."
      },
      "ExcludedRules": {
        "type": "dynamic",
        "description": "Rules excluded from evaluation in the rule group."
      },
      "FormatVersion": {
        "type": "string",
        "description": "Version of the AWS WAF log format."
      },
      "Headers": {
        "type": "dynamic",
        "description": "Headers included in the HTTP request."
      },
      "HttpMethod": {
        "type": "string",
        "description": "The HTTP method (GET, POST, etc.) of the request."
      },
      "HttpRequest": {
        "type": "dynamic",
        "description": "Metadata about the HTTP request."
      },
      "HttpSourceId": {
        "type": "string",
        "description": "ID of the associated resource (e.g., CloudFront distribution,"
      },
      "HttpSourceName": {
        "type": "string",
        "description": "Source of the request (e.g., CF, APIGW, ALB)."
      },
      "HttpVersion": {
        "type": "string",
        "description": "HTTP version used in the request."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Ja3Fingerprint": {
        "type": "string",
        "description": "JA3 fingerprint of the TLS Client Hello."
      },
      "Labels": {
        "type": "dynamic",
        "description": "Labels applied to the request by rules."
      },
      "NonTerminatingMatchingRules": {
        "type": "dynamic",
        "description": "List of rules that matched but didn't terminate the request."
      },
      "OversizeFields": {
        "type": "dynamic",
        "description": "Fields in the request that exceeded AWS WAF inspection"
      },
      "RateBasedRuleList": {
        "type": "dynamic",
        "description": "List of rate-based rules applied to the request."
      },
      "RequestHeadersInserted": {
        "type": "dynamic",
        "description": "Headers inserted for custom request handling."
      },
      "RequestId": {
        "type": "string",
        "description": "Request ID for the network request."
      },
      "ResponseCodeSent": {
        "type": "int",
        "description": "HTTP response code sent to the client."
      },
      "RuleGroupId": {
        "type": "string",
        "description": "ID of the rule group that matched."
      },
      "RuleGroupList": {
        "type": "dynamic",
        "description": "List of rule groups that acted on the request."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TerminatingRule": {
        "type": "dynamic",
        "description": "The rule that terminated the request. If this is present, it"
      },
      "TerminatingRuleId": {
        "type": "string",
        "description": "ID of the network rule that matched."
      },
      "TerminatingRuleMatchDetails": {
        "type": "dynamic",
        "description": "Details of the rule that terminated the request."
      },
      "TerminatingRuleType": {
        "type": "string",
        "description": "Type of rule that terminated the request."
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (UTC) when the data plane log was created."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "Uri": {
        "type": "string",
        "description": "The URI of the request."
      },
      "WebAclId": {
        "type": "string",
        "description": "The GUID of the web ACL applied to the request."
      },
      "ActionReason": {
        "type": "string",
        "description": "When no rule is triggered for a packet, this field contains the reason"
      },
      "DestinationPort": {
        "type": "int",
        "description": "Request's destination port."
      },
      "Fqdn": {
        "type": "string",
        "description": "Request's target address in FQDN (Fully qualified Domain Name). For"
      },
      "IsExplicitProxyRequest": {
        "type": "bool",
        "description": "True if the request is received on an explicit proxy port. False"
      },
      "IsTlsInspected": {
        "type": "bool",
        "description": "True if the connection is TLS inspected. False otherwise."
      },
      "Policy": {
        "type": "string",
        "description": "Name of the policy in which the triggered rule resides."
      },
      "Protocol": {
        "type": "string",
        "description": "Request's network protocol. For example: HTTP/HTTPS."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Rule": {
        "type": "string",
        "description": "Name of the triggered rule."
      },
      "RuleCollection": {
        "type": "string",
        "description": "Name of the rule collection in which the triggered rule resides."
      },
      "RuleCollectionGroup": {
        "type": "string",
        "description": "Name of the rule collection group in which the triggered rule resides."
      },
      "SourceIp": {
        "type": "string",
        "description": "Request's source IP address."
      },
      "SourcePort": {
        "type": "int",
        "description": "Request's source port."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TargetUrl": {
        "type": "string",
        "description": "Request's target address URL. Available only for HTTP or TLS-"
      },
      "WebCategory": {
        "type": "string",
        "description": "Web Category identified for the requested FQDN (Azure Firewall"
      },
      "ApplicationRuleCount": {
        "type": "int",
        "description": "Aggregated count of Application rule."
      }
    }
  },
  "AZFWDnsQuery": {
    "tableName": "AZFWDnsQuery",
    "description": "Contains all DNS Proxy events log data.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DnssecOkBit": {
        "type": "bool",
        "description": "A flag indicating that the resolver supports DNSSEC records."
      },
      "EDNS0BufferSize": {
        "type": "int",
        "description": "Client's EDNS0 buffer size. Specifies the maximum packet size allowed"
      },
      "ErrorMessage": {
        "type": "string",
        "description": "Description of the error returned to the client. Empty if request is"
      },
      "ErrorNumber": {
        "type": "int",
        "description": "Error number matching the returned response code."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Protocol": {
        "type": "string",
        "description": "Flow's network protocol. For example: UDP, TCP."
      },
      "QueryClass": {
        "type": "string",
        "description": "DNS query's query class."
      },
      "QueryId": {
        "type": "int",
        "description": "DNS query's query ID."
      },
      "QueryName": {
        "type": "string",
        "description": "DNS query's name to resolve."
      },
      "QueryType": {
        "type": "string",
        "description": "DNS query's query type."
      },
      "RequestDurationSecs": {
        "type": "real",
        "description": "Duration of the DNS request from the time it arrived to the firewall"
      },
      "RequestSize": {
        "type": "int",
        "description": "The size of the DNS request in bytes."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResponseCode": {
        "type": "string",
        "description": "DNS reponse code."
      },
      "ResponseFlags": {
        "type": "string",
        "description": "DNS reponse flags, comma separated."
      },
      "ResponseSize": {
        "type": "int",
        "description": "DNS reponse syze in bytes."
      },
      "SourceIp": {
        "type": "string",
        "description": "Flow's source IP address."
      },
      "SourcePort": {
        "type": "int",
        "description": "Flow's source port."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (UTC) when the data plane log was created."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "DestinationIp": {
        "type": "string",
        "description": "Flow's destination IP address."
      },
      "DestinationPort": {
        "type": "int",
        "description": "Flow's destination port."
      },
      "FlowRate": {
        "type": "real",
        "description": "Flow's bandwidth consumption rate in Megabits per second unit."
      }
    }
  },
  "AZFWFlowTrace": {
    "tableName": "AZFWFlowTrace",
    "description": "Flow logs across Azure Firewall instances. Log contains flow information, flags and the time period when the flows were recorded. Please follow the documentation to enable flow trace logging and details on how it is recorded.",
    "columns": {
      "Action": {
        "type": "string",
        "description": "Action taken by the firewall to log additional flow information."
      },
      "ActionReason": {
        "type": "string",
        "description": "The reason for the action performed by the firewall. For example: when"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DestinationIp": {
        "type": "string",
        "description": "Flow's destination IP address."
      },
      "DestinationPort": {
        "type": "int",
        "description": "Flow's destination port."
      },
      "Flag": {
        "type": "string",
        "description": "Flags set in the connection. For example: FIN, FIN-ACK, SYN-ACK, RST,"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Protocol": {
        "type": "string",
        "description": "Flow's network protocol. For example: UDP, TCP."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceIp": {
        "type": "string",
        "description": "Flow's source IP address."
      },
      "SourcePort": {
        "type": "int",
        "description": "Flow's source port."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (UTC) when the data plane log was created."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AZFWIdpsSignature": {
    "tableName": "AZFWIdpsSignature",
    "description": "Contains all data plane packets that were matched with one or more IDPS signatures.",
    "columns": {
      "Action": {
        "type": "string",
        "description": "Action taken by the firewall following the IDPS signature hit."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "Category of the matched IDPS signature."
      },
      "Description": {
        "type": "string",
        "description": "Description of the matched IDPS signature."
      },
      "DestinationIp": {
        "type": "string",
        "description": "Packet's destination IP address."
      },
      "DestinationPort": {
        "type": "int",
        "description": "Packet's destination port."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Protocol": {
        "type": "string",
        "description": "Packet's network protocol. For example: UDP, TCP."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Severity": {
        "type": "int",
        "description": "Severity of the matched IDPS signature."
      },
      "SignatureId": {
        "type": "string",
        "description": "ID of the matched IDPS signature."
      },
      "SourceIp": {
        "type": "string",
        "description": "Packet's source IP address."
      },
      "SourcePort": {
        "type": "int",
        "description": "Packet's source port."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (UTC) when the data plane log was created."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "Error": {
        "type": "string",
        "description": "Description of the error that caused the failure of the FQDN resolution."
      },
      "Fqdn": {
        "type": "string",
        "description": "The FQDN which the firewall failed to resolve."
      },
      "Policy": {
        "type": "string",
        "description": "Name of the policy in which the rule with the failing FQDN resolution"
      },
      "Rule": {
        "type": "string",
        "description": "Name of the rule with the failing FQDN resolution."
      },
      "RuleCollection": {
        "type": "string",
        "description": "Name of the rule collection in which the rule with the failing FQDN"
      },
      "RuleCollectionGroup": {
        "type": "string",
        "description": "Name of the rule collection group in which the rule with the failing"
      },
      "ServerIp": {
        "type": "string",
        "description": "DNS Resolver server's IP address."
      },
      "ServerPort": {
        "type": "int",
        "description": "DNS Resolver server's port."
      }
    }
  },
  "AZFWNatRule": {
    "tableName": "AZFWNatRule",
    "description": "Contains all DNAT (Destination Network Address Translation) events log data. Each match between data plane and DNAT rule creates a log entry with the data plane packet and the matched rule's attributes.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DestinationIp": {
        "type": "string",
        "description": "Packet's destination IP address."
      },
      "DestinationPort": {
        "type": "int",
        "description": "Packet's destination port."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Policy": {
        "type": "string",
        "description": "Name of the policy in which the triggered rule resides."
      },
      "Protocol": {
        "type": "string",
        "description": "Packet's network protocol. For example: UDP, TCP."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Rule": {
        "type": "string",
        "description": "Name of the triggered rule."
      },
      "RuleCollection": {
        "type": "string",
        "description": "Name of the rule collection in which the triggered rule resides."
      },
      "RuleCollectionGroup": {
        "type": "string",
        "description": "Name of the rule collection group in which the triggered rule resides."
      },
      "SourceIp": {
        "type": "string",
        "description": "Packet's source IP address."
      },
      "SourcePort": {
        "type": "int",
        "description": "Packet's source port."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (UTC) when the data plane log was created."
      },
      "TranslatedIp": {
        "type": "string",
        "description": "Original Destination IP address of the packet is replaced with"
      },
      "TranslatedPort": {
        "type": "int",
        "description": "Original Destination port of the packet is replaced with TranslatedPort."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "NatRuleCount": {
        "type": "int",
        "description": "Aggregated count of NAT rules."
      }
    }
  },
  "AZFWNetworkRule": {
    "tableName": "AZFWNetworkRule",
    "description": "Contains all Network Rule log data. Each match between data plane and network rule creates a log entry with the data plane packet and the matched rule's attributes.",
    "columns": {
      "Action": {
        "type": "string",
        "description": "Action taken by the firewall following the match with this Network"
      },
      "ActionReason": {
        "type": "string",
        "description": "When no rule is triggered for a packet, this field contains the reason"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DestinationIp": {
        "type": "string",
        "description": "Packet's destination IP address."
      },
      "DestinationPort": {
        "type": "int",
        "description": "Packet's destination port."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Policy": {
        "type": "string",
        "description": "Name of the policy in which the triggered rule resides."
      },
      "Protocol": {
        "type": "string",
        "description": "Packet's network protocol. For example: UDP, TCP."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Rule": {
        "type": "string",
        "description": "Name of the triggered rule."
      },
      "RuleCollection": {
        "type": "string",
        "description": "Name of the rule collection in which the triggered rule resides."
      },
      "RuleCollectionGroup": {
        "type": "string",
        "description": "Name of the rule collection group in which the triggered rule resides."
      },
      "SourceIp": {
        "type": "string",
        "description": "Packet's source IP address."
      },
      "SourcePort": {
        "type": "int",
        "description": "Packet's source port."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (UTC) when the data plane log was created."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AZFWNetworkRuleAggregation": {
    "tableName": "AZFWNetworkRuleAggregation",
    "description": "Contains aggregated Network rule log data for Policy Analytics.",
    "columns": {
      "Action": {
        "type": "string",
        "description": "Action taken by the firewall following the match with this Network rule."
      },
      "ActionReason": {
        "type": "string",
        "description": "When no rule is triggered for a request, this field contains the reason"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DestinationIp": {
        "type": "string",
        "description": "Packet's destination IP address."
      },
      "DestinationPort": {
        "type": "int",
        "description": "Packet's destination port."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "IsDefaultRule": {
        "type": "bool",
        "description": "True if no network rule was hit. False otherwise."
      },
      "NetworkRuleCount": {
        "type": "int",
        "description": "Aggregated count of network rule."
      },
      "Policy": {
        "type": "string",
        "description": "Name of the policy in which the triggered rule resides."
      },
      "Protocol": {
        "type": "string",
        "description": "Packet's network protocol. For example: UDP, TCP."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Rule": {
        "type": "string",
        "description": "Name of the triggered rule."
      },
      "RuleCollection": {
        "type": "string",
        "description": "Name of the rule collection in which the triggered rule resides."
      },
      "RuleCollectionGroup": {
        "type": "string",
        "description": "Name of the rule collection group in which the triggered rule resides."
      },
      "SourceIp": {
        "type": "string",
        "description": "Packet's source IP address."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (UTC) when the data plane log was created."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AZFWThreatIntel": {
    "tableName": "AZFWThreatIntel",
    "description": "Contains all Threat Intelligence events.",
    "columns": {
      "Action": {
        "type": "string",
        "description": "Action taken by the firewall following the Threat Intelligence hit."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DestinationIp": {
        "type": "string",
        "description": "Packet's destination IP address."
      },
      "DestinationPort": {
        "type": "int",
        "description": "Packet's destination port."
      },
      "Fqdn": {
        "type": "string",
        "description": "Request's target address in FQDN (Fully qualified Domain Name). For"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "IsTlsInspected": {
        "type": "bool",
        "description": "True if connection is TLS inspected. False otherwise."
      },
      "Protocol": {
        "type": "string",
        "description": "Packet's network protocol. For example: UDP, TCP."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceIp": {
        "type": "string",
        "description": "Packet's source IP address."
      },
      "SourcePort": {
        "type": "int",
        "description": "Packet's source port."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TargetUrl": {
        "type": "string",
        "description": "Request's target address URL. Available only for HTTP or TLS-inspected"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "ThreatDescription": {
        "type": "string",
        "description": "Description of the Threat that was identified by the firewall."
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (UTC) when the data plane log was created."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AZKVAuditLogs": {
    "tableName": "AZKVAuditLogs",
    "description": "Audit logs can be used to monitor how and when your key vaults are accessed, and by whom. Customers will be able to log all authentication api requests. Operations on the key vault itself, including creation, deletion, setting key vault access policies, and updating key vault attributes such as tags.Operation on keys and secrets in keyvault including creating, deleting, signing.",
    "columns": {
      "AddressAuthorizationType": {
        "type": "string",
        "description": "Address type (Public IP, subnet, private connection)"
      },
      "Algorithm": {
        "type": "string",
        "description": "Algorithm used to generate the key"
      },
      "AppliedAssignmentId": {
        "type": "string",
        "description": "AssignmentId that eiher granted or denied access as part"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CallerIpAddress": {
        "type": "string",
        "description": "IP address of the client that made the request"
      },
      "CertificateIssuerProperties": {
        "type": "dynamic",
        "description": "Information about certificate issuer properties including"
      },
      "CertificatePolicyProperties": {
        "type": "dynamic",
        "description": "Information about certificate policy properties including"
      },
      "CertificateProperties": {
        "type": "dynamic",
        "description": "Information about certificate audit properties including"
      },
      "CertificateRequestProperties": {
        "type": "dynamic",
        "description": "Boolean value indicating if certificate request operation"
      },
      "ClientInfo": {
        "type": "string",
        "description": "User agent information"
      },
      "CorrelationId": {
        "type": "string",
        "description": "An optional GUID that the client can pass to correlate"
      },
      "DurationMs": {
        "type": "int",
        "description": "Time it took to service the REST API request, in"
      },
      "EnabledForDeployment": {
        "type": "bool",
        "description": "Specifies if the vault is enabled for deployment"
      },
      "EnabledForDiskEncryption": {
        "type": "bool",
        "description": "Specifes if disk encryption is enabled"
      },
      "EnabledForTemplateDeployment": {
        "type": "bool",
        "description": "Specifies whether template deployment is enabled"
      },
      "EnablePurgeProtection": {
        "type": "bool",
        "description": "Specifies if purge protection is enabled"
      },
      "EnableRbacAuthorization": {
        "type": "bool",
        "description": "Specifies if RBAC authorization is enabled"
      },
      "EnableSoftDelete": {
        "type": "bool",
        "description": "Specified is the vault is enabled for soft delete"
      },
      "HsmPoolResourceId": {
        "type": "string",
        "description": "Resource ID of the HSM pool"
      },
      "HttpStatusCode": {
        "type": "int",
        "description": "HTTP status code of the request"
      },
      "Id": {
        "type": "string",
        "description": "Resourceidentifier (Key ID or secret ID)"
      },
      "Identity": {
        "type": "dynamic",
        "description": "Identity from the token that was presented in the REST API"
      },
      "IsAccessPolicyMatch": {
        "type": "bool",
        "description": "True if the tenant matches vault tenant, and if the policy"
      },
      "IsAddressAuthorized": {
        "type": "bool",
        "description": "Specifies whether request came from an authorized entity"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "IsRbacAuthorized": {
        "type": "bool",
        "description": "Specifies whether an access was granted or not as part of"
      },
      "KeyProperties": {
        "type": "dynamic",
        "description": "Information about key properties including type, size,"
      },
      "NetworkAcls": {
        "type": "dynamic",
        "description": "Information about network acls that govern access to the"
      },
      "Nsp": {
        "type": "dynamic",
        "description": "Network security perimeter properties including access"
      },
      "OperationName": {
        "type": "string",
        "description": "Name of the operation"
      },
      "OperationVersion": {
        "type": "string",
        "description": "REST api version requested by the client."
      },
      "Properties": {
        "type": "dynamic",
        "description": "Information that varies based on the operation"
      },
      "RequestUri": {
        "type": "string",
        "description": "URI of the request"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "ResultDescription": {
        "type": "string",
        "description": "Additional description about the result, when available."
      },
      "ResultSignature": {
        "type": "string",
        "description": "HTTP status of the request/response"
      },
      "ResultType": {
        "type": "string",
        "description": "Result of the REST API request."
      },
      "SecretProperties": {
        "type": "dynamic",
        "description": "Information about secret properties including type,"
      },
      "Sku": {
        "type": "dynamic",
        "description": "Information about vault including family, name and"
      },
      "SoftDeleteRetentionInDays": {
        "type": "int",
        "description": "Specifies soft delete retention in days"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "StorageAccountProperties": {
        "type": "dynamic",
        "description": "Information about storage account properties including"
      },
      "StorageSasDefinitionProperties": {
        "type": "dynamic",
        "description": "Information about storage sas definition properties"
      },
      "SubnetId": {
        "type": "string",
        "description": "Id of subnet if request comes from a known subnet"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (in UTC) when operation occured."
      },
      "Tlsversion": {
        "type": "string",
        "description": "Network crypto protocol"
      },
      "TrustedService": {
        "type": "string",
        "description": "Specifies whether the principal access the service is a"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "VaultProperties": {
        "type": "dynamic",
        "description": "Detailed vault properties containing accesspolicy, iprule,"
      }
    }
  },
  "AZKVPolicyEvaluationDetailsLogs": {
    "tableName": "AZKVPolicyEvaluationDetailsLogs",
    "description": "Contains details of Azure Policy Evaluation including the outcome and details of what checks were performed.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DurationMs": {
        "type": "int",
        "description": "Time it took to service the REST API request, in milliseconds. This does"
      },
      "EvaluationDetails": {
        "type": "dynamic",
        "description": "Details of evaluation"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "IsComplianceCheck": {
        "type": "bool",
        "description": "Is Compliance check enabled"
      },
      "ObjectName": {
        "type": "string",
        "description": "Name of the object"
      },
      "ObjectType": {
        "type": "string",
        "description": "Type of object"
      },
      "OperationName": {
        "type": "string",
        "description": "Name of the operation"
      },
      "Properties": {
        "type": "dynamic",
        "description": "Information that varies based on the operation (operationName). In"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultDescription": {
        "type": "string",
        "description": "Additional description about the result, when available"
      },
      "ResultSignature": {
        "type": "string",
        "description": "HTTP status of the request/response"
      },
      "ResultType": {
        "type": "string",
        "description": "Result of the REST API request"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (in UTC) when operation occured."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AZMSApplicationMetricLogs": {
    "tableName": "AZMSApplicationMetricLogs",
    "description": "Captures application metrics(incoming/outgoing, successful/failed, etc. message delivery) for Azure Event Hubs and Azure Service Bus.",
    "columns": {
      "ActivityId": {
        "type": "string",
        "description": "Internal ID, used to identify the specified activity."
      },
      "AuthId": {
        "type": "string",
        "description": "Authentication ID configured for Event Hub."
      },
      "AuthType": {
        "type": "string",
        "description": "Type of authentication (Azure Active Directory or SAS Policy)."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "OperationName": {
        "type": "string",
        "description": "Operation performed on Event Hub (ConsumerLag, ActiveConnection,"
      },
      "Outcome": {
        "type": "string",
        "description": "Result of operation. Possible values: Success/Failure."
      },
      "Properties": {
        "type": "dynamic",
        "description": "Metadata that are specific to the operation."
      },
      "Protocol": {
        "type": "string",
        "description": "Protocol used to perform the operation. Possible value: AMQP, Kafka, and"
      },
      "Provider": {
        "type": "string",
        "description": "Event provider name. Possible values: eventhub, relay, and servicebus."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The event start time (UTC)."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "Value": {
        "type": "int",
        "description": "Value with respect to performed operation."
      }
    }
  },
  "AZMSArchiveLogs": {
    "tableName": "AZMSArchiveLogs",
    "description": "Captures information about Event Hubs capture operations, specifically, logs related to capture errors.",
    "columns": {
      "ActivityId": {
        "type": "string",
        "description": "Internal ID, used for tracking."
      },
      "ArchiveStep": {
        "type": "string",
        "description": "The possible values: ArchiveFlushWriter, DestinationInit."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DurationMs": {
        "type": "int",
        "description": "The duration of failure (in Milliseconds)."
      },
      "EventhubName": {
        "type": "string",
        "description": "The Event Hubs full name(includes namespace name)."
      },
      "Failures": {
        "type": "int",
        "description": "The number of occurrence of failures."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Message": {
        "type": "string",
        "description": "Error message."
      },
      "PartitionId": {
        "type": "int",
        "description": "The Event Hubs partition being written to."
      },
      "Provider": {
        "type": "string",
        "description": "Event provider name. Possible values: eventhub, relay, and servicebus."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TaskName": {
        "type": "string",
        "description": "The description of the task that failed."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The event generation time (UTC)."
      },
      "TrackingId": {
        "type": "string",
        "description": "Internal ID, used for tracking."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AZMSAutoscaleLogs": {
    "tableName": "AZMSAutoscaleLogs",
    "description": "Captures auto-inflate operations done on an Event Hubs namespace.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Message": {
        "type": "string",
        "description": "Informational message, which provides details about auto-inflate action. The"
      },
      "Provider": {
        "type": "string",
        "description": "Event provider name. Possible values: eventhub, relay, and servicebus."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The event generation time (UTC)."
      },
      "TrackingId": {
        "type": "string",
        "description": "Internal ID, which is used for tracking purposes."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AZMSCustomerManagedKeyUserLogs": {
    "tableName": "AZMSCustomerManagedKeyUserLogs",
    "description": "Captures operations related to customer-managed key.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "Type of category for a message. It's one of the following values: error and"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Key": {
        "type": "string",
        "description": "The name of the key-vault key that's used to encrypt the Event Hubs"
      },
      "KeyVault": {
        "type": "string",
        "description": "The name of the key vault resource."
      },
      "Message": {
        "type": "string",
        "description": "The message, which provides detailes about an error or informational"
      },
      "Operation": {
        "type": "string",
        "description": "The operation that's performed on the key in your key vault. For example,"
      },
      "Provider": {
        "type": "string",
        "description": "Event provider name. Possible values: eventhub, relay, and servicebus."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "StatusCode": {
        "type": "string",
        "description": "The code that's associated with the operation. Example: Error code, 404"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The event start time(UTC)."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "Version": {
        "type": "string",
        "description": "The version of the key-vault key."
      }
    }
  },
  "AZMSDiagnosticErrorLogs": {
    "tableName": "AZMSDiagnosticErrorLogs",
    "description": "Captures aggregated diagnostic information such as client errors , server busy errors and quota exceeded errors for various data plane access operations (such as send or receive messages) in Azure Event Hubs and Azure Service Bus.",
    "columns": {
      "ActivityId": {
        "type": "string",
        "description": "A randomly generated UUID that ensures uniqueness for the audit"
      },
      "ActivityName": {
        "type": "string",
        "description": "Operation name."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "EntityName": {
        "type": "string",
        "description": "Entity name."
      },
      "EntityType": {
        "type": "string",
        "description": "Entity type."
      },
      "ErrorCount": {
        "type": "int",
        "description": "Count of identical errors during the aggregation period of 1 minute."
      },
      "ErrorMessage": {
        "type": "string",
        "description": "Detailed error message."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "NamespaceName": {
        "type": "string",
        "description": "Namespace name."
      },
      "OperationResult": {
        "type": "string",
        "description": "Type of error (clienterror or serverbusy or quotaexceeded)."
      },
      "Provider": {
        "type": "string",
        "description": "Event provider name. Possible values: eventhub, relay, and servicebus."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The event generation time (UTC)."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AZMSHybridConnectionsEvents": {
    "tableName": "AZMSHybridConnectionsEvents",
    "description": "Captures all hybrid connection events that are performed on the Azure Relay namespace.",
    "columns": {
      "ActivityId": {
        "type": "string",
        "description": "Internal ID, used to identify the specified activity."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Endpoint": {
        "type": "string",
        "description": "The endpoint identifier. Can be sender or receiver."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Message": {
        "type": "string",
        "description": "The details on performed task."
      },
      "OperationName": {
        "type": "string",
        "description": "The type of the Hybrid Connections operation that is being logged."
      },
      "Provider": {
        "type": "string",
        "description": "Event provider name. Possible values: eventhub, relay, and servicebus."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The log generation time (UTC)."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AZMSKafkaCoordinatorLogs": {
    "tableName": "AZMSKafkaCoordinatorLogs",
    "description": "Captures kafka coordinator operations related to Event Hubs.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClientId": {
        "type": "string",
        "description": "The client ID."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Message": {
        "type": "string",
        "description": "The Informational or warning message, which provides detailes about"
      },
      "NamespaceName": {
        "type": "string",
        "description": "The namespace name."
      },
      "Operation": {
        "type": "string",
        "description": "The name of operation that done during the group coordination."
      },
      "Provider": {
        "type": "string",
        "description": "Event provider name. Possible values: eventhub, relay, and servicebus."
      },
      "RequestId": {
        "type": "string",
        "description": "The request ID, which is used for tracking purposes."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The event generation time(UTC)."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AZMSKafkaUserErrorLogs": {
    "tableName": "AZMSKafkaUserErrorLogs",
    "description": "Captures information about kafka APIs called on Event Hubs.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "EventhubName": {
        "type": "string",
        "description": "Name of Event Hub."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Message": {
        "type": "string",
        "description": "The informational message, which provides details about an error."
      },
      "NamespaceName": {
        "type": "string",
        "description": "Name of Event Hubs namespace."
      },
      "Provider": {
        "type": "string",
        "description": "Event provider name. Possible values: eventhub, relay, and servicebus."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The event start time (UTC)."
      },
      "TrackingId": {
        "type": "string",
        "description": "The tracking ID, which is used for tracking purposes."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AZMSOperationalLogs": {
    "tableName": "AZMSOperationalLogs",
    "description": "Captures all management operations that are performed on the Azure Event Hubs/Azure Service Bus namespace and its entities.",
    "columns": {
      "ActivityId": {
        "type": "string",
        "description": "Internal ID, used to identify the specified activity."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Caller": {
        "type": "string",
        "description": "The caller of operation (the Azure portal or management client)."
      },
      "EventName": {
        "type": "string",
        "description": "The name of management operation which is executed within Service Bus."
      },
      "EventProperties": {
        "type": "dynamic",
        "description": "The operation properties."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Provider": {
        "type": "string",
        "description": "Event provider name. Possible values: eventhub, relay, and servicebus."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "Status": {
        "type": "string",
        "description": "The operation status."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The log generation time (UTC)."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AZMSRunTimeAuditLogs": {
    "tableName": "AZMSRunTimeAuditLogs",
    "description": "Captures aggregated diagnostic information for various data plane access operations (such as send or receive messages) in Azure Event Hubs and Azure Service Bus. Runtime audit logs are currently available only in premium tier.",
    "columns": {
      "ActivityId": {
        "type": "string",
        "description": "A randomly generated UUID that ensures uniqueness for the audit activity."
      },
      "ActivityName": {
        "type": "string",
        "description": "Runtime operation name."
      },
      "AuthKey": {
        "type": "string",
        "description": "Azure Active Directory application ID or SAS policy name that's used to"
      },
      "AuthType": {
        "type": "string",
        "description": "Type of authentication (Azure Active Directory or SAS Policy)."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClientIp": {
        "type": "string",
        "description": "IP address of the client application."
      },
      "Count": {
        "type": "int",
        "description": "Total number of operations performed during the aggregated period of 1"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "NetworkType": {
        "type": "string",
        "description": "Type of the network access: Public or Private."
      },
      "Properties": {
        "type": "dynamic",
        "description": "Metadata that are specific to the data plane operation."
      },
      "Protocol": {
        "type": "string",
        "description": "Type of the protocol associated with the operation."
      },
      "Provider": {
        "type": "string",
        "description": "Event provider name. Possible values: eventhub, relay, and servicebus."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "Status": {
        "type": "string",
        "description": "Status of the activity (success or failure)."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The event generation time (UTC)."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AZMSVnetConnectionEvents": {
    "tableName": "AZMSVnetConnectionEvents",
    "description": "Captures all virtual network and IP filtering logs for Azure Event Hubs and Azure Service Bus. These would only be emitted if namespace allows access from selected networks or from specific IP address (IP Filter rules).",
    "columns": {
      "Action": {
        "type": "string",
        "description": "Action done by the service when evaluating connection requests."
      },
      "AddressIp": {
        "type": "string",
        "description": "IP address of a client connecting to the Event Hubs or Service Bus service."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Count": {
        "type": "int",
        "description": "Number of occurrences for the given action."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Message": {
        "type": "string",
        "description": "Provides a reason why the action was done."
      },
      "NamespaceName": {
        "type": "string",
        "description": "Name of Event Hubs or Service Bus namespace."
      },
      "Provider": {
        "type": "string",
        "description": "Event provider name. Possible values: eventhub, relay, and servicebus."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The event generation time (UTC)."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AddonAzureBackupAlerts": {
    "tableName": "AddonAzureBackupAlerts",
    "description": "",
    "columns": {
      "AlertCode": {
        "type": "string",
        "description": ""
      },
      "AlertConsolidationStatus": {
        "type": "string",
        "description": ""
      },
      "AlertOccurrenceDateTime": {
        "type": "datetime",
        "description": ""
      },
      "AlertRaisedOn": {
        "type": "string",
        "description": ""
      },
      "AlertSeverity": {
        "type": "string",
        "description": ""
      },
      "AlertStatus": {
        "type": "string",
        "description": ""
      },
      "AlertTimeToResolveInMinutes": {
        "type": "real",
        "description": ""
      },
      "AlertType": {
        "type": "string",
        "description": ""
      },
      "AlertUniqueId": {
        "type": "string",
        "description": ""
      },
      "BackupItemUniqueId": {
        "type": "string",
        "description": ""
      },
      "BackupManagementServerUniqueId": {
        "type": "string",
        "description": ""
      },
      "BackupManagementType": {
        "type": "string",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": ""
      },
      "CountOfAlertsConsolidated": {
        "type": "int",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "OperationName": {
        "type": "string",
        "description": ""
      },
      "ProtectedContainerUniqueId": {
        "type": "string",
        "description": ""
      },
      "RecommendedAction": {
        "type": "string",
        "description": ""
      },
      "ResourceId": {
        "type": "string",
        "description": ""
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "SchemaVersion": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For"
      },
      "State": {
        "type": "string",
        "description": ""
      },
      "StorageUniqueId": {
        "type": "string",
        "description": ""
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "VaultUniqueId": {
        "type": "string",
        "description": ""
      }
    }
  },
  "AddonAzureBackupJobs": {
    "tableName": "AddonAzureBackupJobs",
    "description": "",
    "columns": {
      "AdHocOrScheduledJob": {
        "type": "string",
        "description": ""
      },
      "ArchiveTierStorageReplicationType": {
        "type": "string",
        "description": ""
      },
      "AzureDataCenter": {
        "type": "string",
        "description": ""
      },
      "BackupItemFriendlyName": {
        "type": "string",
        "description": ""
      },
      "BackupItemId": {
        "type": "string",
        "description": ""
      },
      "BackupItemUniqueId": {
        "type": "string",
        "description": ""
      },
      "BackupManagementServerUniqueId": {
        "type": "string",
        "description": ""
      },
      "BackupManagementType": {
        "type": "string",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": ""
      },
      "DatasourceFriendlyName": {
        "type": "string",
        "description": ""
      },
      "DatasourceResourceId": {
        "type": "string",
        "description": ""
      },
      "DatasourceSetFriendlyName": {
        "type": "string",
        "description": ""
      },
      "DatasourceSetResourceId": {
        "type": "string",
        "description": ""
      },
      "DatasourceSetType": {
        "type": "string",
        "description": ""
      },
      "DatasourceType": {
        "type": "string",
        "description": ""
      },
      "DataTransferredInMB": {
        "type": "real",
        "description": ""
      },
      "ExtendedProperties": {
        "type": "dynamic",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "JobDurationInSecs": {
        "type": "real",
        "description": ""
      },
      "JobFailureCode": {
        "type": "string",
        "description": ""
      },
      "JobOperation": {
        "type": "string",
        "description": ""
      },
      "JobOperationSubType": {
        "type": "string",
        "description": ""
      },
      "JobStartDateTime": {
        "type": "datetime",
        "description": ""
      },
      "JobStatus": {
        "type": "string",
        "description": ""
      },
      "JobUniqueId": {
        "type": "string",
        "description": ""
      },
      "OperationName": {
        "type": "string",
        "description": ""
      },
      "ProtectedContainerUniqueId": {
        "type": "string",
        "description": ""
      },
      "RecoveryJobDestination": {
        "type": "string",
        "description": ""
      },
      "RecoveryJobRPDateTime": {
        "type": "datetime",
        "description": ""
      },
      "RecoveryJobRPLocation": {
        "type": "string",
        "description": ""
      },
      "RecoveryLocationType": {
        "type": "string",
        "description": ""
      },
      "ResourceGroupName": {
        "type": "string",
        "description": ""
      },
      "ResourceId": {
        "type": "string",
        "description": ""
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "SchemaVersion": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For"
      },
      "State": {
        "type": "string",
        "description": ""
      },
      "StorageReplicationType": {
        "type": "string",
        "description": ""
      },
      "SubscriptionId": {
        "type": "string",
        "description": ""
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "VaultName": {
        "type": "string",
        "description": ""
      },
      "VaultTags": {
        "type": "string",
        "description": ""
      },
      "VaultType": {
        "type": "string",
        "description": ""
      },
      "VaultUniqueId": {
        "type": "string",
        "description": ""
      }
    }
  },
  "AddonAzureBackupProtectedInstance": {
    "tableName": "AddonAzureBackupProtectedInstance",
    "description": "",
    "columns": {
      "ArchiveTierStorageConsumedInMBs": {
        "type": "real",
        "description": ""
      },
      "ArchiveTierStorageReplicationType": {
        "type": "string",
        "description": ""
      },
      "AzureDataCenter": {
        "type": "string",
        "description": ""
      },
      "BackupItemUniqueId": {
        "type": "string",
        "description": ""
      },
      "BackupManagementServerUniqueId": {
        "type": "string",
        "description": ""
      },
      "BackupManagementType": {
        "type": "string",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "BillingGroupFriendlyName": {
        "type": "string",
        "description": ""
      },
      "BillingGroupResourceGroupName": {
        "type": "string",
        "description": ""
      },
      "BillingGroupType": {
        "type": "string",
        "description": ""
      },
      "BillingGroupUniqueId": {
        "type": "string",
        "description": ""
      },
      "Category": {
        "type": "string",
        "description": ""
      },
      "DatasourceType": {
        "type": "string",
        "description": ""
      },
      "ExtendedProperties": {
        "type": "dynamic",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "OperationName": {
        "type": "string",
        "description": ""
      },
      "ProtectedContainerUniqueId": {
        "type": "string",
        "description": ""
      },
      "ProtectedInstanceCount": {
        "type": "int",
        "description": ""
      },
      "ResourceGroupName": {
        "type": "string",
        "description": ""
      },
      "ResourceId": {
        "type": "string",
        "description": ""
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "SchemaVersion": {
        "type": "string",
        "description": ""
      },
      "SourceSizeInMBs": {
        "type": "real",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For"
      },
      "State": {
        "type": "string",
        "description": ""
      },
      "StorageConsumedInMBs": {
        "type": "real",
        "description": ""
      },
      "StorageReplicationType": {
        "type": "string",
        "description": ""
      },
      "SubscriptionId": {
        "type": "string",
        "description": ""
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "VaultName": {
        "type": "string",
        "description": ""
      },
      "VaultTags": {
        "type": "string",
        "description": ""
      },
      "VaultType": {
        "type": "string",
        "description": ""
      },
      "VaultUniqueId": {
        "type": "string",
        "description": ""
      }
    }
  },
  "AddonAzureBackupStorage": {
    "tableName": "AddonAzureBackupStorage",
    "description": "",
    "columns": {
      "ArchiveTierStorageConsumedInMBs": {
        "type": "string",
        "description": ""
      },
      "BackupItemUniqueId": {
        "type": "string",
        "description": ""
      },
      "BackupManagementServerUniqueId": {
        "type": "string",
        "description": ""
      },
      "BackupManagementType": {
        "type": "string",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": ""
      },
      "ExtendedProperties": {
        "type": "dynamic",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "OperationName": {
        "type": "string",
        "description": ""
      },
      "PreferredWorkloadOnVolume": {
        "type": "string",
        "description": ""
      },
      "ProtectedContainerUniqueId": {
        "type": "string",
        "description": ""
      },
      "ResourceId": {
        "type": "string",
        "description": ""
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "SchemaVersion": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For"
      },
      "State": {
        "type": "string",
        "description": ""
      },
      "StorageAllocatedInMBs": {
        "type": "real",
        "description": ""
      },
      "StorageConsumedInMBs": {
        "type": "real",
        "description": ""
      },
      "StorageName": {
        "type": "string",
        "description": ""
      },
      "StorageTotalSizeInGBs": {
        "type": "real",
        "description": ""
      },
      "StorageType": {
        "type": "string",
        "description": ""
      },
      "StorageUniqueId": {
        "type": "string",
        "description": ""
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "VaultUniqueId": {
        "type": "string",
        "description": ""
      },
      "VolumeFriendlyName": {
        "type": "string",
        "description": ""
      }
    }
  },
  "AegDataPlaneRequests": {
    "tableName": "AegDataPlaneRequests",
    "description": "Logs for Event Grid data plane requests (publish and options) against a topic/domain/partnernamespace. It can be used for auditing purposes. Logs are aggregated over a minute and displays the total number of requests with specific request properties.",
    "columns": {
      "Authentication": {
        "type": "string",
        "description": "The type of secret used for authentication when issuing requests. Key -"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClientIpAddress": {
        "type": "string",
        "description": "The IP address of the client issuing the request."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "NetworkAccess": {
        "type": "string",
        "description": "The type of network used by the client issuing the request. Allowed values"
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation."
      },
      "OperationResult": {
        "type": "string",
        "description": "Thw result of the operation. Possible values are: Success, Unauthorized,"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (UTC) when the log was generated."
      },
      "TlsVersion": {
        "type": "string",
        "description": "The transport layer security (TLS) version used by the client connection."
      },
      "TotalOperations": {
        "type": "string",
        "description": "The total number of request with above values issued within the minute."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AegDeliveryFailureLogs": {
    "tableName": "AegDeliveryFailureLogs",
    "description": "Azure Event Grid - event delivery failure logs.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "Log category name."
      },
      "EventSubscriptionName": {
        "type": "string",
        "description": "Name of the event subscription."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Message": {
        "type": "string",
        "description": "Log message for the user."
      },
      "OperationName": {
        "type": "string",
        "description": "Name of the operation."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "SubResourceName": {
        "type": "string",
        "description": "Name of the sub resource."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Time when log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AegPublishFailureLogs": {
    "tableName": "AegPublishFailureLogs",
    "description": "Azure Event Grid - event publish failure logs.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "Log category name."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Message": {
        "type": "string",
        "description": "Log message for the user."
      },
      "OperationName": {
        "type": "string",
        "description": "Name of the operation."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "SubResourceName": {
        "type": "string",
        "description": "Name of the sub resource."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Time when log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AggregatedSecurityAlert": {
    "tableName": "AggregatedSecurityAlert",
    "description": "Alerts that were generated by security products and were aggregated from a partner.",
    "columns": {
      "AggregatedSecurityAlertRuleIds": {
        "type": "string",
        "description": "IDs assigned to the aggregated security data sharing"
      },
      "AggregatedSecurityAlertRuleNames": {
        "type": "string",
        "description": "The names of the aggregated security data sharing"
      },
      "AlertName": {
        "type": "string",
        "description": "The name of the alert."
      },
      "AlertSeverity": {
        "type": "string",
        "description": "The sevirity of the alert."
      },
      "AlertType": {
        "type": "string",
        "description": "The type name of the alert."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CompromisedEntity": {
        "type": "string",
        "description": "Display name of the main entity being reported on."
      },
      "ConfidenceLevel": {
        "type": "string",
        "description": "The level of confidence that the alert is not a false-"
      },
      "ConfidenceScore": {
        "type": "real",
        "description": "The level of confidence that the alert is not a false-"
      },
      "Description": {
        "type": "string",
        "description": "The description of the alert."
      },
      "DisplayName": {
        "type": "string",
        "description": "The name of the alert."
      },
      "EndTime": {
        "type": "datetime",
        "description": "The end time of the impact of the alert."
      },
      "Entities": {
        "type": "string",
        "description": "A list of entities related to the alert. This list can hold a"
      },
      "ExtendedLinks": {
        "type": "string",
        "description": "A set of link objects the can provide additional data on"
      },
      "ExtendedProperties": {
        "type": "string",
        "description": "Additional data about the alert."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "PartnerDisplayName": {
        "type": "string",
        "description": "Name of the partner who sent the alert."
      },
      "PartnerId": {
        "type": "string",
        "description": "An ID assigned to the partner who sent the alert."
      },
      "PartnerMetadata": {
        "type": "string",
        "description": "Metadata about the partner who sent the alert."
      },
      "ProcessingEndTime": {
        "type": "datetime",
        "description": "The time the alert was received for processing."
      },
      "ProductComponentName": {
        "type": "string",
        "description": "The name of a component inside the product which"
      },
      "ProductName": {
        "type": "string",
        "description": "The name of the product that generated the alert."
      },
      "ProviderName": {
        "type": "string",
        "description": "The name of the provider that generated the alert."
      },
      "RemediationSteps": {
        "type": "string",
        "description": "Action items to take to remediate the alert."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For"
      },
      "StartTime": {
        "type": "datetime",
        "description": "The start time of the impact of the alert."
      },
      "Status": {
        "type": "string",
        "description": "The lifecycle status of the alert (new, in progress,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record"
      },
      "SubTechniques": {
        "type": "string",
        "description": "A list of adversary MITRE ATT&CK sub techniques"
      },
      "SystemAlertId": {
        "type": "string",
        "description": "An ID assigned to the alert by Sentinel."
      },
      "Tactics": {
        "type": "string",
        "description": "A list of adversary MITRE ATT&CK tactics involved in"
      },
      "Techniques": {
        "type": "string",
        "description": "A list of adversary MITRE ATT&CK techniques involved"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the alert was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "VendorName": {
        "type": "string",
        "description": "The name of the vendor owning the provider that"
      },
      "VendorOriginalId": {
        "type": "string",
        "description": "An ID assigned to the alert by the vendor, to help track"
      }
    }
  },
  "AgriFoodApplicationAuditLogs": {
    "tableName": "AgriFoodApplicationAuditLogs",
    "description": "Logs for privileged actions such as data-plane resource create, update, delete and subscription management operations.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CallerIpAddress": {
        "type": "string",
        "description": "IP address of the client that made the request."
      },
      "Category": {
        "type": "string",
        "description": "Logs generated as a result of operations executed using FarmBeats"
      },
      "CorrelationId": {
        "type": "string",
        "description": "Unique identifier to be used to correlate logs, when available."
      },
      "DataPlaneResourceId": {
        "type": "string",
        "description": "ID that uniquely identifies a FarmBeats resource such as a Farm,"
      },
      "Identity": {
        "type": "dynamic",
        "description": "Identity from the token that was presented in the REST API request."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Level": {
        "type": "string",
        "description": "The severity level of the event, will be one of Informational, Warning,"
      },
      "Location": {
        "type": "string",
        "description": "The region of the resource emitting the event."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation name for which the log entry was created."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultDescription": {
        "type": "string",
        "description": "Additional details about the result, when available."
      },
      "ResultType": {
        "type": "string",
        "description": "Result of the REST API request."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (in UTC) when the log was created."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AgriFoodFarmManagementLogs": {
    "tableName": "AgriFoodFarmManagementLogs",
    "description": "Logs for create, update, delete and get operations on FarmBeats resources such as Farmer, Farm, Field, Boundary, Seasonal Field, Crop, CropVariety, Season, Attachment, Prescription Maps, Prescriptions, Management Zones, Zones, Plant Tissue Analysis, Nutrient Analysis etc.",
    "columns": {
      "ApplicationId": {
        "type": "string",
        "description": "ApplicationId in identity claims."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CallerIpAddress": {
        "type": "string",
        "description": "IP address of the client that made the request."
      },
      "Category": {
        "type": "string",
        "description": "Logs generated as a result of operations executed using FarmBeats"
      },
      "ClientTenantId": {
        "type": "string",
        "description": "TenantId in identity claims."
      },
      "CorrelationId": {
        "type": "string",
        "description": "Unique identifier to be used to correlate logs, when available."
      },
      "DataPlaneResourceId": {
        "type": "string",
        "description": "ID that uniquely identifies a FarmBeats resource such as a Farm,"
      },
      "DurationMs": {
        "type": "real",
        "description": "Time it took to service the REST API request, in milliseconds."
      },
      "FarmerId": {
        "type": "string",
        "description": "Farmer ID associated with the request, wherever applicable."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Level": {
        "type": "string",
        "description": "The severity level of the event, will be one of Informational, Warning,"
      },
      "Location": {
        "type": "string",
        "description": "The region of the resource emitting the event."
      },
      "ObjectId": {
        "type": "string",
        "description": "ObjectId in identity claims."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation name for which the log entry was created."
      },
      "RequestBody": {
        "type": "dynamic",
        "description": "Request body of the API calls."
      },
      "RequestUri": {
        "type": "string",
        "description": "URI of the API request."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultDescription": {
        "type": "string",
        "description": "Additional details about the result, when available."
      },
      "ResultSignature": {
        "type": "int",
        "description": "HTTP status of API request."
      },
      "ResultType": {
        "type": "string",
        "description": "Result of the REST API request."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (in UTC) when the log was created."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AgriFoodFarmOperationLogs": {
    "tableName": "AgriFoodFarmOperationLogs",
    "description": "Logs for create, update, delete and get operations for FarmOperations such as data ingestion job, ApplicationData, PlantingData, HarvestingData, TillageData etc.",
    "columns": {
      "ApplicationId": {
        "type": "string",
        "description": "ApplicationId in identity claims."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CallerIpAddress": {
        "type": "string",
        "description": "IP address of the client that made the request."
      },
      "Category": {
        "type": "string",
        "description": "Logs generated as a result of operations executed using FarmBeats"
      },
      "ClientTenantId": {
        "type": "string",
        "description": "TenantId in identity claims."
      },
      "CorrelationId": {
        "type": "string",
        "description": "Unique identifier to be used to correlate logs, when available."
      },
      "DataPlaneResourceId": {
        "type": "string",
        "description": "ID that uniquely identifies a FarmBeats resource such as a Farm,"
      },
      "DurationMs": {
        "type": "real",
        "description": "Time it took to service the REST API request, in milliseconds."
      },
      "FarmerId": {
        "type": "string",
        "description": "Farmer ID associated with the request, wherever applicable."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Level": {
        "type": "string",
        "description": "The severity level of the event, will be one of Informational, Warning,"
      },
      "Location": {
        "type": "string",
        "description": "The region of the resource emitting the event."
      },
      "ObjectId": {
        "type": "string",
        "description": "ObjectId in identity claims."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation name for which the log entry was created."
      },
      "RequestBody": {
        "type": "dynamic",
        "description": "Request body of the API calls."
      },
      "RequestUri": {
        "type": "string",
        "description": "URI of the API request."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultDescription": {
        "type": "string",
        "description": "Additional details about the result, when available."
      },
      "ResultSignature": {
        "type": "int",
        "description": "HTTP status of API request."
      },
      "ResultType": {
        "type": "string",
        "description": "Result of the REST API request."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (in UTC) when the log was created."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AgriFoodInsightLogs": {
    "tableName": "AgriFoodInsightLogs",
    "description": "Logs for read operations on FarmBeats resources such as inisghts and inisight-attachments.",
    "columns": {
      "ApplicationId": {
        "type": "string",
        "description": "ApplicationId in identity claims."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CallerIpAddress": {
        "type": "string",
        "description": "IP address of the client that made the request."
      },
      "Category": {
        "type": "string",
        "description": "Logs generated as a result of operations executed using FarmBeats"
      },
      "ClientTenantId": {
        "type": "string",
        "description": "TenantId in identity claims."
      },
      "CorrelationId": {
        "type": "string",
        "description": "Unique identifier to be used to correlate logs, when available."
      },
      "DataPlaneResourceId": {
        "type": "string",
        "description": "ID that uniquely identifies a FarmBeats resource such as a Farm,"
      },
      "DurationMs": {
        "type": "real",
        "description": "Time it took to service the REST API request, in milliseconds."
      },
      "FarmerId": {
        "type": "string",
        "description": "Farmer ID associated with the request, wherever applicable."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Level": {
        "type": "string",
        "description": "The severity level of the event, will be one of Informational, Warning,"
      },
      "Location": {
        "type": "string",
        "description": "The region of the resource emitting the event."
      },
      "ObjectId": {
        "type": "string",
        "description": "ObjectId in identity claims."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation name for which the log entry was created."
      },
      "RequestBody": {
        "type": "dynamic",
        "description": "Request body of the API calls."
      },
      "RequestUri": {
        "type": "string",
        "description": "URI of the API request."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultDescription": {
        "type": "string",
        "description": "Additional details about the result, when available."
      },
      "ResultSignature": {
        "type": "int",
        "description": "HTTP status of API request."
      },
      "ResultType": {
        "type": "string",
        "description": "Result of the REST API request."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (in UTC) when the log was created."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AgriFoodJobProcessedLogs": {
    "tableName": "AgriFoodJobProcessedLogs",
    "description": "Logs indicating success or failure of job runs for farmOperationDataIngestionJob, farmOperationPeriodicJob, farmOperationEventHandlingJob,satelliteDataIngestionJob, weatherDataIngestionJob etc. These logs also contain reasons for failure of these jobs if any.",
    "columns": {
      "ApplicationId": {
        "type": "string",
        "description": "ApplicationId in identity claims."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "Logs generated as a result of operations executed using FarmBeats APIs"
      },
      "ClientTenantId": {
        "type": "string",
        "description": "TenantId in identity claims."
      },
      "CorrelationId": {
        "type": "string",
        "description": "Unique identifier to be used to correlate logs, when available."
      },
      "DurationMs": {
        "type": "real",
        "description": "Time it took to service the REST API request, in milliseconds."
      },
      "FarmerId": {
        "type": "string",
        "description": "Farmer ID associated with the request, wherever applicable."
      },
      "InitiatedBy": {
        "type": "string",
        "description": "Indicates whether the job was initiated by FarmBeats or user."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "JobId": {
        "type": "string",
        "description": "User defined ID of the job."
      },
      "JobRunType": {
        "type": "string",
        "description": "Indicates whether a job is a periodic job or a one-time job."
      },
      "Level": {
        "type": "string",
        "description": "The severity level of the event, will be one of Informational, Warning, Error,"
      },
      "Location": {
        "type": "string",
        "description": "The region of the resource emitting the event."
      },
      "ObjectId": {
        "type": "string",
        "description": "ObjectId in identity claims."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation name for which the log entry was created."
      },
      "Properties": {
        "type": "dynamic",
        "description": "Additional properties associated with the Job."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultDescription": {
        "type": "string",
        "description": "Additional details about the result, when available."
      },
      "ResultType": {
        "type": "string",
        "description": "Result of the REST API request."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (in UTC) when the log was created."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AgriFoodModelInferenceLogs": {
    "tableName": "AgriFoodModelInferenceLogs",
    "description": "Logs for create and get operations for AI/ML model inference jobs.",
    "columns": {
      "ApplicationId": {
        "type": "string",
        "description": "ApplicationId in identity claims."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CallerIpAddress": {
        "type": "string",
        "description": "IP address of the client that made the request."
      },
      "Category": {
        "type": "string",
        "description": "Logs generated as a result of operations executed using FarmBeats"
      },
      "ClientTenantId": {
        "type": "string",
        "description": "TenantId in identity claims."
      },
      "CorrelationId": {
        "type": "string",
        "description": "Unique identifier to be used to correlate logs, when available."
      },
      "DataPlaneResourceId": {
        "type": "string",
        "description": "ID that uniquely identifies a FarmBeats resource such as a Farm,"
      },
      "DurationMs": {
        "type": "real",
        "description": "Time it took to service the REST API request, in milliseconds."
      },
      "FarmerId": {
        "type": "string",
        "description": "Farmer ID associated with the request, wherever applicable."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Level": {
        "type": "string",
        "description": "The severity level of the event, will be one of Informational, Warning,"
      },
      "Location": {
        "type": "string",
        "description": "The region of the resource emitting the event."
      },
      "ObjectId": {
        "type": "string",
        "description": "ObjectId in identity claims."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation name for which the log entry was created."
      },
      "RequestBody": {
        "type": "dynamic",
        "description": "Request body of the API calls."
      },
      "RequestUri": {
        "type": "string",
        "description": "URI of the API request."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultDescription": {
        "type": "string",
        "description": "Additional details about the result, when available."
      },
      "ResultSignature": {
        "type": "int",
        "description": "HTTP status of API request."
      },
      "ResultType": {
        "type": "string",
        "description": "Result of the REST API request."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (in UTC) when the log was created."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AgriFoodProviderAuthLogs": {
    "tableName": "AgriFoodProviderAuthLogs",
    "description": "Logs for create, update, delete, cascade delete get and get all for oauth providers. It also has logs for get, get all and cascade delete for oauth tokens.",
    "columns": {
      "ApplicationId": {
        "type": "string",
        "description": "ApplicationId in identity claims."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CallerIpAddress": {
        "type": "string",
        "description": "IP address of the client that made the request."
      },
      "Category": {
        "type": "string",
        "description": "Logs generated as a result of operations executed using FarmBeats"
      },
      "ClientTenantId": {
        "type": "string",
        "description": "TenantId in identity claims."
      },
      "CorrelationId": {
        "type": "string",
        "description": "Unique identifier to be used to correlate logs, when available."
      },
      "DataPlaneResourceId": {
        "type": "string",
        "description": "ID that uniquely identifies a FarmBeats resource such as a Farm,"
      },
      "DurationMs": {
        "type": "real",
        "description": "Time it took to service the REST API request, in milliseconds."
      },
      "FarmerId": {
        "type": "string",
        "description": "Farmer ID associated with the request, wherever applicable."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Level": {
        "type": "string",
        "description": "The severity level of the event, will be one of Informational, Warning,"
      },
      "Location": {
        "type": "string",
        "description": "The region of the resource emitting the event."
      },
      "ObjectId": {
        "type": "string",
        "description": "ObjectId in identity claims."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation name for which the log entry was created."
      },
      "RequestBody": {
        "type": "dynamic",
        "description": "Request body of the API calls."
      },
      "RequestUri": {
        "type": "string",
        "description": "URI of the API request."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultDescription": {
        "type": "string",
        "description": "Additional details about the result, when available."
      },
      "ResultSignature": {
        "type": "int",
        "description": "HTTP status of API request."
      },
      "ResultType": {
        "type": "string",
        "description": "Result of the REST API request."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (in UTC) when the log was created."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AgriFoodSatelliteLogs": {
    "tableName": "AgriFoodSatelliteLogs",
    "description": "Logs for create and get operations for Satellite data.",
    "columns": {
      "ApplicationId": {
        "type": "string",
        "description": "ApplicationId in identity claims."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CallerIpAddress": {
        "type": "string",
        "description": "IP address of the client that made the request."
      },
      "Category": {
        "type": "string",
        "description": "Logs generated as a result of operations executed using FarmBeats"
      },
      "ClientTenantId": {
        "type": "string",
        "description": "TenantId in identity claims."
      },
      "CorrelationId": {
        "type": "string",
        "description": "Unique identifier to be used to correlate logs, when available."
      },
      "DataPlaneResourceId": {
        "type": "string",
        "description": "ID that uniquely identifies a FarmBeats resource such as a Farm,"
      },
      "DurationMs": {
        "type": "real",
        "description": "Time it took to service the REST API request, in milliseconds."
      },
      "FarmerId": {
        "type": "string",
        "description": "Farmer ID associated with the request, wherever applicable."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Level": {
        "type": "string",
        "description": "The severity level of the event, will be one of Informational, Warning,"
      },
      "Location": {
        "type": "string",
        "description": "The region of the resource emitting the event."
      },
      "ObjectId": {
        "type": "string",
        "description": "ObjectId in identity claims."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation name for which the log entry was created."
      },
      "RequestBody": {
        "type": "dynamic",
        "description": "Request body of the API calls."
      },
      "RequestUri": {
        "type": "string",
        "description": "URI of the API request."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultDescription": {
        "type": "string",
        "description": "Additional details about the result, when available."
      },
      "ResultSignature": {
        "type": "int",
        "description": "HTTP status of API request."
      },
      "ResultType": {
        "type": "string",
        "description": "Result of the REST API request."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (in UTC) when the log was created."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AgriFoodSensorManagementLogs": {
    "tableName": "AgriFoodSensorManagementLogs",
    "description": "Logs for sensors, sensors mappings, sensors events, sensors data models, sensors partner integration, devices, device data models etc.",
    "columns": {
      "ApplicationId": {
        "type": "string",
        "description": "ApplicationId in identity claims."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CallerIpAddress": {
        "type": "string",
        "description": "IP address of the client that made the request."
      },
      "Category": {
        "type": "string",
        "description": "Logs generated as a result of operations executed using FarmBeats"
      },
      "ClientTenantId": {
        "type": "string",
        "description": "TenantId in identity claims."
      },
      "CorrelationId": {
        "type": "string",
        "description": "Unique identifier to be used to correlate logs, when available."
      },
      "DataPlaneResourceId": {
        "type": "string",
        "description": "ID that uniquely identifies a FarmBeats resource such as a Farm,"
      },
      "DurationMs": {
        "type": "real",
        "description": "Time it took to service the REST API request, in milliseconds."
      },
      "FarmerId": {
        "type": "string",
        "description": "Farmer ID associated with the request, wherever applicable."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Level": {
        "type": "string",
        "description": "The severity level of the event, will be one of Informational, Warning,"
      },
      "Location": {
        "type": "string",
        "description": "The region of the resource emitting the event."
      },
      "ObjectId": {
        "type": "string",
        "description": "ObjectId in identity claims."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation name for which the log entry was created."
      },
      "RequestBody": {
        "type": "dynamic",
        "description": "Request body of the API calls."
      },
      "RequestUri": {
        "type": "string",
        "description": "URI of the API request."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultDescription": {
        "type": "string",
        "description": "Additional details about the result, when available."
      },
      "ResultSignature": {
        "type": "int",
        "description": "HTTP status of API request."
      },
      "ResultType": {
        "type": "string",
        "description": "Result of the REST API request."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (UTC) when the log was created."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AgriFoodWeatherLogs": {
    "tableName": "AgriFoodWeatherLogs",
    "description": "Logs for create, update, delete and get operations while ingesting weather data in FarmBeats.",
    "columns": {
      "ApplicationId": {
        "type": "string",
        "description": "ApplicationId in identity claims."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CallerIpAddress": {
        "type": "string",
        "description": "IP address of the client that made the request."
      },
      "Category": {
        "type": "string",
        "description": "Logs generated as a result of operations executed using FarmBeats"
      },
      "ClientTenantId": {
        "type": "string",
        "description": "TenantId in identity claims."
      },
      "CorrelationId": {
        "type": "string",
        "description": "Unique identifier to be used to correlate logs, when available."
      },
      "DataPlaneResourceId": {
        "type": "string",
        "description": "ID that uniquely identifies a FarmBeats resource such as a Farm,"
      },
      "DurationMs": {
        "type": "real",
        "description": "Time it took to service the REST API request, in milliseconds."
      },
      "FarmerId": {
        "type": "string",
        "description": "Farmer ID associated with the request, wherever applicable."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Level": {
        "type": "string",
        "description": "The severity level of the event, will be one of Informational, Warning,"
      },
      "Location": {
        "type": "string",
        "description": "The region of the resource emitting the event."
      },
      "ObjectId": {
        "type": "string",
        "description": "ObjectId in identity claims."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation name for which the log entry was created."
      },
      "RequestBody": {
        "type": "dynamic",
        "description": "Request body of the API calls."
      },
      "RequestUri": {
        "type": "string",
        "description": "URI of the API request."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultDescription": {
        "type": "string",
        "description": "Additional details about the result, when available."
      },
      "ResultSignature": {
        "type": "int",
        "description": "HTTP status of API request."
      },
      "ResultType": {
        "type": "string",
        "description": "Result of the REST API request."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (in UTC) when the log was created."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AirflowDagProcessingLogs": {
    "tableName": "AirflowDagProcessingLogs",
    "description": "ADF Airflow dag processing logs",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The category of the log that belongs to Airflow application."
      },
      "CorrelationId": {
        "type": "string",
        "description": "The correlation id of the event."
      },
      "DataFactoryName": {
        "type": "string",
        "description": "The name of the Data factory."
      },
      "IntegrationRuntimeName": {
        "type": "string",
        "description": "The name of the Integration runtime."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Message": {
        "type": "string",
        "description": "The application log of the Airflow event."
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation represented by this event."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of the log."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "Alert": {
    "tableName": "Alert",
    "description": "The Alert table contains legacy information that is only logged in older versions of log search alerts. The official method to query all alerts, regardless of version or alert type, is by using Azure Resource Graph (ARG) to query Alerts metadata.",
    "columns": {
      "AlertContext": {
        "type": "string",
        "description": "Details of the data item that caused the alert to be generated"
      },
      "AlertDescription": {
        "type": "string",
        "description": "Detailed description of the alert."
      },
      "AlertError": {
        "type": "string",
        "description": ""
      },
      "AlertId": {
        "type": "string",
        "description": "GUID of the alert."
      },
      "AlertName": {
        "type": "string",
        "description": "Name of the alert."
      },
      "AlertPriority": {
        "type": "string",
        "description": "Priority level of the alert."
      },
      "AlertRuleId": {
        "type": "string",
        "description": ""
      },
      "AlertRuleInstanceId": {
        "type": "string",
        "description": ""
      },
      "AlertSeverity": {
        "type": "string",
        "description": "Severity level of the alert."
      },
      "AlertState": {
        "type": "string",
        "description": "Latest resolution state of the alert."
      },
      "AlertStatus": {
        "type": "int",
        "description": ""
      },
      "AlertTypeDescription": {
        "type": "string",
        "description": ""
      },
      "AlertTypeNumber": {
        "type": "int",
        "description": ""
      },
      "AlertValue": {
        "type": "int",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Comments": {
        "type": "string",
        "description": ""
      },
      "Computer": {
        "type": "string",
        "description": ""
      },
      "Custom1": {
        "type": "string",
        "description": ""
      },
      "Custom10": {
        "type": "string",
        "description": ""
      },
      "Custom2": {
        "type": "string",
        "description": ""
      },
      "Custom3": {
        "type": "string",
        "description": ""
      },
      "Custom4": {
        "type": "string",
        "description": ""
      },
      "Custom5": {
        "type": "string",
        "description": ""
      },
      "Custom6": {
        "type": "string",
        "description": ""
      },
      "Custom7": {
        "type": "string",
        "description": ""
      },
      "Custom8": {
        "type": "string",
        "description": ""
      },
      "Custom9": {
        "type": "string",
        "description": ""
      },
      "Expression": {
        "type": "string",
        "description": ""
      },
      "Flags": {
        "type": "int",
        "description": ""
      },
      "FlagsDescription": {
        "type": "string",
        "description": ""
      },
      "HostName": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "LastModifiedBy": {
        "type": "string",
        "description": "Name of the user who last modified the alert."
      },
      "LinkToSearchResults": {
        "type": "string",
        "description": ""
      },
      "ManagementGroupName": {
        "type": "string",
        "description": "Name of the management group for System Center"
      },
      "ObjectDisplayName": {
        "type": "string",
        "description": ""
      },
      "PriorityNumber": {
        "type": "int",
        "description": ""
      },
      "Query": {
        "type": "string",
        "description": ""
      },
      "QueryExecutionEndTime": {
        "type": "datetime",
        "description": ""
      },
      "QueryExecutionStartTime": {
        "type": "datetime",
        "description": ""
      },
      "RemediationJobId": {
        "type": "string",
        "description": ""
      },
      "RemediationRunbookName": {
        "type": "string",
        "description": ""
      },
      "RepeatCount": {
        "type": "int",
        "description": "Number of times the same alert was generated for the same"
      },
      "ResolvedBy": {
        "type": "string",
        "description": "Name of the user who resolved the alert. Empty if the alert has"
      },
      "ResourceId": {
        "type": "string",
        "description": ""
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "ResourceType": {
        "type": "string",
        "description": ""
      },
      "ResourceValue": {
        "type": "string",
        "description": ""
      },
      "RootObjectName": {
        "type": "string",
        "description": ""
      },
      "ServiceDeskConnectionName": {
        "type": "string",
        "description": ""
      },
      "ServiceDeskId": {
        "type": "string",
        "description": ""
      },
      "ServiceDeskWorkItemLink": {
        "type": "string",
        "description": ""
      },
      "ServiceDeskWorkItemType": {
        "type": "string",
        "description": ""
      },
      "SourceDisplayName": {
        "type": "string",
        "description": "Display name of the monitoring object that generated the"
      },
      "SourceFullName": {
        "type": "string",
        "description": "Full name of the monitoring object that generated the alert."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "StateType": {
        "type": "string",
        "description": ""
      },
      "StatusDescription": {
        "type": "string",
        "description": ""
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TemplateId": {
        "type": "string",
        "description": ""
      },
      "ThresholdOperator": {
        "type": "string",
        "description": ""
      },
      "ThresholdValue": {
        "type": "int",
        "description": ""
      },
      "TicketId": {
        "type": "string",
        "description": "Ticket ID for the alert if the System Center Operations"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time the record was created."
      },
      "TimeLastModified": {
        "type": "datetime",
        "description": "Date and time that the alert was last changed."
      },
      "TimeRaised": {
        "type": "datetime",
        "description": "Date and time that the alert was generated."
      },
      "TimeResolved": {
        "type": "datetime",
        "description": "Date and time that the alert was resolved. Empty if the alert"
      },
      "TriggerId": {
        "type": "string",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "Url": {
        "type": "string",
        "description": ""
      },
      "ValueDescription": {
        "type": "string",
        "description": ""
      },
      "ValueFlags": {
        "type": "int",
        "description": ""
      },
      "ValueFlagsDescription": {
        "type": "string",
        "description": ""
      }
    }
  },
  "AlertEvidence": {
    "tableName": "AlertEvidence",
    "description": "Includes files, IP addresses, URLs, users, or devices associated with alerts.",
    "columns": {
      "AccountDomain": {
        "type": "string",
        "description": "Domain of the account."
      },
      "AccountName": {
        "type": "string",
        "description": "User name of the account."
      },
      "AccountObjectId": {
        "type": "string",
        "description": "Unique identifier for the account in Azure Active Directory."
      },
      "AccountSid": {
        "type": "string",
        "description": "Security Identifier (SID) of the account."
      },
      "AccountUpn": {
        "type": "string",
        "description": "User principal name (UPN) of the account."
      },
      "AdditionalFields": {
        "type": "dynamic",
        "description": "Additional information about the event in JSON array format."
      },
      "AlertId": {
        "type": "string",
        "description": "Unique identifier for the alert."
      },
      "Application": {
        "type": "string",
        "description": "Application that performed the recorded action."
      },
      "ApplicationId": {
        "type": "int",
        "description": "Unique identifier for the application."
      },
      "AttackTechniques": {
        "type": "string",
        "description": "MITRE ATT&CK techniques associated with the activity that triggered"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Categories": {
        "type": "string",
        "description": "List of categories that the information belongs to, in JSON array"
      },
      "DetectionSource": {
        "type": "string",
        "description": "Detection technology or sensor that identified the notable"
      },
      "DeviceId": {
        "type": "string",
        "description": "Unique identifier for the device in the service."
      },
      "DeviceName": {
        "type": "string",
        "description": "Fully qualified domain name (FQDN) of the machine."
      },
      "EmailSubject": {
        "type": "string",
        "description": "Subject of the email."
      },
      "EntityType": {
        "type": "string",
        "description": "Type of object, such as a file, a process, a device, or a user."
      },
      "EvidenceDirection": {
        "type": "string",
        "description": "Indicates whether the entity is the source or the destination of a"
      },
      "EvidenceRole": {
        "type": "string",
        "description": "How the entity is involved in an alert, indicating whether it is"
      },
      "FileName": {
        "type": "string",
        "description": "Name of the file that the recorded action was applied to."
      },
      "FileSize": {
        "type": "long",
        "description": "Size of the file in bytes."
      },
      "FolderPath": {
        "type": "string",
        "description": "Folder containing the file that the recorded action was applied to."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "LocalIP": {
        "type": "string",
        "description": "IP address assigned to the local device used during communication."
      },
      "NetworkMessageId": {
        "type": "string",
        "description": "Unique identifier for the email, generated by Office 365."
      },
      "OAuthApplicationId": {
        "type": "string",
        "description": "Unique identifier of the third-party OAuth application."
      },
      "ProcessCommandLine": {
        "type": "string",
        "description": "Command line used to create the new process."
      },
      "RegistryKey": {
        "type": "string",
        "description": "Registry key that the recorded action was applied to."
      },
      "RegistryValueData": {
        "type": "string",
        "description": "Data of the registry value that the recorded action was applied to."
      },
      "RegistryValueName": {
        "type": "string",
        "description": "Name of the registry value that the recorded action was applied to."
      },
      "RemoteIP": {
        "type": "string",
        "description": "IP address that was being connected to."
      },
      "RemoteUrl": {
        "type": "string",
        "description": "URL or fully qualified domain name (FQDN) that was being connected"
      },
      "ServiceSource": {
        "type": "string",
        "description": "Product or service that provided the alert information."
      },
      "SHA1": {
        "type": "string",
        "description": "SHA-1 of the file that the recorded action was applied to."
      },
      "SHA256": {
        "type": "string",
        "description": "SHA-256 of the file that the recorded action was applied to. This field"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "ThreatFamily": {
        "type": "string",
        "description": "Malware family that the suspicious or malicious file or process has"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time (UTC) when the record was generated."
      },
      "Title": {
        "type": "string",
        "description": "Title of the alert."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AlertHistory": {
    "tableName": "AlertHistory",
    "description": "",
    "columns": {
      "AlertContext": {
        "type": "string",
        "description": ""
      },
      "AlertDescription": {
        "type": "string",
        "description": ""
      },
      "AlertId": {
        "type": "string",
        "description": ""
      },
      "AlertName": {
        "type": "string",
        "description": ""
      },
      "AlertPriority": {
        "type": "string",
        "description": ""
      },
      "AlertSeverity": {
        "type": "string",
        "description": ""
      },
      "AlertState": {
        "type": "string",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Custom1": {
        "type": "string",
        "description": ""
      },
      "Custom10": {
        "type": "string",
        "description": ""
      },
      "Custom2": {
        "type": "string",
        "description": ""
      },
      "Custom3": {
        "type": "string",
        "description": ""
      },
      "Custom4": {
        "type": "string",
        "description": ""
      },
      "Custom5": {
        "type": "string",
        "description": ""
      },
      "Custom6": {
        "type": "string",
        "description": ""
      },
      "Custom7": {
        "type": "string",
        "description": ""
      },
      "Custom8": {
        "type": "string",
        "description": ""
      },
      "Custom9": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "LastModifiedBy": {
        "type": "string",
        "description": ""
      },
      "ManagementGroupName": {
        "type": "string",
        "description": ""
      },
      "RepeatCount": {
        "type": "int",
        "description": ""
      },
      "ResolvedBy": {
        "type": "string",
        "description": ""
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "SourceDisplayName": {
        "type": "string",
        "description": ""
      },
      "SourceFullName": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TicketId": {
        "type": "string",
        "description": ""
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "TimeLastModified": {
        "type": "datetime",
        "description": ""
      },
      "TimeRaised": {
        "type": "datetime",
        "description": ""
      },
      "TimeResolved": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AlertInfo": {
    "tableName": "AlertInfo",
    "description": "Alerts from Microsoft Defender for Endpoint, Microsoft Defender for Office 365, Microsoft Cloud App Security, and Microsoft Defender for Identity, including severity information and threat categorization.",
    "columns": {
      "AlertId": {
        "type": "string",
        "description": "Unique identifier for the alert."
      },
      "AttackTechniques": {
        "type": "string",
        "description": "MITRE ATT&CK techniques associated with the activity that triggered the"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "Type of threat indicator or breach activity identified by the alert."
      },
      "DetectionSource": {
        "type": "string",
        "description": "Detection technology or sensor that identified the notable component or"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "ServiceSource": {
        "type": "string",
        "description": "Product or service that provided the alert information."
      },
      "Severity": {
        "type": "string",
        "description": "Indicates the potential impact (high, medium, or low) of the threat"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time (UTC) when the record was generated."
      },
      "Title": {
        "type": "string",
        "description": "Title of the alert."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AmlComputeClusterEvent": {
    "tableName": "AmlComputeClusterEvent",
    "description": "AmlCompute Cluster events",
    "columns": {
      "AllocationState": {
        "type": "string",
        "description": ""
      },
      "AllocationStateTransitionTime": {
        "type": "datetime",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClusterErrorCodes": {
        "type": "string",
        "description": ""
      },
      "ClusterName": {
        "type": "string",
        "description": ""
      },
      "ClusterType": {
        "type": "string",
        "description": ""
      },
      "CoreCount": {
        "type": "int",
        "description": ""
      },
      "CreatedBy": {
        "type": "string",
        "description": ""
      },
      "CreationApiVersion": {
        "type": "string",
        "description": ""
      },
      "CurrentNodeCount": {
        "type": "int",
        "description": ""
      },
      "EventType": {
        "type": "string",
        "description": ""
      },
      "IdleNodeCount": {
        "type": "int",
        "description": ""
      },
      "InitialNodeCount": {
        "type": "int",
        "description": ""
      },
      "InternalOperationName": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable."
      },
      "IsResizeGrow": {
        "type": "string",
        "description": ""
      },
      "LeavingNodeCount": {
        "type": "int",
        "description": ""
      },
      "MaximumNodeCount": {
        "type": "int",
        "description": ""
      },
      "MinimumNodeCount": {
        "type": "int",
        "description": ""
      },
      "NodeDeallocationOption": {
        "type": "string",
        "description": ""
      },
      "NodeIdleTimeSecondsBeforeScaleDown": {
        "type": "int",
        "description": ""
      },
      "Offer": {
        "type": "string",
        "description": ""
      },
      "OperationName": {
        "type": "string",
        "description": ""
      },
      "PreemptedNodeCount": {
        "type": "string",
        "description": ""
      },
      "PreparingNodeCount": {
        "type": "int",
        "description": ""
      },
      "ProvisioningState": {
        "type": "string",
        "description": ""
      },
      "Publisher": {
        "type": "string",
        "description": ""
      },
      "QuotaAllocated": {
        "type": "string",
        "description": ""
      },
      "QuotaUtilized": {
        "type": "string",
        "description": ""
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record"
      },
      "ResultSignature": {
        "type": "string",
        "description": ""
      },
      "RunningNodeCount": {
        "type": "int",
        "description": ""
      },
      "ScalingType": {
        "type": "string",
        "description": ""
      },
      "Sku": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For"
      },
      "SubnetId": {
        "type": "string",
        "description": ""
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the"
      },
      "TargetNodeCount": {
        "type": "int",
        "description": ""
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UnusableNodeCount": {
        "type": "int",
        "description": ""
      },
      "Version": {
        "type": "string",
        "description": ""
      },
      "VmFamilyName": {
        "type": "string",
        "description": ""
      },
      "VmPriority": {
        "type": "string",
        "description": ""
      },
      "VmSize": {
        "type": "string",
        "description": ""
      }
    }
  },
  "AmlComputeClusterNodeEvent": {
    "tableName": "AmlComputeClusterNodeEvent",
    "description": "AmlCompute Cluster Node events",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClusterCreationTime": {
        "type": "string",
        "description": ""
      },
      "ClusterName": {
        "type": "string",
        "description": ""
      },
      "InternalOperationName": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "NodeAllocationTime": {
        "type": "datetime",
        "description": ""
      },
      "NodeBootTime": {
        "type": "datetime",
        "description": ""
      },
      "NodeId": {
        "type": "string",
        "description": ""
      },
      "Offer": {
        "type": "string",
        "description": ""
      },
      "OperationName": {
        "type": "string",
        "description": ""
      },
      "Publisher": {
        "type": "string",
        "description": ""
      },
      "ResizeEndTime": {
        "type": "datetime",
        "description": ""
      },
      "ResizeStartTime": {
        "type": "datetime",
        "description": ""
      },
      "ResultSignature": {
        "type": "string",
        "description": ""
      },
      "Sku": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "StartTaskEndTime": {
        "type": "datetime",
        "description": ""
      },
      "StartTaskStartTime": {
        "type": "datetime",
        "description": ""
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "TotalE2ETimeInSeconds": {
        "type": "string",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "Version": {
        "type": "string",
        "description": ""
      },
      "VmFamilyName": {
        "type": "string",
        "description": ""
      },
      "VmPriority": {
        "type": "string",
        "description": ""
      },
      "VmSize": {
        "type": "string",
        "description": ""
      }
    }
  },
  "AmlComputeCpuGpuUtilization": {
    "tableName": "AmlComputeCpuGpuUtilization",
    "description": "Azure Machine Learning services CPU and GPU utilizaion logs.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CallerIpAddress": {
        "type": "string",
        "description": "The caller IP address."
      },
      "ClusterName": {
        "type": "string",
        "description": "Compute cluster name for AmlCompute clusters. In case of singularity this"
      },
      "CorrelationId": {
        "type": "string",
        "description": "A GUID used to group together a set of related events."
      },
      "DeviceId": {
        "type": "string",
        "description": "DeviceId of GPU."
      },
      "DeviceType": {
        "type": "string",
        "description": "Type of compute, either CPU or GPU."
      },
      "DurationMs": {
        "type": "string",
        "description": "The duration of the operation in milliseconds."
      },
      "Identity": {
        "type": "string",
        "description": "Identity of the user or application that performed the operation."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Level": {
        "type": "string",
        "description": "The severity level of the event. Must be one of Informational, Warning,"
      },
      "Location": {
        "type": "string",
        "description": "The region of the resource emitting the event."
      },
      "MetricName": {
        "type": "string",
        "description": "Metric name. This would be Cpu/Gpu utilization metric eg."
      },
      "NodeId": {
        "type": "string",
        "description": "NodeId on the cluster."
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation associated with the log entry."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The api-version associated with the operation, if the operationName was"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultDescription": {
        "type": "string",
        "description": "The static text description of this operation."
      },
      "ResultSignature": {
        "type": "string",
        "description": "The sub status of the event. If this operation corresponds to a REST API"
      },
      "ResultType": {
        "type": "string",
        "description": "The status of the event. Typical values include Started, In Progress,"
      },
      "RunId": {
        "type": "string",
        "description": "Unique run identifier."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of the event."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "Utilization": {
        "type": "string",
        "description": "Compute utilization of node."
      },
      "WorkspaceId": {
        "type": "string",
        "description": "Unique workspace identifer."
      },
      "WorkspaceName": {
        "type": "string",
        "description": "User friendly workspace identifier."
      }
    }
  },
  "AmlComputeInstanceEvent": {
    "tableName": "AmlComputeInstanceEvent",
    "description": "Events when ML Compute Instance is accessed (read/write).",
    "columns": {
      "AadTenantId": {
        "type": "string",
        "description": "The AAD tenant ID the operation was submitted for."
      },
      "AmlComputeInstanceName": {
        "type": "string",
        "description": "The name of the compute instance."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CorrelationId": {
        "type": "string",
        "description": "A GUID used to group together a set of related events, when"
      },
      "Identity": {
        "type": "dynamic",
        "description": "The identity of the user or application that performed the"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable"
      },
      "Level": {
        "type": "string",
        "description": "The severity level of the event. Must be one of Informational,"
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation associated with the log entry."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "ResultType": {
        "type": "string",
        "description": "The status of the event. Typical values include Started, In"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of the event."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AmlComputeJobEvent": {
    "tableName": "AmlComputeJobEvent",
    "description": "AmlCompute Job events",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClusterId": {
        "type": "string",
        "description": ""
      },
      "ClusterName": {
        "type": "string",
        "description": ""
      },
      "ClusterResourceGroupName": {
        "type": "string",
        "description": ""
      },
      "CreationApiVersion": {
        "type": "string",
        "description": ""
      },
      "CustomerSubscriptionId": {
        "type": "string",
        "description": ""
      },
      "ErrorDetails": {
        "type": "string",
        "description": ""
      },
      "EventType": {
        "type": "string",
        "description": ""
      },
      "ExecutionState": {
        "type": "string",
        "description": ""
      },
      "ExperimentId": {
        "type": "string",
        "description": ""
      },
      "ExperimentName": {
        "type": "string",
        "description": ""
      },
      "InternalOperationName": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable"
      },
      "JobErrorMessage": {
        "type": "string",
        "description": ""
      },
      "JobId": {
        "type": "string",
        "description": ""
      },
      "JobName": {
        "type": "string",
        "description": ""
      },
      "NodeId": {
        "type": "string",
        "description": ""
      },
      "OperationName": {
        "type": "string",
        "description": ""
      },
      "ProvisioningState": {
        "type": "string",
        "description": ""
      },
      "ResourceGroupName": {
        "type": "string",
        "description": ""
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "ResultSignature": {
        "type": "string",
        "description": ""
      },
      "RunInContainer": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TFParameterServerCount": {
        "type": "string",
        "description": ""
      },
      "TFWorkerCount": {
        "type": "string",
        "description": ""
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "ToolType": {
        "type": "string",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "WorkspaceName": {
        "type": "string",
        "description": ""
      }
    }
  },
  "AmlDataLabelEvent": {
    "tableName": "AmlDataLabelEvent",
    "description": "Events when data label(s) or its projects is accessed (read, created, or deleted).",
    "columns": {
      "AadTenantId": {
        "type": "string",
        "description": "The AAD tenant ID the operation was submitted for."
      },
      "AmlDataStoreName": {
        "type": "string",
        "description": "The name of the data store where the project's data is stored."
      },
      "AmlLabelNames": {
        "type": "string",
        "description": "The label class names which are created for the project."
      },
      "AmlProjectId": {
        "type": "string",
        "description": "The unique identifier of the project."
      },
      "AmlProjectName": {
        "type": "string",
        "description": "The name of the AML project."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CorrelationId": {
        "type": "string",
        "description": "A GUID used to group together a set of related events."
      },
      "Identity": {
        "type": "dynamic",
        "description": "The identity of the user or application that performed the operation."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Level": {
        "type": "string",
        "description": "The severity level of the event. Must be one of Informational, Warning,"
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation associated with the log entry."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultType": {
        "type": "string",
        "description": "The status of the event. Typical values include Started, In Progress,"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of the event."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AmlDataSetEvent": {
    "tableName": "AmlDataSetEvent",
    "description": "Events when a registered or unregistered ML datastore is accessed (read, created, or deleted).",
    "columns": {
      "AadTenantId": {
        "type": "string",
        "description": "The AAD tenant ID the operation was submitted for."
      },
      "AmlDatasetId": {
        "type": "string",
        "description": "The ID of the AML Data Set."
      },
      "AmlDatasetName": {
        "type": "string",
        "description": "The name of the AML Data Set."
      },
      "AmlWorkspaceId": {
        "type": "string",
        "description": "The unique ID of the workspace."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Identity": {
        "type": "dynamic",
        "description": "The identity of the user or application that performed the operation."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation associated with the log entry."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultType": {
        "type": "string",
        "description": "The status of the event. Typical values include Started, In Progress,"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of the event."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AmlDataStoreEvent": {
    "tableName": "AmlDataStoreEvent",
    "description": "Events when ML datastore is accessed (read, created, or deleted).",
    "columns": {
      "AadTenantId": {
        "type": "string",
        "description": "The AAD tenant ID the operation was submitted for."
      },
      "AmlDatastoreName": {
        "type": "string",
        "description": "The name of the AML Data Store."
      },
      "AmlWorkspaceId": {
        "type": "string",
        "description": "The unique ID of the workspace."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Identity": {
        "type": "dynamic",
        "description": "The identity of the user or application that performed the operation."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation associated with the log entry."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultType": {
        "type": "string",
        "description": "The status of the event. Typical values include Started, In Progress,"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of the event."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AmlDeploymentEvent": {
    "tableName": "AmlDeploymentEvent",
    "description": "Events when a model deployment happens on ACI or AKS.",
    "columns": {
      "AadTenantId": {
        "type": "string",
        "description": "The AAD tenant ID the operation was submitted for."
      },
      "AmlServiceName": {
        "type": "string",
        "description": "The name of the AML service."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CorrelationId": {
        "type": "string",
        "description": "A GUID used to group together a set of related events."
      },
      "Identity": {
        "type": "dynamic",
        "description": "The identity of the user or application that performed the operation."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Level": {
        "type": "string",
        "description": "The severity level of the event. Must be one of Informational, Warning,"
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation associated with the log entry."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultType": {
        "type": "string",
        "description": "The status of the event. Typical values include Started, In Progress,"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of the event."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AmlEnvironmentEvent": {
    "tableName": "AmlEnvironmentEvent",
    "description": "Events when ML environments are accessed (read, created, or deleted).",
    "columns": {
      "AadTenantId": {
        "type": "string",
        "description": "The AAD tenant ID the operation was submitted for."
      },
      "AmlEnvironmentName": {
        "type": "string",
        "description": "The name of environment."
      },
      "AmlEnvironmentVersion": {
        "type": "string",
        "description": "The version of the environment."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Identity": {
        "type": "dynamic",
        "description": "The identity of the user or application that performed the"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation associated with the log entry."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of the event."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AmlInferencingEvent": {
    "tableName": "AmlInferencingEvent",
    "description": "Events for inference or related operation on AKS or ACI compute type.",
    "columns": {
      "AadTenantId": {
        "type": "string",
        "description": "The AAD tenant ID the operation was submitted for."
      },
      "AmlServiceName": {
        "type": "string",
        "description": "The name of the AML service."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CorrelationId": {
        "type": "string",
        "description": "A GUID used to group together a set of related events."
      },
      "Identity": {
        "type": "dynamic",
        "description": "The identity of the user or application that performed the operation."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Level": {
        "type": "string",
        "description": "The severity level of the event. Must be one of Informational, Warning,"
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation associated with the log entry."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultType": {
        "type": "string",
        "description": "The status of the event. Typical values include Started, In Progress,"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of the event."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AmlModelsEvent": {
    "tableName": "AmlModelsEvent",
    "description": "Events when ML model is accessed (read, created, or deleted). Incudes events when packaging of models and assets happen into a ready-to-build packages.",
    "columns": {
      "AadTenantId": {
        "type": "string",
        "description": "The AAD tenant ID the operation was submitted for."
      },
      "AmlModelName": {
        "type": "string",
        "description": "The name of the AML Model."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CorrelationId": {
        "type": "string",
        "description": "A GUID used to group together a set of related events."
      },
      "Identity": {
        "type": "dynamic",
        "description": "The identity of the user or application that performed the operation."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Level": {
        "type": "string",
        "description": "The severity level of the event. Must be one of Informational, Warning,"
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation associated with the log entry."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultSignature": {
        "type": "string",
        "description": "The HTTP status code of the event. Typical values include 200, 201, 202 etc."
      },
      "ResultType": {
        "type": "string",
        "description": "The status of the event. Typical values include Started, In Progress,"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of the event."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AmlOnlineEndpointConsoleLog": {
    "tableName": "AmlOnlineEndpointConsoleLog",
    "description": "Azure ML online endpoints console logs. It provides console logs output from user containers.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ContainerImageName": {
        "type": "string",
        "description": "The name of the docker image running in the container where the log"
      },
      "ContainerName": {
        "type": "string",
        "description": "The name of the container where the log was generated."
      },
      "DeploymentName": {
        "type": "string",
        "description": "The name of the deployment associated with the log record."
      },
      "InstanceId": {
        "type": "string",
        "description": "The ID of the instance that generated this log record."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Message": {
        "type": "string",
        "description": "The content of the log."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AmlOnlineEndpointEventLog": {
    "tableName": "AmlOnlineEndpointEventLog",
    "description": "Azure ML online endpoints event logs. It provides event logs regarding the inference-server container's life cycle.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DeploymentName": {
        "type": "string",
        "description": "The name of the deployment associated with this log record."
      },
      "InstanceId": {
        "type": "string",
        "description": "The ID of the instance that generated this log record."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Message": {
        "type": "string",
        "description": "The content of the inference-server container life cycle event."
      },
      "Name": {
        "type": "string",
        "description": "The name of the inference-server container life cycle event."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with this log record."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when this log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AmlOnlineEndpointTrafficLog": {
    "tableName": "AmlOnlineEndpointTrafficLog",
    "description": "Traffic logs for AzureML (machine learning) online endpoints. The table could be used to check the detailed information of the request to an online endpoint. For example, you could use it to check the request duration, the request failure reason, etc.",
    "columns": {
      "AuthType": {
        "type": "string",
        "description": "The authentication type of the request (Key, AMLToken,"
      },
      "AzureMLWorkspaceId": {
        "type": "string",
        "description": "The machine learning workspace ID of the online endpoint."
      },
      "AzureMLWorkspaceName": {
        "type": "string",
        "description": "The machine learning workspace name of the online endpoint."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DeploymentName": {
        "type": "string",
        "description": "The name of the online deployment."
      },
      "EndpointName": {
        "type": "string",
        "description": "The name of the online endpoint."
      },
      "IdentityData": {
        "type": "string",
        "description": "The identity data from the user client (JWT OID)."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable"
      },
      "Location": {
        "type": "string",
        "description": "The region of the online endpoint."
      },
      "Method": {
        "type": "string",
        "description": "The requested method from client."
      },
      "ModelStatusCode": {
        "type": "int",
        "description": "The response status code from model."
      },
      "ModelStatusReason": {
        "type": "string",
        "description": "The response status reason from model."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "Path": {
        "type": "string",
        "description": "The requested path from client."
      },
      "Protocol": {
        "type": "string",
        "description": "The protocol of the request."
      },
      "RequestDurationMs": {
        "type": "int",
        "description": "Duration in milliseconds from the request start time to the last"
      },
      "RequestPayloadSize": {
        "type": "int",
        "description": "The total bytes received from the user client."
      },
      "RequestThrottlingDelayMs": {
        "type": "int",
        "description": "Delay in milliseconds in request data transfer due to network"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "ResponseCode": {
        "type": "int",
        "description": "The final response code returned to the user."
      },
      "ResponseCodeReason": {
        "type": "string",
        "description": "The final response code reason returned to the user."
      },
      "ResponseDurationMs": {
        "type": "int",
        "description": "Duration in milliseconds from the request start time to the first"
      },
      "ResponsePayloadSize": {
        "type": "int",
        "description": "The total bytes sent back to the user client."
      },
      "ResponseThrottlingDelayMs": {
        "type": "int",
        "description": "Delay in milliseconds in response data transfer due to network"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the request was received by"
      },
      "TotalDurationMs": {
        "type": "int",
        "description": "Duration in milliseconds from the request start time to the last"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The user-agent header of the request."
      },
      "XMSClientRequestId": {
        "type": "string",
        "description": "The tracking ID generated by user client."
      },
      "XRequestId": {
        "type": "string",
        "description": "The request ID generated by Azure Machine Learning for"
      }
    }
  },
  "AmlPipelineEvent": {
    "tableName": "AmlPipelineEvent",
    "description": "Events when ML pipeline draft or endpoint or module are accessed (read, created, or deleted).",
    "columns": {
      "AadTenantId": {
        "type": "string",
        "description": "The AAD tenant ID the operation was submitted for."
      },
      "AmlModuleId": {
        "type": "string",
        "description": "The unique ID of the module."
      },
      "AmlModuleName": {
        "type": "string",
        "description": "The name of the AML Module."
      },
      "AmlParentPipelineId": {
        "type": "string",
        "description": "The ID of the parent AML pipeline (in the case of cloning)."
      },
      "AmlPipelineDraftId": {
        "type": "string",
        "description": "The ID of the AML pipeline draft."
      },
      "AmlPipelineDraftName": {
        "type": "string",
        "description": "The name of the AML pipeline draft."
      },
      "AmlPipelineEndpointId": {
        "type": "string",
        "description": "The ID of the AML pipeline endpoint."
      },
      "AmlPipelineEndpointName": {
        "type": "string",
        "description": "The name of the AML pipeline endpoint."
      },
      "AmlPipelineId": {
        "type": "string",
        "description": "The ID of the AML pipeline."
      },
      "AmlWorkspaceId": {
        "type": "string",
        "description": "The unique ID of the AML workspace."
      },
      "AmlWorkspaceName": {
        "type": "string",
        "description": "The name of the AML workspace."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CorrelationId": {
        "type": "string",
        "description": "A GUID used to group together a set of related events."
      },
      "Identity": {
        "type": "dynamic",
        "description": "The identity of the user or application that performed the"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable"
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation associated with the log entry."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "ResultType": {
        "type": "string",
        "description": "The status of the event. Typical values include Started, In"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of the event."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AmlRegistryReadEventsLog": {
    "tableName": "AmlRegistryReadEventsLog",
    "description": "Azure ML Registry Read events log. It keeps records of Read operations with registries data access (data plane), including user identity, asset name and version for each access event.",
    "columns": {
      "AssetName": {
        "type": "string",
        "description": "AzureML Asset name associated with log record."
      },
      "AssetVersion": {
        "type": "string",
        "description": "AzureML Asset version associated with log record."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CorrelationId": {
        "type": "string",
        "description": "The correlation ID associated with log record."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Labels": {
        "type": "string",
        "description": "Labels associated with log record."
      },
      "RegistryResourceId": {
        "type": "string",
        "description": "ARM ResourceId of the registry that generated this log record."
      },
      "RegistryTenantId": {
        "type": "string",
        "description": "TenantId associated with log record."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserName": {
        "type": "string",
        "description": "User name who initialized the event."
      },
      "UserObjectId": {
        "type": "string",
        "description": "User AAD object ID who initialized the event."
      }
    }
  },
  "AmlRegistryWriteEventsLog": {
    "tableName": "AmlRegistryWriteEventsLog",
    "description": "Azure ML Registry Write events log. It keeps records of Write operations with registries data access (data plane), including user identity, asset name and version for each access event.",
    "columns": {
      "AssetName": {
        "type": "string",
        "description": "AzureML Asset name associated with log record."
      },
      "AssetVersion": {
        "type": "string",
        "description": "AzureML Asset version associated with log record."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CorrelationId": {
        "type": "string",
        "description": "The correlation ID associated with log record."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Labels": {
        "type": "string",
        "description": "Labels associated with log record."
      },
      "RegistryResourceId": {
        "type": "string",
        "description": "ARM ResourceId of the registry that generated this log record."
      },
      "RegistryTenantId": {
        "type": "string",
        "description": "TenantId associated with log record."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserName": {
        "type": "string",
        "description": "User name who initialized the event."
      },
      "UserObjectId": {
        "type": "string",
        "description": "User AAD object ID who initialized the event."
      }
    }
  },
  "AmlRunEvent": {
    "tableName": "AmlRunEvent",
    "description": "Events when ML experiments are accessed (read, created, or deleted).",
    "columns": {
      "AadTenantId": {
        "type": "string",
        "description": "The AAD tenant ID the operation was submitted for."
      },
      "AmlWorkspaceId": {
        "type": "string",
        "description": "The unique ID of the workspace."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Identity": {
        "type": "dynamic",
        "description": "The identity of the user or application that performed the operation."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation associated with the log entry."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "RunId": {
        "type": "string",
        "description": "The unique ID of the run."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of the event."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AmlRunStatusChangedEvent": {
    "tableName": "AmlRunStatusChangedEvent",
    "description": "Azure Machine Learning services run status event logs.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CallerIpAddress": {
        "type": "string",
        "description": "The caller IP address."
      },
      "CorrelationId": {
        "type": "string",
        "description": "A GUID used to group together a set of related events."
      },
      "DurationMs": {
        "type": "string",
        "description": "The duration of the operation in milliseconds."
      },
      "Identity": {
        "type": "string",
        "description": "Identity of the user or application that performed the operation"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Level": {
        "type": "string",
        "description": "The severity level of the event. Must be one of Informational, Warning,"
      },
      "Location": {
        "type": "string",
        "description": "The region of the resource emitting the event."
      },
      "Message": {
        "type": "string",
        "description": "Message associated with run status change."
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation associated with the log entry."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The api-version associated with the operation, if the operationName"
      },
      "ParentRunId": {
        "type": "string",
        "description": "The unique identifier for the parent run."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultDescription": {
        "type": "string",
        "description": "The static text description of this operation."
      },
      "ResultSignature": {
        "type": "string",
        "description": "The sub status of the event. If this operation corresponds to a REST API"
      },
      "ResultType": {
        "type": "string",
        "description": "The status of the event. Typical values include Started, In Progress,"
      },
      "RootRunId": {
        "type": "string",
        "description": "The unique identifier for the root run."
      },
      "RunId": {
        "type": "string",
        "description": "Unique run identifier."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "Status": {
        "type": "string",
        "description": "Updated run status."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of the event."
      },
      "TriggeringUserName": {
        "type": "string",
        "description": "Friendly name of run status change initiator."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "WorkspaceId": {
        "type": "string",
        "description": "Unique workspace identifer."
      },
      "WorkspaceName": {
        "type": "string",
        "description": "User friendly workspace identifier."
      }
    }
  },
  "Anomalies": {
    "tableName": "Anomalies",
    "description": "This table contains anomalies generated by the active Anomaly analytics rules in Azure Sentinel.",
    "columns": {
      "ActivityInsights": {
        "type": "dynamic",
        "description": "Insights about the activites corresponding to the generated"
      },
      "AnomalyDetails": {
        "type": "dynamic",
        "description": "JSON object containing general information about the rule and"
      },
      "AnomalyReasons": {
        "type": "dynamic",
        "description": "The detailed explanation of the generated anomaly as JSON."
      },
      "AnomalyTemplateId": {
        "type": "string",
        "description": "The ID of the Anomaly template that generated this anomaly."
      },
      "AnomalyTemplateName": {
        "type": "string",
        "description": "The name of the Anomaly template that generated this anomaly."
      },
      "AnomalyTemplateVersion": {
        "type": "string",
        "description": "The version of the Anomaly template that generated this anomaly."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Description": {
        "type": "string",
        "description": "The description of the anomaly."
      },
      "DestinationDevice": {
        "type": "string",
        "description": "The destination device for which the anomaly was generated."
      },
      "DestinationIpAddress": {
        "type": "string",
        "description": "The destination ip address for which the anomaly was generated."
      },
      "DestinationLocation": {
        "type": "dynamic",
        "description": "Info about the destination location for which the anomaly was"
      },
      "DeviceInsights": {
        "type": "dynamic",
        "description": "Insights about the devices corresponding to the generated"
      },
      "EndTime": {
        "type": "datetime",
        "description": "The time (UTC) when the anomaly ended."
      },
      "Entities": {
        "type": "dynamic",
        "description": "JSON object containing all entities involved in the generated"
      },
      "ExtendedLinks": {
        "type": "dynamic",
        "description": "List of links pointing to the data that generated the anomaly."
      },
      "ExtendedProperties": {
        "type": "dynamic",
        "description": "JSON object with additional data on the anomaly as key-value"
      },
      "Id": {
        "type": "string",
        "description": "The ID of the generated anomaly."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "RuleConfigVersion": {
        "type": "string",
        "description": "The configuration version of the Anomaly analytics rule that"
      },
      "RuleId": {
        "type": "string",
        "description": "The ID of the Anomaly analytics rule that generated this anomaly."
      },
      "RuleName": {
        "type": "string",
        "description": "The name of the Anomaly analytics rule that generated this"
      },
      "RuleStatus": {
        "type": "string",
        "description": "The status (Flighting/Production) of the Anomaly analytics rule"
      },
      "Score": {
        "type": "real",
        "description": "The score of the anomaly."
      },
      "SourceDevice": {
        "type": "string",
        "description": "The source device for which the anomaly was generated."
      },
      "SourceIpAddress": {
        "type": "string",
        "description": "The source ip address for which the anomaly was generated."
      },
      "SourceLocation": {
        "type": "dynamic",
        "description": "Info about the source location for which the anomaly was"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "StartTime": {
        "type": "datetime",
        "description": "The time (UTC) when the anomaly started."
      },
      "Tactics": {
        "type": "string",
        "description": "List of MITRE ATT&CK tactics (strings) corresponding to the"
      },
      "Techniques": {
        "type": "string",
        "description": "List MITRE ATT&CK techniques (strings) corresponding to the"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the anomaly was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserInsights": {
        "type": "dynamic",
        "description": "Insights about the users corresponding to the generated anomaly"
      },
      "UserName": {
        "type": "string",
        "description": "The username for which the anomaly was generated."
      },
      "UserPrincipalName": {
        "type": "string",
        "description": "The UPN of the user for which the anomaly was generated."
      },
      "VendorName": {
        "type": "string",
        "description": "The name of the vendor that generated this anomaly."
      },
      "WorkspaceId": {
        "type": "string",
        "description": "The ID of the Sentinel workspace."
      }
    }
  },
  "ApiManagementGatewayLlmLog": {
    "tableName": "ApiManagementGatewayLlmLog",
    "description": "Gateway Logs related to language models for API Management Language.",
    "columns": {
      "ApiVersion": {
        "type": "string",
        "description": "API version used by client."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CompletionTokens": {
        "type": "int",
        "description": "The number of completion tokens used by the request."
      },
      "CorrelationId": {
        "type": "string",
        "description": "Unique id corresponding with the same field in"
      },
      "DeploymentName": {
        "type": "string",
        "description": "Deployment name used by client."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "IsStreamCompletion": {
        "type": "bool",
        "description": "Boolean value indicating if the request specified stream mode to be"
      },
      "ModelName": {
        "type": "string",
        "description": "Model name used by the request."
      },
      "OperationName": {
        "type": "string",
        "description": "Field denotes the specific name or identifier of the operation being"
      },
      "PromptTokens": {
        "type": "int",
        "description": "The number of prompt tokens used by the request."
      },
      "Region": {
        "type": "string",
        "description": "The field indicates the geographical location or data center region"
      },
      "RequestId": {
        "type": "string",
        "description": "Language model's request Id."
      },
      "RequestMessages": {
        "type": "dynamic",
        "description": "Contents of the request messages."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResponseMessages": {
        "type": "dynamic",
        "description": "Contents of the response messages."
      },
      "SequenceNumber": {
        "type": "int",
        "description": "The index of this entry in the message exchange."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time when request processing started."
      },
      "TotalTokens": {
        "type": "int",
        "description": "The number of total tokens used by the request."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "ApiManagementGatewayLogs": {
    "tableName": "ApiManagementGatewayLogs",
    "description": "Azure ApiManagement gateway logs.",
    "columns": {
      "ApiId": {
        "type": "string",
        "description": ""
      },
      "ApimSubscriptionId": {
        "type": "string",
        "description": ""
      },
      "ApiRevision": {
        "type": "string",
        "description": ""
      },
      "BackendId": {
        "type": "string",
        "description": ""
      },
      "BackendMethod": {
        "type": "string",
        "description": ""
      },
      "BackendProtocol": {
        "type": "string",
        "description": ""
      },
      "BackendRequestBody": {
        "type": "string",
        "description": "Backend request body"
      },
      "BackendRequestHeaders": {
        "type": "dynamic",
        "description": ""
      },
      "BackendResponseBody": {
        "type": "string",
        "description": "Backend response body"
      },
      "BackendResponseCode": {
        "type": "int",
        "description": ""
      },
      "BackendResponseHeaders": {
        "type": "dynamic",
        "description": ""
      },
      "BackendTime": {
        "type": "long",
        "description": ""
      },
      "BackendUrl": {
        "type": "string",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Cache": {
        "type": "string",
        "description": ""
      },
      "CacheTime": {
        "type": "long",
        "description": ""
      },
      "CallerIpAddress": {
        "type": "string",
        "description": ""
      },
      "Category": {
        "type": "string",
        "description": ""
      },
      "ClientProtocol": {
        "type": "string",
        "description": ""
      },
      "ClientTime": {
        "type": "long",
        "description": ""
      },
      "ClientTlsVersion": {
        "type": "string",
        "description": ""
      },
      "CorrelationId": {
        "type": "string",
        "description": "Unique id to group related events for a websocket request."
      },
      "Errors": {
        "type": "dynamic",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "IsMasterTrace": {
        "type": "bool",
        "description": "Indication if the request trace was created with the master"
      },
      "IsRequestSuccess": {
        "type": "bool",
        "description": ""
      },
      "IsTraceAllowed": {
        "type": "bool",
        "description": "Indication if the requested trace was allowed"
      },
      "IsTraceExpired": {
        "type": "bool",
        "description": "Indication if the requested trace has expired and is not granted"
      },
      "IsTraceRequested": {
        "type": "bool",
        "description": "Indication if the caller has requested to create a request trace"
      },
      "LastErrorElapsed": {
        "type": "long",
        "description": ""
      },
      "LastErrorMessage": {
        "type": "string",
        "description": ""
      },
      "LastErrorReason": {
        "type": "string",
        "description": ""
      },
      "LastErrorScope": {
        "type": "string",
        "description": ""
      },
      "LastErrorSection": {
        "type": "string",
        "description": ""
      },
      "LastErrorSource": {
        "type": "string",
        "description": ""
      },
      "Method": {
        "type": "string",
        "description": ""
      },
      "OperationId": {
        "type": "string",
        "description": ""
      },
      "OperationName": {
        "type": "string",
        "description": ""
      },
      "ProductId": {
        "type": "string",
        "description": ""
      },
      "Region": {
        "type": "string",
        "description": "Country or region where API Management Gateway is located."
      },
      "RequestBody": {
        "type": "string",
        "description": "Client request body"
      },
      "RequestHeaders": {
        "type": "dynamic",
        "description": ""
      },
      "RequestSize": {
        "type": "int",
        "description": ""
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResponseBody": {
        "type": "string",
        "description": "Gateway response body"
      },
      "ResponseCode": {
        "type": "int",
        "description": ""
      },
      "ResponseHeaders": {
        "type": "dynamic",
        "description": ""
      },
      "ResponseSize": {
        "type": "int",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time when request processing started."
      },
      "Timestamp": {
        "type": "datetime",
        "description": ""
      },
      "TotalTime": {
        "type": "long",
        "description": ""
      },
      "TraceRecords": {
        "type": "dynamic",
        "description": "Records emitted by trace policies"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "Url": {
        "type": "string",
        "description": ""
      },
      "UserId": {
        "type": "string",
        "description": ""
      },
      "WorkspaceId": {
        "type": "string",
        "description": "ID of a workspace for which the request API operation is a part of"
      },
      "Destination": {
        "type": "string",
        "description": "The destination of the request/message for the websocket connection."
      },
      "Error": {
        "type": "string",
        "description": "Error details if any for the websocket connection."
      },
      "EventName": {
        "type": "string",
        "description": "Name of the event describing the operation."
      },
      "Source": {
        "type": "string",
        "description": "The source of the request/message for the websocket connection."
      }
    }
  },
  "AppAvailabilityResults": {
    "tableName": "AppAvailabilityResults",
    "description": "Application Insights availability test results.",
    "columns": {
      "AppRoleInstance": {
        "type": "string",
        "description": "Role instance of the application."
      },
      "AppRoleName": {
        "type": "string",
        "description": "Role name of the application."
      },
      "AppVersion": {
        "type": "string",
        "description": "Version of the application."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClientBrowser": {
        "type": "string",
        "description": "Browser running on the client device."
      },
      "ClientCity": {
        "type": "string",
        "description": "City where the client device is located."
      },
      "ClientCountryOrRegion": {
        "type": "string",
        "description": "Country or region where the client device is located."
      },
      "ClientIP": {
        "type": "string",
        "description": "IP address of the client device."
      },
      "ClientModel": {
        "type": "string",
        "description": "Model of the client device."
      },
      "ClientOS": {
        "type": "string",
        "description": "Operating system of the client device."
      },
      "ClientStateOrProvince": {
        "type": "string",
        "description": "State or province where the client device is located."
      },
      "ClientType": {
        "type": "string",
        "description": "Type of the client device."
      },
      "DurationMs": {
        "type": "real",
        "description": "Number of milliseconds it took to finish the test."
      },
      "Id": {
        "type": "string",
        "description": "Unique ID of the availability test."
      },
      "IKey": {
        "type": "string",
        "description": "Instrumentation key of the Azure resource."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "ItemCount": {
        "type": "int",
        "description": "Number of telemetry items represented by a single sample item."
      },
      "Location": {
        "type": "string",
        "description": "The location from where the test ran."
      },
      "Measurements": {
        "type": "dynamic",
        "description": "Application-defined measurements."
      },
      "Message": {
        "type": "string",
        "description": "Application-defined message."
      },
      "Name": {
        "type": "string",
        "description": "Availability Test Name."
      },
      "OperationId": {
        "type": "string",
        "description": "Application-defined operation ID."
      },
      "OperationName": {
        "type": "string",
        "description": "Application-defined name of the overall operation. The"
      },
      "ParentId": {
        "type": "string",
        "description": "ID of the parent operation."
      },
      "Properties": {
        "type": "dynamic",
        "description": "Application-defined properties."
      },
      "ResourceGUID": {
        "type": "string",
        "description": "Unique, persistent identifier of an Azure resource."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SDKVersion": {
        "type": "string",
        "description": "Version of the SDK used by the application to generate this"
      },
      "SessionId": {
        "type": "string",
        "description": "Application-defined session ID."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "Success": {
        "type": "bool",
        "description": "The result of test."
      },
      "SyntheticSource": {
        "type": "string",
        "description": "Synthetic source of the operation."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time when availability result was recorded."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAccountId": {
        "type": "string",
        "description": "Application-defined account associated with the user."
      },
      "UserAuthenticatedId": {
        "type": "string",
        "description": "Persistent string that uniquely represents each authenticated user in"
      },
      "UserId": {
        "type": "string",
        "description": "Anonymous ID of a user accessing the application."
      }
    }
  },
  "AppBrowserTimings": {
    "tableName": "AppBrowserTimings",
    "description": "Application Insights browser timings.",
    "columns": {
      "AppRoleInstance": {
        "type": "string",
        "description": "Role instance of the application."
      },
      "AppRoleName": {
        "type": "string",
        "description": "Role name of the application."
      },
      "AppVersion": {
        "type": "string",
        "description": "Version of the application."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClientBrowser": {
        "type": "string",
        "description": "Browser running on the client device."
      },
      "ClientCity": {
        "type": "string",
        "description": "City where the client device is located."
      },
      "ClientCountryOrRegion": {
        "type": "string",
        "description": "Country or region where the client device is located."
      },
      "ClientIP": {
        "type": "string",
        "description": "IP address of the client device."
      },
      "ClientModel": {
        "type": "string",
        "description": "Model of the client device."
      },
      "ClientOS": {
        "type": "string",
        "description": "Operating system of the client device."
      },
      "ClientStateOrProvince": {
        "type": "string",
        "description": "State or province where the client device is located."
      },
      "ClientType": {
        "type": "string",
        "description": "Type of the client device."
      },
      "IKey": {
        "type": "string",
        "description": "Instrumentation key of the Azure resource."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "ItemCount": {
        "type": "int",
        "description": "Number of telemetry items represented by a single sample item."
      },
      "Measurements": {
        "type": "dynamic",
        "description": "Application-defined measurements."
      },
      "Name": {
        "type": "string",
        "description": "Name of the page."
      },
      "NetworkDurationMs": {
        "type": "real",
        "description": "Page load network time in milliseconds."
      },
      "OperationId": {
        "type": "string",
        "description": "Application-defined operation ID."
      },
      "OperationName": {
        "type": "string",
        "description": "Application-defined name of the overall operation. The"
      },
      "ParentId": {
        "type": "string",
        "description": "ID of the parent operation."
      },
      "ProcessingDurationMs": {
        "type": "real",
        "description": "Page DOM processing time in milliseconds."
      },
      "Properties": {
        "type": "dynamic",
        "description": "Application-defined properties."
      },
      "ReceiveDurationMs": {
        "type": "real",
        "description": "Page load recieve response duration in milliseconds."
      },
      "ResourceGUID": {
        "type": "string",
        "description": "Unique, persistent identifier of an Azure resource."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SDKVersion": {
        "type": "string",
        "description": "Version of the SDK used by the application to generate this"
      },
      "SendDurationMs": {
        "type": "real",
        "description": "Send request time in milliseconds."
      },
      "SessionId": {
        "type": "string",
        "description": "Application-defined session ID."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "SyntheticSource": {
        "type": "string",
        "description": "Synthetic source of the operation."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time when request was recorded."
      },
      "TotalDurationMs": {
        "type": "real",
        "description": "Page loading total time in milliseconds."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "Url": {
        "type": "string",
        "description": "URI of the page view."
      },
      "UserAccountId": {
        "type": "string",
        "description": "Application-defined account associated with the user."
      },
      "UserAuthenticatedId": {
        "type": "string",
        "description": "Persistent string that uniquely represents each authenticated user in"
      },
      "UserId": {
        "type": "string",
        "description": "Anonymous ID of a user accessing the application."
      }
    }
  },
  "AppCenterError": {
    "tableName": "AppCenterError",
    "description": "",
    "columns": {
      "Annotation": {
        "type": "string",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CreatedAt": {
        "type": "datetime",
        "description": ""
      },
      "ErrorClass": {
        "type": "string",
        "description": ""
      },
      "ErrorFile": {
        "type": "string",
        "description": ""
      },
      "ErrorGroupId": {
        "type": "string",
        "description": ""
      },
      "ErrorId": {
        "type": "string",
        "description": ""
      },
      "ErrorLine": {
        "type": "int",
        "description": ""
      },
      "ErrorMethod": {
        "type": "string",
        "description": ""
      },
      "ErrorReason": {
        "type": "string",
        "description": ""
      },
      "ErrorType": {
        "type": "string",
        "description": ""
      },
      "ExceptionType": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "JailBreak": {
        "type": "bool",
        "description": ""
      },
      "LastErrorAt": {
        "type": "datetime",
        "description": ""
      },
      "Model": {
        "type": "string",
        "description": ""
      },
      "Oem": {
        "type": "string",
        "description": ""
      },
      "OsVersion": {
        "type": "string",
        "description": ""
      },
      "SchemaType": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "Status": {
        "type": "string",
        "description": ""
      },
      "SymbolicatedAt": {
        "type": "datetime",
        "description": ""
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserString": {
        "type": "string",
        "description": ""
      }
    }
  },
  "AppDependencies": {
    "tableName": "AppDependencies",
    "description": "Application Insights dependencies.",
    "columns": {
      "AppRoleInstance": {
        "type": "string",
        "description": "Role instance of the application."
      },
      "AppRoleName": {
        "type": "string",
        "description": "Role name of the application."
      },
      "AppVersion": {
        "type": "string",
        "description": "Version of the application."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClientBrowser": {
        "type": "string",
        "description": "Browser running on the client device."
      },
      "ClientCity": {
        "type": "string",
        "description": "City where the client device is located."
      },
      "ClientCountryOrRegion": {
        "type": "string",
        "description": "Country or region where the client device is located."
      },
      "ClientIP": {
        "type": "string",
        "description": "IP address of the client device."
      },
      "ClientModel": {
        "type": "string",
        "description": "Model of the client device."
      },
      "ClientOS": {
        "type": "string",
        "description": "Operating system of the client device."
      },
      "ClientStateOrProvince": {
        "type": "string",
        "description": "State or province where the client device is located."
      },
      "ClientType": {
        "type": "string",
        "description": "Type of the client device."
      },
      "Data": {
        "type": "string",
        "description": "Detailed information about the dependency call, such as a full URI or"
      },
      "DependencyType": {
        "type": "string",
        "description": "Dependency type, such as HTTP or SQL."
      },
      "DurationMs": {
        "type": "real",
        "description": "Number of milliseconds the dependency call took to complete."
      },
      "Id": {
        "type": "string",
        "description": "Application-generated, unique ID of the dependency call."
      },
      "IKey": {
        "type": "string",
        "description": "Instrumentation key of the Azure resource."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "ItemCount": {
        "type": "int",
        "description": "Number of telemetry items represented by a single sample item."
      },
      "Measurements": {
        "type": "dynamic",
        "description": "Application-defined measurements."
      },
      "Name": {
        "type": "string",
        "description": "Dependency name, such as an URI query without parameters or a"
      },
      "OperationId": {
        "type": "string",
        "description": "Application-defined operation ID."
      },
      "OperationName": {
        "type": "string",
        "description": "Application-defined name of the overall operation. The"
      },
      "ParentId": {
        "type": "string",
        "description": "ID of the parent operation."
      },
      "Properties": {
        "type": "dynamic",
        "description": "Application-defined properties."
      },
      "ReferencedItemId": {
        "type": "string",
        "description": "Id of the item with additional details about the dependency call."
      },
      "ReferencedType": {
        "type": "string",
        "description": "Name of the table with additional details about the dependency call."
      },
      "ResourceGUID": {
        "type": "string",
        "description": "Unique, persistent identifier of an Azure resource."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultCode": {
        "type": "string",
        "description": "Result code returned to the application by the dependency call."
      },
      "SDKVersion": {
        "type": "string",
        "description": "Version of the SDK used by the application to generate this"
      },
      "SessionId": {
        "type": "string",
        "description": "Application-defined session ID."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "Success": {
        "type": "bool",
        "description": "Indicates whether the dependency call completed successfully."
      },
      "SyntheticSource": {
        "type": "string",
        "description": "Synthetic source of the operation."
      },
      "Target": {
        "type": "string",
        "description": "Target of a dependency call, such as a Web or a SQL server name."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time when dependency call was recorded."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAccountId": {
        "type": "string",
        "description": "Application-defined account associated with the user."
      },
      "UserAuthenticatedId": {
        "type": "string",
        "description": "Persistent string that uniquely represents each authenticated user in"
      },
      "UserId": {
        "type": "string",
        "description": "Anonymous ID of a user accessing the application."
      }
    }
  },
  "AppEnvSessionConsoleLogs": {
    "tableName": "AppEnvSessionConsoleLogs",
    "description": "Logs generated by Sessions within a Container App Environment. This includes logs generated on the stdout or stderr streams by all containers in the session.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ContainerGroupId": {
        "type": "string",
        "description": "The ID of the session's pod generating this log."
      },
      "ContainerGroupName": {
        "type": "string",
        "description": "The name of the session's pod generating this log."
      },
      "ContainerId": {
        "type": "string",
        "description": "The ID of the session generating this log."
      },
      "ContainerImage": {
        "type": "string",
        "description": "The image used in the container instance that generated this log."
      },
      "ContainerName": {
        "type": "string",
        "description": "The name of the container generating this log."
      },
      "EnvironmentName": {
        "type": "string",
        "description": "The name of the Container App Environment generating this log."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Location": {
        "type": "string",
        "description": "The location of the session generating this log."
      },
      "Log": {
        "type": "string",
        "description": "The log generated by the user's session."
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation generating this log."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SessionIdentifier": {
        "type": "string",
        "description": "The identifier of the session generating this log."
      },
      "SessionPoolName": {
        "type": "string",
        "description": "The name of the Session Pool generating this log."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "Stream": {
        "type": "string",
        "description": "The stream where the log was emitted."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Time (UTC) when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AppEnvSessionLifecycleLogs": {
    "tableName": "AppEnvSessionLifecycleLogs",
    "description": "Logs generated by CustomContainer Session Pool within a Container App Environment. This includes logs produced by session allocation related platform events.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Level": {
        "type": "string",
        "description": "The log level of the log. This can be Info, Error, etc."
      },
      "Location": {
        "type": "string",
        "description": "The location of the Session Pool generating this log."
      },
      "Log": {
        "type": "string",
        "description": "The log generated by the Session Pool."
      },
      "NodeName": {
        "type": "string",
        "description": "The name of the node instance that generated this log."
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation generating this log."
      },
      "PodName": {
        "type": "string",
        "description": "The name of the session's pod generating this log."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SessionPoolName": {
        "type": "string",
        "description": "The name of the Session Pool generating this log."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Time (UTC) when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AppEnvSessionPoolEventLogs": {
    "tableName": "AppEnvSessionPoolEventLogs",
    "description": "Logs generated by CustomContainer Session Pool within a Container App Environment. This includes logs produced by the Session Pool itself, including pod creation and deletion, etc",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Level": {
        "type": "string",
        "description": "The log level of the log. This can be Info, Error, etc."
      },
      "Location": {
        "type": "string",
        "description": "The location of the Session Pool generating this log."
      },
      "Log": {
        "type": "string",
        "description": "The log generated by the Session Pool."
      },
      "NodeName": {
        "type": "string",
        "description": "The name of the node instance that generated this log."
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation generating this log."
      },
      "PodName": {
        "type": "string",
        "description": "The name of the session's pod generating this log."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SessionPoolName": {
        "type": "string",
        "description": "The name of the Session Pool generating this log."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Time (UTC) when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AppEnvSpringAppConsoleLogs": {
    "tableName": "AppEnvSpringAppConsoleLogs",
    "description": "Logs generated by Spring Apps(Container Apps with managedBy annotation) within a Container App Environment. This includes logs generated on the stdout or stderr streams by all containers in the app. It also includes all Dapr sidecar container logs but does not include any system or platform level logs produced by the Container App Environment itself.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ContainerAppName": {
        "type": "string",
        "description": "The name of the Container App generating this log."
      },
      "ContainerGroupId": {
        "type": "string",
        "description": "The ID of the container's pod (Container App replica) generating this"
      },
      "ContainerGroupName": {
        "type": "string",
        "description": "The name of the container's pod (Container App replica) generating"
      },
      "ContainerId": {
        "type": "string",
        "description": "The ID of the Container App generating this log."
      },
      "ContainerImage": {
        "type": "string",
        "description": "The image used in the container instance that generated this log."
      },
      "ContainerName": {
        "type": "string",
        "description": "The name of the container generating this log."
      },
      "EnvironmentName": {
        "type": "string",
        "description": "The name of the Container App Environment generating this log."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Location": {
        "type": "string",
        "description": "The location of the Container App generating this log."
      },
      "Log": {
        "type": "string",
        "description": "The log message generated by the user's Container App."
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation generating this log."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "RevisionName": {
        "type": "string",
        "description": "The name of the revision generating this log."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "Stream": {
        "type": "string",
        "description": "The stream where the log was emitted."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Time (UTC) when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AppEvents": {
    "tableName": "AppEvents",
    "description": "Application Insights events.",
    "columns": {
      "AppRoleInstance": {
        "type": "string",
        "description": "Role instance of the application."
      },
      "AppRoleName": {
        "type": "string",
        "description": "Role name of the application."
      },
      "AppVersion": {
        "type": "string",
        "description": "Version of the application."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClientBrowser": {
        "type": "string",
        "description": "Browser running on the client device."
      },
      "ClientCity": {
        "type": "string",
        "description": "City where the client device is located."
      },
      "ClientCountryOrRegion": {
        "type": "string",
        "description": "Country or region where the client device is located."
      },
      "ClientIP": {
        "type": "string",
        "description": "IP address of the client device."
      },
      "ClientModel": {
        "type": "string",
        "description": "Model of the client device."
      },
      "ClientOS": {
        "type": "string",
        "description": "Operating system of the client device."
      },
      "ClientStateOrProvince": {
        "type": "string",
        "description": "State or province where the client device is located."
      },
      "ClientType": {
        "type": "string",
        "description": "Type of the client device."
      },
      "IKey": {
        "type": "string",
        "description": "Instrumentation key of the Azure resource."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "ItemCount": {
        "type": "int",
        "description": "Number of telemetry items represented by a single sample item."
      },
      "Measurements": {
        "type": "dynamic",
        "description": "Application-defined measurements."
      },
      "Name": {
        "type": "string",
        "description": "Human-readable name of the customEvent."
      },
      "OperationId": {
        "type": "string",
        "description": "Application-defined operation ID."
      },
      "OperationName": {
        "type": "string",
        "description": "Application-defined name of the overall operation. The"
      },
      "ParentId": {
        "type": "string",
        "description": "ID of the parent operation."
      },
      "Properties": {
        "type": "dynamic",
        "description": "Application-defined properties."
      },
      "ResourceGUID": {
        "type": "string",
        "description": "Unique, persistent identifier of an Azure resource."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SDKVersion": {
        "type": "string",
        "description": "Version of the SDK used by the application to generate this"
      },
      "SessionId": {
        "type": "string",
        "description": "Application-defined session ID."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "SyntheticSource": {
        "type": "string",
        "description": "Synthetic source of the operation."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time when customEvent was recorded."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAccountId": {
        "type": "string",
        "description": "Application-defined account associated with the user."
      },
      "UserAuthenticatedId": {
        "type": "string",
        "description": "Persistent string that uniquely represents each authenticated user in"
      },
      "UserId": {
        "type": "string",
        "description": "Anonymous ID of a user accessing the application."
      }
    }
  },
  "AppExceptions": {
    "tableName": "AppExceptions",
    "description": "Application Insights exceptions.",
    "columns": {
      "AppRoleInstance": {
        "type": "string",
        "description": "Role instance of the application."
      },
      "AppRoleName": {
        "type": "string",
        "description": "Role name of the application."
      },
      "AppVersion": {
        "type": "string",
        "description": "Version of the application."
      },
      "Assembly": {
        "type": "string",
        "description": "Exception assembly."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClientBrowser": {
        "type": "string",
        "description": "Browser running on the client device."
      },
      "ClientCity": {
        "type": "string",
        "description": "City where the client device is located."
      },
      "ClientCountryOrRegion": {
        "type": "string",
        "description": "Country or region where the client device is located."
      },
      "ClientIP": {
        "type": "string",
        "description": "IP address of the client device."
      },
      "ClientModel": {
        "type": "string",
        "description": "Model of the client device."
      },
      "ClientOS": {
        "type": "string",
        "description": "Operating system of the client device."
      },
      "ClientStateOrProvince": {
        "type": "string",
        "description": "State or province where the client device is located."
      },
      "ClientType": {
        "type": "string",
        "description": "Type of the client device."
      },
      "Details": {
        "type": "dynamic",
        "description": "Details of the exception."
      },
      "ExceptionType": {
        "type": "string",
        "description": "Type of exception."
      },
      "HandledAt": {
        "type": "string",
        "description": "Where the exception was seen."
      },
      "IKey": {
        "type": "string",
        "description": "Instrumentation key of the Azure resource."
      },
      "InnermostAssembly": {
        "type": "string",
        "description": "Assembly of the innermost exception."
      },
      "InnermostMessage": {
        "type": "string",
        "description": "Message of the innermost exception."
      },
      "InnermostMethod": {
        "type": "string",
        "description": "Method of the innermost exception."
      },
      "InnermostType": {
        "type": "string",
        "description": "Type of the innermost exception."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "ItemCount": {
        "type": "int",
        "description": "Number of telemetry items represented by a single sample item."
      },
      "Measurements": {
        "type": "dynamic",
        "description": "Application-defined measurements."
      },
      "Message": {
        "type": "string",
        "description": "Exception message."
      },
      "Method": {
        "type": "string",
        "description": "Exception method."
      },
      "OperationId": {
        "type": "string",
        "description": "Application-defined operation ID."
      },
      "OperationName": {
        "type": "string",
        "description": "Application-defined name of the overall operation. The"
      },
      "OuterAssembly": {
        "type": "string",
        "description": "Assembly of the outer exception."
      },
      "OuterMessage": {
        "type": "string",
        "description": "Message of the outer exception."
      },
      "OuterMethod": {
        "type": "string",
        "description": "Method of the outer exception."
      },
      "OuterType": {
        "type": "string",
        "description": "Type of the outer exception."
      },
      "ParentId": {
        "type": "string",
        "description": "ID of the parent operation."
      },
      "ProblemId": {
        "type": "string",
        "description": "Problem ID of the exception."
      },
      "Properties": {
        "type": "dynamic",
        "description": "Application-defined properties."
      },
      "ResourceGUID": {
        "type": "string",
        "description": "Unique, persistent identifier of an Azure resource."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SDKVersion": {
        "type": "string",
        "description": "Version of the SDK used by the application to generate this"
      },
      "SessionId": {
        "type": "string",
        "description": "Application-defined session ID."
      },
      "SeverityLevel": {
        "type": "int",
        "description": "Severity level of the exception."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "SyntheticSource": {
        "type": "string",
        "description": "Synthetic source of the operation."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time when request was recorded."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAccountId": {
        "type": "string",
        "description": "Application-defined account associated with the user."
      },
      "UserAuthenticatedId": {
        "type": "string",
        "description": "Persistent string that uniquely represents each authenticated user in"
      },
      "UserId": {
        "type": "string",
        "description": "Anonymous ID of a user accessing the application."
      }
    }
  },
  "AppMetrics": {
    "tableName": "AppMetrics",
    "description": "Application Insights metrics.",
    "columns": {
      "AppRoleInstance": {
        "type": "string",
        "description": "Role instance of the application."
      },
      "AppRoleName": {
        "type": "string",
        "description": "Role name of the application."
      },
      "AppVersion": {
        "type": "string",
        "description": "Version of the application."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClientBrowser": {
        "type": "string",
        "description": "Browser running on the client device."
      },
      "ClientCity": {
        "type": "string",
        "description": "City where the client device is located."
      },
      "ClientCountryOrRegion": {
        "type": "string",
        "description": "Country or region where the client device is located."
      },
      "ClientIP": {
        "type": "string",
        "description": "IP address of the client device."
      },
      "ClientModel": {
        "type": "string",
        "description": "Model of the client device."
      },
      "ClientOS": {
        "type": "string",
        "description": "Operating system of the client device."
      },
      "ClientStateOrProvince": {
        "type": "string",
        "description": "State or province where the client device is located."
      },
      "ClientType": {
        "type": "string",
        "description": "Type of the client device."
      },
      "IKey": {
        "type": "string",
        "description": "Instrumentation key of the Azure resource."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "ItemCount": {
        "type": "int",
        "description": "The number of measurements that were aggregated into"
      },
      "Max": {
        "type": "real",
        "description": "The maximum value in the measurements that were aggregated into"
      },
      "Min": {
        "type": "real",
        "description": "The minimum value in the measurements that were aggregated into"
      },
      "Name": {
        "type": "string",
        "description": "Application-defined name"
      },
      "OperationId": {
        "type": "string",
        "description": "Application-defined operation ID."
      },
      "OperationName": {
        "type": "string",
        "description": "Application-defined name of the overall operation. The"
      },
      "ParentId": {
        "type": "string",
        "description": "ID of the parent operation."
      },
      "Properties": {
        "type": "dynamic",
        "description": "Application-defined properties."
      },
      "ResourceGUID": {
        "type": "string",
        "description": "Unique, persistent identifier of an Azure resource."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SDKVersion": {
        "type": "string",
        "description": "Version of the SDK used by the application to generate this"
      },
      "SessionId": {
        "type": "string",
        "description": "Application-defined session ID."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "Sum": {
        "type": "real",
        "description": "This is the sum of the measurements. To get the mean value, divide"
      },
      "SyntheticSource": {
        "type": "string",
        "description": "Synthetic source of the operation."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time when metric was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAccountId": {
        "type": "string",
        "description": "Application-defined account associated with the user."
      },
      "UserAuthenticatedId": {
        "type": "string",
        "description": "Persistent string that uniquely represents each authenticated user in"
      },
      "UserId": {
        "type": "string",
        "description": "Anonymous ID of a user accessing the application."
      }
    }
  },
  "AppPageViews": {
    "tableName": "AppPageViews",
    "description": "Application Insights page views.",
    "columns": {
      "AppRoleInstance": {
        "type": "string",
        "description": "Role instance of the application."
      },
      "AppRoleName": {
        "type": "string",
        "description": "Role name of the application."
      },
      "AppVersion": {
        "type": "string",
        "description": "Version of the application."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClientBrowser": {
        "type": "string",
        "description": "Browser running on the client device."
      },
      "ClientCity": {
        "type": "string",
        "description": "City where the client device is located."
      },
      "ClientCountryOrRegion": {
        "type": "string",
        "description": "Country or region where the client device is located."
      },
      "ClientIP": {
        "type": "string",
        "description": "IP address of the client device."
      },
      "ClientModel": {
        "type": "string",
        "description": "Model of the client device."
      },
      "ClientOS": {
        "type": "string",
        "description": "Operating system of the client device."
      },
      "ClientStateOrProvince": {
        "type": "string",
        "description": "State or province where the client device is located."
      },
      "ClientType": {
        "type": "string",
        "description": "Type of the client device."
      },
      "DurationMs": {
        "type": "real",
        "description": "Number of milliseconds it took the application to handle the page"
      },
      "Id": {
        "type": "string",
        "description": "Application-generated, unique page view ID."
      },
      "IKey": {
        "type": "string",
        "description": "Instrumentation key of the Azure resource."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "ItemCount": {
        "type": "int",
        "description": "Number of telemetry items represented by a single sample item."
      },
      "Measurements": {
        "type": "dynamic",
        "description": "Application-defined measurements."
      },
      "Name": {
        "type": "string",
        "description": "Human-readable name of the page view."
      },
      "OperationId": {
        "type": "string",
        "description": "Application-defined operation ID."
      },
      "OperationName": {
        "type": "string",
        "description": "Application-defined name of the overall operation. The"
      },
      "ParentId": {
        "type": "string",
        "description": "ID of the parent operation."
      },
      "Properties": {
        "type": "dynamic",
        "description": "Application-defined properties."
      },
      "ResourceGUID": {
        "type": "string",
        "description": "Unique, persistent identifier of an Azure resource."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SDKVersion": {
        "type": "string",
        "description": "Version of the SDK used by the application to generate this"
      },
      "SessionId": {
        "type": "string",
        "description": "Application-defined session ID."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "SyntheticSource": {
        "type": "string",
        "description": "Synthetic source of the operation."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time when page view was recorded."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "Url": {
        "type": "string",
        "description": "URL of the page view."
      },
      "UserAccountId": {
        "type": "string",
        "description": "Application-defined account associated with the user."
      },
      "UserAuthenticatedId": {
        "type": "string",
        "description": "Persistent string that uniquely represents each authenticated user in"
      },
      "UserId": {
        "type": "string",
        "description": "Anonymous ID of a user accessing the application."
      }
    }
  },
  "AppPerformanceCounters": {
    "tableName": "AppPerformanceCounters",
    "description": "Application Insights performance counters.",
    "columns": {
      "AppRoleInstance": {
        "type": "string",
        "description": "Role instance of the application."
      },
      "AppRoleName": {
        "type": "string",
        "description": "Role name of the application."
      },
      "AppVersion": {
        "type": "string",
        "description": "Version of the application."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "Performance counter category."
      },
      "ClientBrowser": {
        "type": "string",
        "description": "Browser running on the client device."
      },
      "ClientCity": {
        "type": "string",
        "description": "City where the client device is located."
      },
      "ClientCountryOrRegion": {
        "type": "string",
        "description": "Country or region where the client device is located."
      },
      "ClientIP": {
        "type": "string",
        "description": "IP address of the client device."
      },
      "ClientModel": {
        "type": "string",
        "description": "Model of the client device."
      },
      "ClientOS": {
        "type": "string",
        "description": "Operating system of the client device."
      },
      "ClientStateOrProvince": {
        "type": "string",
        "description": "State or province where the client device is located."
      },
      "ClientType": {
        "type": "string",
        "description": "Type of the client device."
      },
      "Counter": {
        "type": "string",
        "description": "Performance counter name."
      },
      "IKey": {
        "type": "string",
        "description": "Instrumentation key of the Azure resource."
      },
      "Instance": {
        "type": "string",
        "description": "Instance identifier, to which the counter is related."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Name": {
        "type": "string",
        "description": "Performance counter name."
      },
      "OperationId": {
        "type": "string",
        "description": "Application-defined operation ID."
      },
      "OperationName": {
        "type": "string",
        "description": "Application-defined name of the overall operation. The"
      },
      "ParentId": {
        "type": "string",
        "description": "ID of the parent operation."
      },
      "Properties": {
        "type": "dynamic",
        "description": "Application-defined properties."
      },
      "ResourceGUID": {
        "type": "string",
        "description": "Unique, persistent identifier of an Azure resource."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SDKVersion": {
        "type": "string",
        "description": "Version of the SDK used by the application to generate this"
      },
      "SessionId": {
        "type": "string",
        "description": "Application-defined session ID."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "SyntheticSource": {
        "type": "string",
        "description": "Synthetic source of the operation."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time when performance counter was recorded."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAccountId": {
        "type": "string",
        "description": "Application-defined account associated with the user."
      },
      "UserAuthenticatedId": {
        "type": "string",
        "description": "Persistent string that uniquely represents each authenticated user in"
      },
      "UserId": {
        "type": "string",
        "description": "Anonymous ID of a user accessing the application."
      },
      "Value": {
        "type": "real",
        "description": "Performance counter value."
      }
    }
  },
  "AppPlatformBuildLogs": {
    "tableName": "AppPlatformBuildLogs",
    "description": "Azure Spring Cloud build logs of user source codes.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "BuildLog": {
        "type": "string",
        "description": "The build log for each build stages."
      },
      "ContainerName": {
        "type": "string",
        "description": "The name of the container that emitted the log."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "PodName": {
        "type": "string",
        "description": "The name of the pod that emitted the log."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) when the log is collected by Azure Spring Cloud."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AppPlatformContainerEventLogs": {
    "tableName": "AppPlatformContainerEventLogs",
    "description": "Azure Spring Cloud container event logs of user applications.",
    "columns": {
      "App": {
        "type": "string",
        "description": "The name of the application that emitted the container event."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Count": {
        "type": "int",
        "description": "The count of this container event happened."
      },
      "Deployment": {
        "type": "string",
        "description": "The name of the deployment that emitted the container event."
      },
      "Event": {
        "type": "string",
        "description": "The name of container event, including: 'Backoff', 'Pulled', 'Created',"
      },
      "FirstTimestamp": {
        "type": "datetime",
        "description": "The timestamp when this container event was first seen."
      },
      "Instance": {
        "type": "string",
        "description": "The name of the instance that emitted the container event."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LastTimestamp": {
        "type": "datetime",
        "description": "The timestamp when this container event was last seen."
      },
      "Message": {
        "type": "string",
        "description": "The detailed message of the container event."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) when the log is collected by Azure Spring Cloud."
      },
      "Type": {
        "type": "string",
        "description": "The type of container event, including: 'Error', 'Warning' and 'Normal'."
      }
    }
  },
  "AppPlatformIngressLogs": {
    "tableName": "AppPlatformIngressLogs",
    "description": "Azure Spring Cloud ingress logs, currently it is nginx access logs.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "BodyBytesSent": {
        "type": "string",
        "description": "Number of bytes sent to a client, not counting the response"
      },
      "Host": {
        "type": "string",
        "description": "The host name of the log"
      },
      "HttpReferer": {
        "type": "string",
        "description": "Value of the referer header"
      },
      "HttpUserAgent": {
        "type": "string",
        "description": "Value of user-agent header"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation represented by this event"
      },
      "ProxyAlternativeUpstreamName": {
        "type": "string",
        "description": "Name of the alternative upstream server. The format is"
      },
      "ProxyUpstreamName": {
        "type": "string",
        "description": "Name of the upstream server. The format is upstream-"
      },
      "RemoteAddr": {
        "type": "string",
        "description": "The source IP address of the client"
      },
      "RemoteUser": {
        "type": "string",
        "description": "User name supplied with the basic authentication"
      },
      "ReqId": {
        "type": "string",
        "description": "The randomly generated ID of the request"
      },
      "Request": {
        "type": "string",
        "description": "Full original request line"
      },
      "RequestHeaders": {
        "type": "string",
        "description": "Request headers end with 'id' or 'ID'"
      },
      "RequestLength": {
        "type": "string",
        "description": "Request length in bytes (including request line, header, and"
      },
      "RequestTime": {
        "type": "real",
        "description": "Time in seconds with millisecond resolution elapsed since"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "Status": {
        "type": "string",
        "description": "Response status"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) when the log is collected by Azure"
      },
      "TimeLocal": {
        "type": "string",
        "description": "Local time in the common log format"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UpstreamAddr": {
        "type": "string",
        "description": "The IP address and port (or the path to the domain socket)"
      },
      "UpstreamResponseLength": {
        "type": "string",
        "description": "The length in bytes of the response obtained from the"
      },
      "UpstreamResponseTime": {
        "type": "string",
        "description": "Time spent on receiving the response from the upstream"
      },
      "UpstreamStatus": {
        "type": "string",
        "description": "Status code of the response obtained from the upstream"
      }
    }
  },
  "AppPlatformLogsforSpring": {
    "tableName": "AppPlatformLogsforSpring",
    "description": "App Platform Logs for Spring.",
    "columns": {
      "AppName": {
        "type": "string",
        "description": "The application name that emitted the log"
      },
      "AppTimestamp": {
        "type": "datetime",
        "description": "The log timestamp (UTC) from user application log"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "Log Category"
      },
      "CustomLevel": {
        "type": "string",
        "description": "Verbosity level of log"
      },
      "ExceptionClass": {
        "type": "string",
        "description": "The exceptionClass of the log"
      },
      "InstanceName": {
        "type": "string",
        "description": "The instance name that emitted the log"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Log": {
        "type": "string",
        "description": "The content of the log"
      },
      "Logger": {
        "type": "string",
        "description": "The logger from user application log"
      },
      "MDC": {
        "type": "string",
        "description": "Customized MDC field in the log"
      },
      "Message": {
        "type": "string",
        "description": "The message of the log"
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation represented by this event"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ServiceName": {
        "type": "string",
        "description": "The service name that emitted the log"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "SpanId": {
        "type": "string",
        "description": "SpanId for tracing"
      },
      "StackTrace": {
        "type": "string",
        "description": "The stackTrace of the log"
      },
      "Stream": {
        "type": "string",
        "description": "The stream of the log"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "Thread": {
        "type": "string",
        "description": "The thread of the log"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) when the log is collected by Azure Spring Cloud"
      },
      "TraceId": {
        "type": "string",
        "description": "TraceId for tracing"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AppPlatformSystemLogs": {
    "tableName": "AppPlatformSystemLogs",
    "description": "Azure Spring Cloud System Logs.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "Log Category"
      },
      "InstanceName": {
        "type": "string",
        "description": "The instance name that emitted the log"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Level": {
        "type": "string",
        "description": "The level of the log"
      },
      "Log": {
        "type": "string",
        "description": "The log of the log"
      },
      "Logger": {
        "type": "string",
        "description": "The logger of the log"
      },
      "LogType": {
        "type": "string",
        "description": "The type of the log"
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation represented by this event"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ServiceName": {
        "type": "string",
        "description": "The service name that emitted the log"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "Stack": {
        "type": "string",
        "description": "The stack of the log"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "Thread": {
        "type": "string",
        "description": "The thread of the log"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) when the log is collected by Azure Spring Cloud"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AppRequests": {
    "tableName": "AppRequests",
    "description": "Application Insights requests.",
    "columns": {
      "AppRoleInstance": {
        "type": "string",
        "description": "Role instance of the application."
      },
      "AppRoleName": {
        "type": "string",
        "description": "Role name of the application."
      },
      "AppVersion": {
        "type": "string",
        "description": "Version of the application."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClientBrowser": {
        "type": "string",
        "description": "Browser running on the client device."
      },
      "ClientCity": {
        "type": "string",
        "description": "City where the client device is located."
      },
      "ClientCountryOrRegion": {
        "type": "string",
        "description": "Country or region where the client device is located."
      },
      "ClientIP": {
        "type": "string",
        "description": "IP address of the client device."
      },
      "ClientModel": {
        "type": "string",
        "description": "Model of the client device."
      },
      "ClientOS": {
        "type": "string",
        "description": "Operating system of the client device."
      },
      "ClientStateOrProvince": {
        "type": "string",
        "description": "State or province where the client device is located."
      },
      "ClientType": {
        "type": "string",
        "description": "Type of the client device."
      },
      "DurationMs": {
        "type": "real",
        "description": "Number of milliseconds it took the application to handle the"
      },
      "Id": {
        "type": "string",
        "description": "Application-generated, unique request ID."
      },
      "IKey": {
        "type": "string",
        "description": "Instrumentation key of the Azure resource."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "ItemCount": {
        "type": "int",
        "description": "Number of telemetry items represented by a single sample item."
      },
      "Measurements": {
        "type": "dynamic",
        "description": "Application-defined measurements."
      },
      "Name": {
        "type": "string",
        "description": "Human-readable name of the request."
      },
      "OperationId": {
        "type": "string",
        "description": "Application-defined operation ID."
      },
      "OperationName": {
        "type": "string",
        "description": "Application-defined name of the overall operation. The"
      },
      "ParentId": {
        "type": "string",
        "description": "ID of the parent operation."
      },
      "Properties": {
        "type": "dynamic",
        "description": "Application-defined properties."
      },
      "ReferencedItemId": {
        "type": "string",
        "description": "Id of the item with additional details about the request."
      },
      "ReferencedType": {
        "type": "string",
        "description": "Name of the table with additional details about the request."
      },
      "ResourceGUID": {
        "type": "string",
        "description": "Unique, persistent identifier of an Azure resource."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultCode": {
        "type": "string",
        "description": "Result code returned by the application after handling the request."
      },
      "SDKVersion": {
        "type": "string",
        "description": "Version of the SDK used by the application to generate this"
      },
      "SessionId": {
        "type": "string",
        "description": "Application-defined session ID."
      },
      "Source": {
        "type": "string",
        "description": "Friendly name of the request source, when known. Source is based"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "Success": {
        "type": "bool",
        "description": "Indicates whether the application handled the request successfully."
      },
      "SyntheticSource": {
        "type": "string",
        "description": "Synthetic source of the operation."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time when request processing started."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "Url": {
        "type": "string",
        "description": "URL of the request."
      },
      "UserAccountId": {
        "type": "string",
        "description": "Application-defined account associated with the user."
      },
      "UserAuthenticatedId": {
        "type": "string",
        "description": "Persistent string that uniquely represents each authenticated user in"
      },
      "UserId": {
        "type": "string",
        "description": "Anonymous ID of a user accessing the application."
      }
    }
  },
  "AppServiceAntivirusScanAuditLogs": {
    "tableName": "AppServiceAntivirusScanAuditLogs",
    "description": "Report on any discovered virus or infected files that have been uploaded to their site.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "Log category name"
      },
      "ErrorMessage": {
        "type": "string",
        "description": "Error Message"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "ListOfInfectedFiles": {
        "type": "string",
        "description": "List of each virus file path"
      },
      "NumberOfInfectedFiles": {
        "type": "int",
        "description": "Total number of files infected with virus"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ScanStatus": {
        "type": "string",
        "description": "Status of the scan"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Time when event is generated"
      },
      "TimeStamp": {
        "type": "datetime",
        "description": "Time when event is generated"
      },
      "TotalFilesScanned": {
        "type": "int",
        "description": "Total number of scanned files"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AppServiceAppLogs": {
    "tableName": "AppServiceAppLogs",
    "description": "Logs generated through your application.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "Log category name"
      },
      "ContainerId": {
        "type": "string",
        "description": "Application container id"
      },
      "CustomLevel": {
        "type": "string",
        "description": "Verbosity level of log"
      },
      "ExceptionClass": {
        "type": "string",
        "description": "Application class from where log message is emitted"
      },
      "Host": {
        "type": "string",
        "description": "Host where the application is running"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Level": {
        "type": "string",
        "description": "Verbosity level of log mapped to standard levels (Informational, Warning,"
      },
      "Logger": {
        "type": "string",
        "description": "Application logger used to emit log message"
      },
      "Message": {
        "type": "string",
        "description": "Log message"
      },
      "Method": {
        "type": "string",
        "description": "Application Method from where log message is emitted"
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation represented by this event."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultDescription": {
        "type": "string",
        "description": "Log message description"
      },
      "Source": {
        "type": "string",
        "description": "Application source from where log message is emitted"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "Stacktrace": {
        "type": "string",
        "description": "Complete stack trace of the log message in case of exception"
      },
      "StackTrace": {
        "type": "string",
        "description": "Complete stack trace of the log message in case of exception"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Time when event is generated"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "WebSiteInstanceId": {
        "type": "string",
        "description": "Instance Id the application running"
      }
    }
  },
  "AppServiceAuditLogs": {
    "tableName": "AppServiceAuditLogs",
    "description": "Logs generated when publishing users successfully log on via one of the App Service publishing protocols.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "Log category name"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "OperationName": {
        "type": "string",
        "description": "Name of the operation"
      },
      "Protocol": {
        "type": "string",
        "description": "Authentication protocol"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Time when event is generated"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "User": {
        "type": "string",
        "description": "Username used for publishing access"
      },
      "UserAddress": {
        "type": "string",
        "description": "Client IP addres of the publishing user"
      },
      "UserDisplayName": {
        "type": "string",
        "description": "Email address of a user in case publishing was authorized via AAD"
      }
    }
  },
  "AppServiceAuthenticationLogs": {
    "tableName": "AppServiceAuthenticationLogs",
    "description": "Logs generated through App Service Authentication for your application.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID for correlated events."
      },
      "Details": {
        "type": "string",
        "description": "The event details."
      },
      "HostName": {
        "type": "string",
        "description": "The host name of the application."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Level": {
        "type": "string",
        "description": "The level of log verbosity."
      },
      "Message": {
        "type": "string",
        "description": "The log message."
      },
      "ModuleRuntimeVersion": {
        "type": "string",
        "description": "The version of App Service Authentication running."
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation represented by this event."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "SiteName": {
        "type": "string",
        "description": "The runtime name of the application."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "StatusCode": {
        "type": "int",
        "description": "The HTTP status code of the operation."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "SubStatusCode": {
        "type": "int",
        "description": "The HTTP sub-status code of the request."
      },
      "TaskName": {
        "type": "string",
        "description": "The name of the task being performed."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when this event was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AppServiceConsoleLogs": {
    "tableName": "AppServiceConsoleLogs",
    "description": "Console logs generated from application or container.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "Log category name"
      },
      "ContainerId": {
        "type": "string",
        "description": "Application container id"
      },
      "Host": {
        "type": "string",
        "description": "Host where the application is running"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Level": {
        "type": "string",
        "description": "Verbosity level of log"
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation represented by this event."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultDescription": {
        "type": "string",
        "description": "Log message description"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Time when event is generated"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AppServiceEnvironmentPlatformLogs": {
    "tableName": "AppServiceEnvironmentPlatformLogs",
    "description": "",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "OperationName": {
        "type": "string",
        "description": ""
      },
      "ResourceId": {
        "type": "string",
        "description": ""
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultDescription": {
        "type": "string",
        "description": ""
      },
      "ResultType": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AppServiceFileAuditLogs": {
    "tableName": "AppServiceFileAuditLogs",
    "description": "Logs generated when app service content is modified.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "Log category name"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "OperationName": {
        "type": "string",
        "description": "Operation performed on a file"
      },
      "Path": {
        "type": "string",
        "description": "Path to the file that was changed"
      },
      "Process": {
        "type": "string",
        "description": "Type of the process that change the file"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Time when event is generated"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AppServiceHTTPLogs": {
    "tableName": "AppServiceHTTPLogs",
    "description": "Incoming HTTP requests on App Service. Use these logs to monitor application health, performance and usage patterns.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CIp": {
        "type": "string",
        "description": "IP address of the client"
      },
      "ComputerName": {
        "type": "string",
        "description": "The name of the server on which the log file entry was generated."
      },
      "Cookie": {
        "type": "string",
        "description": "Cookie on HTTP request"
      },
      "CsBytes": {
        "type": "int",
        "description": "Number of bytes received by server"
      },
      "CsHost": {
        "type": "string",
        "description": "Host name header on HTTP request"
      },
      "CsMethod": {
        "type": "string",
        "description": "The request HTTP verb"
      },
      "CsUriQuery": {
        "type": "string",
        "description": "URI query on HTTP request"
      },
      "CsUriStem": {
        "type": "string",
        "description": "The target of the request"
      },
      "CsUsername": {
        "type": "string",
        "description": "The name of the authenticated user on HTTP request"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Referer": {
        "type": "string",
        "description": "The site that the user last visited. This site provided a link to the current site"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Result": {
        "type": "string",
        "description": "Success / Failure of HTTP request"
      },
      "ScBytes": {
        "type": "int",
        "description": "Number of bytes sent by server"
      },
      "ScStatus": {
        "type": "int",
        "description": "HTTP status code"
      },
      "ScSubStatus": {
        "type": "string",
        "description": "Substatus error code on HTTP request"
      },
      "ScWin32Status": {
        "type": "string",
        "description": "Windows status code on HTTP request"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "SPort": {
        "type": "string",
        "description": "Server port number"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Time when event is generated"
      },
      "TimeTaken": {
        "type": "int",
        "description": "Time taken by HTTP request in milliseconds"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "User agent on HTTP request"
      }
    }
  },
  "AppServiceIPSecAuditLogs": {
    "tableName": "AppServiceIPSecAuditLogs",
    "description": "Logs generated through your application and pushed to Azure Monitoring.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CIp": {
        "type": "string",
        "description": "IP address of the client"
      },
      "CsHost": {
        "type": "string",
        "description": "Host header of the HTTP request"
      },
      "Details": {
        "type": "string",
        "description": "Additional information"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Result": {
        "type": "string",
        "description": "The result whether the access is Allowed or Denied"
      },
      "ServiceEndpoint": {
        "type": "string",
        "description": "This indicates whether the access is via Virtual Network Service Endpoint"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Time of the Http Request"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "XAzureFDID": {
        "type": "string",
        "description": "X-Azure-FDID header (Azure Frontdoor Id) of the HTTP request"
      },
      "XFDHealthProbe": {
        "type": "string",
        "description": "X-FD-HealthProbe (Azure Frontdoor Health Probe) of the HTTP request"
      },
      "XForwardedFor": {
        "type": "string",
        "description": "X-Forwarded-For header of the HTTP request"
      },
      "XForwardedHost": {
        "type": "string",
        "description": "X-Forwarded-Host header of the HTTP request"
      }
    }
  },
  "AppServicePlatformLogs": {
    "tableName": "AppServicePlatformLogs",
    "description": "Logs generated through AppService platform for your application.",
    "columns": {
      "ActivityId": {
        "type": "string",
        "description": "Activity Id to correlate events"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ContainerId": {
        "type": "string",
        "description": "Application container id"
      },
      "DeploymentId": {
        "type": "string",
        "description": "Deployment ID of the application deployment"
      },
      "Exception": {
        "type": "string",
        "description": "Details of the exception"
      },
      "Host": {
        "type": "string",
        "description": "Host where the application is running"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Level": {
        "type": "string",
        "description": "Level of log verbosity"
      },
      "Message": {
        "type": "string",
        "description": "Log message"
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation represented by this event."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "StackTrace": {
        "type": "string",
        "description": "Stack trace for the exception"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Time when event is generated"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AppServiceServerlessSecurityPluginData": {
    "tableName": "AppServiceServerlessSecurityPluginData",
    "description": "Logs from the data collection services of the defender for serverless apps. Used to detect security issues and provide alerts and recommendations on how to mitigate/fix them.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Index": {
        "type": "int",
        "description": "Available when multiple payloads exist for the same message. In that case,"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "MsgVersion": {
        "type": "string",
        "description": "The version of the message schema. Used to make code changes backward-"
      },
      "Payload": {
        "type": "dynamic",
        "description": "An array of messages, where each one is a JSON string."
      },
      "PayloadType": {
        "type": "string",
        "description": "The type of the payload. Mostly used to distinguish between messages"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Sender": {
        "type": "string",
        "description": "The name of the component that published this message. Almost always will"
      },
      "SlSecMetadata": {
        "type": "dynamic",
        "description": "Contains details about the resource like the deployment ID, runtime info,"
      },
      "SlSecProps": {
        "type": "dynamic",
        "description": "Contains other details that might be needed for debugging end-to-end"
      },
      "SlSecRequestId": {
        "type": "string",
        "description": "The ingestion request ID used for identifying the message and the request"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The date and time (UTC) this message was created on the node."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AppSystemEvents": {
    "tableName": "AppSystemEvents",
    "description": "Application Insights system events.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "EventType": {
        "type": "string",
        "description": "Event type"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Measurements": {
        "type": "dynamic",
        "description": "Event measurements."
      },
      "Name": {
        "type": "string",
        "description": "Event name"
      },
      "Properties": {
        "type": "dynamic",
        "description": "Event properties."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time when the system event was recorded."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AppTraces": {
    "tableName": "AppTraces",
    "description": "Application Insights traces.",
    "columns": {
      "AppRoleInstance": {
        "type": "string",
        "description": "Role instance of the application."
      },
      "AppRoleName": {
        "type": "string",
        "description": "Role name of the application."
      },
      "AppVersion": {
        "type": "string",
        "description": "Version of the application."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClientBrowser": {
        "type": "string",
        "description": "Browser running on the client device."
      },
      "ClientCity": {
        "type": "string",
        "description": "City where the client device is located."
      },
      "ClientCountryOrRegion": {
        "type": "string",
        "description": "Country or region where the client device is located."
      },
      "ClientIP": {
        "type": "string",
        "description": "IP address of the client device."
      },
      "ClientModel": {
        "type": "string",
        "description": "Model of the client device."
      },
      "ClientOS": {
        "type": "string",
        "description": "Operating system of the client device."
      },
      "ClientStateOrProvince": {
        "type": "string",
        "description": "State or province where the client device is located."
      },
      "ClientType": {
        "type": "string",
        "description": "Type of the client device."
      },
      "IKey": {
        "type": "string",
        "description": "Instrumentation key of the Azure resource."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "ItemCount": {
        "type": "int",
        "description": "Number of telemetry items represented by a single sample item."
      },
      "Measurements": {
        "type": "dynamic",
        "description": "Application-defined measurements."
      },
      "Message": {
        "type": "string",
        "description": "Trace message."
      },
      "OperationId": {
        "type": "string",
        "description": "Application-defined operation ID."
      },
      "OperationName": {
        "type": "string",
        "description": "Application-defined name of the overall operation. The"
      },
      "ParentId": {
        "type": "string",
        "description": "ID of the parent operation."
      },
      "Properties": {
        "type": "dynamic",
        "description": "Application-defined properties."
      },
      "ReferencedItemId": {
        "type": "string",
        "description": "Id of the item with additional details about the trace."
      },
      "ReferencedType": {
        "type": "string",
        "description": "Name of the table with additional details about the trace."
      },
      "ResourceGUID": {
        "type": "string",
        "description": "Unique, persistent identifier of an Azure resource."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SDKVersion": {
        "type": "string",
        "description": "Version of the SDK used by the application to generate this"
      },
      "SessionId": {
        "type": "string",
        "description": "Application-defined session ID."
      },
      "SeverityLevel": {
        "type": "int",
        "description": "Severity level of the trace."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "SyntheticSource": {
        "type": "string",
        "description": "Synthetic source of the operation."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time when trace was recorded."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAccountId": {
        "type": "string",
        "description": "Application-defined account associated with the user."
      },
      "UserAuthenticatedId": {
        "type": "string",
        "description": "Persistent string that uniquely represents each authenticated user in"
      },
      "UserId": {
        "type": "string",
        "description": "Anonymous ID of a user accessing the application."
      }
    }
  },
  "ArcK8sAudit": {
    "tableName": "ArcK8sAudit",
    "description": "Contains all Kubernetes API Server audit logs including events with the get and list verbs. These events are useful for monitoring all of the interactions with the Kubernetes API. To limit the scope to modifying operations see the ArcK8sAuditAdmin table. Requires Diagnostic Settings to use the Resource Specific destination table.",
    "columns": {
      "Annotations": {
        "type": "dynamic",
        "description": "An unstructed key-value map associated with this audit event. These"
      },
      "AuditId": {
        "type": "string",
        "description": "Unique audit ID that is generated for each request."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Level": {
        "type": "string",
        "description": "Level (Metadata, Request, RequestResponse) of the audit event."
      },
      "ObjectRef": {
        "type": "dynamic",
        "description": "The Kubernetes object reference this event was targeted for. This field"
      },
      "PodName": {
        "type": "string",
        "description": "Name of the pod emitting this audit event."
      },
      "RequestObject": {
        "type": "dynamic",
        "description": "Kubernetes API object from the request in object format or the string"
      },
      "RequestReceivedTime": {
        "type": "datetime",
        "description": "Time when the API Server first received the request."
      },
      "RequestUri": {
        "type": "string",
        "description": "The URI of the request made by the client to the server."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResponseObject": {
        "type": "dynamic",
        "description": "Kubernetes API object from the response, in object format or the"
      },
      "ResponseStatus": {
        "type": "dynamic",
        "description": "Response status for the request, which includes the response code. In"
      },
      "SourceIps": {
        "type": "dynamic",
        "description": "The list of source IP addresses for the originating client and"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "Stage": {
        "type": "string",
        "description": "The request handling stage (RequestReceived, ResponseStarted,"
      },
      "StageReceivedTime": {
        "type": "datetime",
        "description": "Time when the request reached the current audit stage."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Event generation time."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "User": {
        "type": "dynamic",
        "description": "Authenticated user metadata of the requesting client, including"
      },
      "UserAgent": {
        "type": "string",
        "description": "The user agent string presented by the originating client."
      },
      "Verb": {
        "type": "string",
        "description": "The Kubernetes verb associated with the request. For non-resource"
      }
    }
  },
  "ArcK8sAuditAdmin": {
    "tableName": "ArcK8sAuditAdmin",
    "description": "Contains Kubernetes API Server audit logs excluding events with the get and list verbs. These events are useful for monitoring resource modification requests made to the Kubernetes API. To see all modifying and non-modifying operations see the ArcK8sAudit table. Requires Diagnostic Settings to use the Resource Specific destination table.",
    "columns": {
      "Annotations": {
        "type": "dynamic",
        "description": "An unstructed key-value map associated with this audit event. These"
      },
      "AuditId": {
        "type": "string",
        "description": "Unique audit ID that is generated for each request."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Level": {
        "type": "string",
        "description": "Level (Metadata, Request, RequestResponse) of the audit event."
      },
      "ObjectRef": {
        "type": "dynamic",
        "description": "The Kubernetes object reference this event was targeted for. This field"
      },
      "PodName": {
        "type": "string",
        "description": "Name of the pod emitting this audit event."
      },
      "RequestObject": {
        "type": "dynamic",
        "description": "Kubernetes API object from the request in object format or the string"
      },
      "RequestReceivedTime": {
        "type": "datetime",
        "description": "Time when the API Server first received the request."
      },
      "RequestUri": {
        "type": "string",
        "description": "The URI of the request made by the client to the server."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResponseObject": {
        "type": "dynamic",
        "description": "Kubernetes API object from the response, in object format or the"
      },
      "ResponseStatus": {
        "type": "dynamic",
        "description": "Response status for the request, which includes the response code. In"
      },
      "SourceIps": {
        "type": "dynamic",
        "description": "The list of source IP addresses for the originating client and"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "Stage": {
        "type": "string",
        "description": "The request handling stage (RequestReceived, ResponseStarted,"
      },
      "StageReceivedTime": {
        "type": "datetime",
        "description": "Time when the request reached the current audit stage."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Event generation time."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "User": {
        "type": "dynamic",
        "description": "Authenticated user metadata of the requesting client, including"
      },
      "UserAgent": {
        "type": "string",
        "description": "The user agent string presented by the originating client."
      },
      "Verb": {
        "type": "string",
        "description": "The Kubernetes verb associated with the request. For non-resource"
      }
    }
  },
  "ArcK8sControlPlane": {
    "tableName": "ArcK8sControlPlane",
    "description": "Contains diagnostic logs for the Kubernetes API Server, Controller Manager, Scheduler, Cluster Autoscaler, Cloud Controller Manager, Guard, and the Azure CSI storage drivers. These diagnostic logs have distinct Category entries corresponding their diagnostic log setting (e.g. kube-apiserver, kube-audit-admin). Requires Diagnostic Settings to use the Resource Specific destination table.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "Service log category describing the service logging the message."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Level": {
        "type": "string",
        "description": "Level (Fatal, Error, Warning, Info) of the log message."
      },
      "Message": {
        "type": "string",
        "description": "Log message body."
      },
      "PodName": {
        "type": "string",
        "description": "Name of the pod logging the request."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "Stream": {
        "type": "string",
        "description": "Output stream (stdout, stderr) source of the log message."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Event generation time."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AuditLogs": {
    "tableName": "AuditLogs",
    "description": "Audit log for Azure Active Directory. Includes system activity information about user and group management managed applications and directory activities.",
    "columns": {
      "AADOperationType": {
        "type": "string",
        "description": "Type of the operation. Possible values are Add Update Delete and"
      },
      "AADTenantId": {
        "type": "string",
        "description": "ID of the ADD tenant"
      },
      "ActivityDateTime": {
        "type": "datetime",
        "description": "Date and time the activity was performed in UTC."
      },
      "ActivityDisplayName": {
        "type": "string",
        "description": "Activity name or the operation name. Examples include Create User"
      },
      "AdditionalDetails": {
        "type": "dynamic",
        "description": "Indicates additional details on the activity."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "Currently Audit is the only supported value."
      },
      "CorrelationId": {
        "type": "string",
        "description": "Optional GUID that's passed by the client. Can help correlate client-"
      },
      "DurationMs": {
        "type": "long",
        "description": "Property is not used and can be ignored."
      },
      "Id": {
        "type": "string",
        "description": "GUID that uniquely identifies the activity."
      },
      "Identity": {
        "type": "string",
        "description": "Identity from the token that was presented when the request was"
      },
      "InitiatedBy": {
        "type": "dynamic",
        "description": "User or app initiated the activity."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Level": {
        "type": "string",
        "description": "Message type. This is currently always Informational."
      },
      "Location": {
        "type": "string",
        "description": "Location of the datacenter."
      },
      "LoggedByService": {
        "type": "string",
        "description": "Service that initiated the activity (For example: Self-service Password"
      },
      "OperationName": {
        "type": "string",
        "description": "Name of the operation."
      },
      "OperationVersion": {
        "type": "string",
        "description": "REST API version that's requested by the client."
      },
      "Resource": {
        "type": "string",
        "description": ""
      },
      "ResourceGroup": {
        "type": "string",
        "description": ""
      },
      "ResourceId": {
        "type": "string",
        "description": ""
      },
      "ResourceProvider": {
        "type": "string",
        "description": ""
      },
      "Result": {
        "type": "string",
        "description": "Result of the activity. Possible values are: success failure timeout"
      },
      "ResultDescription": {
        "type": "string",
        "description": "Additional description of the result."
      },
      "ResultReason": {
        "type": "string",
        "description": "Describes cause of failure or timeout results."
      },
      "ResultSignature": {
        "type": "string",
        "description": "Property is not used and can be ignored."
      },
      "ResultType": {
        "type": "string",
        "description": "Result of the operation. Possible values are Success and Failure."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "TargetResources": {
        "type": "dynamic",
        "description": "Indicates information on which resource was changed due to the"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time the record was created."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AutoscaleEvaluationsLog": {
    "tableName": "AutoscaleEvaluationsLog",
    "description": "",
    "columns": {
      "AutoscaleMetricName": {
        "type": "string",
        "description": ""
      },
      "AvailabilitySet": {
        "type": "string",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": ""
      },
      "CloudServiceName": {
        "type": "string",
        "description": ""
      },
      "CloudServiceRole": {
        "type": "string",
        "description": ""
      },
      "CoolDown": {
        "type": "int",
        "description": ""
      },
      "CorrelationId": {
        "type": "string",
        "description": ""
      },
      "CurrentInstanceCount": {
        "type": "int",
        "description": ""
      },
      "DefaultInstanceCount": {
        "type": "int",
        "description": ""
      },
      "DeploymentSlot": {
        "type": "string",
        "description": ""
      },
      "EstimateScaleResult": {
        "type": "string",
        "description": ""
      },
      "EvaluationResult": {
        "type": "string",
        "description": ""
      },
      "EvaluationTime": {
        "type": "datetime",
        "description": ""
      },
      "InstanceUpdateReason": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "LastScaleActionOperationId": {
        "type": "string",
        "description": ""
      },
      "LastScaleActionOperationStatus": {
        "type": "string",
        "description": ""
      },
      "LastScaleActionTime": {
        "type": "datetime",
        "description": ""
      },
      "MaximumInstanceCount": {
        "type": "int",
        "description": ""
      },
      "MetricData": {
        "type": "string",
        "description": ""
      },
      "MetricEndTime": {
        "type": "datetime",
        "description": ""
      },
      "MetricNamespace": {
        "type": "string",
        "description": ""
      },
      "MetricStartTime": {
        "type": "datetime",
        "description": ""
      },
      "MetricTimeGrain": {
        "type": "string",
        "description": ""
      },
      "MinimumInstanceCount": {
        "type": "int",
        "description": ""
      },
      "NewInstanceCount": {
        "type": "int",
        "description": ""
      },
      "ObservedValue": {
        "type": "real",
        "description": ""
      },
      "OperationName": {
        "type": "string",
        "description": ""
      },
      "Operator": {
        "type": "string",
        "description": ""
      },
      "Profile": {
        "type": "string",
        "description": ""
      },
      "ProfileEvaluationTime": {
        "type": "datetime",
        "description": ""
      },
      "ProfileSelected": {
        "type": "bool",
        "description": ""
      },
      "Projection": {
        "type": "real",
        "description": ""
      },
      "ResourceId": {
        "type": "string",
        "description": ""
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "ResultDescription": {
        "type": "string",
        "description": ""
      },
      "ResultType": {
        "type": "string",
        "description": ""
      },
      "SelectedAutoscaleProfile": {
        "type": "string",
        "description": ""
      },
      "ServerFarm": {
        "type": "string",
        "description": ""
      },
      "ShouldUpdateInstance": {
        "type": "bool",
        "description": ""
      },
      "SkipCurrentAutoscaleEvaluation": {
        "type": "bool",
        "description": ""
      },
      "SkipRuleEvaluationForCooldown": {
        "type": "bool",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TargetResourceId": {
        "type": "string",
        "description": ""
      },
      "Threshold": {
        "type": "real",
        "description": ""
      },
      "TimeAggregationType": {
        "type": "string",
        "description": ""
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "TimeGrainStatistic": {
        "type": "string",
        "description": ""
      },
      "TimeWindow": {
        "type": "string",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "Webspace": {
        "type": "string",
        "description": ""
      }
    }
  },
  "AutoscaleScaleActionsLog": {
    "tableName": "AutoscaleScaleActionsLog",
    "description": "",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": ""
      },
      "CorrelationId": {
        "type": "string",
        "description": "Usually a GUID in the string format. Events that share a"
      },
      "CreatedAsyncScaleActionJob": {
        "type": "bool",
        "description": ""
      },
      "CreatedAsyncScaleActionJobId": {
        "type": "string",
        "description": ""
      },
      "CurrentInstanceCount": {
        "type": "int",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable"
      },
      "NewInstanceCount": {
        "type": "int",
        "description": ""
      },
      "OperationName": {
        "type": "string",
        "description": ""
      },
      "ResourceId": {
        "type": "string",
        "description": ""
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "ResultDescription": {
        "type": "string",
        "description": ""
      },
      "ResultType": {
        "type": "string",
        "description": ""
      },
      "ScaleActionMessage": {
        "type": "string",
        "description": ""
      },
      "ScaleActionOperationId": {
        "type": "string",
        "description": ""
      },
      "ScaleActionOperationStatus": {
        "type": "string",
        "description": ""
      },
      "ScaleDirection": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TargetResourceId": {
        "type": "string",
        "description": ""
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp when the event was generated by the Azure service"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "ActivityStatus": {
        "type": "string",
        "description": ""
      },
      "ActivityStatusValue": {
        "type": "string",
        "description": "Status of the operation in display-friendly format. Common"
      },
      "ActivitySubstatus": {
        "type": "string",
        "description": ""
      },
      "ActivitySubstatusValue": {
        "type": "string",
        "description": "Substatus of the operation in display-friendly format. E.g. OK"
      },
      "Authorization": {
        "type": "string",
        "description": "Blob of RBAC properties of the event. Usually includes the"
      },
      "Authorization_d": {
        "type": "dynamic",
        "description": "Blob of RBAC properties of the event. Usually includes the"
      },
      "Caller": {
        "type": "string",
        "description": "GUID of the caller."
      },
      "CallerIpAddress": {
        "type": "string",
        "description": "IP address of the user who has performed the operation UPN"
      },
      "CategoryValue": {
        "type": "string",
        "description": "Category of the activity log e.g. Administrative, Policy, Security."
      },
      "Claims": {
        "type": "string",
        "description": "The JWT token used by Active Directory to authenticate the"
      },
      "Claims_d": {
        "type": "dynamic",
        "description": "The JWT token used by Active Directory to authenticate the"
      },
      "EventDataId": {
        "type": "string",
        "description": "Unique identifier of an event."
      },
      "EventSubmissionTimestamp": {
        "type": "datetime",
        "description": "Timestamp when the event became available for querying."
      },
      "Hierarchy": {
        "type": "string",
        "description": "Management group hierarchy of the management group or"
      },
      "HTTPRequest": {
        "type": "string",
        "description": "Blob describing the Http Request. Usually includes the"
      },
      "Level": {
        "type": "string",
        "description": "Level of the event. One of the following values: Critical, Error,"
      },
      "OperationId": {
        "type": "string",
        "description": "GUID of the operation"
      },
      "OperationNameValue": {
        "type": "string",
        "description": "Identifier of the operation e.g."
      },
      "Properties": {
        "type": "string",
        "description": "Set of <Key Value> pairs (i.e. Dictionary) describing the details"
      },
      "Properties_d": {
        "type": "dynamic",
        "description": "Set of <Key Value> pairs (i.e. Dictionary) describing the details"
      },
      "Resource": {
        "type": "string",
        "description": ""
      },
      "ResourceGroup": {
        "type": "string",
        "description": "Resource group name of the impacted resource."
      },
      "ResourceProvider": {
        "type": "string",
        "description": ""
      },
      "ResourceProviderValue": {
        "type": "string",
        "description": "Id of the resource provider for the impacted resource - e.g."
      },
      "SubscriptionId": {
        "type": "string",
        "description": "Subscription ID of the impacted resource."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      }
    }
  },
  "AzureAssessmentRecommendation": {
    "tableName": "AzureAssessmentRecommendation",
    "description": "Recommendations generated by Azure assessments that are started through a scheduled task. When you schedule the assessment it runs by default every 7 days and upload the data into Azure Log Analytics",
    "columns": {
      "AADTenantDomain": {
        "type": "string",
        "description": ""
      },
      "AADTenantId": {
        "type": "string",
        "description": ""
      },
      "AADTenantName": {
        "type": "string",
        "description": ""
      },
      "ActionArea": {
        "type": "string",
        "description": ""
      },
      "ActionAreaId": {
        "type": "string",
        "description": ""
      },
      "AffectedObjectName": {
        "type": "string",
        "description": ""
      },
      "AffectedObjectType": {
        "type": "string",
        "description": ""
      },
      "AssessmentId": {
        "type": "string",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Computer": {
        "type": "string",
        "description": ""
      },
      "CustomData": {
        "type": "string",
        "description": ""
      },
      "Description": {
        "type": "string",
        "description": ""
      },
      "FocusArea": {
        "type": "string",
        "description": ""
      },
      "FocusAreaId": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Recommendation": {
        "type": "string",
        "description": ""
      },
      "RecommendationId": {
        "type": "string",
        "description": ""
      },
      "RecommendationResult": {
        "type": "string",
        "description": ""
      },
      "RecommendationWeight": {
        "type": "real",
        "description": ""
      },
      "Resource": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "Technology": {
        "type": "string",
        "description": ""
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AzureAttestationDiagnostics": {
    "tableName": "AzureAttestationDiagnostics",
    "description": "Logs from attestation requests.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CallerIpAddress": {
        "type": "string",
        "description": "IP Address of the client that submitted the request."
      },
      "ContentLength": {
        "type": "int",
        "description": "Length of the content body in bytes."
      },
      "ContentType": {
        "type": "string",
        "description": "Content-Type header value passed by the client."
      },
      "DurationMs": {
        "type": "real",
        "description": "Amount of time it took to process request in milliseconds."
      },
      "FailureDetails": {
        "type": "string",
        "description": "Details of the request failure, if it failed. Blank if the request succeeded."
      },
      "Identity": {
        "type": "dynamic",
        "description": "JSON structure containing information about the caller."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Level": {
        "type": "string",
        "description": "Error or Informational message indicating if the service processed the"
      },
      "OperationName": {
        "type": "string",
        "description": "Name of the operation attempted on the resource."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResourceRegion": {
        "type": "string",
        "description": "Region where the resource is located."
      },
      "ResourceUri": {
        "type": "string",
        "description": "URI of the resource."
      },
      "ResultDetails": {
        "type": "string",
        "description": "Detailed response messages included in the result, if available."
      },
      "ResultSignature": {
        "type": "string",
        "description": "HTTP status code returned from the service."
      },
      "ResultType": {
        "type": "string",
        "description": "Indicates if the request was successful or failed."
      },
      "ServiceLocation": {
        "type": "string",
        "description": "Location of the service which processed the request."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time the record was created."
      },
      "TraceContext": {
        "type": "dynamic",
        "description": "W3C trace context."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "HTTP header passed by the client, if applicable."
      }
    }
  },
  "AzureBackupOperations": {
    "tableName": "AzureBackupOperations",
    "description": "This table contains details of Azure Backup operations.",
    "columns": {
      "BackupManagementType": {
        "type": "string",
        "description": "Type of workload associated with the operation, for example,"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "Category of the log, for example, AzureBackupOperations."
      },
      "ExtendedProperties": {
        "type": "dynamic",
        "description": "Additional properties applicable to the operation, for example, the"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "OperationName": {
        "type": "string",
        "description": "High-level name of the action that is logged to this table, for"
      },
      "OperationStartTime": {
        "type": "datetime",
        "description": "The start time of the operation."
      },
      "OperationType": {
        "type": "string",
        "description": "Type of the Azure Backup operation executed, for example, stop"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "SchemaVersion": {
        "type": "string",
        "description": "The schema version."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "AzureDevOpsAuditing": {
    "tableName": "AzureDevOpsAuditing",
    "description": "Schema for Azure DevOps audit logs, which can be used to track the many changes that occur within your Azure DevOps organization(s). Some examples include changes to security policies, pipelines, billing, and projects. For a full list of events, see aka.ms/azdev-audit-events.",
    "columns": {
      "ActivityId": {
        "type": "string",
        "description": "Unique identifier for the action that occurred."
      },
      "ActorClientId": {
        "type": "string",
        "description": "When the action was performed by a managed identity or other"
      },
      "ActorCUID": {
        "type": "string",
        "description": "When the action was performed by a user, this value represents a"
      },
      "ActorDisplayName": {
        "type": "string",
        "description": "Display name of the user who initiated the auditing event to be"
      },
      "ActorUPN": {
        "type": "string",
        "description": "The actor's user principal name."
      },
      "ActorUserId": {
        "type": "string",
        "description": "When the action was performed by a user or Azure DevOps"
      },
      "Area": {
        "type": "string",
        "description": "Part of the Azure DevOps product where the auditing event"
      },
      "AuthenticationMechanism": {
        "type": "string",
        "description": "Type of authentication used by the actor."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "Type of action that occurred when the auditing event was logged."
      },
      "CategoryDisplayName": {
        "type": "string",
        "description": "Type of action that occurred when the auditing event was logged."
      },
      "CorrelationId": {
        "type": "string",
        "description": "CorrelationId allows two or more auditing events to be grouped"
      },
      "Data": {
        "type": "dynamic",
        "description": "Additional data that's unique to the type of auditing event."
      },
      "Details": {
        "type": "string",
        "description": "Description of what happened."
      },
      "Id": {
        "type": "string",
        "description": "The identifier for the audit event, unique across services."
      },
      "IpAddress": {
        "type": "string",
        "description": "IP address where the event originated."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "OperationName": {
        "type": "string",
        "description": "The unique identifier for the type of auditing event that occurred."
      },
      "ProjectId": {
        "type": "string",
        "description": "Unique identifier of the project that an auditing event occurred"
      },
      "ProjectName": {
        "type": "string",
        "description": "Friendly name of the project that an auditing event occurred in. If"
      },
      "ScopeDisplayName": {
        "type": "string",
        "description": "User friendly name for the scope level that an auditing event"
      },
      "ScopeId": {
        "type": "string",
        "description": "The organization identifier."
      },
      "ScopeType": {
        "type": "string",
        "description": "The level (scope) that the event occurred."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The time the auditing event occurred in UTC."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The user agent from the request."
      }
    }
  },
  "AzureDiagnostics": {
    "tableName": "AzureDiagnostics",
    "description": "Stores resource logs for Azure services that use Azure Diagnostics mode. Resource logs describe the internal operation of Azure resources. The resource log for each Azure service has a unique set of columns. The AzureDiagnostics table includes the most common columns used by Azure services. If a resource log includes a column that doesn't already exist in the AzureDiagnostics table, that column is added the first time that data is collected. If the maximum number of 500 columns is reached, data for any additional columns is added to a dynamic column. Azure services that use resource-specific mode store data in a table specific to that service and don't use the AzureDiagnostics table. See Azure resource logs for details on the differences. See Resources using Azure Diagnostics mode for the services that use Azure Diagnostics. Unlike other tables, AzureDiagnostics is much more susceptible to exceeding the 500 column limit imposed for any table in a Log Analytics workspace due to the wide assortment of Azure Resources capable of sending data to this table. To ensure that no data is lost due to the number of active columns exceeding this 500 column limit, AzureDiagnostics column creation is handled in a different manner to other tables. The AzureDiagnostics table in every workspace contains at a minimum, the same 200 columns. For workspaces created before January 19, 2021, the table also contains any columns that were already in place before this date. When data is sent to a column not already in place: If the total number of columns in AzureDiagnostics in the current workspace doesn't exceed 500, a new column is created just like with any other table. If the total number of columns is at or above 500, the excess data is added to a dynamic property bag column called AdditionalFields as a property. ７ Note The AzureDiagnostics table is a custom log table created exclusively by the Azure Monitor pipeline the first time an Azure resource begins sending logs in Azure Diagnostics mode. Unlike other tables, the AzureDiagnostics table can't be created via an ARM template or tables API. Consequently, it's not possible to modifying the table's default retention values before its creation. AdditionalFields column To illustrate this behavior, imagine that as of (deployment date) the AzureDiagnostics table in our workspace looks as follows: Column 1 Column 2 Column 3 ... Column 498 abc def 123 ... 456 ... ... ... ... ... A resource that sends data to AzureDiagnostics then adds a new dimension to their data that they call NewInfo1. Since the table still has fewer than 500 columns, the first time an event occurs that contains data for this new dimension adds a new column to the table: Column 1 Column 2 Column 3 ... Column 498 NewInfo1_s abc def 123 ... 456 xyz ... ... ... ... ... ... You can return this new data in a simple query: Kusto At a later date, another resource sends data to AzureDiagnostics that adds new dimensions called NewInfo2 and NewInfo3. Because the table has reached 500 columns in this workspace, the new data goes into the AdditionalFields column: Column 1 Column 2 Column 3 ... Column 498 NewInfo1_s AdditionalFields abc def 123 ... 456 xyz {\"NewInfo2\":\"789\",\"NewInfo3\":\"qwerty\"} ... ... ... ... ... ... ... Example ﾉ Expand table ﾉ Expand table AzureDiagnostics | where NewInfo1_s == \"xyz\" ﾉ Expand table You can still query for this data, but you must extract it from the property bag using any of the dynamic property operators in KQL: Kusto While query best practices such as always filtering by time as the first clause in the query should be followed, there are some other recommendations you should consider when working with AdditionalFields: You must typecast data before performing further operations on it. For example, if you have a column called Perf1Sec_i and a property in AdditionalFields called Perf2Sec, and you want to calculate total perf by adding both values, you can use the following: AzureDiagnostics | extend TotalPerfSec = Perf1Sec_i + toint(AdditionalFields.Perf2Sec) | .... . Use where clauses to reduce the data volume to the smallest possible before writing any complex logic to significantly improve performance. TimeGenerated is one column that should always be reduced to the smallest possible window. In the case of AzureDiagnostics, an additional filter should always be included at the top of the query around the resource types that are being queried using the ResourceType column. When querying large volumes of data, it's sometimes more efficient to do a filter on AdditionalFields as a whole rather than parsing it. For example, for large volumes of data, AzureDiagnostics | where AdditionalFields has \"Perf2Sec\" is often more efficient than AzureDiagnostics | where isnotnull(toint(AdditionalFields.Perf2Sec)) . The following services use Azure diagnostics mode for their resource logs and send data to the Azure Diagnostics table. See Azure resource logs for details on this configuration. AzureDiagnostics | where AdditionalFields.NewInfo2 == \"789\" and AdditionalFields.NewInfo3 == \"qwerty\" Tips on using the AdditionalFields column Resources using Azure Diagnostics mode ７ Note All other resources send data to resource-specific tables. ﾉ Expand table Service name resourceType MicrosoftSqlAzureTelemetryv3 microsoft.sql/servers/databases MicrosoftAzureCosmosDB microsoft.documentdb/databaseaccounts AzureFirewall microsoft.network/azurefirewalls AzureApplicationGatewayService microsoft.network/applicationgateways AKSCustomerData microsoft.containerservice/managedclusters AzureFrontdoor microsoft.cdn/profiles LNMAgentService microsoft.network/networksecuritygroups MicrosoftOrcasBreadthServers microsoft.dbforpostgresql/flexibleservers servicebus microsoft.eventhub/namespaces AzureFrontdoor microsoft.network/frontdoors AzureKeyVault microsoft.keyvault/vaults AzureDataLake microsoft.datalakestore/accounts ApiManagement microsoft.apimanagement/service MicrosoftSqlAzureTelemetryv3 microsoft.sql/managedinstances ASAzureRP microsoft.analysisservices/servers MicrosoftOrcasBreadthServers microsoft.dbformysql/flexibleservers servicebus microsoft.servicebus/namespaces AzureIotHub microsoft.devices/iothubs MicrosoftSqlAzureTelemetryv2 microsoft.dbforpostgresql/servers MicrosoftSqlAzureTelemetryv2 microsoft.dbformariadb/servers MicrosoftAutomation microsoft.automation/automationaccounts TrafficManager microsoft.network/trafficmanagerprofiles MicrosoftOrcasBreadthServers microsoft.dbforpostgresql/servergroupsv2 AzureSearch microsoft.search/searchservices AzureHybrid microsoft.network/virtualnetworkgateways MicrosoftSqlAzureTelemetryv3 microsoft.sql/managedinstances/databases Service name resourceType PBIDedicatedRP microsoft.powerbidedicated/capacities AzureHybrid microsoft.network/vpngateways MicrosoftDatafactory microsoft.datafactory/factories MicrosoftCognitiveServices microsoft.cognitiveservices/accounts AzureRecoveryServices microsoft.recoveryservices/vaults AzureBatch microsoft.batch/batchaccounts AzureHybrid microsoft.network/p2svpngateways MicrosoftSqlAzureTelemetryv2 microsoft.dbformysql/servers AzureKeyVault microsoft.keyvault/managedhsms NetMon microsoft.network/publicipaddresses AzureDataLake microsoft.datalakeanalytics/accounts MicrosoftStreamanalytics microsoft.streamanalytics/streamingjobs servicebus microsoft.relay/namespaces AzureIotDps microsoft.devices/provisioningservices MicrosoftAzureCosmosDB microsoft.documentdb/cassandraclusters MicrosoftAzureCosmosDB microsoft.documentdb/mongoclusters AKSCustomerData microsoft.containerservice/fleets PBIDedicatedRP microsoft.powerbi/tenants/workspaces AzureFrontdoor microsoft.cdn/cdnwebapplicationfirewallpolicies AzureHybrid microsoft.network/expressroutecircuits MicrosoftAzureCosmosDB microsoft.dbforpostgresql/flexibleservers NetMon microsoft.network/publicipprefixes AzureCdn microsoft.cdn/profiles/endpoints The following services use either Azure diagnostics mode or resource-specific mode for their resource logs depending on the diagnostics settings configuration. When using resource- Azure Diagnostics mode or resource-specific mode specific mode, these resources don't send data to the AzureDiagnostics table. See Azure resource logs for details on this configuration. Service name resourceType API Management Services Microsoft.ApiManagement Azure Cosmos DB Microsoft.DocumentDB/databaseAccounts Data factories (V2) Microsoft.DataFactory Recovery Services vaults(Backup) Microsoft.RecoveryServices/vaults Firewalls Microsoft.Network/azureFirewalls",
    "columns": {
      "action_id_s": {
        "type": "String",
        "description": ""
      },
      "action_name_s": {
        "type": "String",
        "description": ""
      },
      "action_s": {
        "type": "String",
        "description": ""
      },
      "AdHocOrScheduledJob_s": {
        "type": "String",
        "description": ""
      },
      "application_name_s": {
        "type": "String",
        "description": ""
      },
      "avg_cpu_percent_s": {
        "type": "String",
        "description": ""
      },
      "avg_mean_time_s": {
        "type": "String",
        "description": ""
      },
      "backendHostname_s": {
        "type": "String",
        "description": ""
      },
      "Caller_s": {
        "type": "String",
        "description": ""
      },
      "callerId_s": {
        "type": "String",
        "description": ""
      },
      "CallerIPAddress": {
        "type": "String",
        "description": ""
      },
      "calls_s": {
        "type": "String",
        "description": ""
      },
      "Category": {
        "type": "String",
        "description": ""
      },
      "client_ip_s": {
        "type": "String",
        "description": ""
      },
      "clientInfo_s": {
        "type": "String",
        "description": ""
      },
      "clientIP_s": {
        "type": "String",
        "description": ""
      },
      "clientIp_s": {
        "type": "String",
        "description": ""
      },
      "clientIpAddress_s": {
        "type": "String",
        "description": ""
      },
      "code_s": {
        "type": "String",
        "description": ""
      },
      "collectionName_s": {
        "type": "String",
        "description": ""
      },
      "conditions_destinationIP_s": {
        "type": "String",
        "description": ""
      },
      "conditions_destinationPortRange_s": {
        "type": "String",
        "description": ""
      },
      "conditions_None_s": {
        "type": "String",
        "description": ""
      },
      "conditions_protocols_s": {
        "type": "String",
        "description": ""
      },
      "conditions_sourceIP_s": {
        "type": "String",
        "description": ""
      },
      "conditions_sourcePortRange_s": {
        "type": "String",
        "description": ""
      },
      "CorrelationId": {
        "type": "String",
        "description": ""
      },
      "database_name_s": {
        "type": "String",
        "description": ""
      },
      "database_principal_name_s": {
        "type": "String",
        "description": ""
      },
      "DatabaseName_s": {
        "type": "String",
        "description": ""
      },
      "db_id_s": {
        "type": "String",
        "description": ""
      },
      "direction_s": {
        "type": "String",
        "description": ""
      },
      "ElasticPoolName_s": {
        "type": "String",
        "description": ""
      },
      "endTime_t": {
        "type": "DateTime",
        "description": ""
      },
      "Environment_s": {
        "type": "String",
        "description": ""
      },
      "error_code_s": {
        "type": "String",
        "description": ""
      },
      "error_message_s": {
        "type": "String",
        "description": ""
      },
      "errorLevel_s": {
        "type": "String",
        "description": ""
      },
      "event_class_s": {
        "type": "String",
        "description": ""
      },
      "event_s": {
        "type": "String",
        "description": ""
      },
      "event_subclass_s": {
        "type": "String",
        "description": ""
      },
      "event_time_t": {
        "type": "DateTime",
        "description": ""
      },
      "EventName_s": {
        "type": "String",
        "description": ""
      },
      "executionInfo_endTime_t": {
        "type": "DateTime",
        "description": ""
      },
      "executionInfo_startTime_t": {
        "type": "DateTime",
        "description": ""
      },
      "host_s": {
        "type": "String",
        "description": ""
      },
      "httpMethod_s": {
        "type": "String",
        "description": ""
      },
      "httpStatusCode_s": {
        "type": "String",
        "description": ""
      },
      "httpVersion_s": {
        "type": "String",
        "description": ""
      },
      "id_s": {
        "type": "String",
        "description": ""
      },
      "identity_claim_ipaddr_s": {
        "type": "String",
        "description": ""
      },
      "instanceId_s": {
        "type": "String",
        "description": ""
      },
      "ip_s": {
        "type": "String",
        "description": ""
      },
      "is_column_permission_s": {
        "type": "String",
        "description": ""
      },
      "isAccessPolicyMatch_b": {
        "type": "Bool",
        "description": ""
      },
      "JobDurationInSecs_s": {
        "type": "String",
        "description": ""
      },
      "JobFailureCode_s": {
        "type": "String",
        "description": ""
      },
      "jobId_s": {
        "type": "String",
        "description": ""
      },
      "JobOperation_s": {
        "type": "String",
        "description": ""
      },
      "JobOperationSubType_s": {
        "type": "String",
        "description": ""
      },
      "JobStartDateTime_s": {
        "type": "String",
        "description": ""
      },
      "JobStatus_s": {
        "type": "String",
        "description": ""
      },
      "Level": {
        "type": "String",
        "description": ""
      },
      "LogicalServerName_s": {
        "type": "String",
        "description": ""
      },
      "macAddress_s": {
        "type": "String",
        "description": ""
      },
      "max_time_s": {
        "type": "String",
        "description": ""
      },
      "mean_time_s": {
        "type": "String",
        "description": ""
      },
      "Message": {
        "type": "String",
        "description": ""
      },
      "min_time_s": {
        "type": "String",
        "description": ""
      },
      "msg_s": {
        "type": "String",
        "description": ""
      },
      "object_name_s": {
        "type": "String",
        "description": ""
      },
      "OperationName": {
        "type": "String",
        "description": ""
      },
      "OperationVersion": {
        "type": "String",
        "description": ""
      },
      "partitionKey_s": {
        "type": "String",
        "description": ""
      },
      "policy_s": {
        "type": "String",
        "description": ""
      },
      "policyMode_s": {
        "type": "String",
        "description": ""
      },
      "primaryIPv4Address_s": {
        "type": "String",
        "description": ""
      },
      "properties_enabledForDeployment_b": {
        "type": "Bool",
        "description": ""
      },
      "properties_enabledForDiskEncryption_b": {
        "type": "Bool",
        "description": ""
      },
      "properties_enabledForTemplateDeployment_b": {
        "type": "Bool",
        "description": ""
      },
      "properties_s": {
        "type": "String",
        "description": ""
      },
      "properties_sku_Family_s": {
        "type": "String",
        "description": ""
      },
      "properties_sku_Name_s": {
        "type": "String",
        "description": ""
      },
      "query_hash_s": {
        "type": "String",
        "description": ""
      },
      "query_plan_hash_s": {
        "type": "String",
        "description": ""
      },
      "querytext_s": {
        "type": "String",
        "description": ""
      },
      "Region_s": {
        "type": "String",
        "description": ""
      },
      "requestCharge_s": {
        "type": "String",
        "description": ""
      },
      "requestQuery_s": {
        "type": "String",
        "description": ""
      },
      "requestResourceId_s": {
        "type": "String",
        "description": ""
      },
      "requestResourceType_s": {
        "type": "String",
        "description": ""
      },
      "requestUri_s": {
        "type": "String",
        "description": ""
      },
      "reserved_storage_mb_s": {
        "type": "String",
        "description": ""
      },
      "Resource": {
        "type": "String",
        "description": ""
      },
      "resource_actionName_s": {
        "type": "String",
        "description": ""
      },
      "resource_location_s": {
        "type": "String",
        "description": ""
      },
      "resource_originRunId_s": {
        "type": "String",
        "description": ""
      },
      "resource_resourceGroupName_s": {
        "type": "String",
        "description": ""
      },
      "resource_runId_s": {
        "type": "String",
        "description": ""
      },
      "resource_triggerName_s": {
        "type": "String",
        "description": ""
      },
      "resource_workflowName_s": {
        "type": "String",
        "description": ""
      },
      "ResourceGroup": {
        "type": "String",
        "description": ""
      },
      "_ResourceId": {
        "type": "String",
        "description": "A unique identifier for the resource that the"
      },
      "ResourceProvider": {
        "type": "String",
        "description": ""
      },
      "ResourceType": {
        "type": "String",
        "description": ""
      },
      "resultCode_s": {
        "type": "String",
        "description": ""
      },
      "ResultDescription": {
        "type": "String",
        "description": ""
      },
      "resultDescription_ChildJobs_s": {
        "type": "String",
        "description": ""
      },
      "resultDescription_ErrorJobs_s": {
        "type": "String",
        "description": ""
      },
      "resultMessage_s": {
        "type": "String",
        "description": ""
      },
      "ResultSignature": {
        "type": "String",
        "description": ""
      },
      "ResultType": {
        "type": "String",
        "description": ""
      },
      "rootCauseAnalysis_s": {
        "type": "String",
        "description": ""
      },
      "routingRuleName_s": {
        "type": "String",
        "description": ""
      },
      "ruleName_s": {
        "type": "String",
        "description": ""
      },
      "RunbookName_s": {
        "type": "String",
        "description": ""
      },
      "RunOn_s": {
        "type": "String",
        "description": ""
      },
      "schema_name_s": {
        "type": "String",
        "description": ""
      },
      "server_principal_sid_s": {
        "type": "String",
        "description": ""
      }
    }
  },
  "AzureLoadTestingOperation": {
    "tableName": "AzureLoadTestingOperation",
    "description": "Details about the operations which are performed on the Azure Load Testing resource. For example, operations like creation of a Test, Test run etc.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CallerIpAddress": {
        "type": "string",
        "description": "Deprecated"
      },
      "CorrelationId": {
        "type": "string",
        "description": "Deprecated"
      },
      "DurationMs": {
        "type": "long",
        "description": "Deprecated"
      },
      "FailureDetails": {
        "type": "string",
        "description": "Details of the error in case if request is failed."
      },
      "HttpStatusCode": {
        "type": "int",
        "description": "HTTP status code of the API response."
      },
      "Identity": {
        "type": "dynamic",
        "description": "JSON structure containing information about the caller."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "OperationId": {
        "type": "string",
        "description": "Operation identifier for rest api"
      },
      "OperationName": {
        "type": "string",
        "description": "Deprecated"
      },
      "OperationVersion": {
        "type": "string",
        "description": "Deprecated"
      },
      "RequestBody": {
        "type": "dynamic",
        "description": "Request body of the API calls."
      },
      "RequestId": {
        "type": "string",
        "description": "Unique identifier to be used to correlate request logs."
      },
      "RequestMethod": {
        "type": "string",
        "description": "HTTP method of the API request."
      },
      "RequestUri": {
        "type": "string",
        "description": "URI of the API request."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResourceRegion": {
        "type": "string",
        "description": "Region where the resource is located."
      },
      "ResultType": {
        "type": "string",
        "description": "Reduces the set of data collected. The syntax allowed depends on"
      },
      "ServiceLocation": {
        "type": "string",
        "description": "Location of the service which processed the request."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time the record was created."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "HTTP header passed by the client, if applicable."
      },
      "Average": {
        "type": "real",
        "description": ""
      },
      "Category": {
        "type": "string",
        "description": "Deprecated"
      },
      "Confidence": {
        "type": "string",
        "description": "Deprecated"
      },
      "Count": {
        "type": "real",
        "description": "Number of samples collected during the time range. Can be used to"
      },
      "Description": {
        "type": "string",
        "description": "Deprecated"
      },
      "FirstReportedDateTime": {
        "type": "string",
        "description": "Deprecated"
      },
      "IndicatorThreatType": {
        "type": "string",
        "description": "Deprecated"
      },
      "IsActive": {
        "type": "string",
        "description": "Deprecated"
      },
      "LastReportedDateTime": {
        "type": "string",
        "description": "Deprecated"
      },
      "MaliciousIP": {
        "type": "string",
        "description": "Deprecated"
      },
      "Maximum": {
        "type": "real",
        "description": "Maximum value collected during in the time range."
      },
      "MetricName": {
        "type": "string",
        "description": "Display name of the metric."
      },
      "Minimum": {
        "type": "real",
        "description": "Minimum value collected during in the time range."
      },
      "RemoteIPCountry": {
        "type": "string",
        "description": "Deprecated"
      },
      "RemoteIPLatitude": {
        "type": "real",
        "description": "Deprecated"
      },
      "RemoteIPLongitude": {
        "type": "real",
        "description": "Deprecated"
      },
      "Resource": {
        "type": "string",
        "description": "Resource name of the Azure resource reporting the metric."
      },
      "ResourceGroup": {
        "type": "string",
        "description": "Resource group name of the Azure resource reporting the metric."
      },
      "ResourceId": {
        "type": "string",
        "description": "Resource ID of the Azure resource reporting the metric. Same as"
      },
      "ResourceProvider": {
        "type": "string",
        "description": "Resource provider of the Azure resource reporting the metric."
      },
      "ResultDescription": {
        "type": "string",
        "description": "Deprecated"
      },
      "ResultSignature": {
        "type": "string",
        "description": "Deprecated"
      },
      "Severity": {
        "type": "int",
        "description": "Deprecated"
      },
      "SubscriptionId": {
        "type": "string",
        "description": "Subscription id of the Azure resource reporting the metric."
      },
      "TimeGrain": {
        "type": "string",
        "description": "Time grain of the metric e.g. PT1M"
      },
      "TLPLevel": {
        "type": "string",
        "description": "Deprecated"
      },
      "Total": {
        "type": "real",
        "description": "Sum of all of the values in the time range."
      },
      "UnitName": {
        "type": "string",
        "description": "Unit of the metric. Examples include Seconds Percent Bytes."
      }
    }
  },
  "AzureMetricsV2": {
    "tableName": "AzureMetricsV2",
    "description": "Azure native platform metrics that can help to measure health and performance. AzureMetricsV2 includes metric categories and dimensions, improving upon legacy AzureMetrics table.",
    "columns": {
      "Average": {
        "type": "real",
        "description": "Average value collected during in the time range."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Count": {
        "type": "real",
        "description": "Number of samples collected during the time range."
      },
      "Dimension": {
        "type": "dynamic",
        "description": "Associated dimension of the metric in JSON format."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Maximum": {
        "type": "real",
        "description": "Maximum value collected during in the time range."
      },
      "MetricCategory": {
        "type": "string",
        "description": "Category name of the metric."
      },
      "MetricName": {
        "type": "string",
        "description": "Display name of the metric."
      },
      "MetricResourceType": {
        "type": "string",
        "description": "Resource type of the Azure resource reporting the metric."
      },
      "Minimum": {
        "type": "real",
        "description": "Minimum value collected during in the time range."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (UTC) when the record was generated."
      },
      "TimeGrain": {
        "type": "string",
        "description": "Time grain of the metric."
      },
      "Total": {
        "type": "real",
        "description": "Sum of all of the values in the time range."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UnitName": {
        "type": "string",
        "description": "Unit of the metric."
      }
    }
  },
  "BehaviorAnalytics": {
    "tableName": "BehaviorAnalytics",
    "description": "This table stores the enriched events for Sentinel UEBA, providing behavior analytics over raw data.",
    "columns": {
      "ActionType": {
        "type": "string",
        "description": "The specific type of action that triggered the event."
      },
      "ActivityInsights": {
        "type": "dynamic",
        "description": "Activity and behavioral insights."
      },
      "ActivityType": {
        "type": "string",
        "description": "The activity type that triggered the event."
      },
      "ActorName": {
        "type": "string",
        "description": "The name of the user initiating the action that generated the event."
      },
      "ActorPrincipalName": {
        "type": "string",
        "description": "The principal name of the user initiating the action that generated the"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DestinationDevice": {
        "type": "string",
        "description": "The hostname of the destination device."
      },
      "DestinationIPAddress": {
        "type": "string",
        "description": "The destination IP address."
      },
      "DestinationIPLocation": {
        "type": "string",
        "description": "The destination Geo location based on the IP address."
      },
      "Device": {
        "type": "string",
        "description": "The name of the device on which the event occurred or which"
      },
      "DevicesInsights": {
        "type": "dynamic",
        "description": "Devices metadata and insights."
      },
      "EventProductVersion": {
        "type": "string",
        "description": "The version of the product generating the event."
      },
      "EventSource": {
        "type": "string",
        "description": "Data source for this event."
      },
      "EventVendor": {
        "type": "string",
        "description": "The vendor of the product generating the event."
      },
      "InvestigationPriority": {
        "type": "int",
        "description": "Investigation priority score."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "NativeTableName": {
        "type": "string",
        "description": "The original table from which the record was fetched."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceDevice": {
        "type": "string",
        "description": "The hostname of the source device."
      },
      "SourceIPAddress": {
        "type": "string",
        "description": "The source IP address."
      },
      "SourceIPLocation": {
        "type": "string",
        "description": "The source Geo location based on the IP address."
      },
      "SourceRecordId": {
        "type": "string",
        "description": "The unique Id of the source raw event."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TargetName": {
        "type": "string",
        "description": "The name of the target user in the action that generated the event."
      },
      "TargetPrincipalName": {
        "type": "string",
        "description": "The name of the target user in the action that generated the event."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Time when the raw event was generated (UTC)."
      },
      "TimeProcessed": {
        "type": "datetime",
        "description": "Time when enrichment processing occurred (UTC)."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserName": {
        "type": "string",
        "description": "User name of the account."
      },
      "UserPrincipalName": {
        "type": "string",
        "description": "User principal name of the account."
      },
      "UsersInsights": {
        "type": "dynamic",
        "description": "Users metadata and insights."
      }
    }
  },
  "BehaviorEntities": {
    "tableName": "BehaviorEntities",
    "description": "Microsoft Defender for Endpoints (MDE) behaviors table. Contains information about entities (file, process, device, user, and others) that are involved in a behavior or observation, including detected threats.",
    "columns": {
      "AccountDomain": {
        "type": "string",
        "description": "Domain of the account."
      },
      "AccountName": {
        "type": "string",
        "description": "User name of the account."
      },
      "AccountObjectId": {
        "type": "string",
        "description": "Unique identifier for the account in Azure AD."
      },
      "AccountSid": {
        "type": "string",
        "description": "Security Identifier (SID) of the account."
      },
      "AccountUpn": {
        "type": "string",
        "description": "User principal name (UPN) of the account."
      },
      "ActionType": {
        "type": "string",
        "description": "Type of activity that triggered the event. Associated with specific"
      },
      "AdditionalFields": {
        "type": "string",
        "description": "Additional information about the entity or event."
      },
      "Application": {
        "type": "string",
        "description": "Application that performed the recorded action."
      },
      "ApplicationId": {
        "type": "string",
        "description": "Unique identifier for the application."
      },
      "BehaviorId": {
        "type": "string",
        "description": "Unique identifier for the behavior."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Categories": {
        "type": "string",
        "description": "Types of threat indicator or breach activity identified by the alert."
      },
      "DataSources": {
        "type": "string",
        "description": "Products or services that provided information for the behavior."
      },
      "DetailedEntityRole": {
        "type": "string",
        "description": "The role of the entity in the behavior"
      },
      "DetectionSource": {
        "type": "string",
        "description": "Detection technology or sensor that identified the notable"
      },
      "DeviceId": {
        "type": "string",
        "description": "Unique identifier for the device in the service."
      },
      "DeviceName": {
        "type": "string",
        "description": "Fully qualified domain name (FQDN) of the device."
      },
      "EmailClusterId": {
        "type": "string",
        "description": "Identifier for the group of similar emails clustered based on heuristic"
      },
      "EmailSubject": {
        "type": "string",
        "description": "Subject of the email."
      },
      "EntityRole": {
        "type": "string",
        "description": "Indicates whether the entity is impacted or merely related."
      },
      "EntityType": {
        "type": "string",
        "description": "Type of object, such as a file, a process, a device, or a user."
      },
      "FileName": {
        "type": "string",
        "description": "Name of the file involved in the alert. Empty unless EntityType is \"File\""
      },
      "FileSize": {
        "type": "long",
        "description": "Size of the file in bytes. Empty unless EntityType is \"File\" or \"Process\""
      },
      "FolderPath": {
        "type": "string",
        "description": "Folder containing the file. Empty unless EntityType is \"File\" or"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "LocalIP": {
        "type": "string",
        "description": "IP address assigned to the local machine used during communication."
      },
      "NetworkMessageId": {
        "type": "string",
        "description": "Unique identifier for the email in UUID format, generated by Office"
      },
      "OAuthApplicationId": {
        "type": "string",
        "description": "Unique identifier of the third-party OAuth application in UUID format."
      },
      "ProcessCommandLine": {
        "type": "string",
        "description": "Command line used to create the new process."
      },
      "RegistryKey": {
        "type": "string",
        "description": "Registry key that the recorded action was applied to."
      },
      "RegistryValueData": {
        "type": "string",
        "description": "Data of the registry value that the recorded action was applied to."
      },
      "RegistryValueName": {
        "type": "string",
        "description": "Name of the registry value that the recorded action was applied to."
      },
      "RemoteIP": {
        "type": "string",
        "description": "IP address that was being connected to."
      },
      "RemoteUrl": {
        "type": "string",
        "description": "URL or fully qualified domain name (FQDN) that was being connected"
      },
      "ServiceSource": {
        "type": "string",
        "description": "Product or service that provided the alert information."
      },
      "SHA1": {
        "type": "string",
        "description": "SHA-1 hash of the file. Empty unless EntityType is \"File\" or \"Process\"."
      },
      "SHA256": {
        "type": "string",
        "description": "SHA-256 of the file. Empty unless EntityType is \"File\" or \"Process\"."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "ThreatFamily": {
        "type": "string",
        "description": "Malware family that the suspicious or malicious file or process has"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time when the record was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "BehaviorInfo": {
    "tableName": "BehaviorInfo",
    "description": "Microsoft Defender for Endpoints (MDE) behaviors table. Contains information about behaviors, which in the context of Microsoft 365 Defender refers to a conclusion or insight based on one or more raw events, which can provide analysts more context in investigations.",
    "columns": {
      "AccountObjectId": {
        "type": "string",
        "description": "Unique identifier for the account in Azure AD."
      },
      "AccountUpn": {
        "type": "string",
        "description": "User principal name (UPN) of the account."
      },
      "ActionType": {
        "type": "string",
        "description": "Type of activity that triggered the event. Associated with specific MITRE"
      },
      "AdditionalFields": {
        "type": "string",
        "description": "Additional information about the entity or event."
      },
      "AttackTechniques": {
        "type": "string",
        "description": "MITRE ATT&CK techniques associated with the activity that triggered the"
      },
      "BehaviorId": {
        "type": "string",
        "description": "Unique identifier for the behavior."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Categories": {
        "type": "string",
        "description": "Types of threat indicator or breach activity identified by the alert. Defined"
      },
      "DataSources": {
        "type": "string",
        "description": "Products or services that provided information for the behavior."
      },
      "Description": {
        "type": "string",
        "description": "Description of the behavior."
      },
      "DetectionSource": {
        "type": "string",
        "description": "Detection technology or sensor that identified the notable component or"
      },
      "DeviceId": {
        "type": "string",
        "description": "Unique identifier for the device in the service."
      },
      "EndTime": {
        "type": "datetime",
        "description": "Date and time of the last activity related to the behavior."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "ServiceSource": {
        "type": "string",
        "description": "Product or service that provided the alert information."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "StartTime": {
        "type": "datetime",
        "description": "Date and time of the first activity related to the behavior."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time when the record was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "BlockchainApplicationLog": {
    "tableName": "BlockchainApplicationLog",
    "description": "",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "BlockchainMessage": {
        "type": "string",
        "description": ""
      },
      "BlockchainNodeName": {
        "type": "string",
        "description": ""
      },
      "Category": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Level": {
        "type": "string",
        "description": ""
      },
      "NodeLocation": {
        "type": "string",
        "description": ""
      },
      "OperationName": {
        "type": "string",
        "description": ""
      },
      "Resource": {
        "type": "string",
        "description": ""
      },
      "ResourceGroup": {
        "type": "string",
        "description": ""
      },
      "ResourceId": {
        "type": "string",
        "description": ""
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResourceProvider": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "SubscriptionId": {
        "type": "string",
        "description": ""
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "BlockchainProxyLog": {
    "tableName": "BlockchainProxyLog",
    "description": "",
    "columns": {
      "Agent": {
        "type": "string",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "BlockchainMemberName": {
        "type": "string",
        "description": ""
      },
      "BlockchainNodeName": {
        "type": "string",
        "description": ""
      },
      "Category": {
        "type": "string",
        "description": ""
      },
      "Code": {
        "type": "string",
        "description": ""
      },
      "Consortium": {
        "type": "string",
        "description": ""
      },
      "EthMethod": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "LogLevel": {
        "type": "string",
        "description": ""
      },
      "NodeHost": {
        "type": "string",
        "description": ""
      },
      "NodeLocation": {
        "type": "string",
        "description": ""
      },
      "OperationName": {
        "type": "string",
        "description": ""
      },
      "PublicUser": {
        "type": "string",
        "description": ""
      },
      "Remote": {
        "type": "string",
        "description": ""
      },
      "RequestMethodName": {
        "type": "string",
        "description": ""
      },
      "RequestSize": {
        "type": "int",
        "description": ""
      },
      "RequestTime": {
        "type": "real",
        "description": ""
      },
      "Resource": {
        "type": "string",
        "description": ""
      },
      "ResourceGroup": {
        "type": "string",
        "description": ""
      },
      "ResourceId": {
        "type": "string",
        "description": ""
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "ResourceProvider": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "SubscriptionId": {
        "type": "string",
        "description": ""
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "Tenant": {
        "type": "string",
        "description": ""
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "CCFApplicationLogs": {
    "tableName": "CCFApplicationLogs",
    "description": "Contains the logs generated in the CCF application.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "File": {
        "type": "string",
        "description": "The file name that generated the log message."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Level": {
        "type": "string",
        "description": "An error or informational message indicating if the service processed the"
      },
      "LineNumber": {
        "type": "int",
        "description": "The line number in the file that the message refers to."
      },
      "Location": {
        "type": "string",
        "description": "The Azure datacenter region where the pod is deployed."
      },
      "Message": {
        "type": "string",
        "description": "The Log message."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time the record was created."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "CDBCassandraRequests": {
    "tableName": "CDBCassandraRequests",
    "description": "This table details data plane operations, specifically for Cassandra API accounts.",
    "columns": {
      "AccountName": {
        "type": "string",
        "description": "The name of the Cosmos DB account against which this request"
      },
      "ActivityId": {
        "type": "string",
        "description": "The unique identifier (GUID) for this Cassandra API request."
      },
      "Address": {
        "type": "string",
        "description": "The IP address of the client that issued this request."
      },
      "AuthorizationTokenType": {
        "type": "string",
        "description": "The authorization token used for this request."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CollectionName": {
        "type": "string",
        "description": "The name of the Cosmos DB table/container against which this"
      },
      "DatabaseName": {
        "type": "string",
        "description": "The name of the Cosmos DB database against which this request"
      },
      "DurationMs": {
        "type": "real",
        "description": "The server side execution time (in ms) for this request."
      },
      "ErrorCode": {
        "type": "string",
        "description": "The error code (if applicable) for this request."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "OperationName": {
        "type": "string",
        "description": "The Cassandra API operation that was executed."
      },
      "PIICommandText": {
        "type": "string",
        "description": "Full query text with parameters (if opted in) for this request."
      },
      "RateLimitingDelayMs": {
        "type": "real",
        "description": "The estimated time (in ms) spent in retrying due to rate limited"
      },
      "RegionName": {
        "type": "string",
        "description": "The region against which this request was issued."
      },
      "RequestCharge": {
        "type": "real",
        "description": "The RU (Request Unit) consumption for this request."
      },
      "RequestLength": {
        "type": "real",
        "description": "The payload size (in bytes) of the request."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "ResponseLength": {
        "type": "real",
        "description": "The payload size (in bytes) of the server response."
      },
      "RetriedDueToRateLimiting": {
        "type": "bool",
        "description": "Boolean flag indicating if this request was retried server side due"
      },
      "RetryCount": {
        "type": "int",
        "description": "The number of server side retries issued for this request."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (in UTC) of the Cassandra API data plane request."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The user agent suffix of the client issuing the request."
      }
    }
  },
  "CDBControlPlaneRequests": {
    "tableName": "CDBControlPlaneRequests",
    "description": "This table details all control plane operations executed on the account, which include modifications to the regional failover policy, indexing policy, IAM role assignments, backup/restore policies, VNet and firewall rules, private links as well as updates and deletes of the account.",
    "columns": {
      "AccountName": {
        "type": "string",
        "description": "The name of the Cosmos DB account."
      },
      "AcledSubnets": {
        "type": "string",
        "description": "The ACL'd subnets for the account."
      },
      "ActivityId": {
        "type": "string",
        "description": "The Activity ID of the operation."
      },
      "ApiKind": {
        "type": "string",
        "description": "The API kind for the account (SQL, Graph, Mongo,"
      },
      "ApiKindResourceType": {
        "type": "string",
        "description": "The resource against which this Control Plane operation"
      },
      "AssociatedRoleDefinitionId": {
        "type": "string",
        "description": "The ID of the IAM role definition for the IAM role created"
      },
      "BackupIntervalInMinutes": {
        "type": "int",
        "description": "The time (in minutes) between consecutive backup"
      },
      "BackupRetentionIntervalInHours": {
        "type": "int",
        "description": "The duration of time (in hours) for which backup"
      },
      "BackupStorageRedundancy": {
        "type": "string",
        "description": "The type of backup storage redundancy for the Cosmos"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Cors": {
        "type": "string",
        "description": "Collection of account's Cross Origin Resource Sharing"
      },
      "CurrentWriteRegion": {
        "type": "string",
        "description": "The current write region for this account (applies when a"
      },
      "DefaultConsistencyLevel": {
        "type": "string",
        "description": "The default consistency level for the Cosmos DB account."
      },
      "DurationMs": {
        "type": "real",
        "description": "The time taken (in milliseconds) for this control plane"
      },
      "EnableAutomaticFailover": {
        "type": "bool",
        "description": "Boolean flag to enable automatic failover for the Cosmos"
      },
      "EnableCassandraRequestsTrace": {
        "type": "bool",
        "description": "Boolean flag indicating if diagnostic logs are enabled for"
      },
      "EnableControlPlaneRequestsTrace": {
        "type": "bool",
        "description": "Boolean flag indicting if diagnostic logs are enabled for"
      },
      "EnableDataPlaneRequestsTrace": {
        "type": "bool",
        "description": "Boolean flag indicating if diagnostic logs are enabled for"
      },
      "EnableGremlinRequestsTrace": {
        "type": "bool",
        "description": "Boolean flag indicating if diagnostic logs are enabled for"
      },
      "EnableMongoRequestsTrace": {
        "type": "bool",
        "description": "Boolean flag indicating if diagnostic logs are enabled for"
      },
      "EnablePrivateEndpointConnection": {
        "type": "bool",
        "description": "Boolean flag to enable private endpoints for the Cosmos"
      },
      "EnableVirtualNetworkFilter": {
        "type": "bool",
        "description": "Boolean flag indicating if VNet filters were enabled for"
      },
      "HttpMethod": {
        "type": "string",
        "description": "The HTTP method issued for this control plane operation."
      },
      "HttpStatusCode": {
        "type": "int",
        "description": "The HTTP status code of the control plane operation."
      },
      "IpRangeFilter": {
        "type": "string",
        "description": "The IP range filter specified as part of the VNet rules for"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "IsServiceManagedFailover": {
        "type": "bool",
        "description": "Boolean flag to indicate if the failover event was initiated"
      },
      "MaxStalenessIntervalInSeconds": {
        "type": "real",
        "description": "The maximum staleness value (in seconds) for the"
      },
      "MaxStalenessPrefix": {
        "type": "string",
        "description": "The max staleness prefix for the Cosmos DB account"
      },
      "MultipleWriteLocations": {
        "type": "bool",
        "description": "Boolean flag indicating if the Cosmos DB account is a"
      },
      "NewWriteRegion": {
        "type": "string",
        "description": "The new write region for the Cosmos DB account (after a"
      },
      "OperationName": {
        "type": "string",
        "description": "The Control Plane Operation that was executed."
      },
      "OperationType": {
        "type": "string",
        "description": "The type of control plane operation, which was executed."
      },
      "PrivateEndpointArmUrl": {
        "type": "string",
        "description": "The ARM URL of the private endpoint created for the"
      },
      "PrivateEndpointConnections": {
        "type": "string",
        "description": "The list of private endpoints for the Cosmos DB account"
      },
      "RegionName": {
        "type": "string",
        "description": "The region in which this control plan operation was"
      },
      "ResourceDetails": {
        "type": "string",
        "description": "The specific resource within the account against which"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "ResourceUri": {
        "type": "string",
        "description": "The URI of the Cosmos DB resource (e.g. Database,"
      },
      "Result": {
        "type": "string",
        "description": "The result of the operation indicating either success or"
      },
      "RoleAssignmentId": {
        "type": "string",
        "description": "The role assignment Id for the IAM role created for the"
      },
      "RoleAssignmentPrincipalId": {
        "type": "string",
        "description": "The Principal ID associated with the IAM Role Assignment"
      },
      "RoleAssignmentPrincipalType": {
        "type": "string",
        "description": "The Principal type of the IAM role assignment created for"
      },
      "RoleAssignmentScope": {
        "type": "string",
        "description": "The scope of access for the IAM role created for the"
      },
      "RoleDefinitionAssignableScopes": {
        "type": "string",
        "description": "The assignable scopes for the IAM role created for the"
      },
      "RoleDefinitionId": {
        "type": "string",
        "description": "The Id of the IAM role created for the account."
      },
      "RoleDefinitionName": {
        "type": "string",
        "description": "The name of the IAM role created for the account."
      },
      "RoleDefinitionPermissions": {
        "type": "string",
        "description": "The permissions associated with the IAM role created for"
      },
      "RoleDefinitionType": {
        "type": "string",
        "description": "The type of IAM role created for the account."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For"
      },
      "SqlQueryTextTraceType": {
        "type": "bool",
        "description": "Boolean flag indicating if full query text logging is"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TargetBackupMode": {
        "type": "string",
        "description": "The backup mode after update. This can be either"
      },
      "TargetContinuousTier": {
        "type": "string",
        "description": "The continuous tier after updating. This can be either"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (in UTC) when this Control Plane operation"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "VirtualNetworkName": {
        "type": "string",
        "description": "The name of the Vnet for the account."
      },
      "VirtualNetworkResourceEntries": {
        "type": "string",
        "description": "The list of IP addresses being included as part of the VNet"
      },
      "VnetArmUrl": {
        "type": "string",
        "description": "The ARM URL for the VNet for the account."
      },
      "VnetDatabaseAccountEntries": {
        "type": "string",
        "description": "The list of virtual networks specified for the account."
      },
      "VnetLocation": {
        "type": "string",
        "description": "The Azure region in which the VNet for the account is"
      },
      "VnetResourceGroupName": {
        "type": "string",
        "description": "The name of the resource group within which the VNet is"
      }
    }
  },
  "CDBDataPlaneRequests": {
    "tableName": "CDBDataPlaneRequests",
    "description": "The DataPlaneRequests table captures every data plane operation for the Cosmos DB account. Data Plane requests are operations executed to create, update, delete or retrieve data within the account.",
    "columns": {
      "AadAppliedRoleAssignmentId": {
        "type": "string",
        "description": "The ID of the applied role assignment for the caller issuing"
      },
      "AadPrincipalId": {
        "type": "string",
        "description": "The AAD Principal ID of the caller issuing the data plane"
      },
      "AccountName": {
        "type": "string",
        "description": "The name of the Cosmos DB account."
      },
      "ActivityId": {
        "type": "string",
        "description": "The unique identifier (GUID) for this data plane operation"
      },
      "AuthTokenType": {
        "type": "string",
        "description": "The authorization type (System Read/Write key) for this"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClientIpAddress": {
        "type": "string",
        "description": "The IP address of the client VM issuing the request."
      },
      "CollectionName": {
        "type": "string",
        "description": "The Cosmos DB container against which the request was"
      },
      "ConnectionMode": {
        "type": "string",
        "description": "The connection mode used by the client issuing the request"
      },
      "DatabaseName": {
        "type": "string",
        "description": "The Cosmos DB database against which the request was"
      },
      "DurationMs": {
        "type": "real",
        "description": "The server-side execution time (in milliseconds) for this"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "KeyType": {
        "type": "string",
        "description": "The authorization type (Primary/Secondary Read/Write key)"
      },
      "OperationName": {
        "type": "string",
        "description": "The specific data plane operation executed against the"
      },
      "PartitionId": {
        "type": "string",
        "description": "The physical partition ID for the Cosmos DB container"
      },
      "RegionName": {
        "type": "string",
        "description": "The Azure region to which this request was issued."
      },
      "RequestCharge": {
        "type": "real",
        "description": "The RUs (Request Units) consumed by this operation."
      },
      "RequestLength": {
        "type": "real",
        "description": "The payload size (in bytes) for the request."
      },
      "RequestResourceId": {
        "type": "string",
        "description": "The ID of the specific Cosmos DB resource within the"
      },
      "RequestResourceType": {
        "type": "string",
        "description": "The Cosmos DB resource type within the account against"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "ResourceTokenPermissionId": {
        "type": "string",
        "description": "The ID of the resource token associated with the resource"
      },
      "ResourceTokenPermissionMode": {
        "type": "string",
        "description": "The permission mode of the resource token associated with"
      },
      "ResourceTokenUserRid": {
        "type": "string",
        "description": "The user ID associated with the resource token for the"
      },
      "ResponseLength": {
        "type": "real",
        "description": "The payload size (in bytes) of the server response."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "StatusCode": {
        "type": "int",
        "description": "The HTTP status code response for the data plane request,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (in UTC) when the data plane request was"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The name of the user specified user agent suffix (as"
      }
    }
  },
  "CDBDataPlaneRequests15M": {
    "tableName": "CDBDataPlaneRequests15M",
    "description": "The CDBDataPlaneRequests5M table consolidates logs for data-plane requests every fifteen minutes. These logs are aggregated based on the columns in the CDBDataPlaneRequests table. For detailed information about the log context, please refer to the CDBDataPlaneRequests table.",
    "columns": {
      "AadAppliedRoleAssignmentId": {
        "type": "string",
        "description": "The ID of the applied role assignment for the caller issuing"
      },
      "AadPrincipalId": {
        "type": "string",
        "description": "The AAD Principal ID of the caller issuing the data plane"
      },
      "AccountName": {
        "type": "string",
        "description": "The name of the Cosmos DB account."
      },
      "AuthTokenType": {
        "type": "string",
        "description": "The authorization type (System Read/Write key) for this"
      },
      "AvgDurationMs": {
        "type": "real",
        "description": "The average server-side execution times (in milliseconds) for"
      },
      "AvgRequestCharge": {
        "type": "real",
        "description": "The average RUs (Request Units) consumed by an operation"
      },
      "AvgRequestLength": {
        "type": "real",
        "description": "The average payload size (in bytes) for the requests in this"
      },
      "AvgResponseLength": {
        "type": "real",
        "description": "The average payload size (in bytes) of the server response in"
      },
      "this": {
        "type": "int",
        "description": "erval."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClientIpAddress": {
        "type": "string",
        "description": "The IP address of the client VM issuing the requests in the"
      },
      "CollectionName": {
        "type": "string",
        "description": "The Cosmos DB container against which the requests in this"
      },
      "ConnectionMode": {
        "type": "string",
        "description": "The connection mode used by the client issuing the"
      },
      "DatabaseName": {
        "type": "string",
        "description": "The Cosmos DB database against which the requests in this"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "KeyType": {
        "type": "string",
        "description": "The authorization type (Primary/Secondary Read/Write key)"
      },
      "MaxDurationMs": {
        "type": "real",
        "description": "The highest server-side execution time (in milliseconds) of a"
      },
      "MaxRequestCharge": {
        "type": "real",
        "description": "The maximum number of RUs (Request Units) consumed by"
      },
      "MaxRequestLength": {
        "type": "real",
        "description": "The highest payload size (in bytes) for a request in this"
      },
      "MaxResponseLength": {
        "type": "real",
        "description": "The highest payload size (in bytes) of the server response in"
      },
      "OperationName": {
        "type": "string",
        "description": "The specific data plane operation executed against the"
      },
      "PartitionId": {
        "type": "string",
        "description": "The physical partition ID for the Cosmos DB container"
      },
      "RegionName": {
        "type": "string",
        "description": "The Azure region to which the requests in this interval were"
      },
      "RequestResourceId": {
        "type": "string",
        "description": "The ID of the specific Cosmos DB resource within the"
      },
      "RequestResourceType": {
        "type": "string",
        "description": "The Cosmos DB resource type within the account against"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "ResourceTokenPermissionId": {
        "type": "string",
        "description": "The ID of the resource token associated with the resource"
      },
      "ResourceTokenPermissionMode": {
        "type": "string",
        "description": "The permission mode of the resource token associated with"
      },
      "ResourceTokenUserRid": {
        "type": "string",
        "description": "The user ID associated with the resource token for the"
      },
      "SampleCount": {
        "type": "real",
        "description": "The number of requests aggregated in this interval."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "StatusCode": {
        "type": "int",
        "description": "The HTTP status code response for the data plane request"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (in UTC) of the 15 minute interval for the"
      },
      "TotalDurationMs": {
        "type": "real",
        "description": "The sum of the server-side execution times (in milliseconds)"
      },
      "TotalRequestCharge": {
        "type": "real",
        "description": "The total RUs (Request Units) consumed by all operations in"
      },
      "TotalRequestLength": {
        "type": "real",
        "description": "The total payload size (in bytes) for the all requests in this"
      },
      "TotalResponseLength": {
        "type": "real",
        "description": "The total payload size (in bytes) of the server response in"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The name of the user specified user agent suffix (as"
      }
    }
  },
  "CDBDataPlaneRequests5M": {
    "tableName": "CDBDataPlaneRequests5M",
    "description": "The CDBDataPlaneRequests5M table consolidates logs for data-plane requests every five minutes. These logs are aggregated based on the columns in the CDBDataPlaneRequests table. For detailed information about the log context, please refer to the CDBDataPlaneRequests table.",
    "columns": {
      "AadAppliedRoleAssignmentId": {
        "type": "string",
        "description": "The ID of the applied role assignment for the caller issuing"
      },
      "AadPrincipalId": {
        "type": "string",
        "description": "The AAD Principal ID of the caller issuing the data plane"
      },
      "AccountName": {
        "type": "string",
        "description": "The name of the Cosmos DB account."
      },
      "AuthTokenType": {
        "type": "string",
        "description": "The authorization type (System Read/Write key) for this"
      },
      "AvgDurationMs": {
        "type": "real",
        "description": "The average server-side execution times (in milliseconds) for"
      },
      "AvgRequestCharge": {
        "type": "real",
        "description": "The average RUs (Request Units) consumed by an operation"
      },
      "AvgRequestLength": {
        "type": "real",
        "description": "The average payload size (in bytes) for the requests in this"
      },
      "AvgResponseLength": {
        "type": "real",
        "description": "The average payload size (in bytes) of the server response in"
      },
      "this": {
        "type": "int",
        "description": "erval."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClientIpAddress": {
        "type": "string",
        "description": "The IP address of the client VM issuing the requests in the"
      },
      "CollectionName": {
        "type": "string",
        "description": "The Cosmos DB container against which the requests in this"
      },
      "ConnectionMode": {
        "type": "string",
        "description": "The connection mode used by the client issuing the"
      },
      "DatabaseName": {
        "type": "string",
        "description": "The Cosmos DB database against which the requests in this"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "KeyType": {
        "type": "string",
        "description": "The authorization type (Primary/Secondary Read/Write key)"
      },
      "MaxDurationMs": {
        "type": "real",
        "description": "The highest server-side execution time (in milliseconds) of a"
      },
      "MaxRequestCharge": {
        "type": "real",
        "description": "The maximum number of RUs (Request Units) consumed by"
      },
      "MaxRequestLength": {
        "type": "real",
        "description": "The highest payload size (in bytes) for a request in this"
      },
      "MaxResponseLength": {
        "type": "real",
        "description": "The highest payload size (in bytes) of the server response in"
      },
      "OperationName": {
        "type": "string",
        "description": "The specific data plane operation executed against the"
      },
      "PartitionId": {
        "type": "string",
        "description": "The physical partition ID for the Cosmos DB container"
      },
      "RegionName": {
        "type": "string",
        "description": "The Azure region to which the requests in this interval were"
      },
      "RequestResourceId": {
        "type": "string",
        "description": "The ID of the specific Cosmos DB resource within the"
      },
      "RequestResourceType": {
        "type": "string",
        "description": "The Cosmos DB resource type within the account against"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "ResourceTokenPermissionId": {
        "type": "string",
        "description": "The ID of the resource token associated with the resource"
      },
      "ResourceTokenPermissionMode": {
        "type": "string",
        "description": "The permission mode of the resource token associated with"
      },
      "ResourceTokenUserRid": {
        "type": "string",
        "description": "The user ID associated with the resource token for the"
      },
      "SampleCount": {
        "type": "real",
        "description": "The number of requests aggregated in this interval."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "StatusCode": {
        "type": "int",
        "description": "The HTTP status code response for the data plane request,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (in UTC) of the 5 minute interval for the"
      },
      "TotalDurationMs": {
        "type": "real",
        "description": "The sum of the server-side execution times (in milliseconds)"
      },
      "TotalRequestCharge": {
        "type": "real",
        "description": "The total RUs (Request Units) consumed by all operations in"
      },
      "TotalRequestLength": {
        "type": "real",
        "description": "The total payload size (in bytes) for the all requests in this"
      },
      "TotalResponseLength": {
        "type": "real",
        "description": "The total payload size (in bytes) of the server response in"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The name of the user specified user agent suffix (as"
      }
    }
  },
  "CDBGremlinRequests": {
    "tableName": "CDBGremlinRequests",
    "description": "This table details data plane operations, specifically for Graph API accounts.",
    "columns": {
      "AccountName": {
        "type": "string",
        "description": "The name of the Cosmos DB account against which this request"
      },
      "ActivityId": {
        "type": "string",
        "description": "The unique identifier (GUID) for this Graph API request."
      },
      "Address": {
        "type": "string",
        "description": "The IP address of the client, which issued this request."
      },
      "AuthorizationTokenType": {
        "type": "string",
        "description": "The authorization token used for this request."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CollectionName": {
        "type": "string",
        "description": "The name of the Cosmos DB table/container against which this"
      },
      "DatabaseName": {
        "type": "string",
        "description": "The name of the Cosmos DB database against which this request"
      },
      "DurationMs": {
        "type": "real",
        "description": "The server-side execution time (in ms) for this request."
      },
      "ErrorCode": {
        "type": "string",
        "description": "The error code (if applicable) for this request."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the Gremlin operation that was executed."
      },
      "PIICommandText": {
        "type": "string",
        "description": "Full query with parameters (if opted in) for this request."
      },
      "RateLimitingDelayMs": {
        "type": "real",
        "description": "The estimated time (in ms) spent retrying due to rate limited"
      },
      "RegionName": {
        "type": "string",
        "description": "The region against which this request was issued."
      },
      "RequestCharge": {
        "type": "real",
        "description": "The RUs (Request Units) consumed by this operation."
      },
      "RequestLength": {
        "type": "real",
        "description": "The payload size (in bytes) of the request."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "ResponseLength": {
        "type": "real",
        "description": "The payload size (in bytes) of the server response."
      },
      "RetriedDueToRateLimiting": {
        "type": "bool",
        "description": "Boolean flag indicating if this request was retried server side due"
      },
      "RetryCount": {
        "type": "int",
        "description": "The number of server side retries issued for this request."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (in UTC) when this Graph API operation was executed"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The user agent suffix of the client issuing the request."
      }
    }
  },
  "CDBMongoRequests": {
    "tableName": "CDBMongoRequests",
    "description": "This table details data plane operations, specifically for Mongo API accounts.",
    "columns": {
      "AccountName": {
        "type": "string",
        "description": "The name of the Cosmos DB account against which this Mongo"
      },
      "ActivityId": {
        "type": "string",
        "description": "The unique identifier (GUID) for this Mongo API request."
      },
      "Address": {
        "type": "string",
        "description": "The IP address of the client VM which issued the request."
      },
      "AuthorizationTokenType": {
        "type": "string",
        "description": "The authorization token used for this request."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CollectionName": {
        "type": "string",
        "description": "The name of the Cosmos DB container against which this request"
      },
      "DatabaseName": {
        "type": "string",
        "description": "The name of the Cosmos DB database against which this request"
      },
      "DurationMs": {
        "type": "real",
        "description": "The server-side execution time (in ms) for this request."
      },
      "ErrorCode": {
        "type": "string",
        "description": "The error code (if applicable) for this request."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "OpCode": {
        "type": "string",
        "description": "The operation code for the Mongo API request."
      },
      "OperationName": {
        "type": "string",
        "description": "The Mongo API operation that was executed"
      },
      "PIICommandText": {
        "type": "string",
        "description": "Full text query (if opted in) for this Mongo API request."
      },
      "RateLimitingDelayMs": {
        "type": "real",
        "description": "The estimated time (in ms) spent retrying due to rate limited"
      },
      "RegionName": {
        "type": "string",
        "description": "The region against which this request was issued."
      },
      "RequestCharge": {
        "type": "real",
        "description": "The RU (Request Unit) consumption for this request."
      },
      "RequestLength": {
        "type": "real",
        "description": "The payload size (in bytes) of the request."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "ResponseLength": {
        "type": "real",
        "description": "The payload size (in bytes) of the server response."
      },
      "RetriedDueToRateLimiting": {
        "type": "bool",
        "description": "Boolean flag indicating if this request was retried server side due"
      },
      "RetryCount": {
        "type": "int",
        "description": "The number of server side retries executed for this request."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (in UTC) of the Mongo API data plane request."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The user agent suffix associated with the client issuing the"
      },
      "UserId": {
        "type": "string",
        "description": "The user ID associated with the client issuing the request."
      }
    }
  },
  "CDBPartitionKeyRUConsumption": {
    "tableName": "CDBPartitionKeyRUConsumption",
    "description": "This table details the RU (Request Unit) consumption for logical partition keys in each region, within each of their physical partitions. This data can be used to identify hot partitions from a request volume perspective.",
    "columns": {
      "AccountName": {
        "type": "string",
        "description": "The name of the Cosmos DB account containing the physical partition."
      },
      "ActivityId": {
        "type": "string",
        "description": "The unique identifier (GUID) which can be correlated with the"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CollectionName": {
        "type": "string",
        "description": "The name of the Cosmos DB collection, which contains the partition."
      },
      "DatabaseName": {
        "type": "string",
        "description": "The name of the Cosmos DB database, which contains the partition."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "OperationName": {
        "type": "string",
        "description": "The data plane operation that consumed RUs (Request Units) for this"
      },
      "PartitionKey": {
        "type": "string",
        "description": "The logical partition key for which RU (Request Unit) consumption"
      },
      "PartitionKeyRangeId": {
        "type": "string",
        "description": "The physical partition containing the logical partition key against which"
      },
      "RegionName": {
        "type": "string",
        "description": "The Azure region from which statistics for this partition were retrieved."
      },
      "RequestCharge": {
        "type": "real",
        "description": "The RUs (Request Units) consumed by this request."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (in UTC) when the request against the physical partition was"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "CDBPartitionKeyStatistics": {
    "tableName": "CDBPartitionKeyStatistics",
    "description": "This table provides outlier logical partition keys that have consumed more storage space than others. Statistics are based on a sub-sampling of partition keys within the collection and hence these are approximate. Partition keys that are below 1GB of storage may not show up in the reported statistics.",
    "columns": {
      "AccountName": {
        "type": "string",
        "description": "The name of the Cosmos DB account containing the dataset for which"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CollectionName": {
        "type": "string",
        "description": "The name of the Cosmos DB collection, which contains the partition."
      },
      "DatabaseName": {
        "type": "string",
        "description": "The name of the Cosmos DB database, which contains the partition."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "PartitionKey": {
        "type": "string",
        "description": "The logical partition key for which storage statistics were retrieved."
      },
      "RegionName": {
        "type": "string",
        "description": "The Azure region from which statistics for this partition were retrieved."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SizeKb": {
        "type": "int",
        "description": "The storage size (in KB) for the logical partition key within the physical"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (in UTC) when statistics for this logical partition key were"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "CDBQueryRuntimeStatistics": {
    "tableName": "CDBQueryRuntimeStatistics",
    "description": "This table details query operations executed against a SQL API account. By default, the query text and its parameters are obfuscated to avoid logging PII data with full text query logging available by request.",
    "columns": {
      "AccountName": {
        "type": "string",
        "description": "The name of the Cosmos DB account against which the query"
      },
      "ActivityId": {
        "type": "string",
        "description": "The unique identifier (GUID) for this query operation, which can be"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CollectionName": {
        "type": "string",
        "description": "The name of the Cosmos DB container against which this query was"
      },
      "DatabaseName": {
        "type": "string",
        "description": "The name of the Cosmos DB database containing the Cosmos DB"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "PartitionKeyRangeId": {
        "type": "string",
        "description": "The physical partition to which this query was issued."
      },
      "QueryText": {
        "type": "string",
        "description": "The query text (obfuscated by default, full query string provided upon"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (in UTC) when this query operation was executed."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "CDBTableApiRequests": {
    "tableName": "CDBTableApiRequests",
    "description": "This table details data plane operations, specifically for Table API accounts.",
    "columns": {
      "AccountName": {
        "type": "string",
        "description": "The name of the Cosmos DB account against which this request"
      },
      "ActivityId": {
        "type": "string",
        "description": "The unique identifier (GUID) for this Table API request."
      },
      "Address": {
        "type": "string",
        "description": "The IP address of the client that issued this request."
      },
      "AuthorizationTokenType": {
        "type": "string",
        "description": "The authorization token used for this request."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClientRequestId": {
        "type": "string",
        "description": "The unique client request identifier (GUID) for this Table API"
      },
      "DurationMs": {
        "type": "real",
        "description": "The server side execution time (in ms) for this request."
      },
      "ErrorCode": {
        "type": "string",
        "description": "The error code (if applicable) for this request."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "OperationName": {
        "type": "string",
        "description": "The Table API operation that was executed."
      },
      "PIICommandText": {
        "type": "string",
        "description": "Full query text with parameters (if opted in) for this request."
      },
      "RegionName": {
        "type": "string",
        "description": "The region against which this request was issued."
      },
      "RequestCharge": {
        "type": "real",
        "description": "The RU (Request Unit) consumption for this request."
      },
      "RequestLength": {
        "type": "real",
        "description": "The payload size (in bytes) of the request."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "ResponseLength": {
        "type": "real",
        "description": "The payload size (in bytes) of the server response."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TableName": {
        "type": "string",
        "description": "The name of the Cosmos DB table against which this request was"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (in UTC) of the Table API data plane request."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The user agent suffix of the client issuing the request."
      }
    }
  },
  "CIEventsAudit": {
    "tableName": "CIEventsAudit",
    "description": "All API requests in the context of the Customer Insights instance, for example all user actions while configuring and using the instance. POST|PUT|DELETE|PATCH operations go into this category.",
    "columns": {
      "Audience": {
        "type": "string",
        "description": "The audience for which the accessToken was requested for."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CallerIPAddress": {
        "type": "string",
        "description": "Caller IP address, if the operation corresponds to an API call that would"
      },
      "CallerObjectId": {
        "type": "string",
        "description": "Azure Active Directory ObjectId of the caller."
      },
      "Category": {
        "type": "string",
        "description": "Log category of the event. Either Operational or Audit. All"
      },
      "Claims": {
        "type": "string",
        "description": "Claims of the user or app JSON web token (JWT). Claim properties vary"
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID for the correlated events. Can be used to identify correlated"
      },
      "DurationMs": {
        "type": "long",
        "description": "Duration of the operation in milliseconds."
      },
      "EventType": {
        "type": "string",
        "description": "Always ApiEvent, marking the log event as API event."
      },
      "InstanceId": {
        "type": "string",
        "description": "Customer Insights instanceId."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Level": {
        "type": "string",
        "description": "Severity level of the event, is one of: Informational, Warning, Error, or"
      },
      "Method": {
        "type": "string",
        "description": "HTTP method: GET/POST/PUT/PATCH/HEAD"
      },
      "OperationName": {
        "type": "string",
        "description": "Name of the operation represented by this event."
      },
      "OperationStatus": {
        "type": "string",
        "description": "Success for HTTP status code < 400, ClientError for HTTP status code <"
      },
      "Origin": {
        "type": "string",
        "description": "URI indicating where a fetch originates from or unknown."
      },
      "Path": {
        "type": "string",
        "description": "Relative path of the request."
      },
      "RequiredRoles": {
        "type": "string",
        "description": "Required roles to do the operation. Admin role is allowed to do all"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultSignature": {
        "type": "string",
        "description": "Sub status of the event. If the operation corresponds to a REST API call,"
      },
      "ResultType": {
        "type": "string",
        "description": "Status of the event. Running, Skipped, Successful, Failure."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "Uri": {
        "type": "string",
        "description": "Absolute request URI."
      },
      "UserAgent": {
        "type": "string",
        "description": "Browser agent sending the request or unknown."
      },
      "UserPrincipalName": {
        "type": "string",
        "description": "The UserPrincipalName is the Azure AD username for the user accounts."
      },
      "UserRole": {
        "type": "string",
        "description": "Assigned role for the user or app."
      }
    }
  },
  "CIEventsOperational": {
    "tableName": "CIEventsOperational",
    "description": "Events generated using the service, for example GET requests or the execution events of a workflow.",
    "columns": {
      "AdditionalInformation": {
        "type": "string",
        "description": "Contains AffectedEntities, MessageCode and entityCount."
      },
      "Audience": {
        "type": "string",
        "description": "The audience for which the accessToken was requested for."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CallerIPAddress": {
        "type": "string",
        "description": "Caller IP address, if the operation corresponds to an API call that"
      },
      "CallerObjectId": {
        "type": "string",
        "description": "Azure Active Directory ObjectId of the caller."
      },
      "Category": {
        "type": "string",
        "description": "Log category of the event. Either Operational or Audit. All"
      },
      "Claims": {
        "type": "string",
        "description": "Claims of the user or app JSON web token (JWT). Claim properties"
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID for the correlated events. Can be used to identify"
      },
      "DurationMs": {
        "type": "long",
        "description": "Duration of the operation in milliseconds."
      },
      "EndTime": {
        "type": "datetime",
        "description": "Specifies the date and time that the workflow job ended (UTC)"
      },
      "Error": {
        "type": "string",
        "description": "Error Message with more details."
      },
      "EventType": {
        "type": "string",
        "description": "The type of the event. Either ApiEvent or WorkflowEvent"
      },
      "FriendlyName": {
        "type": "string",
        "description": "User friendly Name of the Export or the Entity which is processed."
      },
      "Identifier": {
        "type": "string",
        "description": "Depending on the OperationType in can be: the guid of the export"
      },
      "InstanceId": {
        "type": "string",
        "description": "Customer Insights instance ID."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Level": {
        "type": "string",
        "description": "Severity level of the event, is one of: Informational, Warning or"
      },
      "Method": {
        "type": "string",
        "description": "HTTP method: GET/POST/PUT/PATCH/HEAD"
      },
      "OperationName": {
        "type": "string",
        "description": "Name of the operation represented by this event."
      },
      "OperationStatus": {
        "type": "string",
        "description": "Success for HTTP Status code < 400, ClientError for HTTP Status"
      },
      "OperationType": {
        "type": "string",
        "description": "Identifier of the operation."
      },
      "Origin": {
        "type": "string",
        "description": "URI indicating where a fetch originates from or unknown."
      },
      "Path": {
        "type": "string",
        "description": "Relative path of the request."
      },
      "RequiredRoles": {
        "type": "string",
        "description": "Required roles to do the operation. Admin role is allowed to do all"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "ResultSignature": {
        "type": "string",
        "description": "Sub status of the event. If the operation corresponds to a REST"
      },
      "ResultType": {
        "type": "string",
        "description": "Status of the event. Running, Skipped, Successful, Failure."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "StartTime": {
        "type": "datetime",
        "description": "Specifies the date and time that the workflow job was started"
      },
      "SubmittedBy": {
        "type": "string",
        "description": "Workflow events only. The Azure Active Directory objectId of the"
      },
      "SubmittedTime": {
        "type": "datetime",
        "description": "Specifies the date and time that the workflow job was submitted"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TasksCount": {
        "type": "int",
        "description": "Workflow only. Number of tasks the Workflow triggers."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp of the event (UTC)."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "Uri": {
        "type": "string",
        "description": "Absolute request URI."
      },
      "UserAgent": {
        "type": "string",
        "description": "Browser agent sending the request or unknown."
      },
      "UserPrincipalName": {
        "type": "string",
        "description": "The UserPrincipalName is the Azure AD username for the user"
      },
      "UserRole": {
        "type": "string",
        "description": "Assigned role for the user or app."
      },
      "WorkflowJobId": {
        "type": "string",
        "description": "Identifier of the workflow run. All Workflow and Tasks events"
      },
      "WorkflowStatus": {
        "type": "string",
        "description": "Running, Successful."
      },
      "WorkflowSubmissionKind": {
        "type": "string",
        "description": "OnDemand or Scheduled."
      },
      "WorkflowType": {
        "type": "string",
        "description": "Full or incremental refresh."
      }
    }
  },
  "CampaignInfo": {
    "tableName": "CampaignInfo",
    "description": "This table shows information about campaigns identified by Microsoft Defender for Office 365.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CampaignId": {
        "type": "string",
        "description": "Unique identifier for the campaign, generated by Office 365."
      },
      "CampaignName": {
        "type": "string",
        "description": "Name of the email campaign."
      },
      "CampaignSubType": {
        "type": "string",
        "description": "Contains more details about the campaign, like the brand being"
      },
      "CampaignType": {
        "type": "string",
        "description": "Category of the campaign."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "NetworkMessageId": {
        "type": "string",
        "description": "Unique identifier for the email, generated by Office 365."
      },
      "RecipientEmailAddress": {
        "type": "string",
        "description": "Email address of the recipient, or email address of the recipient after"
      },
      "ReportId": {
        "type": "string",
        "description": "Unique identifier for the event."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time (UTC) when the record was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "CassandraAudit": {
    "tableName": "CassandraAudit",
    "description": "Detailed audit records for CQL operations and login attempts.",
    "columns": {
      "BatchId": {
        "type": "string",
        "description": "Internal identifier shared by all statements in a batch operation."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClientIP": {
        "type": "string",
        "description": "Client IP address."
      },
      "ClientPort": {
        "type": "string",
        "description": "Client port."
      },
      "ClusterName": {
        "type": "string",
        "description": "Cluster name."
      },
      "CoordinatorIP": {
        "type": "string",
        "description": "Host address of the coordinator node."
      },
      "ExternalUserId": {
        "type": "string",
        "description": "External user identity."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Operation": {
        "type": "string",
        "description": "The CQL statement or a textual description of the operation."
      },
      "OperationNaked": {
        "type": "string",
        "description": "The CQL statement or a textual description of the operation, without"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "Status": {
        "type": "string",
        "description": "Value is either ATTEMPT or FAILED."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time the record was created."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "User": {
        "type": "string",
        "description": "Username of the authenticated user."
      }
    }
  },
  "CassandraLogs": {
    "tableName": "CassandraLogs",
    "description": "Cassandra general logging messages (system.log).",
    "columns": {
      "AddressIp": {
        "type": "string",
        "description": "IP address of the node that generated the logging event."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CassandraKey": {
        "type": "string",
        "description": "Cassandra key."
      },
      "CassandraKeyspace": {
        "type": "string",
        "description": "Cassandra keyspace."
      },
      "CassandraTable": {
        "type": "string",
        "description": "Cassandra table."
      },
      "ClusterName": {
        "type": "string",
        "description": "Cluster name."
      },
      "CodeCacheAfter": {
        "type": "long",
        "description": "Code cache after garbage collection (in bytes). Code cache"
      },
      "CodeCacheBefore": {
        "type": "long",
        "description": "Code cache before garbage collection (in bytes). Code cache"
      },
      "Collections": {
        "type": "int",
        "description": "The number of garbage collections."
      },
      "CompressedClassSpaceAfter": {
        "type": "long",
        "description": "Compressed class space after garbage collection (in bytes)."
      },
      "CompressedClassSpaceBefore": {
        "type": "long",
        "description": "Compressed class space before garbage collection (in bytes)."
      },
      "DeletionInfo": {
        "type": "string",
        "description": "Deletion info."
      },
      "DroppedCrossNodeTimeout": {
        "type": "int",
        "description": "The number of messages dropped due to cross node timeout"
      },
      "DroppedInternalTimeout": {
        "type": "int",
        "description": "The number of messages dropped due to internal timeout in"
      },
      "DroppedMessages": {
        "type": "int",
        "description": "The number of messages dropped in last 5000ms."
      },
      "DroppedMessagesType": {
        "type": "string",
        "description": "The type of messages dropped in last 5000ms."
      },
      "DurationMs": {
        "type": "int",
        "description": "Duration."
      },
      "EdenSpaceAfter": {
        "type": "long",
        "description": "Eden space after garbage collection (in bytes). Eden space is"
      },
      "EdenSpaceBefore": {
        "type": "long",
        "description": "Eden space before garbage collection (in bytes). Eden space is"
      },
      "Endpoint": {
        "type": "string",
        "description": "IP address of an endpoint."
      },
      "EventCategory": {
        "type": "string",
        "description": "Category of the logging event, e.g. startup,"
      },
      "EventProduct": {
        "type": "string",
        "description": "Product of the logging event, e.g. cassandra, dse, solr."
      },
      "EventType": {
        "type": "string",
        "description": "type of the logging event, e.g. commit_log_replay_skipped,"
      },
      "Exception": {
        "type": "string",
        "description": "Throwable trace bound to the logging event, by default this"
      },
      "GCType": {
        "type": "string",
        "description": "The type of garbage collection, e.g. ParNew,"
      },
      "HostId": {
        "type": "string",
        "description": "The GUID assigned in the Cassandra cluster to uniquely"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "Level": {
        "type": "string",
        "description": "Severity level of the event, will be one of INFO, WARM,"
      },
      "LiveCells": {
        "type": "int",
        "description": "The number of live cells."
      },
      "MaxMemory": {
        "type": "long",
        "description": "The maximum amount of memory (in bytes) that can be used"
      },
      "Message": {
        "type": "string",
        "description": "Application supplied message associated with the logging"
      },
      "MetaspaceAfter": {
        "type": "long",
        "description": "Metaspace after garbage collection (in bytes). Metaspace"
      },
      "MetaspaceBefore": {
        "type": "long",
        "description": "Metaspace before garbage collection (in bytes). Metaspace"
      },
      "OldGenAfter": {
        "type": "long",
        "description": "Old Generation after garbage collection (in bytes). Old"
      },
      "OldGenBefore": {
        "type": "long",
        "description": "Old Generation before garbage collection (in bytes). Old"
      },
      "PartitionKey": {
        "type": "string",
        "description": "Partition key."
      },
      "PartitionSize": {
        "type": "int",
        "description": "Partition size."
      },
      "PendingTasks": {
        "type": "int",
        "description": "The number of pending tasks in gossip stage."
      },
      "PercentFull": {
        "type": "real",
        "description": "The percentage of full heap."
      },
      "PermGenAfter": {
        "type": "long",
        "description": "Permanent Generation space after garbage collection (in"
      },
      "PermGenBefore": {
        "type": "long",
        "description": "Permanent Generation space before garbage collection (in"
      },
      "RequestedColumns": {
        "type": "int",
        "description": "The number of columns requested."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "SessionId": {
        "type": "string",
        "description": "Unique string identifying what query was running when this"
      },
      "SliceEnd": {
        "type": "string",
        "description": "The end of the the column slice inclusive."
      },
      "SliceStart": {
        "type": "string",
        "description": "The start of the column slice inclusive."
      },
      "SourceFile": {
        "type": "string",
        "description": "File name where the logging request was issued."
      },
      "SourceLine": {
        "type": "int",
        "description": "Line number where the logging request was issued."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "SSTableName": {
        "type": "string",
        "description": "SSTable name."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "SurvivorSpaceAfter": {
        "type": "long",
        "description": "Survivor space after garbage collection (in bytes). Survivor"
      },
      "SurvivorSpaceBefore": {
        "type": "long",
        "description": "Survivor space before garbage collection (in bytes). Survivor"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "ThreadId": {
        "type": "string",
        "description": "ID of the thread that generated the logging event."
      },
      "ThreadName": {
        "type": "string",
        "description": "Name of the thread that generated the logging event."
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time the record was created."
      },
      "TombstonedCells": {
        "type": "int",
        "description": "The number of tombstoned cells."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UsedMemory": {
        "type": "long",
        "description": "The amount of memory currently used (in bytes)."
      }
    }
  },
  "ChaosStudioExperimentEventLogs": {
    "tableName": "ChaosStudioExperimentEventLogs",
    "description": "Chao Studio Experiment Orchestration events. Displays Start/Stop events of each Step/Branch/Action in experiment runs.",
    "columns": {
      "Action": {
        "type": "string",
        "description": "Fault name of the action."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Branch": {
        "type": "string",
        "description": "Experiment Branch ID of the span."
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID for the Experiment run."
      },
      "Error": {
        "type": "string",
        "description": "Error detail of the span."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Location": {
        "type": "string",
        "description": "The location of the experiment."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with event."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SeverityLevel": {
        "type": "string",
        "description": "Severity level of the event, one of: Informational, Warning, Error, Critical."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "SpanType": {
        "type": "string",
        "description": "One of experiment span types: Experiment, Branch, Step, or Action."
      },
      "Status": {
        "type": "string",
        "description": "Status of the span. For SpanType of Step or Branch, status is one of Started"
      },
      "Step": {
        "type": "string",
        "description": "Experiment Step ID of the span."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "Target": {
        "type": "string",
        "description": "Target resource ID of the fault."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the event was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "CloudAppEvents": {
    "tableName": "CloudAppEvents",
    "description": "Information about activities in various cloud apps and services covered by Microsoft Cloud App Security.",
    "columns": {
      "AccountDisplayName": {
        "type": "string",
        "description": "Name displayed in the address book entry for the account user. This is"
      },
      "AccountId": {
        "type": "string",
        "description": "An identifier for the account as found by Microsoft Cloud App"
      },
      "AccountObjectId": {
        "type": "string",
        "description": "Unique identifier for the account in Azure AD"
      },
      "AccountType": {
        "type": "string",
        "description": "Type of user account, indicating its general role and access levels, such"
      },
      "ActionType": {
        "type": "string",
        "description": "Type of activity that triggered the event"
      },
      "ActivityObjects": {
        "type": "dynamic",
        "description": "List of objects, such as files or folders, that were involved in the"
      },
      "ActivityType": {
        "type": "string",
        "description": "Type of activity that triggered the event"
      },
      "AdditionalFields": {
        "type": "dynamic",
        "description": "Additional information about the entity or event"
      },
      "AppInstanceId": {
        "type": "int",
        "description": "Unique identifier for the instance of an application"
      },
      "Application": {
        "type": "string",
        "description": "Application that performed the recorded action"
      },
      "ApplicationId": {
        "type": "int",
        "description": "Unique identifier for the application"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "City": {
        "type": "string",
        "description": "City where the client IP address is geolocated"
      },
      "CountryCode": {
        "type": "string",
        "description": "Two-letter code indicating the country where the client IP address is"
      },
      "DeviceType": {
        "type": "string",
        "description": "Type of device based on purpose and functionality, such as network"
      },
      "IPAddress": {
        "type": "string",
        "description": "IP address assigned to the device during communication"
      },
      "IPCategory": {
        "type": "string",
        "description": "Additional information about the IP address"
      },
      "IPTags": {
        "type": "dynamic",
        "description": "Customer-defined information applied to specific IP addresses and IP"
      },
      "IsAdminOperation": {
        "type": "bool",
        "description": "Indicates whether the activity was performed by an administrator"
      },
      "IsAnonymousProxy": {
        "type": "bool",
        "description": "Indicates whether the IP address belongs to a known anonymous"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "IsExternalUser": {
        "type": "bool",
        "description": "Indicates whether a user inside the network doesn't belong to the"
      },
      "IsImpersonated": {
        "type": "bool",
        "description": "Indicates whether the activity was performed by one user for another"
      },
      "ISP": {
        "type": "string",
        "description": "Internet service provider associated with the IP address"
      },
      "ObjectId": {
        "type": "string",
        "description": "Unique identifier of the object that the recorded action was applied to"
      },
      "ObjectName": {
        "type": "string",
        "description": "Name of the object that the recorded action was applied to"
      },
      "ObjectType": {
        "type": "string",
        "description": "The type of object, such as a file or a folder, that the recorded action"
      },
      "OSPlatform": {
        "type": "string",
        "description": "Platform of the operating system running on the device. This indicates"
      },
      "RawEventData": {
        "type": "dynamic",
        "description": "Raw event information from the source application or service in JSON"
      },
      "ReportId": {
        "type": "string",
        "description": "Unique identifier for the event"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time (UTC) when the record was generated"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "User agent information from the web browser or other client"
      },
      "UserAgentTags": {
        "type": "dynamic",
        "description": "More information provided by Microsoft Defender for Cloud Apps in a"
      }
    }
  },
  "CloudHsmServiceOperationAuditLogs": {
    "tableName": "CloudHsmServiceOperationAuditLogs",
    "description": "This table contains HSM Commands send to your Azure Cloud HSM resource's HSM partitions. These logs capture all HSM operations performed by Customer over E2E channel on each HSM partition of that Cloud HSM resource. They can be used to monitor events and configure necessary alerts on your Cloud HSM resource.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CallerIpAddress": {
        "type": "string",
        "description": "IP address of the client that made the request."
      },
      "ClientInfo": {
        "type": "string",
        "description": "User agent information."
      },
      "ClientSdkPackageVersion": {
        "type": "string",
        "description": "Version of the client SDK package."
      },
      "DurationMs": {
        "type": "int",
        "description": "Time it took to service the request, in milliseconds. This does not"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "MemberId": {
        "type": "string",
        "description": "Member ID of HSM in the Cloud HSM cluster."
      },
      "Opcode": {
        "type": "string",
        "description": "Operation code in HEX string format."
      },
      "OperationName": {
        "type": "string",
        "description": "Name of the operation"
      },
      "PoolType": {
        "type": "string",
        "description": "Cloud HSM pool type."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "ResultDescription": {
        "type": "string",
        "description": "More detailed description of the result."
      },
      "ResultSignature": {
        "type": "string",
        "description": "Short signature of the result."
      },
      "ResultType": {
        "type": "string",
        "description": "Result of the request."
      },
      "Sku": {
        "type": "dynamic",
        "description": "Information about the Cloud HSM SKU including family and name."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (UTC) when operation occured."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "CommonSecurityLog": {
    "tableName": "CommonSecurityLog",
    "description": "This table is for collecting events in the Common Event Format, that are most often sent from different security appliances such as Check Point, Palo Alto and more.",
    "columns": {
      "Activity": {
        "type": "string",
        "description": "A string that represents a human-readable and"
      },
      "AdditionalExtensions": {
        "type": "string",
        "description": "A placeholder for additional fields. Fields are logged as"
      },
      "ApplicationProtocol": {
        "type": "string",
        "description": "The protocol used in the application, such as HTTP,"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CollectorHostName": {
        "type": "string",
        "description": "The hostname of the collector machine running the"
      },
      "CommunicationDirection": {
        "type": "string",
        "description": "Any information about the direction the observed"
      },
      "Computer": {
        "type": "string",
        "description": "Host, from Syslog."
      },
      "DestinationDnsDomain": {
        "type": "string",
        "description": "The DNS part of the fully-qualified domain name (FQDN)."
      },
      "DestinationHostName": {
        "type": "string",
        "description": "The destination that the event refers to in an IP network."
      },
      "DestinationIP": {
        "type": "string",
        "description": "The destination IpV4 address that the event refers to in"
      },
      "DestinationMACAddress": {
        "type": "string",
        "description": "The destination MAC address (FQDN)."
      },
      "DestinationNTDomain": {
        "type": "string",
        "description": "The Windows domain name of the destination address."
      },
      "DestinationPort": {
        "type": "int",
        "description": "Destination port. Valid values: 0 - 65535."
      },
      "DestinationProcessId": {
        "type": "int",
        "description": "The ID of the destination process associated with the"
      },
      "DestinationProcessName": {
        "type": "string",
        "description": "The name of the event's destination process, such as"
      },
      "DestinationServiceName": {
        "type": "string",
        "description": "The service that is targeted by the event. For example:"
      },
      "DestinationTranslatedAddress": {
        "type": "string",
        "description": "Identifies the translated destination referred to by the"
      },
      "DestinationTranslatedPort": {
        "type": "int",
        "description": "Port after translation, such as a firewall Valid port"
      },
      "DestinationUserID": {
        "type": "string",
        "description": "Identifies the destination user by ID. For example: in Unix,"
      },
      "DestinationUserName": {
        "type": "string",
        "description": "Identifies the destination user by name."
      },
      "DestinationUserPrivileges": {
        "type": "string",
        "description": "Defines the destination use's privileges. Valid values:"
      },
      "DeviceAction": {
        "type": "string",
        "description": "The action mentioned in the event."
      },
      "DeviceAddress": {
        "type": "string",
        "description": "The IPv4 address of the device generating the event."
      },
      "DeviceCustomDate1": {
        "type": "string",
        "description": "One of two timestamp fields available to map fields that"
      },
      "DeviceCustomDate1Label": {
        "type": "string",
        "description": "All custom fields have a corresponding label field. Each of"
      },
      "DeviceCustomDate2": {
        "type": "string",
        "description": "One of two timestamp fields available to map fields that"
      },
      "DeviceCustomDate2Label": {
        "type": "string",
        "description": "All custom fields have a corresponding label field. Each of"
      },
      "DeviceCustomFloatingPoint1": {
        "type": "real",
        "description": "One of four floating point fields available to map fields"
      },
      "DeviceCustomFloatingPoint1Label": {
        "type": "string",
        "description": "All custom fields have a corresponding label field. Each of"
      },
      "DeviceCustomFloatingPoint2": {
        "type": "real",
        "description": "One of four floating point fields available to map fields"
      },
      "DeviceCustomFloatingPoint2Label": {
        "type": "string",
        "description": "All custom fields have a corresponding label field. Each of"
      },
      "DeviceCustomFloatingPoint3": {
        "type": "real",
        "description": "One of four floating point fields available to map fields"
      },
      "DeviceCustomFloatingPoint3Label": {
        "type": "string",
        "description": "All custom fields have a corresponding label field. Each of"
      },
      "DeviceCustomFloatingPoint4": {
        "type": "real",
        "description": "One of four floating point fields available to map fields"
      },
      "DeviceCustomFloatingPoint4Label": {
        "type": "string",
        "description": "All custom fields have a corresponding label field. Each of"
      },
      "DeviceCustomIPv6Address1": {
        "type": "string",
        "description": "One of four IPv6 address fields available to map fields"
      },
      "DeviceCustomIPv6Address1Label": {
        "type": "string",
        "description": "All custom fields have a corresponding label field. Each of"
      },
      "DeviceCustomIPv6Address2": {
        "type": "string",
        "description": "One of four IPv6 address fields available to map fields"
      },
      "DeviceCustomIPv6Address2Label": {
        "type": "string",
        "description": "All custom fields have a corresponding label field. Each of"
      },
      "DeviceCustomIPv6Address3": {
        "type": "string",
        "description": "One of four IPv6 address fields available to map fields"
      },
      "DeviceCustomIPv6Address3Label": {
        "type": "string",
        "description": "All custom fields have a corresponding label field. Each of"
      },
      "DeviceCustomIPv6Address4": {
        "type": "string",
        "description": "One of four IPv6 address fields available to map fields"
      },
      "DeviceCustomIPv6Address4Label": {
        "type": "string",
        "description": "All custom fields have a corresponding label field. Each of"
      },
      "DeviceCustomNumber1": {
        "type": "int",
        "description": "Soon to be a deprecated field. Will be replaced by"
      },
      "DeviceCustomNumber1Label": {
        "type": "string",
        "description": "All custom fields have a corresponding label field. Each of"
      },
      "DeviceCustomNumber2": {
        "type": "int",
        "description": "Soon to be a deprecated field. Will be replaced by"
      },
      "DeviceCustomNumber2Label": {
        "type": "string",
        "description": "All custom fields have a corresponding label field. Each of"
      },
      "DeviceCustomNumber3": {
        "type": "int",
        "description": "Soon to be a deprecated field. Will be replaced by"
      },
      "DeviceCustomNumber3Label": {
        "type": "string",
        "description": "All custom fields have a corresponding label field. Each of"
      },
      "DeviceCustomString1": {
        "type": "string",
        "description": "One of six strings available to map fields that do not"
      },
      "DeviceCustomString1Label": {
        "type": "string",
        "description": "All custom fields have a corresponding label field. Each of"
      },
      "DeviceCustomString2": {
        "type": "string",
        "description": "One of six strings available to map fields that do not"
      },
      "DeviceCustomString2Label": {
        "type": "string",
        "description": "All custom fields have a corresponding label field. Each of"
      },
      "DeviceCustomString3": {
        "type": "string",
        "description": "One of six strings available to map fields that do not"
      },
      "DeviceCustomString3Label": {
        "type": "string",
        "description": "All custom fields have a corresponding label field. Each of"
      },
      "DeviceCustomString4": {
        "type": "string",
        "description": "One of six strings available to map fields that do not"
      },
      "DeviceCustomString4Label": {
        "type": "string",
        "description": "All custom fields have a corresponding label field. Each of"
      },
      "DeviceCustomString5": {
        "type": "string",
        "description": "One of six strings available to map fields that do not"
      },
      "DeviceCustomString5Label": {
        "type": "string",
        "description": "All custom fields have a corresponding label field. Each of"
      },
      "DeviceCustomString6": {
        "type": "string",
        "description": "One of six strings available to map fields that do not"
      },
      "DeviceCustomString6Label": {
        "type": "string",
        "description": "All custom fields have a corresponding label field. Each of"
      },
      "DeviceDnsDomain": {
        "type": "string",
        "description": "The DNS domain part of the full qualified domain name"
      },
      "DeviceEventCategory": {
        "type": "string",
        "description": "Represents the category assigned by the originating"
      },
      "DeviceEventClassID": {
        "type": "string",
        "description": "String or integer that serves as a unique identifier per"
      },
      "DeviceExternalID": {
        "type": "string",
        "description": "A name that uniquely identifies the device generating the"
      },
      "DeviceFacility": {
        "type": "string",
        "description": "The facility generating the event. For example: auth or"
      },
      "DeviceInboundInterface": {
        "type": "string",
        "description": "The interface on which the packet or data entered the"
      },
      "DeviceMacAddress": {
        "type": "string",
        "description": "The MAC address of the device generating the event."
      },
      "DeviceName": {
        "type": "string",
        "description": "The FQDN associated with the device node, when a node"
      },
      "DeviceNtDomain": {
        "type": "string",
        "description": "The Windows domain of the device address."
      },
      "DeviceOutboundInterface": {
        "type": "string",
        "description": "Interface on which the packet or data left the device."
      },
      "DevicePayloadId": {
        "type": "string",
        "description": "Unique identifier for the payload associated with the"
      },
      "DeviceProduct": {
        "type": "string",
        "description": "String that together with device product and version"
      },
      "DeviceTimeZone": {
        "type": "string",
        "description": "Timezone of the device generating the event."
      },
      "DeviceTranslatedAddress": {
        "type": "string",
        "description": "Identifies the translated device address that the event"
      },
      "DeviceVendor": {
        "type": "string",
        "description": "String that together with device product and version"
      },
      "DeviceVersion": {
        "type": "string",
        "description": "String that together with device product and version"
      },
      "EndTime": {
        "type": "datetime",
        "description": "The time at which the activity related to the event ended."
      },
      "EventCount": {
        "type": "int",
        "description": "A count associated with the event, showing how many"
      },
      "EventOutcome": {
        "type": "string",
        "description": "Displays the outcome, usually as 'success' or 'failure'."
      },
      "EventType": {
        "type": "int",
        "description": "Event type. Value values include: 0: base event, 1:"
      },
      "ExternalID": {
        "type": "int",
        "description": "Soon to be a deprecated field. Will be replaced by ExtID."
      },
      "ExtID": {
        "type": "string",
        "description": "An ID used by the originating device (will replace legacy"
      },
      "FieldDeviceCustomNumber1": {
        "type": "long",
        "description": "One of three number fields available to map fields that"
      },
      "FieldDeviceCustomNumber2": {
        "type": "long",
        "description": "One of three number fields available to map fields that"
      },
      "FieldDeviceCustomNumber3": {
        "type": "long",
        "description": "One of three number fields available to map fields that"
      },
      "FileCreateTime": {
        "type": "string",
        "description": "Time when the file was created."
      },
      "FileHash": {
        "type": "string",
        "description": "Hash of a file."
      },
      "FileID": {
        "type": "string",
        "description": "An ID associated with a file, such as the inode."
      },
      "FileModificationTime": {
        "type": "string",
        "description": "Time when the file was last modified."
      },
      "FileName": {
        "type": "string",
        "description": "The file's name, without the path."
      },
      "FilePath": {
        "type": "string",
        "description": "Full path to the file, including the filename. For example:"
      },
      "FilePermission": {
        "type": "string",
        "description": "The file's permissions. For example: '2,1,1'."
      },
      "FileSize": {
        "type": "int",
        "description": "The size of the file in bytes."
      },
      "FileType": {
        "type": "string",
        "description": "File type, such as pipe, socket, and so on."
      },
      "FlexDate1": {
        "type": "string",
        "description": "A timestamp field available to map a timestamp that"
      },
      "FlexDate1Label": {
        "type": "string",
        "description": "The label field is a string and describes the purpose of the"
      },
      "FlexNumber1": {
        "type": "int",
        "description": "Number fields available to map Int data that does not"
      },
      "FlexNumber1Label": {
        "type": "string",
        "description": "The label that describes the value in FlexNumber1"
      },
      "FlexNumber2": {
        "type": "int",
        "description": "Number fields available to map Int data that does not"
      },
      "FlexNumber2Label": {
        "type": "string",
        "description": "The label that describes the value in FlexNumber2"
      },
      "FlexString1": {
        "type": "string",
        "description": "One of four floating point fields available to map fields"
      },
      "FlexString1Label": {
        "type": "string",
        "description": "The label field is a string and describes the purpose of the"
      },
      "FlexString2": {
        "type": "string",
        "description": "One of four floating point fields available to map fields"
      },
      "FlexString2Label": {
        "type": "string",
        "description": "The label field is a string and describes the purpose of the"
      },
      "IndicatorThreatType": {
        "type": "string",
        "description": "The threat type of the MaliciousIP according to our TI"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "LogSeverity": {
        "type": "string",
        "description": "A string or integer that describes the importance of the"
      },
      "MaliciousIP": {
        "type": "string",
        "description": "If one of the IP in the message was correlate with the"
      },
      "MaliciousIPCountry": {
        "type": "string",
        "description": "The country of the MaliciousIP according to the GEO"
      },
      "MaliciousIPLatitude": {
        "type": "real",
        "description": "The Latitude of the MaliciousIP according to the GEO"
      },
      "MaliciousIPLongitude": {
        "type": "real",
        "description": "The Longitude of the MaliciousIP according to the GEO"
      },
      "Message": {
        "type": "string",
        "description": "A message that gives more details about the event."
      },
      "OldFileCreateTime": {
        "type": "string",
        "description": "Time when the old file was created."
      },
      "OldFileHash": {
        "type": "string",
        "description": "Hash of the old file."
      },
      "OldFileID": {
        "type": "string",
        "description": "And ID associated with the old file, such as the inode."
      },
      "OldFileModificationTime": {
        "type": "string",
        "description": "Time when the old file was last modified."
      },
      "OldFileName": {
        "type": "string",
        "description": "Name of the old file."
      },
      "OldFilePath": {
        "type": "string",
        "description": "Full path to the old file, including the filename. For"
      },
      "OldFilePermission": {
        "type": "string",
        "description": "Permissions of the old file. For example: '2,1,1'."
      },
      "OldFileSize": {
        "type": "int",
        "description": "The size of the old file in bytes."
      },
      "OldFileType": {
        "type": "string",
        "description": "File type of the old file, such as a pipe, socket, and so on."
      },
      "OriginalLogSeverity": {
        "type": "string",
        "description": "A non-mapped version of LogSeverity. For example:"
      },
      "ProcessID": {
        "type": "int",
        "description": "Defines the ID of the process on the device generating"
      },
      "ProcessName": {
        "type": "string",
        "description": "Process name associated with the event. For example: in"
      },
      "Protocol": {
        "type": "string",
        "description": "Transport protocol that identifies the Layer-4 protocol"
      },
      "Reason": {
        "type": "string",
        "description": "The reason an audit event was generated. For example"
      },
      "ReceiptTime": {
        "type": "string",
        "description": "The time at which the event related to the activity was"
      },
      "ReceivedBytes": {
        "type": "long",
        "description": "Number of bytes transferred inbound."
      },
      "RemoteIP": {
        "type": "string",
        "description": "The remote IP address, derived from the event's direction"
      },
      "RemotePort": {
        "type": "string",
        "description": "The remote port, derived from the event's direction value,"
      },
      "ReportReferenceLink": {
        "type": "string",
        "description": "Link to the report of the TI feed."
      },
      "RequestClientApplication": {
        "type": "string",
        "description": "The user agent associated with the request."
      },
      "RequestContext": {
        "type": "string",
        "description": "Describes the content from which the request originated,"
      },
      "RequestCookies": {
        "type": "string",
        "description": "Cookies associated with the request."
      },
      "RequestMethod": {
        "type": "string",
        "description": "The method used to access a URL. Valid values include"
      },
      "RequestURL": {
        "type": "string",
        "description": "The URL accessed for an HTTP request, including the"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "SentBytes": {
        "type": "long",
        "description": "Number of bytes transferred outbound."
      },
      "SimplifiedDeviceAction": {
        "type": "string",
        "description": "A mapped version of DeviceAction, such as Denied >"
      },
      "SourceDnsDomain": {
        "type": "string",
        "description": "The DNS domain part of the complete FQDN."
      },
      "SourceHostName": {
        "type": "string",
        "description": "Identifies the source that event refers to in an IP network."
      },
      "SourceIP": {
        "type": "string",
        "description": "The source that an event refers to in an IP network, as an"
      },
      "SourceMACAddress": {
        "type": "string",
        "description": "Source MAC address."
      },
      "SourceNTDomain": {
        "type": "string",
        "description": "The Windows domain name for the source address."
      },
      "SourcePort": {
        "type": "int",
        "description": "The source port number. Valid port numbers are 0 -"
      },
      "SourceProcessId": {
        "type": "int",
        "description": "The ID of the source process associated with the event."
      },
      "SourceProcessName": {
        "type": "string",
        "description": "The name of the event's source process."
      },
      "SourceServiceName": {
        "type": "string",
        "description": "The service responsible for generating the event."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For"
      },
      "SourceTranslatedAddress": {
        "type": "string",
        "description": "Identifies the translated source that the event refers to in"
      },
      "SourceTranslatedPort": {
        "type": "int",
        "description": "Source port after translation, such as a firewall. Valid port"
      },
      "SourceUserID": {
        "type": "string",
        "description": "Identifies the source user by ID."
      },
      "SourceUserName": {
        "type": "string",
        "description": "Identifies the source user by name. Email addresses are"
      },
      "SourceUserPrivileges": {
        "type": "string",
        "description": "The source user's privileges. Valid values include:"
      },
      "StartTime": {
        "type": "datetime",
        "description": "The time when the activity that the event refers to"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "ThreatConfidence": {
        "type": "string",
        "description": "The threat confidence of the MaliciousIP according to our"
      },
      "ThreatDescription": {
        "type": "string",
        "description": "The threat description of the MaliciousIP according to our"
      },
      "ThreatSeverity": {
        "type": "int",
        "description": "The threat severity of the MaliciousIP according to our TI"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Event collection time in UTC."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "CommunicationComplianceActivity": {
    "tableName": "CommunicationComplianceActivity",
    "description": "Office communication compliance audit logs. Used for monitoring policy compliance violation.",
    "columns": {
      "ActorName": {
        "type": "string",
        "description": "The UPN (User Principal Name) of the user who performed the action"
      },
      "ActorUserId": {
        "type": "string",
        "description": "An alternative ID for the user identified in the UserId property. For"
      },
      "ActorUserType": {
        "type": "string",
        "description": "The type of user that performed the operation. Possible types includes:"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "EventOriginalType": {
        "type": "string",
        "description": "The name of the user or admin that performed the activity. For a"
      },
      "EventOriginalUid": {
        "type": "string",
        "description": "Unique identifier of an audit record."
      },
      "EventProduct": {
        "type": "string",
        "description": "The Microsoft service name."
      },
      "EventVendor": {
        "type": "string",
        "description": "The vendor service name."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "IsPolicyHit": {
        "type": "bool",
        "description": "Indication if the there is a hit on a defined policy."
      },
      "ObjectId": {
        "type": "string",
        "description": "For SharePoint and OneDrive for business activity, the full path name of"
      },
      "OrganizationId": {
        "type": "string",
        "description": "The GUID for your organization's Office 365 tenant. This value will"
      },
      "RecordType": {
        "type": "string",
        "description": "The type of operation indicated by the record. See the"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "SRPolicyId": {
        "type": "string",
        "description": "Policy Id."
      },
      "SRPolicyName": {
        "type": "string",
        "description": "Policy name."
      },
      "SRRuleMatchDetails": {
        "type": "dynamic",
        "description": "Policy matches."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The date and time in UTC when the user performed the activity."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserType": {
        "type": "string",
        "description": "The type of user that performed the operation."
      },
      "Workload": {
        "type": "string",
        "description": "The Office 365 service where the activity occurred."
      }
    }
  },
  "ComputerGroup": {
    "tableName": "ComputerGroup",
    "description": "Computer groups that can be used to scope log queries to a set of computers. Includes the computers in each group.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Computer": {
        "type": "string",
        "description": "Name of the member computer."
      },
      "Group": {
        "type": "string",
        "description": "Name of the group."
      },
      "GroupFullName": {
        "type": "string",
        "description": "Full path to the group including the source and source name."
      },
      "GroupId": {
        "type": "string",
        "description": "ID of the group."
      },
      "GroupSource": {
        "type": "string",
        "description": "Source that group was collected from. Possible values are"
      },
      "GroupSourceName": {
        "type": "string",
        "description": "Name of the source that the group was collected from. For Active"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time the computer group was created or updated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "ConfidentialWatchlist": {
    "tableName": "ConfidentialWatchlist",
    "description": "Azure Sentinel confidential Watchlist contains imported data from CSV files that can be used to join or filter as an alert/incident condition.",
    "columns": {
      "AzureTenantId": {
        "type": "string",
        "description": "The AAD tenant ID to which this Watchlist table belongs."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID for correlated events."
      },
      "CreatedBy": {
        "type": "dynamic",
        "description": "The JSON object with the user who created the Watchlist or Watchlist"
      },
      "CreatedTimeUTC": {
        "type": "datetime",
        "description": "The time (UTC) when the Watchlist or Watchlist item was first created."
      },
      "DefaultDuration": {
        "type": "string",
        "description": "The JSON object describing the default duration to live that each item"
      },
      "_DTItemId": {
        "type": "string",
        "description": "The Watchlist or Watchlist item unique ID. As an example, a Watchlist"
      },
      "_DTItemStatus": {
        "type": "string",
        "description": "Was the Watchlist or Watchlist item created, updated or deleted by"
      },
      "_DTItemType": {
        "type": "string",
        "description": "Distinguish between a Watchlist and a Watchlist item. As an example,"
      },
      "_DTTimestamp": {
        "type": "datetime",
        "description": "The time (UTC) when the event was generated."
      },
      "EntityMapping": {
        "type": "dynamic",
        "description": "The JSON object with Azure Sentinel entity mapping to input columns."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "LastUpdatedTimeUTC": {
        "type": "datetime",
        "description": "The time (UTC) when Watchlist or Watchlist item was last updated."
      },
      "Notes": {
        "type": "string",
        "description": "The notes provided by user."
      },
      "Provider": {
        "type": "string",
        "description": "The input provider of the Watchlist."
      },
      "SearchKey": {
        "type": "string",
        "description": "The SearchKey is used to optimize query performance when using"
      },
      "Source": {
        "type": "string",
        "description": "The input source of the Watchlist."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "Tags": {
        "type": "string",
        "description": "The JSON array of tags provided by user."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the event was generated."
      },
      "TimeToLive": {
        "type": "datetime",
        "description": "The time to live for a Watchlist record, expressed as a date and time of"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UpdatedBy": {
        "type": "dynamic",
        "description": "The JSON object with the user who last updated the Watchlist or"
      },
      "WatchlistAlias": {
        "type": "string",
        "description": "The unique string referring to the Watchlist."
      },
      "WatchlistCategory": {
        "type": "string",
        "description": "The Watchlist category provided by user."
      },
      "WatchlistId": {
        "type": "string",
        "description": "The Resource Manager Watchlist resource name."
      },
      "WatchlistItem": {
        "type": "dynamic",
        "description": "The JSON object with key-value pairs from the input Watchlist source."
      },
      "WatchlistItemId": {
        "type": "string",
        "description": "The Watchlist item unique ID."
      },
      "WatchlistName": {
        "type": "string",
        "description": "The display name of Watchlist."
      }
    }
  },
  "ConfigurationChange": {
    "tableName": "ConfigurationChange",
    "description": "View changes to in-guest configuration data such as Files Software Registry Keys Windows Services and Linux Daemons",
    "columns": {
      "Acls": {
        "type": "string",
        "description": "The Access-Control List specifies which users or system"
      },
      "Attributes": {
        "type": "string",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ChangeCategory": {
        "type": "string",
        "description": "The type of change that occurred: Added Removed Modified"
      },
      "Computer": {
        "type": "string",
        "description": ""
      },
      "ConfigChangeType": {
        "type": "string",
        "description": "Type of configuration item that changed: Files Software"
      },
      "Current": {
        "type": "string",
        "description": "Current value"
      },
      "DateCreated": {
        "type": "datetime",
        "description": "Date that the item was created"
      },
      "DateModified": {
        "type": "datetime",
        "description": "Date that the item was last modified"
      },
      "FieldsChanged": {
        "type": "string",
        "description": "Fields that were changed as part of the change record"
      },
      "FileContentChecksum": {
        "type": "string",
        "description": "Checksum of the file content"
      },
      "FileSystemPath": {
        "type": "string",
        "description": "File system path for the changed file"
      },
      "Hive": {
        "type": "string",
        "description": "Registry hive for the changed registry key"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "LastSnapshotAge": {
        "type": "long",
        "description": "Age of the last snapshot"
      },
      "Location": {
        "type": "string",
        "description": ""
      },
      "ManagementGroupName": {
        "type": "string",
        "description": "Name of a resource's assigned management group"
      },
      "Name": {
        "type": "string",
        "description": ""
      },
      "Previous": {
        "type": "string",
        "description": "Previous value"
      },
      "PreviousAcls": {
        "type": "string",
        "description": "Previous Acl value"
      },
      "PreviousAttributes": {
        "type": "string",
        "description": "Previous attributes value"
      },
      "PreviousDateCreated": {
        "type": "datetime",
        "description": "Previous date created time"
      },
      "PreviousDateModified": {
        "type": "datetime",
        "description": "Previous date modified time"
      },
      "PreviousFileContentChecksum": {
        "type": "string",
        "description": "Previous file content checksum value"
      },
      "PreviousSize": {
        "type": "long",
        "description": "Previous file size"
      },
      "PreviousValueData": {
        "type": "string",
        "description": "Previous registry value data"
      },
      "PreviousValueType": {
        "type": "string",
        "description": "Previous registry value type"
      },
      "Publisher": {
        "type": "string",
        "description": "Software publisher name"
      },
      "RegistryKey": {
        "type": "string",
        "description": "Registry key name"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "Size": {
        "type": "long",
        "description": "Current size of the changed file"
      },
      "SoftwareDescription": {
        "type": "string",
        "description": "Description of the software"
      },
      "SoftwareName": {
        "type": "string",
        "description": "Name of the software"
      },
      "SoftwareType": {
        "type": "string",
        "description": "Type of the software: Application Package Update"
      },
      "SourceComputerId": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "SvcAccount": {
        "type": "string",
        "description": "User account that is associated with the service executable"
      },
      "SvcChangeType": {
        "type": "string",
        "description": "Service property that was changed"
      },
      "SvcController": {
        "type": "string",
        "description": "Parent process for the daemon"
      },
      "SvcDisplayName": {
        "type": "string",
        "description": "Human-frinedly name for the service"
      },
      "SvcName": {
        "type": "string",
        "description": "Name of the service"
      },
      "SvcPath": {
        "type": "string",
        "description": "The file path to the executable for the service"
      },
      "SvcPreviousAccount": {
        "type": "string",
        "description": "Previous user account that was associated with the sevice"
      },
      "SvcPreviousController": {
        "type": "string",
        "description": "Previous parent process for the daemon"
      },
      "SvcPreviousPath": {
        "type": "string",
        "description": "Previous file path to the executable for the service"
      },
      "SvcPreviousRunlevels": {
        "type": "string",
        "description": "Previous modes used by the daemon for system operation"
      },
      "SvcPreviousStartupType": {
        "type": "string",
        "description": "Previous startup behavior of the service"
      },
      "SvcPreviousState": {
        "type": "string",
        "description": "Previous state of the service"
      },
      "SvcRunlevels": {
        "type": "string",
        "description": "Modes used by the daemon for system operation"
      },
      "SvcStartupType": {
        "type": "string",
        "description": "Startup behavior of the service"
      },
      "SvcState": {
        "type": "string",
        "description": "Current state of the service"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time the record was created."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "ValueData": {
        "type": "string",
        "description": "Data contained in the value and registry key being tracked"
      },
      "ValueName": {
        "type": "string",
        "description": "Name of the value for the registry key being tracked"
      },
      "ValueType": {
        "type": "string",
        "description": "Type of the value for the registry key being tracked"
      },
      "VMUUID": {
        "type": "string",
        "description": ""
      }
    }
  },
  "ConfigurationData": {
    "tableName": "ConfigurationData",
    "description": "View the last reported state for in-guest configuration data such as Files Software Registry Keys Windows Services and Linux Daemons",
    "columns": {
      "Acls": {
        "type": "string",
        "description": "The Access-Control List specifies which users or system processes"
      },
      "Architecture": {
        "type": "string",
        "description": "Instruction set architecture for the software being tracked"
      },
      "Attributes": {
        "type": "string",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Computer": {
        "type": "string",
        "description": ""
      },
      "ConfigDataType": {
        "type": "string",
        "description": "Type of configuration item: Files Software WindowsServices"
      },
      "CurrentVersion": {
        "type": "string",
        "description": "Current software version"
      },
      "DateCreated": {
        "type": "datetime",
        "description": "Created date of the file"
      },
      "DateModified": {
        "type": "datetime",
        "description": "Last modified date of the file"
      },
      "FileContentChecksum": {
        "type": "string",
        "description": "Checksum of the reporting file"
      },
      "FileSystemPath": {
        "type": "string",
        "description": "File system path for the reporting file"
      },
      "Hive": {
        "type": "string",
        "description": "Registry hive for the reporting registry key"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Location": {
        "type": "string",
        "description": ""
      },
      "ManagementGroupName": {
        "type": "string",
        "description": ""
      },
      "Name": {
        "type": "string",
        "description": ""
      },
      "Publisher": {
        "type": "string",
        "description": "Software publisher name"
      },
      "RegistryKey": {
        "type": "string",
        "description": "Registy key name"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "Size": {
        "type": "long",
        "description": "Size of the file"
      },
      "SoftwareDescription": {
        "type": "string",
        "description": "Description of the software"
      },
      "SoftwareName": {
        "type": "string",
        "description": "Name of the software"
      },
      "SoftwareType": {
        "type": "string",
        "description": "Type of the software: Application Package Update"
      },
      "SourceComputerId": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "SvcAccount": {
        "type": "string",
        "description": "User account that is associated with the service executable"
      },
      "SvcController": {
        "type": "string",
        "description": "Service property that was changed"
      },
      "SvcDescription": {
        "type": "string",
        "description": "Parent process for the daemon"
      },
      "SvcDisplayName": {
        "type": "string",
        "description": "Human-frinedly name for the service"
      },
      "SvcName": {
        "type": "string",
        "description": "Name of the service"
      },
      "SvcPath": {
        "type": "string",
        "description": "The file path to the executable for the service"
      },
      "SvcRunlevels": {
        "type": "string",
        "description": "Modes used by the daemon for system operation"
      },
      "SvcStartupType": {
        "type": "string",
        "description": "Startup behavior of the service"
      },
      "SvcState": {
        "type": "string",
        "description": "Current state of the service"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time the record was created."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "ValueData": {
        "type": "string",
        "description": "Data contained in the value and registry key being tracked"
      },
      "ValueName": {
        "type": "string",
        "description": "Name of the value for the registry key being tracked"
      },
      "ValueType": {
        "type": "string",
        "description": "Type of the value for the registry key being tracked"
      },
      "VMUUID": {
        "type": "string",
        "description": ""
      }
    }
  },
  "ContainerAppConsoleLogs": {
    "tableName": "ContainerAppConsoleLogs",
    "description": "Logs generated by Container Apps within a Container App Environment. This includes logs generated on the stdout or stderr streams by all containers in the app. It also includes all Dapr sidecar container logs but does not include any system or platform level logs produced by the Container App Environment itself.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ContainerAppName": {
        "type": "string",
        "description": "The name of the Container App generating this log."
      },
      "ContainerGroupId": {
        "type": "string",
        "description": "The ID of the container's pod (Container App replica) generating this"
      },
      "ContainerGroupName": {
        "type": "string",
        "description": "The name of the container's pod (Container App replica) generating"
      },
      "ContainerId": {
        "type": "string",
        "description": "The ID of the Container App generating this log."
      },
      "ContainerImage": {
        "type": "string",
        "description": "The image used in the container instance that generated this log."
      },
      "ContainerName": {
        "type": "string",
        "description": "The name of the container generating this log."
      },
      "EnvironmentName": {
        "type": "string",
        "description": "The name of the Container App Environment generating this log."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "JobName": {
        "type": "string",
        "description": "The name of the kubernetes job running inside a managed AKS"
      },
      "Location": {
        "type": "string",
        "description": "The location of the Container App generating this log."
      },
      "Log": {
        "type": "string",
        "description": "The log generated by the user's Container App."
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation generating this log."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "RevisionName": {
        "type": "string",
        "description": "The name of the revision generating this log."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "Stream": {
        "type": "string",
        "description": "The stream where the log was emitted."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Time (UTC) when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "ContainerAppSystemLogs": {
    "tableName": "ContainerAppSystemLogs",
    "description": "Platform Logs generated by a Container App Environment. These logs are generated by system components and any underlying infrastructure. Events related to revision management, Dapr, Keda and Envoy can be found here.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ComponentName": {
        "type": "string",
        "description": "The name of component name."
      },
      "ComponentType": {
        "type": "string",
        "description": "The type of component such as SpringCloudConfig, SpringCloudEureka,"
      },
      "ContainerAppName": {
        "type": "string",
        "description": "The name of Container App generating this log."
      },
      "ContainerName": {
        "type": "string",
        "description": "The name of the container generating this log."
      },
      "Count": {
        "type": "int",
        "description": "How many times this log has been seen."
      },
      "EnvironmentName": {
        "type": "string",
        "description": "The name of the Container App Environment generating this log."
      },
      "EventSource": {
        "type": "string",
        "description": "The name of project generating this log. This includes but is not limited"
      },
      "source": {
        "type": "int",
        "description": "egrations such as Keda or Dapr."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "JobName": {
        "type": "string",
        "description": "The name of the Job generating this log."
      },
      "Location": {
        "type": "string",
        "description": "The location of the Container App generating this log."
      },
      "Log": {
        "type": "string",
        "description": "The log generated by the Container App Environment."
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation generating this log."
      },
      "Reason": {
        "type": "string",
        "description": "The reason why this event was generated."
      },
      "ReplicaName": {
        "type": "string",
        "description": "The name of Container App replica generating this log."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "RevisionName": {
        "type": "string",
        "description": "The name of the revision generating this log."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Time (UTC) when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "For events emitted by the Container App Environment. Type indicates"
      }
    }
  },
  "ContainerEvent": {
    "tableName": "ContainerEvent",
    "description": "Container Event Customer Logs.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ContainerGroup": {
        "type": "string",
        "description": "The name of the container group associated with the record."
      },
      "ContainerGroupInstanceID": {
        "type": "string",
        "description": "A unique identifier for the container group associated with the"
      },
      "ContainerID": {
        "type": "string",
        "description": "A unique identifier for the container associated with the record."
      },
      "ContainerName": {
        "type": "string",
        "description": "The name of the container associated with the record."
      },
      "Count": {
        "type": "int",
        "description": "How many times the event has occurred since the last poll."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable"
      },
      "Location": {
        "type": "string",
        "description": "The location of the resource associated with the record."
      },
      "Message": {
        "type": "string",
        "description": "If applicable, the message from the container."
      },
      "OSType": {
        "type": "string",
        "description": "The name of the operating system the container is based on."
      },
      "Reason": {
        "type": "string",
        "description": "."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp when the event was generated by the Azure service"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "ContainerImageInventory": {
    "tableName": "ContainerImageInventory",
    "description": "Inventory of container images and their attributes that were discovered by the agent.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Computer": {
        "type": "string",
        "description": "Computer name/Node name"
      },
      "Failed": {
        "type": "int",
        "description": "Count of containers with this image that are in failed state"
      },
      "Image": {
        "type": "string",
        "description": "Name of Container Image"
      },
      "ImageID": {
        "type": "string",
        "description": "Image ID of the container image"
      },
      "ImageSize": {
        "type": "string",
        "description": "Size of the container image [amount of data (on disk) that is used for the"
      },
      "ImageTag": {
        "type": "string",
        "description": "Tag of the container image"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Paused": {
        "type": "int",
        "description": "Count of containers with this image that are in paused state"
      },
      "Repository": {
        "type": "string",
        "description": ""
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Running": {
        "type": "int",
        "description": "Count of containers with this image that are in running state"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "Stopped": {
        "type": "int",
        "description": "Count of containers with this image that are in stopped state"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time the record was created."
      },
      "TotalContainer": {
        "type": "long",
        "description": "Count of containers with this ContainerImage"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "VirtualSize": {
        "type": "string",
        "description": "Virtual Size of the Container Image [Total amount of disk-space used for the"
      }
    }
  },
  "ContainerInstanceLog": {
    "tableName": "ContainerInstanceLog",
    "description": "Container Instance Customer Logs.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ContainerGroup": {
        "type": "string",
        "description": "The name of the container group associated with the record."
      },
      "ContainerID": {
        "type": "string",
        "description": "A unique identifier for the container associated with the record."
      },
      "ContainerImage": {
        "type": "string",
        "description": "The name of the container image associated with the record."
      },
      "ContainerName": {
        "type": "string",
        "description": "The name of the container associated with the record."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Location": {
        "type": "string",
        "description": "The location of the resource associated with the record."
      },
      "Message": {
        "type": "string",
        "description": "If applicable, the message from the container."
      },
      "OSType": {
        "type": "string",
        "description": "The name of the operating system the container is based on."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Source": {
        "type": "string",
        "description": "Name of the logging component."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp when the event was generated by the Azure service processing"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "ContainerInventory": {
    "tableName": "ContainerInventory",
    "description": "Inventory of containers and their attributes that are monitored by the agent",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Command": {
        "type": "string",
        "description": "entrypoint and the command executed for all running containers"
      },
      "ComposeGroup": {
        "type": "string",
        "description": "Docker Compose Project name. Comes from container label :"
      },
      "Computer": {
        "type": "string",
        "description": "Computer name/Node name"
      },
      "ContainerHostname": {
        "type": "string",
        "description": ""
      },
      "ContainerID": {
        "type": "string",
        "description": "Unique ContainerID"
      },
      "ContainerState": {
        "type": "string",
        "description": "Last known state of the container"
      },
      "CreatedTime": {
        "type": "datetime",
        "description": "Container creation time"
      },
      "EnvironmentVar": {
        "type": "string",
        "description": "Container's environment variables"
      },
      "ExitCode": {
        "type": "int",
        "description": "Container exit code"
      },
      "FinishedTime": {
        "type": "datetime",
        "description": "Container termination time"
      },
      "Image": {
        "type": "string",
        "description": "Container Image Name"
      },
      "ImageID": {
        "type": "string",
        "description": "Container Image ID"
      },
      "ImageTag": {
        "type": "string",
        "description": "Container Image Tag"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Links": {
        "type": "string",
        "description": "Container's legacy Hostconfig links"
      },
      "Name": {
        "type": "string",
        "description": "Name of the container"
      },
      "Ports": {
        "type": "string",
        "description": "Container's port bindings"
      },
      "Repository": {
        "type": "string",
        "description": "Container's Remote repository"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "StartedTime": {
        "type": "datetime",
        "description": "Container start time"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time the record was created."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "ContainerLog": {
    "tableName": "ContainerLog",
    "description": "Log lines collected from stdout and stderr streams for containers.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Computer": {
        "type": "string",
        "description": "Computer/node that's generating the log."
      },
      "ContainerID": {
        "type": "string",
        "description": "Container ID for log source as seen by Docker engine."
      },
      "Image": {
        "type": "string",
        "description": "Container Image for log source as seen by Docker engine."
      },
      "ImageTag": {
        "type": "string",
        "description": "Used by Container solution only. Not populated by Azure Monitor for"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogEntry": {
        "type": "string",
        "description": "Actual log line."
      },
      "LogEntrySource": {
        "type": "string",
        "description": "Source of the log line. Possible values are stdout or stderr."
      },
      "Name": {
        "type": "string",
        "description": "Unique name of the container the form PODUid/ContainerName."
      },
      "Repository": {
        "type": "string",
        "description": "Used by Container solution only. Not populated by Azure Monitor for"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time the record was created."
      },
      "TimeOfCommand": {
        "type": "datetime",
        "description": "Time that the agent processed the log. This is an optional field mainly"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "ContainerLogV2": {
    "tableName": "ContainerLogV2",
    "description": "Kubernetes Container logs in V2 schema. This is the successor of ContainerLog. This has a friendlier schema, specifically for Kubernetes orchestrated containers in pods. With this feature enabled, previously split container logs are stitched together and sent as single entries to the ContainerLogV2 table. The schema now supports container log lines of up to to 64 KB. The schema also supports .NET and Go stack traces, which appear as single entries.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Computer": {
        "type": "string",
        "description": "Name of the Computer/Node generating the log."
      },
      "ContainerId": {
        "type": "string",
        "description": "Container ID of the log source as seen by the Container engine."
      },
      "ContainerName": {
        "type": "string",
        "description": "Name of the Container generating the log."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "KubernetesMetadata": {
        "type": "dynamic",
        "description": "Kubernetes Metadata including podUid, podLabels, podAnnotations"
      },
      "LogLevel": {
        "type": "string",
        "description": "Categorize logs based on importance and severity. Possible values:"
      },
      "LogMessage": {
        "type": "dynamic",
        "description": "Log message from stdout or stderr. Being a dynamic field, json log"
      },
      "LogSource": {
        "type": "string",
        "description": "Source of the Log message. Possible vlaues are stdout or stderr."
      },
      "PodName": {
        "type": "string",
        "description": "Kubernetes Pod name for the Container generating the log."
      },
      "PodNamespace": {
        "type": "string",
        "description": "Kubernetes Namespace for the container's pod."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "ContainerNodeInventory": {
    "tableName": "ContainerNodeInventory",
    "description": "Table that stores Container host/node information",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Computer": {
        "type": "string",
        "description": "Computer/node name in the cluster for which the event applies. If not,"
      },
      "DockerVersion": {
        "type": "string",
        "description": "Container runtime version"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "OperatingSystem": {
        "type": "string",
        "description": "Nodes host OS Image"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time the record was created."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "ContainerRegistryLoginEvents": {
    "tableName": "ContainerRegistryLoginEvents",
    "description": "Azure Container Registry Login Auditing Logs",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CallerIpAddress": {
        "type": "string",
        "description": ""
      },
      "Category": {
        "type": "string",
        "description": ""
      },
      "CorrelationId": {
        "type": "string",
        "description": ""
      },
      "DurationMs": {
        "type": "string",
        "description": ""
      },
      "Identity": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "JwtId": {
        "type": "string",
        "description": ""
      },
      "LoginServer": {
        "type": "string",
        "description": ""
      },
      "OperationName": {
        "type": "string",
        "description": ""
      },
      "Region": {
        "type": "string",
        "description": ""
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultDescription": {
        "type": "string",
        "description": ""
      },
      "ResultType": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": ""
      }
    }
  },
  "ContainerRegistryRepositoryEvents": {
    "tableName": "ContainerRegistryRepositoryEvents",
    "description": "Azure Container Registry Repository Auditing Logs",
    "columns": {
      "ArtifactType": {
        "type": "string",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CallerIpAddress": {
        "type": "string",
        "description": ""
      },
      "Category": {
        "type": "string",
        "description": ""
      },
      "CorrelationId": {
        "type": "string",
        "description": ""
      },
      "Digest": {
        "type": "string",
        "description": ""
      },
      "DurationMs": {
        "type": "string",
        "description": ""
      },
      "Identity": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LoginServer": {
        "type": "string",
        "description": ""
      },
      "MediaType": {
        "type": "string",
        "description": ""
      },
      "OperationName": {
        "type": "string",
        "description": ""
      },
      "Region": {
        "type": "string",
        "description": ""
      },
      "Repository": {
        "type": "string",
        "description": ""
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultDescription": {
        "type": "string",
        "description": ""
      },
      "ResultType": {
        "type": "string",
        "description": ""
      },
      "Size": {
        "type": "int",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "Tag": {
        "type": "string",
        "description": ""
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": ""
      },
      "UserTenantId": {
        "type": "string",
        "description": ""
      }
    }
  },
  "ContainerServiceLog": {
    "tableName": "ContainerServiceLog",
    "description": "",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Command": {
        "type": "string",
        "description": ""
      },
      "Computer": {
        "type": "string",
        "description": ""
      },
      "ContainerID": {
        "type": "string",
        "description": ""
      },
      "Image": {
        "type": "string",
        "description": ""
      },
      "ImageTag": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Repository": {
        "type": "string",
        "description": ""
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) when the event was ingested."
      },
      "TimeOfCommand": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "ingested": {
        "type": "int",
        "description": "o Microsoft Sentinel."
      },
      "AgentId": {
        "type": "string",
        "description": "Unique identifier for the CrowdStrike agent that generated the alert."
      },
      "AggregateId": {
        "type": "string",
        "description": "Identifier for aggregated alerts from the same source."
      },
      "AlertType": {
        "type": "string",
        "description": "The type or category of the CrowdStrike alert."
      },
      "AssignedToName": {
        "type": "string",
        "description": "Name of the user assigned to handle the incident."
      },
      "AssignedToUid": {
        "type": "string",
        "description": "User ID of the assigned user."
      },
      "AssignedToUuid": {
        "type": "string",
        "description": "UUID of the assigned user."
      },
      "Cid": {
        "type": "string",
        "description": "Customer ID in the CrowdStrike platform."
      },
      "CompositeId": {
        "type": "string",
        "description": "Composite identifier combining multiple alert attributes."
      },
      "Confidence": {
        "type": "string",
        "description": "Confidence level of the vulnerability detection."
      },
      "CrawledTimestamp": {
        "type": "datetime",
        "description": "Timestamp when the alert data was last crawled."
      },
      "CreatedTimestamp": {
        "type": "datetime",
        "description": "Timestamp when the vulnerability was first detected."
      },
      "DataDomains": {
        "type": "dynamic",
        "description": "Domains associated with the alert."
      },
      "Description": {
        "type": "string",
        "description": "Detailed description of the incident."
      },
      "DisplayName": {
        "type": "string",
        "description": "Human-readable name for the alert."
      },
      "EmailSent": {
        "type": "bool",
        "description": "Indicates if an email notification was sent for this detection."
      },
      "External": {
        "type": "bool",
        "description": "Indicates if the alert originated from an external source."
      },
      "Id": {
        "type": "string",
        "description": "Unique identifier for the vulnerability record."
      },
      "Name": {
        "type": "string",
        "description": "Name or title of the incident."
      },
      "Objective": {
        "type": "string",
        "description": "The attacker's presumed objective."
      },
      "PatternId": {
        "type": "int",
        "description": "Identifier for the detection pattern that triggered the alert."
      },
      "Platform": {
        "type": "string",
        "description": "Operating system or platform where the alert was detected."
      },
      "Product": {
        "type": "string",
        "description": "CrowdStrike product that generated the alert."
      },
      "Scenario": {
        "type": "string",
        "description": "Security scenario that triggered the alert."
      },
      "SecondsToResolved": {
        "type": "int",
        "description": "Time in seconds from detection creation to resolution."
      },
      "SecondsToTriaged": {
        "type": "int",
        "description": "Time in seconds from detection creation to triage."
      },
      "Severity": {
        "type": "int",
        "description": "Severity level of the alert."
      },
      "SeverityName": {
        "type": "string",
        "description": "Text representation of the severity level."
      },
      "ShowInUi": {
        "type": "bool",
        "description": "Indicates if the detection should be displayed in the user interface."
      },
      "SourceProducts": {
        "type": "dynamic",
        "description": "List of products that contributed to this alert."
      },
      "SourceVendors": {
        "type": "dynamic",
        "description": "List of vendors associated with the alert sources."
      },
      "Status": {
        "type": "string",
        "description": "Current status of the vulnerability."
      },
      "Tactic": {
        "type": "string",
        "description": "MITRE ATT&CK tactic associated with the alert."
      },
      "TacticId": {
        "type": "string",
        "description": "Identifier of the MITRE ATT&CK tactic."
      },
      "Tags": {
        "type": "dynamic",
        "description": "Custom tags associated with the incident."
      },
      "Technique": {
        "type": "string",
        "description": "MITRE ATT&CK technique associated with the alert."
      },
      "TechniqueId": {
        "type": "string",
        "description": "Identifier of the MITRE ATT&CK technique."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "Timestamp": {
        "type": "datetime",
        "description": "Time when the alert event occurred."
      },
      "UpdatedTimestamp": {
        "type": "datetime",
        "description": "Timestamp when the vulnerability record was last updated."
      },
      "AdversaryIds": {
        "type": "dynamic",
        "description": "List of identified adversary IDs associated with the detection."
      },
      "Behaviors": {
        "type": "dynamic",
        "description": "List of suspicious behaviors identified in the detection."
      },
      "BehaviorsProcessed": {
        "type": "dynamic",
        "description": "List of processed and analyzed behaviors from the detection."
      },
      "DateUpdated": {
        "type": "string",
        "description": "Date when the detection was last updated."
      },
      "DetectionId": {
        "type": "string",
        "description": "Unique identifier for the detection."
      },
      "Device": {
        "type": "dynamic",
        "description": "Information about the device where the detection occurred."
      },
      "FirstBehaviorTime": {
        "type": "datetime",
        "description": "Timestamp of the first suspicious behavior detected."
      },
      "HostInfo": {
        "type": "dynamic",
        "description": "Information about the affected host system."
      },
      "LastBehavior": {
        "type": "datetime",
        "description": "Timestamp of the most recent suspicious behavior detected."
      },
      "MaxConfidence": {
        "type": "int",
        "description": "Highest confidence score assigned to any behavior in the"
      },
      "MaxSeverity": {
        "type": "int",
        "description": "Highest severity level assigned to any behavior in the detection."
      },
      "MaxSeverityDisplayName": {
        "type": "string",
        "description": "Text representation of the highest severity level."
      },
      "OverwatchNotes": {
        "type": "string",
        "description": "Notes added by CrowdStrike Overwatch team regarding the"
      },
      "QuarantinedFiles": {
        "type": "dynamic",
        "description": "List of files that were quarantined as part of the detection."
      },
      "AgentLoadFlags": {
        "type": "string",
        "description": "Flags indicating the load status of the CrowdStrike agent."
      },
      "AgentLocalTime": {
        "type": "string",
        "description": "Local time of the system where the agent is installed."
      },
      "AgentVersion": {
        "type": "string",
        "description": "Version of the installed CrowdStrike agent."
      },
      "BaseImageVersion": {
        "type": "string",
        "description": "Version of the base operating system image."
      },
      "BiosManufacturer": {
        "type": "string",
        "description": "Manufacturer of the system BIOS."
      },
      "BiosVersion": {
        "type": "string",
        "description": "Version of the system BIOS."
      },
      "BuildNumber": {
        "type": "string",
        "description": "Operating system build number."
      },
      "ChassisType": {
        "type": "string",
        "description": "Type of system chassis (numerical identifier)."
      },
      "ChassisTypeDesc": {
        "type": "string",
        "description": "Description of the system chassis type."
      },
      "ConfigIdBase": {
        "type": "string",
        "description": "Base configuration ID for the CrowdStrike agent."
      },
      "ConfigIdBuild": {
        "type": "string",
        "description": "Build configuration ID for the CrowdStrike agent."
      },
      "ConfigIdPlatform": {
        "type": "string",
        "description": "Platform-specific configuration ID for the CrowdStrike agent."
      },
      "ConnectionIp": {
        "type": "string",
        "description": "IP address used by the host to connect to CrowdStrike cloud."
      },
      "ConnectionMacAddress": {
        "type": "string",
        "description": "MAC address of the network interface used for CrowdStrike"
      },
      "CpuSignature": {
        "type": "string",
        "description": "Unique identifier for the CPU architecture and features."
      },
      "CpuVendor": {
        "type": "string",
        "description": "Manufacturer of the CPU."
      },
      "DefaultGatewayIp": {
        "type": "string",
        "description": "IP address of the default network gateway."
      },
      "DeploymentType": {
        "type": "string",
        "description": "Type of CrowdStrike agent deployment on the host."
      },
      "DetectionSuppressionStatus": {
        "type": "string",
        "description": "Status of detection suppression rules applied to the host."
      },
      "DeviceId": {
        "type": "string",
        "description": "Unique identifier for the device in CrowdStrike platform."
      },
      "DevicePolicies": {
        "type": "dynamic",
        "description": "List of security policies applied to the device."
      },
      "Email": {
        "type": "string",
        "description": "Email address associated with the host or primary user."
      },
      "ExternalIp": {
        "type": "string",
        "description": "External IP address of the host."
      },
      "FilesystemContainmentStatus": {
        "type": "string",
        "description": "Status of filesystem containment feature for the host."
      },
      "FirstLoginTimestamp": {
        "type": "string",
        "description": "Timestamp of the first user login on the host."
      },
      "FirstSeen": {
        "type": "string",
        "description": "Timestamp when the host was first seen by CrowdStrike."
      },
      "GroupHash": {
        "type": "string",
        "description": "Hash identifier for the host's group membership."
      },
      "Groups": {
        "type": "dynamic",
        "description": "List of security groups the host belongs to."
      },
      "HostHiddenStatus": {
        "type": "string",
        "description": "Indicates if the host is hidden from normal visibility."
      },
      "Hostname": {
        "type": "string",
        "description": "Network hostname of the system."
      },
      "HostUtcOffset": {
        "type": "string",
        "description": "UTC time offset for the host's timezone."
      },
      "InstanceId": {
        "type": "string",
        "description": "Cloud instance identifier (if applicable)."
      },
      "InternetExposure": {
        "type": "string",
        "description": "Level of internet exposure for the host."
      },
      "K8sClusterGitVersion": {
        "type": "string",
        "description": "Git version of the Kubernetes cluster deployment."
      },
      "K8sClusterId": {
        "type": "string",
        "description": "Unique identifier for the Kubernetes cluster."
      },
      "K8sClusterVersion": {
        "type": "string",
        "description": "Version of the Kubernetes cluster."
      },
      "KernelVersion": {
        "type": "string",
        "description": "Version of the operating system kernel."
      },
      "LastLoginTimestamp": {
        "type": "string",
        "description": "Timestamp of the most recent user login."
      },
      "LastLoginUid": {
        "type": "string",
        "description": "User ID of the last user to log in."
      },
      "LastLoginUser": {
        "type": "string",
        "description": "Username of the last user to log in."
      },
      "LastLoginUserSid": {
        "type": "string",
        "description": "Security identifier (SID) of the last user to log in."
      },
      "LastReboot": {
        "type": "string",
        "description": "Timestamp of the last system reboot."
      },
      "LastSeen": {
        "type": "string",
        "description": "Timestamp when the host was last seen active by CrowdStrike."
      },
      "LinuxSensorMode": {
        "type": "string",
        "description": "Operating mode of the CrowdStrike sensor on Linux systems."
      },
      "LocalIp": {
        "type": "string",
        "description": "Local/Internal IP address of the host."
      },
      "MacAddress": {
        "type": "string",
        "description": "Primary MAC address of the host."
      },
      "MachineDomain": {
        "type": "string",
        "description": "Domain name the machine is joined to."
      },
      "MajorVersion": {
        "type": "string",
        "description": "Major version number of the operating system."
      },
      "ManagedApps": {
        "type": "dynamic",
        "description": "List of applications managed by CrowdStrike on the host."
      },
      "Meta": {
        "type": "dynamic",
        "description": "Additional metadata about the host."
      },
      "MigrationCompletedTime": {
        "type": "string",
        "description": "Timestamp when agent migration was completed."
      },
      "MinorVersion": {
        "type": "string",
        "description": "Minor version number of the operating system."
      },
      "ModifiedTimestamp": {
        "type": "datetime",
        "description": "Timestamp when the incident was last modified."
      },
      "Notes": {
        "type": "dynamic",
        "description": "Custom notes or annotations about the host."
      },
      "OsBuild": {
        "type": "string",
        "description": "Build number of the operating system."
      },
      "OsProductName": {
        "type": "string",
        "description": "Product name of the operating system."
      },
      "OsVersion": {
        "type": "string",
        "description": "Version string of the operating system."
      },
      "Ou": {
        "type": "dynamic",
        "description": "Organizational Unit information for the host."
      },
      "PlatformId": {
        "type": "string",
        "description": "Unique identifier for the platform type."
      },
      "PlatformName": {
        "type": "string",
        "description": "Name of the platform."
      },
      "PodAnnotations": {
        "type": "dynamic",
        "description": "Kubernetes pod annotations associated with the host."
      },
      "PodHostIp4": {
        "type": "string",
        "description": "IPv4 address of the Kubernetes pod host."
      },
      "PodHostIp6": {
        "type": "string",
        "description": "IPv6 address of the Kubernetes pod host."
      },
      "PodHostname": {
        "type": "string",
        "description": "Hostname of the Kubernetes pod."
      },
      "PodId": {
        "type": "string",
        "description": "Unique identifier for the Kubernetes pod."
      },
      "PodIp4": {
        "type": "string",
        "description": "IPv4 address assigned to the Kubernetes pod."
      },
      "PodIp6": {
        "type": "string",
        "description": "IPv6 address assigned to the Kubernetes pod."
      },
      "PodLabels": {
        "type": "dynamic",
        "description": "Labels assigned to the Kubernetes pod."
      },
      "PodName": {
        "type": "string",
        "description": "Name of the Kubernetes pod."
      },
      "PodNamespace": {
        "type": "string",
        "description": "Kubernetes namespace where the pod is deployed."
      },
      "PodServiceAccountName": {
        "type": "string",
        "description": "Name of the Kubernetes service account used by the pod."
      },
      "PointerSize": {
        "type": "string",
        "description": "Memory pointer size of the system architecture (32/64 bit)."
      },
      "Policies": {
        "type": "dynamic",
        "description": "List of all security policies applied to the host."
      },
      "ProductType": {
        "type": "string",
        "description": "Type of product or system (numerical identifier)."
      },
      "ProductTypeDesc": {
        "type": "string",
        "description": "Description of the product or system type."
      },
      "ProvisionStatus": {
        "type": "string",
        "description": "Current provisioning status of the host."
      },
      "ReducedFunctionalityMode": {
        "type": "string",
        "description": "Indicates if the host is running in reduced functionality mode."
      },
      "ReleaseGroup": {
        "type": "string",
        "description": "Group identifier for software release management."
      },
      "RtrState": {
        "type": "string",
        "description": "State of Real Time Response functionality."
      },
      "SerialNumber": {
        "type": "string",
        "description": "System serial number from BIOS/hardware."
      },
      "ServicePackMajor": {
        "type": "string",
        "description": "Major version of installed service pack."
      },
      "ServicePackMinor": {
        "type": "string",
        "description": "Minor version of installed service pack."
      },
      "ServiceProvider": {
        "type": "string",
        "description": "Cloud service provider hosting the system."
      },
      "ServiceProviderAccountId": {
        "type": "string",
        "description": "Account identifier from the cloud service provider."
      },
      "SiteName": {
        "type": "string",
        "description": "Name of the site where the host is located."
      },
      "SystemManufacturer": {
        "type": "string",
        "description": "Manufacturer of the system hardware."
      },
      "SystemProductName": {
        "type": "string",
        "description": "Product name or model of the system."
      },
      "AssignedTo": {
        "type": "string",
        "description": "ID of the user assigned to the incident."
      },
      "Created": {
        "type": "datetime",
        "description": "Timestamp when the incident was created."
      },
      "EmailState": {
        "type": "string",
        "description": "Current state of email notifications for the incident."
      },
      "End": {
        "type": "datetime",
        "description": "Timestamp when the incident was closed or resolved."
      },
      "EventsHistogram": {
        "type": "dynamic",
        "description": "Timeline of events associated with the incident."
      },
      "FineScore": {
        "type": "int",
        "description": "Severity score assigned to the incident."
      },
      "GroupingIds": {
        "type": "dynamic",
        "description": "List of IDs used to group related incidents."
      },
      "HostIds": {
        "type": "dynamic",
        "description": "List of host IDs involved in the incident."
      },
      "Hosts": {
        "type": "dynamic",
        "description": "Detailed information about affected hosts."
      },
      "IncidentId": {
        "type": "string",
        "description": "Unique identifier for the incident."
      },
      "IncidentType": {
        "type": "int",
        "description": "Numerical identifier for the type of incident."
      },
      "LmHostIds": {
        "type": "dynamic",
        "description": "List of host IDs associated with Lightweight Mode."
      },
      "LmHostsCapped": {
        "type": "bool",
        "description": "Indicates if the number of Lightweight Mode hosts was capped."
      },
      "LmraHostIds": {
        "type": "dynamic",
        "description": "List of host IDs associated with LMRA (Lightweight Mode Remote"
      },
      "LmraHostsCapped": {
        "type": "bool",
        "description": "Indicates if the number of LMRA hosts was capped."
      },
      "LmTypes": {
        "type": "int",
        "description": "Types of Lightweight Mode configurations."
      },
      "Objectives": {
        "type": "dynamic",
        "description": "List of attacker objectives identified in the incident."
      },
      "Start": {
        "type": "datetime",
        "description": "Timestamp when the incident started."
      },
      "State": {
        "type": "string",
        "description": "Current state of the incident."
      },
      "Tactics": {
        "type": "dynamic",
        "description": "List of MITRE ATT&CK tactics identified in the incident."
      },
      "Techniques": {
        "type": "dynamic",
        "description": "List of MITRE ATT&CK techniques identified in the incident."
      },
      "Users": {
        "type": "dynamic",
        "description": "List of users involved in or affected by the incident."
      },
      "Aid": {
        "type": "string",
        "description": "Agent ID of the system where vulnerability was detected."
      },
      "App": {
        "type": "dynamic",
        "description": "Detailed information about the affected application."
      },
      "Apps": {
        "type": "dynamic",
        "description": "List of affected applications."
      },
      "Cve": {
        "type": "dynamic",
        "description": "Common Vulnerabilities and Exposures (CVE) information."
      },
      "DataProviders": {
        "type": "dynamic",
        "description": "List of data providers that reported this vulnerability."
      },
      "Remediation": {
        "type": "dynamic",
        "description": "Remediation steps or recommendations for the vulnerability."
      },
      "SuppressionInfo": {
        "type": "dynamic",
        "description": "Information about vulnerability suppression if applied."
      },
      "VulnerabilityId": {
        "type": "string",
        "description": "Unique identifier for the specific vulnerability."
      }
    }
  },
  "DCRLogErrors": {
    "tableName": "DCRLogErrors",
    "description": "Errors registered during DCR-based data collection and transformation.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClientRequestId": {
        "type": "string",
        "description": "Guid passed in x-ms-client-request-id header while ingesting data."
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID for the correlated events. Can be used to identify correlated events"
      },
      "InputStreamId": {
        "type": "string",
        "description": "Stream name of the input."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Message": {
        "type": "string",
        "description": "Error describing the issue."
      },
      "OperationName": {
        "type": "string",
        "description": "Name of the operation, Can be Ingestion or Transformation."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "DCRLogTroubleshooting": {
    "tableName": "DCRLogTroubleshooting",
    "description": "Logs from DCR-based data collection and transformation to help with troubleshooting of DCR configuration and flow.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClientRequestId": {
        "type": "string",
        "description": "Guid passed in x-ms-client-request-id header while ingesting data."
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID for the correlated events. Can be used to identify correlated events"
      },
      "InputStreamId": {
        "type": "string",
        "description": "Stream name of the input."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Message": {
        "type": "string",
        "description": "Error describing the issue."
      },
      "OperationName": {
        "type": "string",
        "description": "Name of the operation, Can be Ingestion or Transformation."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "DHAppReliability": {
    "tableName": "DHAppReliability",
    "description": "",
    "columns": {
      "AppFileDisplayName": {
        "type": "string",
        "description": ""
      },
      "AppFileName": {
        "type": "string",
        "description": ""
      },
      "AppFileVersion": {
        "type": "string",
        "description": ""
      },
      "AppName": {
        "type": "string",
        "description": ""
      },
      "AppVersion": {
        "type": "string",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Computer": {
        "type": "string",
        "description": ""
      },
      "ComputerID": {
        "type": "string",
        "description": ""
      },
      "ConfigMgrClientID": {
        "type": "string",
        "description": ""
      },
      "CrashFreeDevicesPercentForIndustryTrailing": {
        "type": "real",
        "description": ""
      },
      "DeviceLastSeenTime": {
        "type": "datetime",
        "description": ""
      },
      "HangFreeDevicesPercentForIndustryTrailing": {
        "type": "real",
        "description": ""
      },
      "HasCrashesDaily": {
        "type": "bool",
        "description": ""
      },
      "HasCrashesTrailing": {
        "type": "bool",
        "description": ""
      },
      "HasHangsDaily": {
        "type": "bool",
        "description": ""
      },
      "HasHangsTrailing": {
        "type": "bool",
        "description": ""
      },
      "HasIncidentsDaily": {
        "type": "bool",
        "description": ""
      },
      "HasIncidentsTrailing": {
        "type": "bool",
        "description": ""
      },
      "HasUsageDaily": {
        "type": "bool",
        "description": ""
      },
      "HasUsageTrailing": {
        "type": "bool",
        "description": ""
      },
      "IncidentFreeDevicesPercentForIndustryTrailing": {
        "type": "real",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is"
      },
      "OSBuildNumber": {
        "type": "int",
        "description": ""
      },
      "OSRevisionNumber": {
        "type": "int",
        "description": ""
      },
      "OSVersion": {
        "type": "string",
        "description": ""
      },
      "Publisher": {
        "type": "string",
        "description": ""
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "DHDriverReliability": {
    "tableName": "DHDriverReliability",
    "description": "",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Computer": {
        "type": "string",
        "description": ""
      },
      "ComputerID": {
        "type": "string",
        "description": ""
      },
      "DeviceLastSeenTime": {
        "type": "datetime",
        "description": ""
      },
      "DriverKernelModeCrashCount": {
        "type": "int",
        "description": ""
      },
      "DriverName": {
        "type": "string",
        "description": ""
      },
      "DriverPercentCrashFreeDevicesForIndustry": {
        "type": "real",
        "description": ""
      },
      "DriverVendor": {
        "type": "string",
        "description": ""
      },
      "DriverVersion": {
        "type": "string",
        "description": ""
      },
      "HardwareType": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable."
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "DHLogonFailures": {
    "tableName": "DHLogonFailures",
    "description": "",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Computer": {
        "type": "string",
        "description": ""
      },
      "ComputerID": {
        "type": "string",
        "description": ""
      },
      "Country": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "LogonStatus": {
        "type": "string",
        "description": ""
      },
      "LogonSubStatus": {
        "type": "string",
        "description": ""
      },
      "Manufacturer": {
        "type": "string",
        "description": ""
      },
      "Model": {
        "type": "string",
        "description": ""
      },
      "ModelFamily": {
        "type": "string",
        "description": ""
      },
      "OSArchitecture": {
        "type": "string",
        "description": ""
      },
      "OSBuildNumber": {
        "type": "int",
        "description": ""
      },
      "OSEdition": {
        "type": "string",
        "description": ""
      },
      "OSRevisionNumber": {
        "type": "int",
        "description": ""
      },
      "OSVersion": {
        "type": "string",
        "description": ""
      },
      "ProviderId": {
        "type": "string",
        "description": ""
      },
      "ProviderName": {
        "type": "string",
        "description": ""
      },
      "SignInFailureCount": {
        "type": "long",
        "description": ""
      },
      "SignInFailureReason": {
        "type": "string",
        "description": ""
      },
      "SignInUserError": {
        "type": "string",
        "description": ""
      },
      "SuggestedSignInRemediation": {
        "type": "string",
        "description": ""
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "DHLogonMetrics": {
    "tableName": "DHLogonMetrics",
    "description": "",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Computer": {
        "type": "string",
        "description": ""
      },
      "ComputerID": {
        "type": "string",
        "description": ""
      },
      "Country": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "Manufacturer": {
        "type": "string",
        "description": ""
      },
      "Model": {
        "type": "string",
        "description": ""
      },
      "ModelFamily": {
        "type": "string",
        "description": ""
      },
      "OSArchitecture": {
        "type": "string",
        "description": ""
      },
      "OSBuildNumber": {
        "type": "int",
        "description": ""
      },
      "OSEdition": {
        "type": "string",
        "description": ""
      },
      "OSRevisionNumber": {
        "type": "int",
        "description": ""
      },
      "OSVersion": {
        "type": "string",
        "description": ""
      },
      "PreferredSignInProviderId": {
        "type": "string",
        "description": ""
      },
      "PreferredSignInProviderName": {
        "type": "string",
        "description": ""
      },
      "ProviderId": {
        "type": "string",
        "description": ""
      },
      "ProviderName": {
        "type": "string",
        "description": ""
      },
      "SignInIndustrySuccessRate": {
        "type": "real",
        "description": ""
      },
      "SignInSuccessRate": {
        "type": "real",
        "description": ""
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "TotalDailySignIns": {
        "type": "long",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "DHOSCrashData": {
    "tableName": "DHOSCrashData",
    "description": "",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Computer": {
        "type": "string",
        "description": ""
      },
      "ComputerID": {
        "type": "string",
        "description": ""
      },
      "DriverName": {
        "type": "string",
        "description": ""
      },
      "DriverVersion": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "KernelModeCrashBugCheckCode": {
        "type": "string",
        "description": ""
      },
      "KernelModeCrashCount": {
        "type": "int",
        "description": ""
      },
      "KernelModeCrashFailureId": {
        "type": "string",
        "description": ""
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "DHOSReliability": {
    "tableName": "DHOSReliability",
    "description": "",
    "columns": {
      "AbnormalShutdownCount": {
        "type": "int",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Computer": {
        "type": "string",
        "description": ""
      },
      "ComputerID": {
        "type": "string",
        "description": ""
      },
      "ConfigMgrClientID": {
        "type": "string",
        "description": ""
      },
      "Country": {
        "type": "string",
        "description": ""
      },
      "DeviceLastSeenTime": {
        "type": "datetime",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable."
      },
      "KernelModeCrashCount": {
        "type": "int",
        "description": ""
      },
      "KernelModeCrashFreePercentForIndustry": {
        "type": "real",
        "description": ""
      },
      "Manufacturer": {
        "type": "string",
        "description": ""
      },
      "Model": {
        "type": "string",
        "description": ""
      },
      "ModelFamily": {
        "type": "string",
        "description": ""
      },
      "OSArchitecture": {
        "type": "string",
        "description": ""
      },
      "OSBuildNumber": {
        "type": "int",
        "description": ""
      },
      "OSEdition": {
        "type": "string",
        "description": ""
      },
      "OSRevisionNumber": {
        "type": "int",
        "description": ""
      },
      "OSVersion": {
        "type": "string",
        "description": ""
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "DHWipAppLearning": {
    "tableName": "DHWipAppLearning",
    "description": "",
    "columns": {
      "AppName": {
        "type": "string",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Computer": {
        "type": "string",
        "description": ""
      },
      "ComputerID": {
        "type": "string",
        "description": ""
      },
      "ConfigMgrClientID": {
        "type": "string",
        "description": ""
      },
      "EventFiredTime": {
        "type": "datetime",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "WipActionType": {
        "type": "string",
        "description": ""
      },
      "WipAppId": {
        "type": "string",
        "description": ""
      },
      "WipAppIdType": {
        "type": "string",
        "description": ""
      },
      "WipAppRuleType": {
        "type": "string",
        "description": ""
      }
    }
  },
  "DNSQueryLogs": {
    "tableName": "DNSQueryLogs",
    "description": "DNS query logs enable customers to monitor the DNS traffic in their virtual networks and help securing their DNS infrastructure.",
    "columns": {
      "AdditionalRecords": {
        "type": "dynamic",
        "description": "Array of additional resource records."
      },
      "Answer": {
        "type": "dynamic",
        "description": "Array of answers for DNS query."
      },
      "Authority": {
        "type": "dynamic",
        "description": "Array of authority DNS servers for DNS query."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DestinationIpAddress": {
        "type": "string",
        "description": "The IP address of the instance that the query was sent to"
      },
      "DestinationPort": {
        "type": "int",
        "description": "The port on the instance that the query was sent to."
      },
      "DnsForwardingRulesetDomain": {
        "type": "string",
        "description": "The domain which was hit in the DNS Forwarding ruleset."
      },
      "DnsForwardingRulesetId": {
        "type": "string",
        "description": "The ID of the DNS forwarding ruleset which was hit."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "OperationName": {
        "type": "string",
        "description": "Name of the operation."
      },
      "PrivateResolverEndpointId": {
        "type": "string",
        "description": "The ID of the resolver endpoint. Can be inbound, or"
      },
      "QueryClass": {
        "type": "string",
        "description": "Specifies the protocol family. For example, IN for Internet."
      },
      "QueryName": {
        "type": "string",
        "description": "The domain name (contoso.com) or subdomain name"
      },
      "QueryResponseTime": {
        "type": "int",
        "description": "Response time for resolution of DNS query."
      },
      "QueryType": {
        "type": "string",
        "description": "Either the DNS record type that was specified in the request,"
      },
      "Region": {
        "type": "string",
        "description": "The region where the virtual network was created in."
      },
      "ResolutionPath": {
        "type": "string",
        "description": "Resolution path can be private zones, ruleset, or public DNS"
      },
      "ResolverPolicyDomainListId": {
        "type": "string",
        "description": "The ID of the domain list which was hit."
      },
      "ResolverPolicyId": {
        "type": "string",
        "description": "The ID of the security policy which filtered the query."
      },
      "ResolverPolicyRuleAction": {
        "type": "string",
        "description": "Result after evaluation of the policy rules."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "ResponseCode": {
        "type": "int",
        "description": "Response code that resolver returned in response to the DNS"
      },
      "SourceIpAddress": {
        "type": "string",
        "description": "The IP address of the instance that the query originated from."
      },
      "SourcePort": {
        "type": "int",
        "description": "The port on the instance that the query originated from."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Time (UTC) when the log was created."
      },
      "Transport": {
        "type": "string",
        "description": "The protocol (UDP or TCP) used to submit the DNS query."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "Version": {
        "type": "string",
        "description": "The version number of the query log format."
      },
      "VirtualNetworkId": {
        "type": "string",
        "description": "The ID of the virtual network that the query originated in."
      }
    }
  },
  "DSMAzureBlobStorageLogs": {
    "tableName": "DSMAzureBlobStorageLogs",
    "description": "Azure Blob Storage resource logs enriched with data sensitivity context provided by Azure Purview.",
    "columns": {
      "AccountName": {
        "type": "string",
        "description": "The name of the storage account."
      },
      "AggregationCount": {
        "type": "long",
        "description": "Number of events that were aggregated into a single entry."
      },
      "AggregationLastEventTime": {
        "type": "datetime",
        "description": "The time (UTC) when the last request was received by storage."
      },
      "AuthenticationHash": {
        "type": "string",
        "description": "The hash of authentication token."
      },
      "AuthenticationType": {
        "type": "string",
        "description": "The type of authentication that was used to make the request."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CallerIpAddress": {
        "type": "string",
        "description": "The IP address of the requester."
      },
      "Category": {
        "type": "string",
        "description": "The category of requested operation."
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID that is used to correlate resource logs with data sensitivity"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable"
      },
      "Location": {
        "type": "string",
        "description": "The location of storage account."
      },
      "OperationName": {
        "type": "string",
        "description": "The type of REST operation that was performed. For example:"
      },
      "RequesterAppId": {
        "type": "string",
        "description": "The Open Authorization (OAuth) application ID that is used as"
      },
      "RequesterObjectId": {
        "type": "string",
        "description": "The Open Authorization (OAuth) object ID that is used as the"
      },
      "RequesterTenantId": {
        "type": "string",
        "description": "The Open Authorization (OAuth) tenant ID that is used as the"
      },
      "RequesterUpn": {
        "type": "string",
        "description": "The user principal names (UPN) of requestor."
      },
      "ResourceGroup": {
        "type": "string",
        "description": "The Resource Group name of the storage account that was"
      },
      "ResourceSubscriptionId": {
        "type": "string",
        "description": "The subscription ID (GUID) of the storage account being"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "StatusCode": {
        "type": "string",
        "description": "The HTTP status code for the request. If the request is"
      },
      "SumResponseBodySize": {
        "type": "long",
        "description": "The sum of packets in responses written by the storage service,"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The time (UTC) when the first request was received by storage."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "Uri": {
        "type": "string",
        "description": "Uniform resource identifier that is requested."
      },
      "UserAgentHeader": {
        "type": "string",
        "description": "The user-agent header value."
      }
    }
  },
  "DSMDataClassificationLogs": {
    "tableName": "DSMDataClassificationLogs",
    "description": "Contains data classification information provided by Azure Purview and is used to correlate storage resource logs with data sensitivity information.",
    "columns": {
      "AssetLastScanTime": {
        "type": "datetime",
        "description": "The time (UTC) when the resource scan for sensitivity was performed by"
      },
      "AssetType": {
        "type": "string",
        "description": "Type of asset that was scanned by Azure Purview (e.g., File, Table)."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClassificationDetails": {
        "type": "dynamic",
        "description": "For every classification found in the resource - corresponding Instance"
      },
      "Classifications": {
        "type": "dynamic",
        "description": "JSON containing the list of classifications that were discovered."
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID that is used to correlate resource logs with data sensitivity logs."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "SourceType": {
        "type": "string",
        "description": "Type of resource that was scanned by Azure Purview (Azure Blob, Azure"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The time (UTC) when Azure Purview scan of asset occurred."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "Uri": {
        "type": "string",
        "description": "Uniform resource identifier representing the asset that was scanned."
      }
    }
  },
  "DSMDataLabelingLogs": {
    "tableName": "DSMDataLabelingLogs",
    "description": "Contains data sensitivity labeling information provided by Azure Purview and is used to correlate storage resource logs with data sensitivity information.",
    "columns": {
      "AssetLastScanTime": {
        "type": "datetime",
        "description": "The time (UTC) when the resource scan for sensitivity was performed"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID that is used to correlate resource logs with data sensitivity logs."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "SensitivityLabelName": {
        "type": "string",
        "description": "The name of sensitive label found and/or applied."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time (UTC) when the log was generated. This column can be"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "Uri": {
        "type": "string",
        "description": "Uniform resource identifier representing the resource that was"
      },
      "DataSetRunId": {
        "type": "string",
        "description": "Randomly generated unique indentifier (brace-less UUID) for each"
      },
      "DataSetRunSeqNum": {
        "type": "int",
        "description": "A monotonically increasing counter for each log collected during a"
      },
      "DataSourceName": {
        "type": "string",
        "description": "Data source name as provided by DCR. Example: GenerateTaskList."
      },
      "RawData": {
        "type": "string",
        "description": "An arbitrary string containing the collected data for this log record. The"
      },
      "RawDataLabel": {
        "type": "string",
        "description": "Short string that uniquely identifies the format of the collected"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "CorrelationParams": {
        "type": "dynamic",
        "description": "A set of parameters, in JSON, that provide identifiers or other strings"
      },
      "DCRId": {
        "type": "string",
        "description": "The ARM resource Id of the Data Collection Rule (DCR) that produced the"
      },
      "Name": {
        "type": "string",
        "description": "The name field from the DCR used for data collection. Example:"
      },
      "Status": {
        "type": "string",
        "description": "The operation status of the data set collection. This status could apply to"
      },
      "StatusDetail": {
        "type": "dynamic",
        "description": "Additional information about the status of the data set collection, in"
      },
      "TimeoutMinutes": {
        "type": "int",
        "description": "The duration, in minutes, that a data set collection or data source"
      }
    }
  },
  "DataTransferOperations": {
    "tableName": "DataTransferOperations",
    "description": "Logs generated by Azure Data Transfer as objects are transferred. These logs can be used to determine if an object has successfully transferred, failed to transfer, or is in the process of transferring. A typical use case would be an objects latest status of 'InTransit' indicating that the object is still transferring and no action needs to be taken.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CorrelationId": {
        "type": "string",
        "description": "Correlates different log messages for the same object."
      },
      "Description": {
        "type": "string",
        "description": "Description of the object's state as it is transferred."
      },
      "FlowId": {
        "type": "string",
        "description": "The internal ID of the customer's flow."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "ObjectLastUpdated": {
        "type": "datetime",
        "description": "Timestamp (in UTC) when the object was last updated."
      },
      "ObjectName": {
        "type": "string",
        "description": "Name of the customer's object."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "Status": {
        "type": "string",
        "description": "The status of the object as it is transferred. The status will let a customer"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (in UTC) when the log was created."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "DatabricksAccounts": {
    "tableName": "DatabricksAccounts",
    "description": "Databricks Accounts audit logs.",
    "columns": {
      "ActionName": {
        "type": "string",
        "description": "The action of the request."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The service that logged the request."
      },
      "Identity": {
        "type": "string",
        "description": "Information about the user that makes the requests."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogId": {
        "type": "string",
        "description": "The unique identifier for the log messages."
      },
      "OperationName": {
        "type": "string",
        "description": "The action, such as login, logout, read, write, etc."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The schema version of the Databricks operation-based diagnostic log"
      },
      "RequestId": {
        "type": "string",
        "description": "Unique request ID."
      },
      "RequestParams": {
        "type": "string",
        "description": "Parameter key-value pairs used in the event."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Response": {
        "type": "string",
        "description": "The HTTP response to the request, including error message (if applicable),"
      },
      "ServiceName": {
        "type": "string",
        "description": "The service of the source request."
      },
      "SessionId": {
        "type": "string",
        "description": "Session ID of the action."
      },
      "SourceIPAddress": {
        "type": "string",
        "description": "The IP address of the source request."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp of the action (UTC)."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The browser or API client used to make the request."
      }
    }
  },
  "DatabricksApps": {
    "tableName": "DatabricksApps",
    "description": "Audit logs for Databricks lakehouse apps.",
    "columns": {
      "ActionName": {
        "type": "string",
        "description": "The action name."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The category of the log."
      },
      "Identity": {
        "type": "dynamic",
        "description": "The identity of the user who performed the operation."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogId": {
        "type": "string",
        "description": "The log ID in Databricks domain."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The API version of the operation."
      },
      "RequestId": {
        "type": "string",
        "description": "The request ID."
      },
      "RequestParams": {
        "type": "dynamic",
        "description": "The request parameters."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Response": {
        "type": "dynamic",
        "description": "The response."
      },
      "ServiceName": {
        "type": "string",
        "description": "The service name."
      },
      "SessionId": {
        "type": "string",
        "description": "The session ID."
      },
      "SourceIpAddress": {
        "type": "string",
        "description": "The IP address of the client that performed the operation."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The user agent."
      }
    }
  },
  "DatabricksBrickStoreHttpGateway": {
    "tableName": "DatabricksBrickStoreHttpGateway",
    "description": "Contains Databricks Brick Store Http Gateway logs.",
    "columns": {
      "ActionName": {
        "type": "string",
        "description": "The action name."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The category of the log."
      },
      "Identity": {
        "type": "dynamic",
        "description": "The identity of the user who performed the operation."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogId": {
        "type": "string",
        "description": "The log ID in Databricks domain."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The API version of the operation."
      },
      "RequestId": {
        "type": "string",
        "description": "The request ID."
      },
      "RequestParams": {
        "type": "dynamic",
        "description": "The request parameters."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Response": {
        "type": "dynamic",
        "description": "The response."
      },
      "ServiceName": {
        "type": "string",
        "description": "The service name."
      },
      "SessionId": {
        "type": "string",
        "description": "The session ID."
      },
      "SourceIpAddress": {
        "type": "string",
        "description": "The IP address of the client that performed the operation."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The user agent."
      }
    }
  },
  "DatabricksBudgetPolicyCentral": {
    "tableName": "DatabricksBudgetPolicyCentral",
    "description": "Audit logs for Databricks BudgetPolicyCentral.",
    "columns": {
      "ActionName": {
        "type": "string",
        "description": "The action name."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The category of the log."
      },
      "Identity": {
        "type": "dynamic",
        "description": "The identity of the user who performed the operation."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogId": {
        "type": "string",
        "description": "The log ID in Databricks domain."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The API version of the operation."
      },
      "RequestId": {
        "type": "string",
        "description": "The request ID."
      },
      "RequestParams": {
        "type": "dynamic",
        "description": "The request parameters."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Response": {
        "type": "dynamic",
        "description": "The response."
      },
      "ServiceName": {
        "type": "string",
        "description": "The service name."
      },
      "SessionId": {
        "type": "string",
        "description": "The session ID."
      },
      "SourceIpAddress": {
        "type": "string",
        "description": "The IP address of the client that performed the operation."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The user agent."
      }
    }
  },
  "DatabricksCapsule8Dataplane": {
    "tableName": "DatabricksCapsule8Dataplane",
    "description": "Audit logs for Databricks service capsule8-alerts-dataplane.",
    "columns": {
      "ActionName": {
        "type": "string",
        "description": "The action of the request."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The service that logged the request."
      },
      "Identity": {
        "type": "dynamic",
        "description": "Information about the user that makes the requests."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogId": {
        "type": "string",
        "description": "The unique identifier for the log messages."
      },
      "OperationName": {
        "type": "string",
        "description": "The action, such as login, logout, read, write, etc."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The Databricks schema version of the diagnostic log format."
      },
      "RequestId": {
        "type": "string",
        "description": "Unique request ID."
      },
      "RequestParams": {
        "type": "dynamic",
        "description": "Parameters, key-value pairs used in the event."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Response": {
        "type": "dynamic",
        "description": "The HTTP response to the request, including error message (if applicable),"
      },
      "ServiceName": {
        "type": "string",
        "description": "The service of the source request."
      },
      "SessionId": {
        "type": "string",
        "description": "Session ID of the action."
      },
      "SourceIPAddress": {
        "type": "string",
        "description": "The IP address of the source request."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp of the action (UTC)."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The browser or API client used to make the request."
      }
    }
  },
  "DatabricksClamAVScan": {
    "tableName": "DatabricksClamAVScan",
    "description": "Audit logs for Databricks clamav scan service",
    "columns": {
      "ActionName": {
        "type": "string",
        "description": "The action of the request."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The service that logged the request."
      },
      "Identity": {
        "type": "dynamic",
        "description": "Information about the user that makes the requests."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogId": {
        "type": "string",
        "description": "The unique identifier for the log messages."
      },
      "OperationName": {
        "type": "string",
        "description": "The action, such as login, logout, read, write, etc."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The Databricks schema version of the diagnostic log format."
      },
      "RequestId": {
        "type": "string",
        "description": "Unique request ID."
      },
      "RequestParams": {
        "type": "dynamic",
        "description": "Parameters, key-value pairs used in the event."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Response": {
        "type": "dynamic",
        "description": "The HTTP response to the request, including error message (if applicable),"
      },
      "ServiceName": {
        "type": "string",
        "description": "The service of the source request."
      },
      "SessionId": {
        "type": "string",
        "description": "Session ID of the action."
      },
      "SourceIPAddress": {
        "type": "string",
        "description": "The IP address of the source request."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp of the action (UTC)."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The browser or API client used to make the request."
      }
    }
  },
  "DatabricksCloudStorageMetadata": {
    "tableName": "DatabricksCloudStorageMetadata",
    "description": "Contains Databricks Cloud Storage Metadata logs.",
    "columns": {
      "ActionName": {
        "type": "string",
        "description": "The action name."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The category of the log."
      },
      "Identity": {
        "type": "dynamic",
        "description": "The identity of the user who performed the operation."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogId": {
        "type": "string",
        "description": "The log ID in Databricks domain."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The API version of the operation."
      },
      "RequestId": {
        "type": "string",
        "description": "The request ID."
      },
      "RequestParams": {
        "type": "dynamic",
        "description": "The request parameters."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Response": {
        "type": "dynamic",
        "description": "The response."
      },
      "ServiceName": {
        "type": "string",
        "description": "The service name."
      },
      "SessionId": {
        "type": "string",
        "description": "The session ID."
      },
      "SourceIpAddress": {
        "type": "string",
        "description": "The IP address of the client that performed the operation."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The user agent."
      }
    }
  },
  "DatabricksClusterLibraries": {
    "tableName": "DatabricksClusterLibraries",
    "description": "Audit logs for actions taken on cluster libraries in Databricks.",
    "columns": {
      "ActionName": {
        "type": "string",
        "description": "The action of the request."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The service that logged the request."
      },
      "Identity": {
        "type": "dynamic",
        "description": "Information about the user that makes the requests."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogId": {
        "type": "string",
        "description": "The unique identifier for the log messages."
      },
      "OperationName": {
        "type": "string",
        "description": "The action, such as login, logout, read, write, etc."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The Databricks schema version of the diagnostic log format."
      },
      "RequestId": {
        "type": "string",
        "description": "Unique request ID."
      },
      "RequestParams": {
        "type": "dynamic",
        "description": "Parameters, key-value pairs used in the event."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Response": {
        "type": "dynamic",
        "description": "The HTTP response to the request, including error message (if applicable),"
      },
      "ServiceName": {
        "type": "string",
        "description": "The service of the source request."
      },
      "SessionId": {
        "type": "string",
        "description": "Session ID of the action."
      },
      "SourceIPAddress": {
        "type": "string",
        "description": "The IP address of the source request."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp of the action (UTC)."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The browser or API client used to make the request."
      }
    }
  },
  "DatabricksClusterPolicies": {
    "tableName": "DatabricksClusterPolicies",
    "description": "Audit logs for Databricks cluster policies.",
    "columns": {
      "ActionName": {
        "type": "string",
        "description": "The action name."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The category of the log."
      },
      "Identity": {
        "type": "dynamic",
        "description": "The identity of the user who performed the operation."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogId": {
        "type": "string",
        "description": "The log ID in Databricks domain."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The API version of the operation."
      },
      "RequestId": {
        "type": "string",
        "description": "The request ID."
      },
      "RequestParams": {
        "type": "dynamic",
        "description": "The request parameters."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Response": {
        "type": "dynamic",
        "description": "The response."
      },
      "ServiceName": {
        "type": "string",
        "description": "The service name."
      },
      "SessionId": {
        "type": "string",
        "description": "The session ID."
      },
      "SourceIpAddress": {
        "type": "string",
        "description": "The IP address of the client that performed the operation."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The user agent."
      }
    }
  },
  "DatabricksClusters": {
    "tableName": "DatabricksClusters",
    "description": "Databricks Clusters audit logs.",
    "columns": {
      "ActionName": {
        "type": "string",
        "description": "The action of the request."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The service that logged the request."
      },
      "Identity": {
        "type": "string",
        "description": "Information about the user that makes the requests."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogId": {
        "type": "string",
        "description": "The unique identifier for the log messages."
      },
      "OperationName": {
        "type": "string",
        "description": "The action, such as login, logout, read, write, etc."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The schema version of the Databricks operation-based diagnostic log"
      },
      "RequestId": {
        "type": "string",
        "description": "Unique request ID."
      },
      "RequestParams": {
        "type": "string",
        "description": "Parameter key-value pairs used in the event."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Response": {
        "type": "string",
        "description": "The HTTP response to the request, including error message (if applicable),"
      },
      "ServiceName": {
        "type": "string",
        "description": "The service of the source request."
      },
      "SessionId": {
        "type": "string",
        "description": "Session ID of the action."
      },
      "SourceIPAddress": {
        "type": "string",
        "description": "The IP address of the source request."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp of the action (UTC)."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The browser or API client used to make the request."
      }
    }
  },
  "DatabricksDBFS": {
    "tableName": "DatabricksDBFS",
    "description": "Databricks DBFS audit logs.",
    "columns": {
      "ActionName": {
        "type": "string",
        "description": "The action of the request."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The service that logged the request."
      },
      "Identity": {
        "type": "string",
        "description": "Information about the user that makes the requests."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogId": {
        "type": "string",
        "description": "The unique identifier for the log messages."
      },
      "OperationName": {
        "type": "string",
        "description": "The action, such as login, logout, read, write, etc."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The Databricks schema version of the diagnostic log format."
      },
      "RequestId": {
        "type": "string",
        "description": "Unique request ID."
      },
      "RequestParams": {
        "type": "string",
        "description": "Parameter key-value pairs used in the event."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Response": {
        "type": "string",
        "description": "The HTTP response to the request, including error message (if applicable),"
      },
      "ServiceName": {
        "type": "string",
        "description": "The service of the source request."
      },
      "SessionId": {
        "type": "string",
        "description": "Session ID of the action."
      },
      "SourceIPAddress": {
        "type": "string",
        "description": "The IP address of the source request."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp of the action (UTC)."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The browser or API client used to make the request."
      }
    }
  },
  "DatabricksDashboards": {
    "tableName": "DatabricksDashboards",
    "description": "Contains Databricks Dashboards logs.",
    "columns": {
      "ActionName": {
        "type": "string",
        "description": "The action name."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The category of the log."
      },
      "Identity": {
        "type": "dynamic",
        "description": "The identity of the user who performed the operation."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogId": {
        "type": "string",
        "description": "The log ID in Databricks domain."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The API version of the operation."
      },
      "RequestId": {
        "type": "string",
        "description": "The request ID."
      },
      "RequestParams": {
        "type": "dynamic",
        "description": "The request parameters."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Response": {
        "type": "dynamic",
        "description": "The response."
      },
      "ServiceName": {
        "type": "string",
        "description": "The service name."
      },
      "SessionId": {
        "type": "string",
        "description": "The session ID."
      },
      "SourceIpAddress": {
        "type": "string",
        "description": "The IP address of the client that performed the operation."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The user agent."
      }
    }
  },
  "DatabricksDataMonitoring": {
    "tableName": "DatabricksDataMonitoring",
    "description": "Contains Databricks Data Monitoring logs.",
    "columns": {
      "ActionName": {
        "type": "string",
        "description": "The action name."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The category of the log."
      },
      "Identity": {
        "type": "dynamic",
        "description": "The identity of the user who performed the operation."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogId": {
        "type": "string",
        "description": "The log ID in Databricks domain."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The API version of the operation."
      },
      "RequestId": {
        "type": "string",
        "description": "The request ID."
      },
      "RequestParams": {
        "type": "dynamic",
        "description": "The request parameters."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Response": {
        "type": "dynamic",
        "description": "The response."
      },
      "ServiceName": {
        "type": "string",
        "description": "The service name."
      },
      "SessionId": {
        "type": "string",
        "description": "The session ID."
      },
      "SourceIpAddress": {
        "type": "string",
        "description": "The IP address of the client that performed the operation."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The user agent."
      }
    }
  },
  "DatabricksDataRooms": {
    "tableName": "DatabricksDataRooms",
    "description": "Audit logs for Databricks data rooms.",
    "columns": {
      "ActionName": {
        "type": "string",
        "description": "The action name."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The category of the log."
      },
      "Identity": {
        "type": "dynamic",
        "description": "The identity of the user who performed the operation."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogId": {
        "type": "string",
        "description": "The log ID in Databricks domain."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The API version of the operation."
      },
      "RequestId": {
        "type": "string",
        "description": "The request ID."
      },
      "RequestParams": {
        "type": "dynamic",
        "description": "The request parameters."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Response": {
        "type": "dynamic",
        "description": "The response."
      },
      "ServiceName": {
        "type": "string",
        "description": "The service name."
      },
      "SessionId": {
        "type": "string",
        "description": "The session ID."
      },
      "SourceIpAddress": {
        "type": "string",
        "description": "The IP address of the client that performed the operation."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The user agent."
      }
    }
  },
  "DatabricksDatabricksSQL": {
    "tableName": "DatabricksDatabricksSQL",
    "description": "Databricks databrickssql audit logs.",
    "columns": {
      "ActionName": {
        "type": "string",
        "description": "The action of the request."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The service that logged the request."
      },
      "Identity": {
        "type": "string",
        "description": "Information about the user that makes the requests."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogId": {
        "type": "string",
        "description": "The unique identifier for the log messages."
      },
      "OperationName": {
        "type": "string",
        "description": "The action, such as login, logout, read, write, etc."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The Databricks schema version of the diagnostic log format."
      },
      "RequestId": {
        "type": "string",
        "description": "Unique request ID."
      },
      "RequestParams": {
        "type": "string",
        "description": "Parameter key-value pairs used in the event."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Response": {
        "type": "string",
        "description": "The HTTP response to the request, including error message (if applicable),"
      },
      "ServiceName": {
        "type": "string",
        "description": "The service of the source request."
      },
      "SessionId": {
        "type": "string",
        "description": "Session ID of the action."
      },
      "SourceIPAddress": {
        "type": "string",
        "description": "The IP address of the source request."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp of the action (UTC)."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The browser or API client used to make the request."
      }
    }
  },
  "DatabricksDeltaPipelines": {
    "tableName": "DatabricksDeltaPipelines",
    "description": "Databricks delta pipelines audit logs.",
    "columns": {
      "ActionName": {
        "type": "string",
        "description": "The action of the request."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The service that logged the request."
      },
      "Identity": {
        "type": "string",
        "description": "Information about the user that makes the requests."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogId": {
        "type": "string",
        "description": "The unique identifier for the log messages."
      },
      "OperationName": {
        "type": "string",
        "description": "The action, such as login, logout, read, write, etc."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The Databricks schema version of the diagnostic log format."
      },
      "RequestId": {
        "type": "string",
        "description": "Unique request ID."
      },
      "RequestParams": {
        "type": "string",
        "description": "Parameter key-value pairs used in the event."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Response": {
        "type": "string",
        "description": "The HTTP response to the request, including error message (if applicable),"
      },
      "ServiceName": {
        "type": "string",
        "description": "The service of the source request."
      },
      "SessionId": {
        "type": "string",
        "description": "Session ID of the action."
      },
      "SourceIPAddress": {
        "type": "string",
        "description": "The IP address of the source request."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp of the action (UTC)."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The browser or API client used to make the request."
      }
    }
  },
  "DatabricksFeatureStore": {
    "tableName": "DatabricksFeatureStore",
    "description": "Audit logs for events related to Databricks ML Feature Store operations.",
    "columns": {
      "ActionName": {
        "type": "string",
        "description": "The action name."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The category of the log."
      },
      "Identity": {
        "type": "dynamic",
        "description": "The identity of the user who performed the operation."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogId": {
        "type": "string",
        "description": "The log ID in Databricks domain."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The API version of the operation."
      },
      "RequestId": {
        "type": "string",
        "description": "The request ID."
      },
      "RequestParams": {
        "type": "dynamic",
        "description": "The request parameters."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Response": {
        "type": "dynamic",
        "description": "The response."
      },
      "ServiceName": {
        "type": "string",
        "description": "The service name."
      },
      "SessionId": {
        "type": "string",
        "description": "The session ID."
      },
      "SourceIPAddress": {
        "type": "string",
        "description": "The IP address of the source request."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The user agent."
      },
      "SourceIpAddress": {
        "type": "string",
        "description": "The IP address of the client that performed the operation."
      }
    }
  },
  "DatabricksFilesystem": {
    "tableName": "DatabricksFilesystem",
    "description": "Contains Databricks Filesystem logs.",
    "columns": {
      "ActionName": {
        "type": "string",
        "description": "The action name."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The category of the log."
      },
      "Identity": {
        "type": "dynamic",
        "description": "The identity of the user who performed the operation."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogId": {
        "type": "string",
        "description": "The log ID in Databricks domain."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The API version of the operation."
      },
      "RequestId": {
        "type": "string",
        "description": "The request ID."
      },
      "RequestParams": {
        "type": "dynamic",
        "description": "The request parameters."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Response": {
        "type": "dynamic",
        "description": "The response."
      },
      "ServiceName": {
        "type": "string",
        "description": "The service name."
      },
      "SessionId": {
        "type": "string",
        "description": "The session ID."
      },
      "SourceIpAddress": {
        "type": "string",
        "description": "The IP address of the client that performed the operation."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The user agent."
      }
    }
  },
  "DatabricksGenie": {
    "tableName": "DatabricksGenie",
    "description": "Audit logs for Databricks workspaces customer support access events.",
    "columns": {
      "ActionName": {
        "type": "string",
        "description": "The action of the request."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The service that logged the request."
      },
      "Identity": {
        "type": "string",
        "description": "Information about the user that makes the requests."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogId": {
        "type": "string",
        "description": "The unique identifier for the log message that can be used to deduplicate"
      },
      "OperationName": {
        "type": "string",
        "description": "The action, such as login, logout, read, write, etc."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The schema version of the Databricks operation-based diagnostic log"
      },
      "RequestId": {
        "type": "string",
        "description": "The unique request ID."
      },
      "RequestParams": {
        "type": "string",
        "description": "Parameter key-value pairs used in the event."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Response": {
        "type": "string",
        "description": "The HTTP response to the request, including error message (if applicable),"
      },
      "ServiceName": {
        "type": "string",
        "description": "The service of the source request."
      },
      "SessionId": {
        "type": "string",
        "description": "Session ID of the action."
      },
      "SourceIPAddress": {
        "type": "string",
        "description": "The IP address of the source request."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp of the action (UTC)."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The browser or API client used to make the request."
      }
    }
  },
  "DatabricksGitCredentials": {
    "tableName": "DatabricksGitCredentials",
    "description": "Databricks Git credentials audit logs.",
    "columns": {
      "ActionName": {
        "type": "string",
        "description": "The action of the request."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The service that logged the request."
      },
      "Identity": {
        "type": "dynamic",
        "description": "Information about the user that makes the requests."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogId": {
        "type": "string",
        "description": "The unique identifier for the log messages."
      },
      "OperationName": {
        "type": "string",
        "description": "The action, such as login, logout, read, write, etc."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The Databricks schema version of the diagnostic log format."
      },
      "RequestId": {
        "type": "string",
        "description": "Unique request ID."
      },
      "RequestParams": {
        "type": "dynamic",
        "description": "Parameter key-value pairs used in the event."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Response": {
        "type": "dynamic",
        "description": "The HTTP response to the request, including error message (if applicable),"
      },
      "ServiceName": {
        "type": "string",
        "description": "The service of the source request."
      },
      "SessionId": {
        "type": "string",
        "description": "Session ID of the action."
      },
      "SourceIPAddress": {
        "type": "string",
        "description": "The IP address of the source request."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp of the action (UTC)."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The browser or API client used to make the request."
      }
    }
  },
  "DatabricksGlobalInitScripts": {
    "tableName": "DatabricksGlobalInitScripts",
    "description": "Audit logs for events related to creation, modification etc. of Databricks cluster global init scripts.",
    "columns": {
      "ActionName": {
        "type": "string",
        "description": "The action of the request."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The service that logged the request."
      },
      "Identity": {
        "type": "string",
        "description": "Information about the user that makes the requests."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogId": {
        "type": "string",
        "description": "The unique identifier for the log message that can be used to deduplicate"
      },
      "OperationName": {
        "type": "string",
        "description": "The action, such as login, logout, read, write, etc."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The schema version of the Databricks operation-based diagnostic log"
      },
      "RequestId": {
        "type": "string",
        "description": "The unique request ID."
      },
      "RequestParams": {
        "type": "string",
        "description": "Parameter key-value pairs used in the event."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Response": {
        "type": "string",
        "description": "The HTTP response to the request, including error message (if applicable),"
      },
      "ServiceName": {
        "type": "string",
        "description": "The service of the source request."
      },
      "SessionId": {
        "type": "string",
        "description": "Session ID of the action."
      },
      "SourceIPAddress": {
        "type": "string",
        "description": "The IP address of the source request."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp of the action (UTC)."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The browser or API client used to make the request."
      }
    }
  },
  "DatabricksGroups": {
    "tableName": "DatabricksGroups",
    "description": "Audit logs for Databricks groups.",
    "columns": {
      "ActionName": {
        "type": "string",
        "description": "The action name."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The category of the log."
      },
      "Identity": {
        "type": "dynamic",
        "description": "The identity of the user who performed the operation."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogId": {
        "type": "string",
        "description": "The log ID in Databricks domain."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The API version of the operation."
      },
      "RequestId": {
        "type": "string",
        "description": "The request ID."
      },
      "RequestParams": {
        "type": "dynamic",
        "description": "The request parameters."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Response": {
        "type": "dynamic",
        "description": "The response."
      },
      "ServiceName": {
        "type": "string",
        "description": "The service name."
      },
      "SessionId": {
        "type": "string",
        "description": "The session ID."
      },
      "SourceIpAddress": {
        "type": "string",
        "description": "The IP address of the client that performed the operation."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The user agent."
      }
    }
  },
  "DatabricksIAMRole": {
    "tableName": "DatabricksIAMRole",
    "description": "Audit logs for events of changing IAM role ACLs.",
    "columns": {
      "ActionName": {
        "type": "string",
        "description": "The action of the request."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The service that logged the request."
      },
      "Identity": {
        "type": "string",
        "description": "Information about the user that makes the requests."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogId": {
        "type": "string",
        "description": "The unique identifier for the log message that can be used to deduplicate"
      },
      "OperationName": {
        "type": "string",
        "description": "The action, such as login, logout, read, write, etc."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The schema version of the Databricks operation-based diagnostic log"
      },
      "RequestId": {
        "type": "string",
        "description": "The unique request ID."
      },
      "RequestParams": {
        "type": "string",
        "description": "Parameter key-value pairs used in the event."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Response": {
        "type": "string",
        "description": "The HTTP response to the request, including error message (if applicable),"
      },
      "ServiceName": {
        "type": "string",
        "description": "The service of the source request."
      },
      "SessionId": {
        "type": "string",
        "description": "Session ID of the action."
      },
      "SourceIPAddress": {
        "type": "string",
        "description": "The IP address of the source request."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp of the action (UTC)."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The browser or API client used to make the request."
      }
    }
  },
  "DatabricksIngestion": {
    "tableName": "DatabricksIngestion",
    "description": "Contains Databricks Ingestion logs.",
    "columns": {
      "ActionName": {
        "type": "string",
        "description": "The action name."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The category of the log."
      },
      "Identity": {
        "type": "dynamic",
        "description": "The identity of the user who performed the operation."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogId": {
        "type": "string",
        "description": "The log ID in Databricks domain."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The API version of the operation."
      },
      "RequestId": {
        "type": "string",
        "description": "The request ID."
      },
      "RequestParams": {
        "type": "dynamic",
        "description": "The request parameters."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Response": {
        "type": "dynamic",
        "description": "The response."
      },
      "ServiceName": {
        "type": "string",
        "description": "The service name."
      },
      "SessionId": {
        "type": "string",
        "description": "The session ID."
      },
      "SourceIpAddress": {
        "type": "string",
        "description": "The IP address of the client that performed the operation."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The user agent."
      }
    }
  },
  "DatabricksInstancePools": {
    "tableName": "DatabricksInstancePools",
    "description": "Databricks Instance Pools audit logs.",
    "columns": {
      "ActionName": {
        "type": "string",
        "description": "The action of the request."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The service that logged the request."
      },
      "Identity": {
        "type": "string",
        "description": "Information about the user that makes the requests."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogId": {
        "type": "string",
        "description": "The unique identifier for the log messages."
      },
      "OperationName": {
        "type": "string",
        "description": "The action, such as login, logout, read, write, etc."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The Databricks schema version of the diagnostic log format."
      },
      "RequestId": {
        "type": "string",
        "description": "Unique request ID."
      },
      "RequestParams": {
        "type": "string",
        "description": "Parameter key-value pairs used in the event."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Response": {
        "type": "string",
        "description": "The HTTP response to the request, including error message (if applicable),"
      },
      "ServiceName": {
        "type": "string",
        "description": "The service of the source request."
      },
      "SessionId": {
        "type": "string",
        "description": "Session ID of the action."
      },
      "SourceIPAddress": {
        "type": "string",
        "description": "The IP address of the source request."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp of the action (UTC)."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The browser or API client used to make the request."
      }
    }
  },
  "DatabricksJobs": {
    "tableName": "DatabricksJobs",
    "description": "Databricks Jobs audit logs.",
    "columns": {
      "ActionName": {
        "type": "string",
        "description": "The action name."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The category of the log."
      },
      "Identity": {
        "type": "dynamic",
        "description": "The identity of the user who performed the operation."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogId": {
        "type": "string",
        "description": "The log ID in Databricks domain."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The API version of the operation."
      },
      "RequestId": {
        "type": "string",
        "description": "The request ID."
      },
      "RequestParams": {
        "type": "dynamic",
        "description": "The request parameters."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Response": {
        "type": "dynamic",
        "description": "The response."
      },
      "ServiceName": {
        "type": "string",
        "description": "The service name."
      },
      "SessionId": {
        "type": "string",
        "description": "The session ID."
      },
      "SourceIPAddress": {
        "type": "string",
        "description": "The IP address of the source request."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The user agent."
      },
      "SourceIpAddress": {
        "type": "string",
        "description": "The IP address of the client that performed the operation."
      }
    }
  },
  "DatabricksLineageTracking": {
    "tableName": "DatabricksLineageTracking",
    "description": "Contains Databricks Lineage Tracking logs.",
    "columns": {
      "ActionName": {
        "type": "string",
        "description": "The action name."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The category of the log."
      },
      "Identity": {
        "type": "dynamic",
        "description": "The identity of the user who performed the operation."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogId": {
        "type": "string",
        "description": "The log ID in Databricks domain."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The API version of the operation."
      },
      "RequestId": {
        "type": "string",
        "description": "The request ID."
      },
      "RequestParams": {
        "type": "dynamic",
        "description": "The request parameters."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Response": {
        "type": "dynamic",
        "description": "The response."
      },
      "ServiceName": {
        "type": "string",
        "description": "The service name."
      },
      "SessionId": {
        "type": "string",
        "description": "The session ID."
      },
      "SourceIpAddress": {
        "type": "string",
        "description": "The IP address of the client that performed the operation."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The user agent."
      }
    }
  },
  "DatabricksMLflowAcledArtifact": {
    "tableName": "DatabricksMLflowAcledArtifact",
    "description": "Audit logs for events of reading and writing Databricks MLflow ACLed artifacts.",
    "columns": {
      "ActionName": {
        "type": "string",
        "description": "The action of the request."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The service that logged the request."
      },
      "Identity": {
        "type": "string",
        "description": "Information about the user that makes the requests."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogId": {
        "type": "string",
        "description": "The unique identifier for the log message that can be used to deduplicate"
      },
      "OperationName": {
        "type": "string",
        "description": "The action, such as login, logout, read, write, etc."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The schema version of the Databricks operation-based diagnostic log"
      },
      "RequestId": {
        "type": "string",
        "description": "The unique request ID."
      },
      "RequestParams": {
        "type": "string",
        "description": "Parameter key-value pairs used in the event."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Response": {
        "type": "string",
        "description": "The HTTP response to the request, including error message (if applicable),"
      },
      "ServiceName": {
        "type": "string",
        "description": "The service of the source request."
      },
      "SessionId": {
        "type": "string",
        "description": "Session ID of the action."
      },
      "SourceIPAddress": {
        "type": "string",
        "description": "The IP address of the source request."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp of the action (UTC)."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The browser or API client used to make the request."
      }
    }
  },
  "DatabricksMLflowExperiment": {
    "tableName": "DatabricksMLflowExperiment",
    "description": "Audit logs for events related to manipulation of Databricks MLflow experiments.",
    "columns": {
      "ActionName": {
        "type": "string",
        "description": "The action of the request."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The service that logged the request."
      },
      "Identity": {
        "type": "string",
        "description": "Information about the user that makes the requests."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogId": {
        "type": "string",
        "description": "The unique identifier for the log message that can be used to deduplicate"
      },
      "OperationName": {
        "type": "string",
        "description": "The action, such as login, logout, read, write, etc."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The schema version of the Databricks operation-based diagnostic log"
      },
      "RequestId": {
        "type": "string",
        "description": "The unique request ID."
      },
      "RequestParams": {
        "type": "string",
        "description": "Parameter key-value pairs used in the event."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Response": {
        "type": "string",
        "description": "The HTTP response to the request, including error message (if applicable),"
      },
      "ServiceName": {
        "type": "string",
        "description": "The service of the source request."
      },
      "SessionId": {
        "type": "string",
        "description": "Session ID of the action."
      },
      "SourceIPAddress": {
        "type": "string",
        "description": "The IP address of the source request."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp of the action (UTC)."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The browser or API client used to make the request."
      }
    }
  },
  "DatabricksMarketplaceConsumer": {
    "tableName": "DatabricksMarketplaceConsumer",
    "description": "Contains Databricks Marketplace Consumer logs.",
    "columns": {
      "ActionName": {
        "type": "string",
        "description": "The action name."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The category of the log."
      },
      "Identity": {
        "type": "dynamic",
        "description": "The identity of the user who performed the operation."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogId": {
        "type": "string",
        "description": "The log ID in Databricks domain."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The API version of the operation."
      },
      "RequestId": {
        "type": "string",
        "description": "The request ID."
      },
      "RequestParams": {
        "type": "dynamic",
        "description": "The request parameters."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Response": {
        "type": "dynamic",
        "description": "The response."
      },
      "ServiceName": {
        "type": "string",
        "description": "The service name."
      },
      "SessionId": {
        "type": "string",
        "description": "The session ID."
      },
      "SourceIpAddress": {
        "type": "string",
        "description": "The IP address of the client that performed the operation."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The user agent."
      }
    }
  },
  "DatabricksMarketplaceProvider": {
    "tableName": "DatabricksMarketplaceProvider",
    "description": "Audit logs for Marketplace provider in Databricks.",
    "columns": {
      "ActionName": {
        "type": "string",
        "description": "The action name."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The category of the log."
      },
      "Identity": {
        "type": "dynamic",
        "description": "The identity of the user who performed the operation."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogId": {
        "type": "string",
        "description": "The log ID in Databricks domain."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The API version of the operation."
      },
      "RequestId": {
        "type": "string",
        "description": "The request ID."
      },
      "RequestParams": {
        "type": "dynamic",
        "description": "The request parameters."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Response": {
        "type": "dynamic",
        "description": "The response."
      },
      "ServiceName": {
        "type": "string",
        "description": "The service name."
      },
      "SessionId": {
        "type": "string",
        "description": "The session ID."
      },
      "SourceIpAddress": {
        "type": "string",
        "description": "The IP address of the client that performed the operation."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The user agent."
      }
    }
  },
  "DatabricksModelRegistry": {
    "tableName": "DatabricksModelRegistry",
    "description": "Databricks model registry audit logs.",
    "columns": {
      "ActionName": {
        "type": "string",
        "description": "The action of the request."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The service that logged the request."
      },
      "Identity": {
        "type": "string",
        "description": "Information about the user that makes the requests."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogId": {
        "type": "string",
        "description": "The unique identifier for the log messages."
      },
      "OperationName": {
        "type": "string",
        "description": "The action, such as login, logout, read, write, etc."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The Databricks schema version of the diagnostic log format."
      },
      "RequestId": {
        "type": "string",
        "description": "Unique request ID."
      },
      "RequestParams": {
        "type": "string",
        "description": "Parameter key-value pairs used in the event."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Response": {
        "type": "string",
        "description": "The HTTP response to the request, including error message (if applicable),"
      },
      "ServiceName": {
        "type": "string",
        "description": "The service of the source request."
      },
      "SessionId": {
        "type": "string",
        "description": "Session ID of the action."
      },
      "SourceIPAddress": {
        "type": "string",
        "description": "The IP address of the source request."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp of the action (UTC)."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The browser or API client used to make the request."
      }
    }
  },
  "DatabricksNotebook": {
    "tableName": "DatabricksNotebook",
    "description": "Databricks Notebook audit logs.",
    "columns": {
      "ActionName": {
        "type": "string",
        "description": "The action of the request."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The service that logged the request."
      },
      "Identity": {
        "type": "string",
        "description": "Information about the user that makes the requests."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogId": {
        "type": "string",
        "description": "The unique identifier for the log messages."
      },
      "OperationName": {
        "type": "string",
        "description": "The action, such as login, logout, read, write, etc."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The Databricks schema version of the diagnostic log format."
      },
      "RequestId": {
        "type": "string",
        "description": "Unique request ID."
      },
      "RequestParams": {
        "type": "string",
        "description": "Parameter key-value pairs used in the event."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Response": {
        "type": "string",
        "description": "The HTTP response to the request, including error message (if applicable),"
      },
      "ServiceName": {
        "type": "string",
        "description": "The service of the source request."
      },
      "SessionId": {
        "type": "string",
        "description": "Session ID of the action."
      },
      "SourceIPAddress": {
        "type": "string",
        "description": "The IP address of the source request."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp of the action (UTC)."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The browser or API client used to make the request."
      }
    }
  },
  "DatabricksOnlineTables": {
    "tableName": "DatabricksOnlineTables",
    "description": "Audit logs for online tables in Databricks.",
    "columns": {
      "ActionName": {
        "type": "string",
        "description": "The action name."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The category of the log."
      },
      "Identity": {
        "type": "dynamic",
        "description": "The identity of the user who performed the operation."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogId": {
        "type": "string",
        "description": "The log ID in Databricks domain."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The API version of the operation."
      },
      "RequestId": {
        "type": "string",
        "description": "The request ID."
      },
      "RequestParams": {
        "type": "dynamic",
        "description": "The request parameters."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Response": {
        "type": "dynamic",
        "description": "The response."
      },
      "ServiceName": {
        "type": "string",
        "description": "The service name."
      },
      "SessionId": {
        "type": "string",
        "description": "The session ID."
      },
      "SourceIpAddress": {
        "type": "string",
        "description": "The IP address of the client that performed the operation."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The user agent."
      }
    }
  },
  "DatabricksPartnerHub": {
    "tableName": "DatabricksPartnerHub",
    "description": "Audit logs for Databricks partner hub service.",
    "columns": {
      "ActionName": {
        "type": "string",
        "description": "The action of the request."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The service that logged the request."
      },
      "Identity": {
        "type": "dynamic",
        "description": "Information about the user that makes the requests."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogId": {
        "type": "string",
        "description": "The unique identifier for the log messages."
      },
      "OperationName": {
        "type": "string",
        "description": "The action, such as login, logout, read, write, etc."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The Databricks schema version of the diagnostic log format."
      },
      "RequestId": {
        "type": "string",
        "description": "Unique request ID."
      },
      "RequestParams": {
        "type": "dynamic",
        "description": "Parameters, key-value pairs used in the event."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Response": {
        "type": "dynamic",
        "description": "The HTTP response to the request, including error message (if applicable),"
      },
      "ServiceName": {
        "type": "string",
        "description": "The service of the source request."
      },
      "SessionId": {
        "type": "string",
        "description": "Session ID of the action."
      },
      "SourceIPAddress": {
        "type": "string",
        "description": "The IP address of the source request."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp of the action (UTC)."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The browser or API client used to make the request."
      }
    }
  },
  "DatabricksPredictiveOptimization": {
    "tableName": "DatabricksPredictiveOptimization",
    "description": "Contains Databricks Predictive Optimization logs.",
    "columns": {
      "ActionName": {
        "type": "string",
        "description": "The action name."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The category of the log."
      },
      "Identity": {
        "type": "dynamic",
        "description": "The identity of the user who performed the operation."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogId": {
        "type": "string",
        "description": "The log ID in Databricks domain."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The API version of the operation."
      },
      "RequestId": {
        "type": "string",
        "description": "The request ID."
      },
      "RequestParams": {
        "type": "dynamic",
        "description": "The request parameters."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Response": {
        "type": "dynamic",
        "description": "The response."
      },
      "ServiceName": {
        "type": "string",
        "description": "The service name."
      },
      "SessionId": {
        "type": "string",
        "description": "The session ID."
      },
      "SourceIpAddress": {
        "type": "string",
        "description": "The IP address of the client that performed the operation."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The user agent."
      }
    }
  },
  "DatabricksRBAC": {
    "tableName": "DatabricksRBAC",
    "description": "Audit logs for role based access control in Databricks.",
    "columns": {
      "ActionName": {
        "type": "string",
        "description": "The action name."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The category of the log."
      },
      "Identity": {
        "type": "dynamic",
        "description": "The identity of the user who performed the operation."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogId": {
        "type": "string",
        "description": "The log ID in Databricks domain."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The API version of the operation."
      },
      "RequestId": {
        "type": "string",
        "description": "The request ID."
      },
      "RequestParams": {
        "type": "dynamic",
        "description": "The request parameters."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Response": {
        "type": "dynamic",
        "description": "The response."
      },
      "ServiceName": {
        "type": "string",
        "description": "The service name."
      },
      "SessionId": {
        "type": "string",
        "description": "The session ID."
      },
      "SourceIpAddress": {
        "type": "string",
        "description": "The IP address of the client that performed the operation."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The user agent."
      }
    }
  },
  "DatabricksRFA": {
    "tableName": "DatabricksRFA",
    "description": "Audit logs for request for access events in Databricks.",
    "columns": {
      "ActionName": {
        "type": "string",
        "description": "The action name."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The category of the log."
      },
      "Identity": {
        "type": "dynamic",
        "description": "The identity of the user who performed the operation."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogId": {
        "type": "string",
        "description": "The log ID in Databricks domain."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The API version of the operation."
      },
      "RequestId": {
        "type": "string",
        "description": "The request ID."
      },
      "RequestParams": {
        "type": "dynamic",
        "description": "The request parameters."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Response": {
        "type": "dynamic",
        "description": "The response."
      },
      "ServiceName": {
        "type": "string",
        "description": "The service name."
      },
      "SessionId": {
        "type": "string",
        "description": "The session ID."
      },
      "SourceIpAddress": {
        "type": "string",
        "description": "The IP address of the client that performed the operation."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The user agent."
      }
    }
  },
  "DatabricksRemoteHistoryService": {
    "tableName": "DatabricksRemoteHistoryService",
    "description": "Audit logs for events adding and deleting credentials for Databricks remote history service.",
    "columns": {
      "ActionName": {
        "type": "string",
        "description": "The action of the request."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The service that logged the request."
      },
      "Identity": {
        "type": "string",
        "description": "Information about the user that makes the requests."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogId": {
        "type": "string",
        "description": "The unique identifier for the log message that can be used to deduplicate"
      },
      "OperationName": {
        "type": "string",
        "description": "The action, such as login, logout, read, write, etc."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The schema version of the Databricks operation-based diagnostic log"
      },
      "RequestId": {
        "type": "string",
        "description": "The unique request ID."
      },
      "RequestParams": {
        "type": "string",
        "description": "Parameter key-value pairs used in the event."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Response": {
        "type": "string",
        "description": "The HTTP response to the request, including error message (if applicable),"
      },
      "ServiceName": {
        "type": "string",
        "description": "The service of the source request."
      },
      "SessionId": {
        "type": "string",
        "description": "Session ID of the action."
      },
      "SourceIPAddress": {
        "type": "string",
        "description": "The IP address of the source request."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp of the action (UTC)."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The browser or API client used to make the request."
      }
    }
  },
  "DatabricksRepos": {
    "tableName": "DatabricksRepos",
    "description": "Databricks repos audit logs.",
    "columns": {
      "ActionName": {
        "type": "string",
        "description": "The action of the request."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The service that logged the request."
      },
      "Identity": {
        "type": "string",
        "description": "Information about the user that makes the requests."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogId": {
        "type": "string",
        "description": "The unique identifier for the log messages."
      },
      "OperationName": {
        "type": "string",
        "description": "The action, such as login, logout, read, write, etc."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The Databricks schema version of the diagnostic log format."
      },
      "RequestId": {
        "type": "string",
        "description": "Unique request ID."
      },
      "RequestParams": {
        "type": "string",
        "description": "Parameter key-value pairs used in the event."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Response": {
        "type": "string",
        "description": "The HTTP response to the request, including error message (if applicable),"
      },
      "ServiceName": {
        "type": "string",
        "description": "The service of the source request."
      },
      "SessionId": {
        "type": "string",
        "description": "Session ID of the action."
      },
      "SourceIPAddress": {
        "type": "string",
        "description": "The IP address of the source request."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp of the action (UTC)."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The browser or API client used to make the request."
      }
    }
  },
  "DatabricksSQL": {
    "tableName": "DatabricksSQL",
    "description": "Audit logs for events related to creation, modification etc. of Databricks SQL endpoints.",
    "columns": {
      "ActionName": {
        "type": "string",
        "description": "The action of the request."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The service that logged the request."
      },
      "Identity": {
        "type": "string",
        "description": "Information about the user that makes the requests."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogId": {
        "type": "string",
        "description": "The unique identifier for the log message that can be used to deduplicate"
      },
      "OperationName": {
        "type": "string",
        "description": "The action, such as login, logout, read, write, etc."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The schema version of the Databricks operation-based diagnostic log"
      },
      "RequestId": {
        "type": "string",
        "description": "The unique request ID."
      },
      "RequestParams": {
        "type": "string",
        "description": "Parameter key-value pairs used in the event."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Response": {
        "type": "string",
        "description": "The HTTP response to the request, including error message (if applicable),"
      },
      "ServiceName": {
        "type": "string",
        "description": "The service of the source request."
      },
      "SessionId": {
        "type": "string",
        "description": "Session ID of the action."
      },
      "SourceIPAddress": {
        "type": "string",
        "description": "The IP address of the source request."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp of the action (UTC)."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The browser or API client used to make the request."
      }
    }
  },
  "DatabricksSQLPermissions": {
    "tableName": "DatabricksSQLPermissions",
    "description": "Databricks SQL Permissions audit logs.",
    "columns": {
      "ActionName": {
        "type": "string",
        "description": "The action of the request."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The service that logged the request."
      },
      "Identity": {
        "type": "string",
        "description": "Information about the user that makes the requests."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogId": {
        "type": "string",
        "description": "The unique identifier for the log messages."
      },
      "OperationName": {
        "type": "string",
        "description": "The action, such as login, logout, read, write, etc."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The Databricks schema version of the diagnostic log format."
      },
      "RequestId": {
        "type": "string",
        "description": "Unique request ID."
      },
      "RequestParams": {
        "type": "string",
        "description": "Parameter key-value pairs used in the event."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Response": {
        "type": "string",
        "description": "The HTTP response to the request, including error message (if applicable),"
      },
      "ServiceName": {
        "type": "string",
        "description": "The service of the source request."
      },
      "SessionId": {
        "type": "string",
        "description": "Session ID of the action."
      },
      "SourceIPAddress": {
        "type": "string",
        "description": "The IP address of the source request."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp of the action (UTC)."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The browser or API client used to make the request."
      }
    }
  },
  "DatabricksSSH": {
    "tableName": "DatabricksSSH",
    "description": "Databricks SSH audit logs.",
    "columns": {
      "ActionName": {
        "type": "string",
        "description": "The action of the request."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The service that logged the request."
      },
      "Identity": {
        "type": "string",
        "description": "Information about the user that makes the requests."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogId": {
        "type": "string",
        "description": "The unique identifier for the log messages."
      },
      "OperationName": {
        "type": "string",
        "description": "The action, such as login, logout, read, write, etc."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The Databricks schema version of the diagnostic log format."
      },
      "RequestId": {
        "type": "string",
        "description": "Unique request ID."
      },
      "RequestParams": {
        "type": "string",
        "description": "Parameter key-value pairs used in the event."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Response": {
        "type": "string",
        "description": "The HTTP response to the request, including error message (if applicable),"
      },
      "ServiceName": {
        "type": "string",
        "description": "The service of the source request."
      },
      "SessionId": {
        "type": "string",
        "description": "Session ID of the action."
      },
      "SourceIPAddress": {
        "type": "string",
        "description": "The IP address of the source request."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp of the action (UTC)."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The browser or API client used to make the request."
      }
    }
  },
  "DatabricksSecrets": {
    "tableName": "DatabricksSecrets",
    "description": "Databricks Secrets audit logs.",
    "columns": {
      "ActionName": {
        "type": "string",
        "description": "The action of the request."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The service that logged the request."
      },
      "Identity": {
        "type": "string",
        "description": "Information about the user that makes the requests."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogId": {
        "type": "string",
        "description": "The unique identifier for the log messages."
      },
      "OperationName": {
        "type": "string",
        "description": "The action, such as login, logout, read, write, etc."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The Databricks schema version of the diagnostic log format."
      },
      "RequestId": {
        "type": "string",
        "description": "Unique request ID."
      },
      "RequestParams": {
        "type": "string",
        "description": "Parameter key-value pairs used in the event."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Response": {
        "type": "string",
        "description": "The HTTP response to the request, including error message (if applicable),"
      },
      "ServiceName": {
        "type": "string",
        "description": "The service of the source request."
      },
      "SessionId": {
        "type": "string",
        "description": "Session ID of the action."
      },
      "SourceIPAddress": {
        "type": "string",
        "description": "The IP address of the source request."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp of the action (UTC)."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The browser or API client used to make the request."
      }
    }
  },
  "DatabricksServerlessRealTimeInference": {
    "tableName": "DatabricksServerlessRealTimeInference",
    "description": "Audit logs from Databricks model serving v2 API service.",
    "columns": {
      "ActionName": {
        "type": "string",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": ""
      },
      "Identity": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogId": {
        "type": "string",
        "description": ""
      },
      "OperationName": {
        "type": "string",
        "description": ""
      },
      "OperationVersion": {
        "type": "string",
        "description": ""
      },
      "RequestId": {
        "type": "string",
        "description": ""
      },
      "RequestParams": {
        "type": "string",
        "description": ""
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Response": {
        "type": "string",
        "description": ""
      },
      "ServiceName": {
        "type": "string",
        "description": ""
      },
      "SessionId": {
        "type": "string",
        "description": ""
      },
      "SourceIPAddress": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": ""
      },
      "ResourceId": {
        "type": "string",
        "description": ""
      }
    }
  },
  "DatabricksUnityCatalog": {
    "tableName": "DatabricksUnityCatalog",
    "description": "Databricks unity catalog audit logs.",
    "columns": {
      "ActionName": {
        "type": "string",
        "description": "The action of the request."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The service that logged the request."
      },
      "Identity": {
        "type": "string",
        "description": "Information about the user that makes the requests."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogId": {
        "type": "string",
        "description": "The unique identifier for the log messages."
      },
      "OperationName": {
        "type": "string",
        "description": "The action, such as login, logout, read, write, etc."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The Databricks schema version of the diagnostic log format."
      },
      "RequestId": {
        "type": "string",
        "description": "Unique request ID."
      },
      "RequestParams": {
        "type": "string",
        "description": "Parameter key-value pairs used in the event."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Response": {
        "type": "string",
        "description": "The HTTP response to the request, including error message (if applicable),"
      },
      "ServiceName": {
        "type": "string",
        "description": "The service of the source request."
      },
      "SessionId": {
        "type": "string",
        "description": "Session ID of the action."
      },
      "SourceIPAddress": {
        "type": "string",
        "description": "The IP address of the source request."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp of the action (UTC)."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The browser or API client used to make the request."
      }
    }
  },
  "DatabricksVectorSearch": {
    "tableName": "DatabricksVectorSearch",
    "description": "Audit logs for Vector Search in Databricks.",
    "columns": {
      "ActionName": {
        "type": "string",
        "description": "The action name."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The category of the log."
      },
      "Identity": {
        "type": "dynamic",
        "description": "The identity of the user who performed the operation."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogId": {
        "type": "string",
        "description": "The log ID in Databricks domain."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The API version of the operation."
      },
      "RequestId": {
        "type": "string",
        "description": "The request ID."
      },
      "RequestParams": {
        "type": "dynamic",
        "description": "The request parameters."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Response": {
        "type": "dynamic",
        "description": "The response."
      },
      "ServiceName": {
        "type": "string",
        "description": "The service name."
      },
      "SessionId": {
        "type": "string",
        "description": "The session ID."
      },
      "SourceIpAddress": {
        "type": "string",
        "description": "The IP address of the client that performed the operation."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The user agent."
      }
    }
  },
  "DatabricksWebTerminal": {
    "tableName": "DatabricksWebTerminal",
    "description": "Databricks web terminal audit logs.",
    "columns": {
      "ActionName": {
        "type": "string",
        "description": "The action of the request."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The service that logged the request."
      },
      "Identity": {
        "type": "dynamic",
        "description": "Information about the user that makes the requests."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogId": {
        "type": "string",
        "description": "The unique identifier for the log messages."
      },
      "OperationName": {
        "type": "string",
        "description": "The action, such as login, logout, read, write, etc."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The Databricks schema version of the diagnostic log format."
      },
      "RequestId": {
        "type": "string",
        "description": "Unique request ID."
      },
      "RequestParams": {
        "type": "dynamic",
        "description": "Parameter key-value pairs used in the event."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Response": {
        "type": "dynamic",
        "description": "The HTTP response to the request, including error message (if applicable),"
      },
      "ServiceName": {
        "type": "string",
        "description": "The service of the source request."
      },
      "SessionId": {
        "type": "string",
        "description": "Session ID of the action."
      },
      "SourceIPAddress": {
        "type": "string",
        "description": "The IP address of the source request."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp of the action (UTC)."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The browser or API client used to make the request."
      }
    }
  },
  "DatabricksWebhookNotifications": {
    "tableName": "DatabricksWebhookNotifications",
    "description": "Audit logs for webhook notifications in Databricks.",
    "columns": {
      "ActionName": {
        "type": "string",
        "description": "The action name."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The category of the log."
      },
      "Identity": {
        "type": "dynamic",
        "description": "The identity of the user who performed the operation."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogId": {
        "type": "string",
        "description": "The log ID in Databricks domain."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The API version of the operation."
      },
      "RequestId": {
        "type": "string",
        "description": "The request ID."
      },
      "RequestParams": {
        "type": "dynamic",
        "description": "The request parameters."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Response": {
        "type": "dynamic",
        "description": "The response."
      },
      "ServiceName": {
        "type": "string",
        "description": "The service name."
      },
      "SessionId": {
        "type": "string",
        "description": "The session ID."
      },
      "SourceIpAddress": {
        "type": "string",
        "description": "The IP address of the client that performed the operation."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The user agent."
      }
    }
  },
  "DatabricksWorkspace": {
    "tableName": "DatabricksWorkspace",
    "description": "Databricks Workspace audit logs.",
    "columns": {
      "ActionName": {
        "type": "string",
        "description": "The action of the request."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The service that logged the request."
      },
      "Identity": {
        "type": "string",
        "description": "Information about the user that makes the requests."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogId": {
        "type": "string",
        "description": "The unique identifier for the log messages."
      },
      "OperationName": {
        "type": "string",
        "description": "The action, such as login, logout, read, write, etc."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The Databricks schema version of the diagnostic log format."
      },
      "RequestId": {
        "type": "string",
        "description": "Unique request ID."
      },
      "RequestParams": {
        "type": "string",
        "description": "Parameter key-value pairs used in the event."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Response": {
        "type": "string",
        "description": "The HTTP response to the request, including error message (if applicable),"
      },
      "ServiceName": {
        "type": "string",
        "description": "The service of the source request."
      },
      "SessionId": {
        "type": "string",
        "description": "Session ID of the action."
      },
      "SourceIPAddress": {
        "type": "string",
        "description": "The IP address of the source request."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp of the action (UTC)."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The browser or API client used to make the request."
      }
    }
  },
  "DatabricksWorkspaceFiles": {
    "tableName": "DatabricksWorkspaceFiles",
    "description": "Audit logs for on Databricks workspace files.",
    "columns": {
      "ActionName": {
        "type": "string",
        "description": "The action name."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The category of the log."
      },
      "Identity": {
        "type": "dynamic",
        "description": "The identity of the user who performed the operation."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogId": {
        "type": "string",
        "description": "The log ID in Databricks domain."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The API version of the operation."
      },
      "RequestId": {
        "type": "string",
        "description": "The request ID."
      },
      "RequestParams": {
        "type": "dynamic",
        "description": "The request parameters."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Response": {
        "type": "dynamic",
        "description": "The response."
      },
      "ServiceName": {
        "type": "string",
        "description": "The service name."
      },
      "SessionId": {
        "type": "string",
        "description": "The session ID."
      },
      "SourceIpAddress": {
        "type": "string",
        "description": "The IP address of the client that performed the operation."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The user agent."
      }
    }
  },
  "DataverseActivity": {
    "tableName": "DataverseActivity",
    "description": "Contains Microsoft Dataverse audit logs. It's typically used to track Dataverse and Dynamics 365 activities.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClientIp": {
        "type": "string",
        "description": "The IP address of the device that was used when the activity"
      },
      "CorrelationId": {
        "type": "string",
        "description": "A unique value used to associate related rows."
      },
      "CrmOrganizationUniqueName": {
        "type": "string",
        "description": "Unique name of the organization."
      },
      "EntityId": {
        "type": "string",
        "description": "Unique identifier of the entity."
      },
      "EntityName": {
        "type": "string",
        "description": "Name of the entity in the organization."
      },
      "Fields": {
        "type": "dynamic",
        "description": "JSON of Key Value pair reflecting the values that were created"
      },
      "InstanceUrl": {
        "type": "string",
        "description": "URL to the instance."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "ItemType": {
        "type": "string",
        "description": "The type of object that was accessed or modified. See the"
      },
      "ItemUrl": {
        "type": "string",
        "description": "URL to the record emitting the log."
      },
      "Message": {
        "type": "string",
        "description": "Name of the message called in the Dynamics 365 SDK."
      },
      "Operation": {
        "type": "string",
        "description": "The name of the operation that the user is performing."
      },
      "OrganizationId": {
        "type": "string",
        "description": "The GUID for your organization's Office 365 tenant. This"
      },
      "OriginalObjectId": {
        "type": "string",
        "description": "The ObjectId for Dataverse operation or business activity."
      },
      "Query": {
        "type": "string",
        "description": "The query filter parameters used while executing the"
      },
      "QueryResults": {
        "type": "dynamic",
        "description": "One or multiple unique records returned by the Retrieve and"
      },
      "ResultStatus": {
        "type": "string",
        "description": "Indicates whether the action (specified in the Operation"
      },
      "ServiceContextId": {
        "type": "string",
        "description": "The unique id associated with service context."
      },
      "ServiceContextIdType": {
        "type": "string",
        "description": "Application defined token to define context use."
      },
      "ServiceName": {
        "type": "string",
        "description": "Name of the Service generating the log."
      },
      "SourceRecordId": {
        "type": "string",
        "description": "Unique identifier of an audit record."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "SystemUserId": {
        "type": "string",
        "description": "Unique identifier of the user GUID in the organization."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The date and time in (UTC) when the user performed the"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The user agent."
      },
      "UserId": {
        "type": "string",
        "description": "The Dataverse user ID of the user who performed the action"
      },
      "UserKey": {
        "type": "string",
        "description": "An alternative ID for the user identified in the UserId"
      },
      "UserType": {
        "type": "string",
        "description": "The type of user that performed the operation. See the"
      },
      "UserUpn": {
        "type": "string",
        "description": "The UPN (User Principal Name) of the user who performed"
      }
    }
  },
  "DefenderIoTRawEvent": {
    "tableName": "DefenderIoTRawEvent",
    "description": "Table is part of Microsoft Defender for IoT. It contains IoT security raw event properties of new and future events. These logs can be used to monitor your new operational, diagnostic and security raw events.",
    "columns": {
      "AgentVersion": {
        "type": "string",
        "description": "The version of the WVD Agent running on the Virtual"
      },
      "AssociatedResourceId": {
        "type": "string",
        "description": "The associated Azure resource ID."
      },
      "AzureSubscriptionId": {
        "type": "string",
        "description": "The Azure subscription ID."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DeviceId": {
        "type": "string",
        "description": "The device ID."
      },
      "EventDetails": {
        "type": "dynamic",
        "description": "Additional raw event details."
      },
      "IoTRawEventId": {
        "type": "string",
        "description": "The internal raw event ID."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "IsEmpty": {
        "type": "bool",
        "description": "Property identifying if the raw event contains data."
      },
      "RawEventCategory": {
        "type": "string",
        "description": "The category of the raw event - periodic or triggered."
      },
      "RawEventName": {
        "type": "string",
        "description": "The name of the raw event."
      },
      "RawEventType": {
        "type": "string",
        "description": "The type of the raw event - security, operational or diagnostic."
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time when the report was generated (UTC)"
      },
      "TimeStamp": {
        "type": "datetime",
        "description": "The date and time the raw event was first detected."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "ActivityId": {
        "type": "string",
        "description": "The activity ID of the event."
      },
      "CloudPcId": {
        "type": "string",
        "description": "The cloud pc id of the dev box"
      },
      "DevBoxName": {
        "type": "string",
        "description": "The chosen display name for the dev box"
      },
      "LastHeartBeat": {
        "type": "datetime",
        "description": "The time recorded when there was a change in the health"
      },
      "NicResourceId": {
        "type": "string",
        "description": "The NIC resource ID for the dev box"
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "SessionHostHealthCheckResult": {
        "type": "dynamic",
        "description": "The set of results on health checks"
      },
      "SessionHostName": {
        "type": "string",
        "description": "Name of underlying Virtual Machine"
      },
      "SessionHostResourceId": {
        "type": "string",
        "description": "The ARM path of the session host"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "Status": {
        "type": "string",
        "description": "The current status of the VM, whether its healthy or not"
      },
      "SubnetResourceId": {
        "type": "string",
        "description": "The subnet resource id for the network of the dev box"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "UpgradeState": {
        "type": "string",
        "description": "The last known state from a previous update"
      }
    }
  },
  "DevCenterBillingEventLogs": {
    "tableName": "DevCenterBillingEventLogs",
    "description": "Billing event related to DevCenter resources. Logs contains information about the quantity and unit charged per meter.",
    "columns": {
      "BilledResourceId": {
        "type": "string",
        "description": "The resource within the DevCenter that gets billed."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "BillingRegion": {
        "type": "string",
        "description": "The billing region of the consomption resource."
      },
      "EndTime": {
        "type": "datetime",
        "description": "Time (UTC) when the consumption ended."
      },
      "EventId": {
        "type": "string",
        "description": "The event ID used for deduping consumption events."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "IsOverMonthlyBillingCap": {
        "type": "bool",
        "description": "Whether the consumption is included in the monthly cap."
      },
      "MeterId": {
        "type": "string",
        "description": "The meter ID for the consumption."
      },
      "OperationName": {
        "type": "string",
        "description": "The resource operation name for the log."
      },
      "Quantity": {
        "type": "real",
        "description": "The amount of usage in terms of the specified unit."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "Sku": {
        "type": "string",
        "description": "The Sku of the consumption resource. Can be DZH319G7LNXM,"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "StartTime": {
        "type": "datetime",
        "description": "Time (UTC) when the consumption started."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Time (UTC) when the log was created."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UnitType": {
        "type": "string",
        "description": "The unit in which the type of usage is measured. Can be Hourly or"
      },
      "UsageResourceName": {
        "type": "string",
        "description": "The name of the consumption resource."
      },
      "UsageResourceUniqueId": {
        "type": "string",
        "description": "The unique ID of the consumption resource."
      },
      "UsageType": {
        "type": "string",
        "description": "The type of resource being consumed."
      },
      "UserId": {
        "type": "string",
        "description": "User ID consuming the resource."
      }
    }
  },
  "DevCenterConnectionLogs": {
    "tableName": "DevCenterConnectionLogs",
    "description": "Connection events which include information around when a dev box was connected to, if the connection was successful and what client was used in connecting.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClientType": {
        "type": "string",
        "description": "The type of the client that is connecting (if available)"
      },
      "ClientVersion": {
        "type": "string",
        "description": "The version of the OS of the client"
      },
      "CloudPcId": {
        "type": "string",
        "description": "The cloud pc id of the dev box"
      },
      "DevBoxName": {
        "type": "string",
        "description": "The chosen display name for the dev box"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "NicResourceId": {
        "type": "string",
        "description": "The NIC resource ID for the dev box"
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SessionHostName": {
        "type": "string",
        "description": "Name of underlying Virtual Machine"
      },
      "SessionHostPoolType": {
        "type": "string",
        "description": "The type of session host pool - either SharedDesktop or"
      },
      "SessionHostResourceId": {
        "type": "string",
        "description": "The ARM path of the session host"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "State": {
        "type": "string",
        "description": "The state of the connection attempt"
      },
      "SubnetResourceId": {
        "type": "string",
        "description": "The subnet resource id for the network of the dev box"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time when the report was generated (UTC)"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UdpType": {
        "type": "string",
        "description": "The type of transport used by the RDP connection"
      }
    }
  },
  "DevCenterDiagnosticLogs": {
    "tableName": "DevCenterDiagnosticLogs",
    "description": "Data plane audit logs related to your dev center resources. Will display information concerning stop/start/deletes on dev boxes and environments.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CallerIdentity": {
        "type": "string",
        "description": "User ID that created the request."
      },
      "CorrelationId": {
        "type": "string",
        "description": "ID which groups operation logs for ease of debugging."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "OperationName": {
        "type": "string",
        "description": "The operation stage of the service from which the log entry was"
      },
      "OperationResult": {
        "type": "string",
        "description": "Displays whether operation was successful or unsuccessful."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResponseCode": {
        "type": "string",
        "description": "HTTP status code of the completed operation."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TargetResourceId": {
        "type": "string",
        "description": "Dataplane ID of the affected resource."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Time (UTC) when the log was created."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "DevCenterResourceOperationLogs": {
    "tableName": "DevCenterResourceOperationLogs",
    "description": "Operation logs pertaining to DevCenter resources, including information around resource health status changes.",
    "columns": {
      "AdditionalProperties": {
        "type": "dynamic",
        "description": "Property bag of dimensions that are useful for this entry."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CorrelationId": {
        "type": "string",
        "description": "ID which groups operation logs for ease of debugging."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Message": {
        "type": "string",
        "description": "The log message which has details about the state of the resource."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation stage of the service from which the log entry was"
      },
      "Region": {
        "type": "string",
        "description": "The region the resource is located in."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "SubResourceId": {
        "type": "string",
        "description": "The resource within the DevCenter that this log relates to."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Time (UTC) when the log was created."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "DeviceAppCrash": {
    "tableName": "DeviceAppCrash",
    "description": "",
    "columns": {
      "AppID": {
        "type": "string",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Computer": {
        "type": "string",
        "description": ""
      },
      "EventId": {
        "type": "int",
        "description": ""
      },
      "EventName": {
        "type": "string",
        "description": ""
      },
      "HealthServiceId": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "ProviderId": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "DeviceAppLaunch": {
    "tableName": "DeviceAppLaunch",
    "description": "",
    "columns": {
      "AppID": {
        "type": "string",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Computer": {
        "type": "string",
        "description": ""
      },
      "EventId": {
        "type": "int",
        "description": ""
      },
      "EventName": {
        "type": "string",
        "description": ""
      },
      "HealthServiceId": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "ProviderId": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "DeviceBehaviorEntities": {
    "tableName": "DeviceBehaviorEntities",
    "description": "Microsoft Defender for Endpoints (MDE) behaviors table. Contains information about entities (file, process, device, user, and others) that are involved in a behavior or observation, including detected threats.",
    "columns": {
      "AccountDomain": {
        "type": "string",
        "description": "Domain of the account."
      },
      "AccountName": {
        "type": "string",
        "description": "User name of the account."
      },
      "AccountObjectId": {
        "type": "string",
        "description": "Unique identifier for the account in Azure AD."
      },
      "AccountSid": {
        "type": "string",
        "description": "Security Identifier (SID) of the account."
      },
      "AccountUpn": {
        "type": "string",
        "description": "User principal name (UPN) of the account."
      },
      "ActionType": {
        "type": "string",
        "description": "Type of activity that triggered the event. Associated with specific"
      },
      "AdditionalFields": {
        "type": "string",
        "description": "Additional information about the entity or event."
      },
      "Application": {
        "type": "string",
        "description": "Application that performed the recorded action."
      },
      "ApplicationId": {
        "type": "string",
        "description": "Unique identifier for the application."
      },
      "BehaviorId": {
        "type": "string",
        "description": "Unique identifier for the behavior."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Categories": {
        "type": "string",
        "description": "Types of threat indicator or breach activity identified by the alert."
      },
      "DataSources": {
        "type": "string",
        "description": "Products or services that provided information for the behavior."
      },
      "DetailedEntityRole": {
        "type": "string",
        "description": "The role of the entity in the behavior"
      },
      "DetectionSource": {
        "type": "string",
        "description": "Detection technology or sensor that identified the notable"
      },
      "DeviceId": {
        "type": "string",
        "description": "Unique identifier for the device in the service."
      },
      "DeviceName": {
        "type": "string",
        "description": "Fully qualified domain name (FQDN) of the device."
      },
      "EmailClusterId": {
        "type": "string",
        "description": "Identifier for the group of similar emails clustered based on heuristic"
      },
      "EmailSubject": {
        "type": "string",
        "description": "Subject of the email."
      },
      "EntityRole": {
        "type": "string",
        "description": "Indicates whether the entity is impacted or merely related."
      },
      "EntityType": {
        "type": "string",
        "description": "Type of object, such as a file, a process, a device, or a user."
      },
      "FileName": {
        "type": "string",
        "description": "Name of the file involved in the alert. Empty unless EntityType is \"File\""
      },
      "FileSize": {
        "type": "long",
        "description": "Size of the file in bytes. Empty unless EntityType is \"File\" or \"Process\""
      },
      "FolderPath": {
        "type": "string",
        "description": "Folder containing the file. Empty unless EntityType is \"File\" or"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "LocalIP": {
        "type": "string",
        "description": "IP address assigned to the local machine used during communication."
      },
      "NetworkMessageId": {
        "type": "string",
        "description": "Unique identifier for the email in UUID format, generated by Office"
      },
      "OAuthApplicationId": {
        "type": "string",
        "description": "Unique identifier of the third-party OAuth application in UUID format."
      },
      "ProcessCommandLine": {
        "type": "string",
        "description": "Command line used to create the new process."
      },
      "RegistryKey": {
        "type": "string",
        "description": "Registry key that the recorded action was applied to."
      },
      "RegistryValueData": {
        "type": "string",
        "description": "Data of the registry value that the recorded action was applied to."
      },
      "RegistryValueName": {
        "type": "string",
        "description": "Name of the registry value that the recorded action was applied to."
      },
      "RemoteIP": {
        "type": "string",
        "description": "IP address that was being connected to."
      },
      "RemoteUrl": {
        "type": "string",
        "description": "URL or fully qualified domain name (FQDN) that was being connected"
      },
      "ServiceSource": {
        "type": "string",
        "description": "Product or service that provided the alert information."
      },
      "SHA1": {
        "type": "string",
        "description": "SHA-1 hash of the file. Empty unless EntityType is \"File\" or \"Process\"."
      },
      "SHA256": {
        "type": "string",
        "description": "SHA-256 of the file. Empty unless EntityType is \"File\" or \"Process\"."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "ThreatFamily": {
        "type": "string",
        "description": "Malware family that the suspicious or malicious file or process has"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time when the record was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "DeviceBehaviorInfo": {
    "tableName": "DeviceBehaviorInfo",
    "description": "Microsoft Defender for Endpoints (MDE) behaviors table. Contains information about behaviors, which in the context of Microsoft 365 Defender refers to a conclusion or insight based on one or more raw events, which can provide analysts more context in investigations.",
    "columns": {
      "AccountObjectId": {
        "type": "string",
        "description": "Unique identifier for the account in Azure AD."
      },
      "AccountUpn": {
        "type": "string",
        "description": "User principal name (UPN) of the account."
      },
      "ActionType": {
        "type": "string",
        "description": "Type of activity that triggered the event. Associated with specific MITRE"
      },
      "AdditionalFields": {
        "type": "string",
        "description": "Additional information about the entity or event."
      },
      "AttackTechniques": {
        "type": "string",
        "description": "MITRE ATT&CK techniques associated with the activity that triggered the"
      },
      "BehaviorId": {
        "type": "string",
        "description": "Unique identifier for the behavior."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Categories": {
        "type": "string",
        "description": "Types of threat indicator or breach activity identified by the alert. Defined"
      },
      "DataSources": {
        "type": "string",
        "description": "Products or services that provided information for the behavior."
      },
      "Description": {
        "type": "string",
        "description": "Description of the behavior."
      },
      "DetectionSource": {
        "type": "string",
        "description": "Detection technology or sensor that identified the notable component or"
      },
      "DeviceId": {
        "type": "string",
        "description": "Unique identifier for the device in the service."
      },
      "EndTime": {
        "type": "datetime",
        "description": "Date and time of the last activity related to the behavior."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "ServiceSource": {
        "type": "string",
        "description": "Product or service that provided the alert information."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "StartTime": {
        "type": "datetime",
        "description": "Date and time of the first activity related to the behavior."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time when the record was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "DeviceCalendar": {
    "tableName": "DeviceCalendar",
    "description": "",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Computer": {
        "type": "string",
        "description": ""
      },
      "DelaySeconds": {
        "type": "int",
        "description": ""
      },
      "DeviceType": {
        "type": "string",
        "description": ""
      },
      "ErrorMessage": {
        "type": "string",
        "description": ""
      },
      "EventId": {
        "type": "int",
        "description": ""
      },
      "EventName": {
        "type": "string",
        "description": ""
      },
      "HealthServiceId": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "ProviderId": {
        "type": "string",
        "description": ""
      },
      "ResultCode": {
        "type": "int",
        "description": ""
      },
      "SerialNumber": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "SyncStatus": {
        "type": "string",
        "description": ""
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "DeviceCleanup": {
    "tableName": "DeviceCleanup",
    "description": "",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Computer": {
        "type": "string",
        "description": ""
      },
      "DeviceType": {
        "type": "string",
        "description": ""
      },
      "EventId": {
        "type": "int",
        "description": ""
      },
      "EventName": {
        "type": "string",
        "description": ""
      },
      "HealthServiceId": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "ProviderId": {
        "type": "string",
        "description": ""
      },
      "SerialNumber": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "State": {
        "type": "string",
        "description": ""
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "DeviceConnectSession": {
    "tableName": "DeviceConnectSession",
    "description": "",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Computer": {
        "type": "string",
        "description": ""
      },
      "DeviceType": {
        "type": "string",
        "description": ""
      },
      "EventId": {
        "type": "int",
        "description": ""
      },
      "EventName": {
        "type": "string",
        "description": ""
      },
      "HealthServiceId": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable."
      },
      "Opcode": {
        "type": "int",
        "description": ""
      },
      "ProviderId": {
        "type": "string",
        "description": ""
      },
      "SerialNumber": {
        "type": "string",
        "description": ""
      },
      "sessionClass": {
        "type": "string",
        "description": ""
      },
      "sessionConnected": {
        "type": "bool",
        "description": ""
      },
      "sessionDurationMilliSeconds": {
        "type": "real",
        "description": ""
      },
      "sessionType": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by."
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time the event was recorded by the"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "wasCleanShutdown": {
        "type": "bool",
        "description": ""
      },
      "ActionType": {
        "type": "string",
        "description": "Type of activity that triggered the event."
      },
      "AdditionalFields": {
        "type": "dynamic",
        "description": "Additional information about the entity or"
      },
      "AppGuardContainerId": {
        "type": "string",
        "description": "Identifier for the virtualized container used by"
      },
      "DeviceId": {
        "type": "string",
        "description": "Unique identifier for the device in the service."
      },
      "DeviceName": {
        "type": "string",
        "description": "Fully qualified domain name (FQDN) of the"
      },
      "FileName": {
        "type": "string",
        "description": "Name of the file that the recorded action was"
      },
      "FileOriginIP": {
        "type": "string",
        "description": "IP address where the file was downloaded"
      },
      "FileOriginReferrerUrl": {
        "type": "string",
        "description": "URL of the web page that links to the"
      },
      "FileOriginUrl": {
        "type": "string",
        "description": "URL where the file was downloaded from."
      },
      "FileSize": {
        "type": "long",
        "description": "Size of the file in bytes."
      },
      "FolderPath": {
        "type": "string",
        "description": "Folder containing the file that the recorded"
      },
      "InitiatingProcessAccountDomain": {
        "type": "string",
        "description": "Domain of the account that ran the process"
      },
      "InitiatingProcessAccountName": {
        "type": "string",
        "description": "User name of the account that ran the process"
      },
      "InitiatingProcessAccountObjectId": {
        "type": "string",
        "description": "Azure AD object ID of the user account that"
      },
      "InitiatingProcessAccountSid": {
        "type": "string",
        "description": "Security Identifier (SID) of the account that ran"
      },
      "InitiatingProcessAccountUpn": {
        "type": "string",
        "description": "User principal name (UPN) of the account that"
      },
      "InitiatingProcessCommandLine": {
        "type": "string",
        "description": "Command line used to run the process that"
      },
      "InitiatingProcessCreationTime": {
        "type": "datetime",
        "description": "Date and time when the process that initiated"
      },
      "InitiatingProcessFileName": {
        "type": "string",
        "description": "Name of the process that initiated the event."
      },
      "InitiatingProcessFileSize": {
        "type": "long",
        "description": "Size of the process (image file) that initiated"
      },
      "InitiatingProcessFolderPath": {
        "type": "string",
        "description": "Folder containing the process (image file) that"
      },
      "InitiatingProcessId": {
        "type": "long",
        "description": "Process ID (PID) of the process that initiated"
      },
      "InitiatingProcessIntegrityLevel": {
        "type": "string",
        "description": "Integrity level of the process that initiated the"
      },
      "InitiatingProcessMD5": {
        "type": "string",
        "description": "MD5 hash of the process (image file) that"
      },
      "InitiatingProcessParentCreationTime": {
        "type": "datetime",
        "description": "Date and time when the parent of the process"
      },
      "InitiatingProcessParentFileName": {
        "type": "string",
        "description": "Name of the parent process that spawned the"
      },
      "InitiatingProcessParentId": {
        "type": "long",
        "description": "Process ID (PID) of the parent process that"
      },
      "InitiatingProcessRemoteSessionDeviceName": {
        "type": "string",
        "description": "Device name of the remote device from which"
      },
      "InitiatingProcessRemoteSessionIP": {
        "type": "string",
        "description": "IP address of the remote device from which"
      },
      "InitiatingProcessSessionId": {
        "type": "long",
        "description": "Windows session ID of the initiating process."
      },
      "InitiatingProcessSHA1": {
        "type": "string",
        "description": "SHA-1 hash of the process (image file) that"
      },
      "InitiatingProcessSHA256": {
        "type": "string",
        "description": "SHA-256 hash of the process (image file) that"
      },
      "InitiatingProcessTokenElevation": {
        "type": "string",
        "description": "Token type indicating the presence or absence"
      },
      "InitiatingProcessVersionInfoCompanyName": {
        "type": "string",
        "description": "Company name from the version information"
      },
      "InitiatingProcessVersionInfoFileDescription": {
        "type": "string",
        "description": "Description from the version information of"
      },
      "InitiatingProcessVersionInfoInternalFileName": {
        "type": "string",
        "description": "Internal file name from the version information"
      },
      "InitiatingProcessVersionInfoOriginalFileName": {
        "type": "string",
        "description": "Original file name from the version"
      },
      "InitiatingProcessVersionInfoProductName": {
        "type": "string",
        "description": "Product name from the version information of"
      },
      "InitiatingProcessVersionInfoProductVersion": {
        "type": "string",
        "description": "Product version from the version information"
      },
      "IsAzureInfoProtectionApplied": {
        "type": "bool",
        "description": "Indicates whether the file is encrypted by"
      },
      "IsInitiatingProcessRemoteSession": {
        "type": "bool",
        "description": "Indicates whether the initiating process was"
      },
      "MachineGroup": {
        "type": "string",
        "description": "Machine group of the machine. This group is"
      },
      "MD5": {
        "type": "string",
        "description": "MD5 hash of the file that the recorded action"
      },
      "PreviousFileName": {
        "type": "string",
        "description": "Original name of the file that was renamed as"
      },
      "PreviousFolderPath": {
        "type": "string",
        "description": "Original folder containing the file before the"
      },
      "ReportId": {
        "type": "long",
        "description": "Event identifier based on a repeating counter."
      },
      "RequestAccountDomain": {
        "type": "string",
        "description": "Domain of the account used to remotely"
      },
      "RequestAccountName": {
        "type": "string",
        "description": "User name of account used to remotely"
      },
      "RequestAccountSid": {
        "type": "string",
        "description": "Security Identifier (SID) of the account used to"
      },
      "RequestProtocol": {
        "type": "string",
        "description": "Network protocol, if applicable, used to initiate"
      },
      "RequestSourceIP": {
        "type": "string",
        "description": "IPv4 or IPv6 address of the remote device that"
      },
      "RequestSourcePort": {
        "type": "int",
        "description": "Source port on the remote device that"
      },
      "RuleLastModificationTime": {
        "type": "datetime",
        "description": "Date and time when the rule that collected the"
      },
      "RuleName": {
        "type": "string",
        "description": "Name of the rule that collected the event"
      },
      "SensitivityLabel": {
        "type": "string",
        "description": "Label applied to an email, file, or other content"
      },
      "SensitivitySubLabel": {
        "type": "string",
        "description": "Sublabel applied to an email, file, or other"
      },
      "SHA1": {
        "type": "string",
        "description": "SHA-1 hash of the file that the recorded action"
      },
      "SHA256": {
        "type": "string",
        "description": "SHA-256 of the file that the recorded action"
      },
      "ShareName": {
        "type": "string",
        "description": "Name of shared folder containing the file."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "InitiatingProcessUniqueId": {
        "type": "string",
        "description": "Unique identifier of the initiating process; this"
      },
      "These": {
        "type": "int",
        "description": "egrity levels influence permissions to"
      },
      "LocalIP": {
        "type": "string",
        "description": "IP address assigned to the local machine used"
      },
      "LocalIPType": {
        "type": "string",
        "description": "Type of IP address, for example Public, Private,"
      },
      "LocalPort": {
        "type": "int",
        "description": "TCP port on the local machine used during"
      },
      "Protocol": {
        "type": "string",
        "description": "IP protocol used, whether TCP or UDP."
      },
      "RemoteIP": {
        "type": "string",
        "description": "IP address that was being connected to."
      },
      "RemoteIPType": {
        "type": "string",
        "description": "Type of IP address, for example Public, Private,"
      },
      "RemotePort": {
        "type": "int",
        "description": "TCP port on the remote device that was being"
      },
      "RemoteUrl": {
        "type": "string",
        "description": "URL or fully qualified domain name (FQDN)"
      },
      "AccountDomain": {
        "type": "string",
        "description": "Domain of the account."
      },
      "AccountName": {
        "type": "string",
        "description": "User name of the account."
      },
      "AccountObjectId": {
        "type": "string",
        "description": "Unique identifier for the account in Azure AD."
      },
      "AccountSid": {
        "type": "string",
        "description": "Security Identifier (SID) of the account."
      },
      "AccountUpn": {
        "type": "string",
        "description": "User principal name (UPN) of the account."
      },
      "CreatedProcessSessionId": {
        "type": "long",
        "description": "Windows session ID of the created process."
      },
      "InitiatingProcessLogonId": {
        "type": "long",
        "description": "Identifier for a logon session of the process"
      },
      "InitiatingProcessSignatureStatus": {
        "type": "string",
        "description": "Information about the signature status of the"
      },
      "InitiatingProcessSignerType": {
        "type": "string",
        "description": "Type of file signer of the process (image file)"
      },
      "IsProcessRemoteSession": {
        "type": "bool",
        "description": "Indicates whether the created process was run"
      },
      "LogonId": {
        "type": "long",
        "description": "Identifier for a logon session. This identifier is"
      },
      "ProcessCommandLine": {
        "type": "string",
        "description": "Command line used to create the new process."
      },
      "ProcessCreationTime": {
        "type": "datetime",
        "description": "Date and time the process was created."
      },
      "ProcessId": {
        "type": "long",
        "description": "Process ID (PID) of the newly created process."
      },
      "ProcessIntegrityLevel": {
        "type": "string",
        "description": "Integrity level of the newly created process."
      },
      "ProcessRemoteSessionDeviceName": {
        "type": "string",
        "description": "Device name of the remote device from which"
      },
      "ProcessRemoteSessionIP": {
        "type": "string",
        "description": "IP address of the remote device from which"
      },
      "ProcessTokenElevation": {
        "type": "string",
        "description": "Token type indicating the presence or absence"
      },
      "ProcessUniqueId": {
        "type": "string",
        "description": "Unique identifier of the process; this is equal"
      },
      "ProcessVersionInfoCompanyName": {
        "type": "string",
        "description": "Company name from the version information"
      },
      "ProcessVersionInfoFileDescription": {
        "type": "string",
        "description": "Description from the version information of"
      },
      "ProcessVersionInfoInternalFileName": {
        "type": "string",
        "description": "Internal file name from the version information"
      },
      "ProcessVersionInfoOriginalFileName": {
        "type": "string",
        "description": "Original file name from the version"
      },
      "ProcessVersionInfoProductName": {
        "type": "string",
        "description": "Product name from the version information of"
      },
      "ProcessVersionInfoProductVersion": {
        "type": "string",
        "description": "Product version from the version information"
      },
      "ScriptContent": {
        "type": "string",
        "description": "Content of the executed script."
      },
      "ScriptContentSHA256": {
        "type": "string",
        "description": "SHA256 over the script content."
      },
      "Timestamp": {
        "type": "datetime",
        "description": "Date and time when the record was generated."
      }
    }
  },
  "DeviceEtw": {
    "tableName": "DeviceEtw",
    "description": "",
    "columns": {
      "ActivityId": {
        "type": "string",
        "description": ""
      },
      "appName": {
        "type": "string",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Computer": {
        "type": "string",
        "description": ""
      },
      "DeviceType": {
        "type": "string",
        "description": ""
      },
      "EventId": {
        "type": "int",
        "description": ""
      },
      "EventName": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "period": {
        "type": "int",
        "description": ""
      },
      "ProcessId": {
        "type": "string",
        "description": ""
      },
      "ProviderId": {
        "type": "string",
        "description": ""
      },
      "SerialNumber": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "status": {
        "type": "int",
        "description": ""
      },
      "tags": {
        "type": "string",
        "description": ""
      },
      "ThreadId": {
        "type": "int",
        "description": ""
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "type": {
        "type": "int",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "wakeEnabled": {
        "type": "bool",
        "description": ""
      }
    }
  },
  "DeviceEvents": {
    "tableName": "DeviceEvents",
    "description": "This table is part of Microsoft Defender for Endpoints with Azure Sentinel. This table contains Multiple event types, including events triggered by security controls such as Windows Defender Antivirus and exploit protection.",
    "columns": {
      "AccountDomain": {
        "type": "string",
        "description": "Domain of the account."
      },
      "AccountName": {
        "type": "string",
        "description": "User name of the account."
      },
      "AccountSid": {
        "type": "string",
        "description": "Security identifier (SID) of the account."
      },
      "ActionType": {
        "type": "string",
        "description": "Type of activity that triggered the event."
      },
      "AdditionalFields": {
        "type": "dynamic",
        "description": "Additional information about the entity or"
      },
      "AppGuardContainerId": {
        "type": "string",
        "description": "Identifier for the virtualized container used by"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CreatedProcessSessionId": {
        "type": "long",
        "description": "Windows session ID of the created process."
      },
      "DeviceId": {
        "type": "string",
        "description": "Unique identifier for the device in the service."
      },
      "DeviceName": {
        "type": "string",
        "description": "Fully qualified domain name (FQDN) of the"
      },
      "FileName": {
        "type": "string",
        "description": "Domain of the account."
      },
      "FileOriginIP": {
        "type": "string",
        "description": "IP address where the file was downloaded"
      },
      "FileOriginUrl": {
        "type": "string",
        "description": "URL where the file was downloaded from."
      },
      "FileSize": {
        "type": "long",
        "description": "Size of the file in bytes."
      },
      "FolderPath": {
        "type": "string",
        "description": "Domain of the account."
      },
      "InitiatingProcessAccountDomain": {
        "type": "string",
        "description": "Domain of the account that ran the process"
      },
      "InitiatingProcessAccountName": {
        "type": "string",
        "description": "User name of the account that ran the process"
      },
      "InitiatingProcessAccountObjectId": {
        "type": "string",
        "description": "Azure AD object ID of the user account that"
      },
      "InitiatingProcessAccountSid": {
        "type": "string",
        "description": "Security Identifier (SID) of the account that ran"
      },
      "InitiatingProcessAccountUpn": {
        "type": "string",
        "description": "User principal name (UPN) of the account that"
      },
      "InitiatingProcessCommandLine": {
        "type": "string",
        "description": "Command line used to run the process that"
      },
      "InitiatingProcessCreationTime": {
        "type": "datetime",
        "description": "Date and time when the process that initiated"
      },
      "InitiatingProcessFileName": {
        "type": "string",
        "description": "Name of the process that initiated the event."
      },
      "InitiatingProcessFileSize": {
        "type": "long",
        "description": "Size in bytes of the file that ran the process"
      },
      "InitiatingProcessFolderPath": {
        "type": "string",
        "description": "Folder containing the process (image file) that"
      },
      "InitiatingProcessId": {
        "type": "long",
        "description": "Process ID (PID) of the process that initiated"
      },
      "InitiatingProcessLogonId": {
        "type": "long",
        "description": "Identifier for a logon session of the process"
      },
      "InitiatingProcessMD5": {
        "type": "string",
        "description": "MD5 hash of the process (image file) that"
      },
      "InitiatingProcessParentCreationTime": {
        "type": "datetime",
        "description": "Date and time when the parent of the process"
      },
      "InitiatingProcessParentFileName": {
        "type": "string",
        "description": "Name of the parent process that spawned the"
      },
      "InitiatingProcessParentId": {
        "type": "long",
        "description": "Process ID (PID) of the parent process that"
      },
      "InitiatingProcessRemoteSessionDeviceName": {
        "type": "string",
        "description": "Device name of the remote device from which"
      },
      "InitiatingProcessRemoteSessionIP": {
        "type": "string",
        "description": "IP address of the remote device from which"
      },
      "InitiatingProcessSessionId": {
        "type": "long",
        "description": "Windows session ID of the initiating process."
      },
      "InitiatingProcessSHA1": {
        "type": "string",
        "description": "SHA-1 hash of the process (image file) that"
      },
      "InitiatingProcessSHA256": {
        "type": "string",
        "description": "SHA-256 hash of the process (image file) that"
      },
      "InitiatingProcessVersionInfoCompanyName": {
        "type": "string",
        "description": "Company name from the version information"
      },
      "InitiatingProcessVersionInfoFileDescription": {
        "type": "string",
        "description": "Description from the version information of"
      },
      "InitiatingProcessVersionInfoInternalFileName": {
        "type": "string",
        "description": "Internal file name from the version information"
      },
      "InitiatingProcessVersionInfoOriginalFileName": {
        "type": "string",
        "description": "Original file name from the version"
      },
      "InitiatingProcessVersionInfoProductName": {
        "type": "string",
        "description": "Product name from the version information of"
      },
      "InitiatingProcessVersionInfoProductVersion": {
        "type": "string",
        "description": "Product version from the version information"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable."
      },
      "IsInitiatingProcessRemoteSession": {
        "type": "bool",
        "description": "Indicates whether the initiating process was"
      },
      "IsProcessRemoteSession": {
        "type": "bool",
        "description": "Indicates whether the created process was run"
      },
      "LocalIP": {
        "type": "string",
        "description": "IP address assigned to the local machine used"
      },
      "LocalPort": {
        "type": "int",
        "description": "TCP port on the local machine used during"
      },
      "LogonId": {
        "type": "long",
        "description": "Identifier for a logon session. This identifier is"
      },
      "MachineGroup": {
        "type": "string",
        "description": "Machine group of the machine. This group is"
      },
      "MD5": {
        "type": "string",
        "description": "MD5 hash of the file that the recorded action"
      },
      "ProcessCommandLine": {
        "type": "string",
        "description": "Command line used to create the new process."
      },
      "ProcessCreationTime": {
        "type": "datetime",
        "description": "Date and time the process was created."
      },
      "ProcessId": {
        "type": "long",
        "description": "Process ID (PID) of the newly created process."
      },
      "ProcessRemoteSessionDeviceName": {
        "type": "string",
        "description": "Device name of the remote device from which"
      },
      "ProcessRemoteSessionIP": {
        "type": "string",
        "description": "IP address of the remote device from which"
      },
      "ProcessTokenElevation": {
        "type": "string",
        "description": "Token type indicating the presence or absence"
      },
      "RegistryKey": {
        "type": "string",
        "description": "Registry key that the recorded action was"
      },
      "RegistryValueData": {
        "type": "string",
        "description": "Data of the registry value that the recorded"
      },
      "RegistryValueName": {
        "type": "string",
        "description": "Name of the registry value that the recorded"
      },
      "RemoteDeviceName": {
        "type": "string",
        "description": "Name of the device that performed a remote"
      },
      "RemoteIP": {
        "type": "string",
        "description": "IP address that was being connected to."
      },
      "RemotePort": {
        "type": "int",
        "description": "TCP port on the remote device that was being"
      },
      "RemoteUrl": {
        "type": "string",
        "description": "URL or fully qualified domain name (FQDN)"
      },
      "ReportId": {
        "type": "long",
        "description": "Event identifier based on a repeating counter."
      },
      "SHA1": {
        "type": "string",
        "description": "SHA-1 hash of the file that the recorded action"
      },
      "SHA256": {
        "type": "string",
        "description": "SHA-256 of the file that the recorded action"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time the event was recorded by the"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "DeviceFileCertificateInfo": {
    "tableName": "DeviceFileCertificateInfo",
    "description": "Certificate information of signed files obtained from certificate verification events on endpoints.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CertificateCountersignatureTime": {
        "type": "datetime",
        "description": "Date and time (UTC) the certificate was countersigned."
      },
      "CertificateCreationTime": {
        "type": "datetime",
        "description": "Date and time (UTC) the certificate was created."
      },
      "CertificateExpirationTime": {
        "type": "datetime",
        "description": "Certificate expiry date and time (UTC)."
      },
      "CertificateSerialNumber": {
        "type": "string",
        "description": "Identifier for the certificate that is unique to the issuing"
      },
      "CrlDistributionPointUrls": {
        "type": "string",
        "description": "A list of network shares URLs that contains certificates and"
      },
      "DeviceId": {
        "type": "string",
        "description": "Unique identifier for the device in the service."
      },
      "DeviceName": {
        "type": "string",
        "description": "Fully qualified domain name (FQDN) of the device."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "IsRootSignerMicrosoft": {
        "type": "bool",
        "description": "Indicates whether the signer of the root certificate is"
      },
      "IsSigned": {
        "type": "bool",
        "description": "Indicates whether the file is signed."
      },
      "Issuer": {
        "type": "string",
        "description": "Information about the issuing certificate authority (CA)."
      },
      "IssuerHash": {
        "type": "string",
        "description": "Unique hash value identifying issuing certificate authority"
      },
      "IsTrusted": {
        "type": "bool",
        "description": "Indicates whether the file is trusted based on the results of"
      },
      "MachineGroup": {
        "type": "string",
        "description": "Machine group of the machine. This group is used by role-"
      },
      "ReportId": {
        "type": "long",
        "description": "Unique identifier for the event."
      },
      "SHA1": {
        "type": "string",
        "description": "SHA-1 hash of the file that the recorded action was applied"
      },
      "SignatureType": {
        "type": "string",
        "description": "Indicates whether signature information was read as"
      },
      "Signer": {
        "type": "string",
        "description": "Information about the signer of the file."
      },
      "SignerHash": {
        "type": "string",
        "description": "Unique hash value identifying the signer."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time the event was recorded by the MDE agent"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "DeviceFileEvents": {
    "tableName": "DeviceFileEvents",
    "description": "This table is part of Microsoft Defender for Endpoints with Azure Sentinel. This table contains file creation, modification, and other file system events.",
    "columns": {
      "ActionType": {
        "type": "string",
        "description": "Type of activity that triggered the event."
      },
      "AdditionalFields": {
        "type": "dynamic",
        "description": "Additional information about the entity or"
      },
      "AppGuardContainerId": {
        "type": "string",
        "description": "Identifier for the virtualized container used by"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DeviceId": {
        "type": "string",
        "description": "Unique identifier for the device in the service."
      },
      "DeviceName": {
        "type": "string",
        "description": "Fully qualified domain name (FQDN) of the"
      },
      "FileName": {
        "type": "string",
        "description": "Name of the file that the recorded action was"
      },
      "FileOriginIP": {
        "type": "string",
        "description": "IP address where the file was downloaded"
      },
      "FileOriginReferrerUrl": {
        "type": "string",
        "description": "URL of the web page that links to the"
      },
      "FileOriginUrl": {
        "type": "string",
        "description": "URL where the file was downloaded from."
      },
      "FileSize": {
        "type": "long",
        "description": "Size of the file in bytes."
      },
      "FolderPath": {
        "type": "string",
        "description": "Folder containing the file that the recorded"
      },
      "InitiatingProcessAccountDomain": {
        "type": "string",
        "description": "Domain of the account that ran the process"
      },
      "InitiatingProcessAccountName": {
        "type": "string",
        "description": "User name of the account that ran the process"
      },
      "InitiatingProcessAccountObjectId": {
        "type": "string",
        "description": "Azure AD object ID of the user account that"
      },
      "InitiatingProcessAccountSid": {
        "type": "string",
        "description": "Security Identifier (SID) of the account that ran"
      },
      "InitiatingProcessAccountUpn": {
        "type": "string",
        "description": "User principal name (UPN) of the account that"
      },
      "InitiatingProcessCommandLine": {
        "type": "string",
        "description": "Command line used to run the process that"
      },
      "InitiatingProcessCreationTime": {
        "type": "datetime",
        "description": "Date and time when the process that initiated"
      },
      "InitiatingProcessFileName": {
        "type": "string",
        "description": "Name of the process that initiated the event."
      },
      "InitiatingProcessFileSize": {
        "type": "long",
        "description": "Size in bytes of the process (image file) that"
      },
      "InitiatingProcessFolderPath": {
        "type": "string",
        "description": "Folder containing the process (image file) that"
      },
      "InitiatingProcessId": {
        "type": "long",
        "description": "Process ID (PID) of the process that initiated"
      },
      "InitiatingProcessIntegrityLevel": {
        "type": "string",
        "description": "Integrity level of the process that initiated the"
      },
      "InitiatingProcessMD5": {
        "type": "string",
        "description": "MD5 hash of the process (image file) that"
      },
      "InitiatingProcessParentCreationTime": {
        "type": "datetime",
        "description": "Date and time when the parent of the process"
      },
      "InitiatingProcessParentFileName": {
        "type": "string",
        "description": "Name of the parent process that spawned the"
      },
      "InitiatingProcessParentId": {
        "type": "long",
        "description": "Process ID (PID) of the parent process that"
      },
      "InitiatingProcessRemoteSessionDeviceName": {
        "type": "string",
        "description": "Device name of the remote device from which"
      },
      "InitiatingProcessRemoteSessionIP": {
        "type": "string",
        "description": "IP address of the remote device from which"
      },
      "InitiatingProcessSessionId": {
        "type": "long",
        "description": "Windows session ID of the initiating process."
      },
      "InitiatingProcessSHA1": {
        "type": "string",
        "description": "SHA-1 hash of the process (image file) that"
      },
      "InitiatingProcessSHA256": {
        "type": "string",
        "description": "SHA-256 hash of the process (image file) that"
      },
      "InitiatingProcessTokenElevation": {
        "type": "string",
        "description": "Token type indicating the presence or absence"
      },
      "InitiatingProcessVersionInfoCompanyName": {
        "type": "string",
        "description": "Company name from the version information"
      },
      "InitiatingProcessVersionInfoFileDescription": {
        "type": "string",
        "description": "Description from the version information of"
      },
      "InitiatingProcessVersionInfoInternalFileName": {
        "type": "string",
        "description": "Internal file name from the version information"
      },
      "InitiatingProcessVersionInfoOriginalFileName": {
        "type": "string",
        "description": "Original file name from the version"
      },
      "InitiatingProcessVersionInfoProductName": {
        "type": "string",
        "description": "Product name from the version information of"
      },
      "InitiatingProcessVersionInfoProductVersion": {
        "type": "string",
        "description": "Product version from the version information"
      },
      "IsAzureInfoProtectionApplied": {
        "type": "bool",
        "description": "Indicates whether the file is encrypted by"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable."
      },
      "IsInitiatingProcessRemoteSession": {
        "type": "bool",
        "description": "Indicates whether the initiating process was"
      },
      "MachineGroup": {
        "type": "string",
        "description": "Machine group of the machine. This group is"
      },
      "MD5": {
        "type": "string",
        "description": "MD5 hash of the file that the recorded action"
      },
      "PreviousFileName": {
        "type": "string",
        "description": "Original name of the file that was renamed as"
      },
      "PreviousFolderPath": {
        "type": "string",
        "description": "Original folder containing the file before the"
      },
      "ReportId": {
        "type": "long",
        "description": "Event identifier based on a repeating counter."
      },
      "RequestAccountDomain": {
        "type": "string",
        "description": "Domain of the account used to remotely"
      },
      "RequestAccountName": {
        "type": "string",
        "description": "User name of account used to remotely"
      },
      "RequestAccountSid": {
        "type": "string",
        "description": "Security Identifier (SID) of the account used to"
      },
      "RequestProtocol": {
        "type": "string",
        "description": "Network protocol, if applicable, used to initiate"
      },
      "RequestSourceIP": {
        "type": "string",
        "description": "IPv4 or IPv6 address of the remote device that"
      },
      "RequestSourcePort": {
        "type": "int",
        "description": "Source port on the remote device that"
      },
      "SensitivityLabel": {
        "type": "string",
        "description": "Label applied to an email, file, or other content"
      },
      "SensitivitySubLabel": {
        "type": "string",
        "description": "Sublabel applied to an email, file, or other"
      },
      "SHA1": {
        "type": "string",
        "description": "SHA-1 hash of the file that the recorded action"
      },
      "SHA256": {
        "type": "string",
        "description": "SHA-256 of the file that the recorded action"
      },
      "ShareName": {
        "type": "string",
        "description": "Name of shared folder containing the file."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time the event was recorded by the"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "DeviceHardwareHealth": {
    "tableName": "DeviceHardwareHealth",
    "description": "",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Computer": {
        "type": "string",
        "description": ""
      },
      "DeviceType": {
        "type": "string",
        "description": ""
      },
      "EventId": {
        "type": "int",
        "description": ""
      },
      "EventName": {
        "type": "string",
        "description": ""
      },
      "HealthServiceId": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "ProviderId": {
        "type": "string",
        "description": ""
      },
      "SerialNumber": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "DeviceHealth": {
    "tableName": "DeviceHealth",
    "description": "",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Computer": {
        "type": "string",
        "description": ""
      },
      "DeviceType": {
        "type": "string",
        "description": ""
      },
      "EventId": {
        "type": "int",
        "description": ""
      },
      "EventName": {
        "type": "string",
        "description": ""
      },
      "HealthServiceId": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "ProviderId": {
        "type": "string",
        "description": ""
      },
      "SerialNumber": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "State": {
        "type": "string",
        "description": ""
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "DeviceHeartbeat": {
    "tableName": "DeviceHeartbeat",
    "description": "",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Computer": {
        "type": "string",
        "description": ""
      },
      "DeviceType": {
        "type": "string",
        "description": ""
      },
      "EventId": {
        "type": "int",
        "description": ""
      },
      "EventName": {
        "type": "string",
        "description": ""
      },
      "HealthServiceId": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "ProviderId": {
        "type": "string",
        "description": ""
      },
      "SerialNumber": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "DeviceImageLoadEvents": {
    "tableName": "DeviceImageLoadEvents",
    "description": "This table is part of Microsoft Defender for Endpoints with Azure Sentinel. This table contains DLL loading events.",
    "columns": {
      "ActionType": {
        "type": "string",
        "description": "Type of activity that triggered the event."
      },
      "AppGuardContainerId": {
        "type": "string",
        "description": "Identifier for the virtualized container used by"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DeviceId": {
        "type": "string",
        "description": "Unique identifier for the device in the service."
      },
      "DeviceName": {
        "type": "string",
        "description": "Fully qualified domain name (FQDN) of the"
      },
      "FileName": {
        "type": "string",
        "description": "Domain of the account."
      },
      "FileSize": {
        "type": "long",
        "description": "Size of the file in bytes."
      },
      "FolderPath": {
        "type": "string",
        "description": "Domain of the account."
      },
      "InitiatingProcessAccountDomain": {
        "type": "string",
        "description": "Domain of the account that ran the process"
      },
      "InitiatingProcessAccountName": {
        "type": "string",
        "description": "User name of the account that ran the process"
      },
      "InitiatingProcessAccountObjectId": {
        "type": "string",
        "description": "Azure AD object ID of the user account that"
      },
      "InitiatingProcessAccountSid": {
        "type": "string",
        "description": "Security Identifier (SID) of the account that ran"
      },
      "InitiatingProcessAccountUpn": {
        "type": "string",
        "description": "User principal name (UPN) of the account that"
      },
      "InitiatingProcessCommandLine": {
        "type": "string",
        "description": "Command line used to run the process that"
      },
      "InitiatingProcessCreationTime": {
        "type": "datetime",
        "description": "Date and time when the process that initiated"
      },
      "InitiatingProcessFileName": {
        "type": "string",
        "description": "Name of the process that initiated the event."
      },
      "InitiatingProcessFileSize": {
        "type": "long",
        "description": "Size in bytes of the process (image file) that"
      },
      "InitiatingProcessFolderPath": {
        "type": "string",
        "description": "Folder containing the process (image file) that"
      },
      "InitiatingProcessId": {
        "type": "long",
        "description": "Process ID (PID) of the process that initiated"
      },
      "InitiatingProcessIntegrityLevel": {
        "type": "string",
        "description": "Integrity level of the process that initiated the"
      },
      "InitiatingProcessMD5": {
        "type": "string",
        "description": "MD5 hash of the process (image file) that"
      },
      "InitiatingProcessParentCreationTime": {
        "type": "datetime",
        "description": "Date and time when the parent of the process"
      },
      "InitiatingProcessParentFileName": {
        "type": "string",
        "description": "Name of the parent process that spawned the"
      },
      "InitiatingProcessParentId": {
        "type": "long",
        "description": "Process ID (PID) of the parent process that"
      },
      "InitiatingProcessRemoteSessionDeviceName": {
        "type": "string",
        "description": "Device name of the remote device from which"
      },
      "InitiatingProcessRemoteSessionIP": {
        "type": "string",
        "description": "IP address of the remote device from which"
      },
      "InitiatingProcessSessionId": {
        "type": "long",
        "description": "Windows session ID of the initiating process."
      },
      "InitiatingProcessSHA1": {
        "type": "string",
        "description": "SHA-1 hash of the process (image file) that"
      },
      "InitiatingProcessSHA256": {
        "type": "string",
        "description": "SHA-256 hash of the process (image file) that"
      },
      "InitiatingProcessTokenElevation": {
        "type": "string",
        "description": "Token type indicating the presence or absence"
      },
      "InitiatingProcessVersionInfoCompanyName": {
        "type": "string",
        "description": "Company name from the version information"
      },
      "InitiatingProcessVersionInfoFileDescription": {
        "type": "string",
        "description": "Description from the version information of"
      },
      "InitiatingProcessVersionInfoInternalFileName": {
        "type": "string",
        "description": "Internal file name from the version information"
      },
      "InitiatingProcessVersionInfoOriginalFileName": {
        "type": "string",
        "description": "Original file name from the version"
      },
      "InitiatingProcessVersionInfoProductName": {
        "type": "string",
        "description": "Product name from the version information of"
      },
      "InitiatingProcessVersionInfoProductVersion": {
        "type": "string",
        "description": "Product version from the version information"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable."
      },
      "IsInitiatingProcessRemoteSession": {
        "type": "bool",
        "description": "Indicates whether the initiating process was"
      },
      "MachineGroup": {
        "type": "string",
        "description": "Machine group of the machine. This group is"
      },
      "MD5": {
        "type": "string",
        "description": "MD5 hash of the file that the recorded action"
      },
      "ReportId": {
        "type": "long",
        "description": "Event identifier based on a repeating counter."
      },
      "SHA1": {
        "type": "string",
        "description": "SHA-1 hash of the file that the recorded action"
      },
      "SHA256": {
        "type": "string",
        "description": "SHA-256 of the file that the recorded action"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time the event was recorded by the"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "DeviceInfo": {
    "tableName": "DeviceInfo",
    "description": "This table is part of Microsoft Defender for Endpoints with Azure Sentinel. This table contains Machine information, including OS information.",
    "columns": {
      "AadDeviceId": {
        "type": "string",
        "description": "Unique identifier for the device in Azure Active Directory."
      },
      "AdditionalFields": {
        "type": "dynamic",
        "description": "Additional information about the entity or event."
      },
      "AssetValue": {
        "type": "string",
        "description": "Indicates the value of a device as assigned by the user."
      },
      "AwsResourceName": {
        "type": "string",
        "description": "Unique identifier of the AWS resource associated with the device."
      },
      "AzureResourceId": {
        "type": "string",
        "description": "Unique identifier of the Azure resource associated with the device."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClientVersion": {
        "type": "string",
        "description": "Version of the endpoint agent or sensor running on the machine."
      },
      "DeviceCategory": {
        "type": "string",
        "description": "Broader classification that groups certain device types under the"
      },
      "DeviceDynamicTags": {
        "type": "string",
        "description": "Device tags added and removed dynamically based on dynamic"
      },
      "DeviceId": {
        "type": "string",
        "description": "Unique identifier for the device in the service."
      },
      "DeviceManualTags": {
        "type": "string",
        "description": "Device tags created manually using the portal UI or public API."
      },
      "DeviceName": {
        "type": "string",
        "description": "Fully qualified domain name (FQDN) of the device."
      },
      "DeviceObjectId": {
        "type": "string",
        "description": "Unique identifier for the device in Azure AD."
      },
      "DeviceSubtype": {
        "type": "string",
        "description": "Additional modifier for certain types of devices, for example, a"
      },
      "DeviceType": {
        "type": "string",
        "description": "Type of device based on purpose and functionality, such as network"
      },
      "ExclusionReason": {
        "type": "string",
        "description": "Indicates the reason for device exclusion."
      },
      "ExposureLevel": {
        "type": "string",
        "description": "Indicates the exposure level of a device."
      },
      "GcpFullResourceName": {
        "type": "string",
        "description": "Unique identifier of the AWS resource associated with the device."
      },
      "IsAzureADJoined": {
        "type": "bool",
        "description": "Boolean indicator of whether machine is joined to the Azure Active"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "IsExcluded": {
        "type": "bool",
        "description": "Determines if the device is currently excluded from Microsoft"
      },
      "IsInternetFacing": {
        "type": "bool",
        "description": "Indicates whether the device is internet-facing."
      },
      "JoinType": {
        "type": "string",
        "description": "The device's Azure Active Directory join type."
      },
      "LoggedOnUsers": {
        "type": "dynamic",
        "description": "List of all users that are logged on the machine at the time of the"
      },
      "MachineGroup": {
        "type": "string",
        "description": "Machine group used to determine access to the machine and apply"
      },
      "MergedDeviceIds": {
        "type": "string",
        "description": "Previous device IDs that have been assigned to the same device."
      },
      "MergedToDeviceId": {
        "type": "string",
        "description": "The most recent device ID assigned to a device."
      },
      "Model": {
        "type": "string",
        "description": "Model name or number of the product from the vendor or"
      },
      "OnboardingStatus": {
        "type": "string",
        "description": "Indicates whether the device is currently onboarded or not to"
      },
      "OSArchitecture": {
        "type": "string",
        "description": "Architecture of the operating system running on the machine."
      },
      "OSBuild": {
        "type": "long",
        "description": "Build version of the operating system running on the machine."
      },
      "OSDistribution": {
        "type": "string",
        "description": "Distribution of the OS platform, such as Ubuntu or RedHat for Linux"
      },
      "OSPlatform": {
        "type": "string",
        "description": "Platform of the operating system running on the machine. This"
      },
      "OSVersion": {
        "type": "string",
        "description": "Version of the operating system running on the machine."
      },
      "OSVersionInfo": {
        "type": "string",
        "description": "Additional information about the OS version, such as the popular"
      },
      "PublicIP": {
        "type": "string",
        "description": "Public IP address used by the onboarded machine to connect to the"
      },
      "RegistryDeviceTag": {
        "type": "string",
        "description": "Device tag added through the registry."
      },
      "ReportId": {
        "type": "long",
        "description": "Event identifier based on a repeating counter. To identify unique"
      },
      "SensorHealthState": {
        "type": "string",
        "description": "Indicates health of the device's EDR sensor, if onboarded to"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time the event was recorded by the MDE agent on the"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "Vendor": {
        "type": "string",
        "description": "Name of the product vendor or manufacturer, only available if device"
      }
    }
  },
  "DeviceLogonEvents": {
    "tableName": "DeviceLogonEvents",
    "description": "This table is part of Microsoft Defender for Endpoints with Azure Sentinel. This table contains Sign-ins and other authentication events.",
    "columns": {
      "AccountDomain": {
        "type": "string",
        "description": "Domain of the account."
      },
      "AccountName": {
        "type": "string",
        "description": "User name of the account."
      },
      "AccountSid": {
        "type": "string",
        "description": "Security identifier (SID) of the account."
      },
      "ActionType": {
        "type": "string",
        "description": "Type of activity that triggered the event."
      },
      "AdditionalFields": {
        "type": "dynamic",
        "description": "Additional information about the entity or"
      },
      "AppGuardContainerId": {
        "type": "string",
        "description": "Identifier for the virtualized container used by"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DeviceId": {
        "type": "string",
        "description": "Unique identifier for the device in the service."
      },
      "DeviceName": {
        "type": "string",
        "description": "Fully qualified domain name (FQDN) of the"
      },
      "FailureReason": {
        "type": "string",
        "description": "Information explaining why the recorded"
      },
      "InitiatingProcessAccountDomain": {
        "type": "string",
        "description": "Domain of the account that ran the process"
      },
      "InitiatingProcessAccountName": {
        "type": "string",
        "description": "User name of the account that ran the process"
      },
      "InitiatingProcessAccountObjectId": {
        "type": "string",
        "description": "Azure AD object ID of the user account that"
      },
      "InitiatingProcessAccountSid": {
        "type": "string",
        "description": "Security Identifier (SID) of the account that ran"
      },
      "InitiatingProcessAccountUpn": {
        "type": "string",
        "description": "User principal name (UPN) of the account that"
      },
      "InitiatingProcessCommandLine": {
        "type": "string",
        "description": "Command line used to run the process that"
      },
      "InitiatingProcessCreationTime": {
        "type": "datetime",
        "description": "Date and time when the process that initiated"
      },
      "InitiatingProcessFileName": {
        "type": "string",
        "description": "Name of the process that initiated the event."
      },
      "InitiatingProcessFileSize": {
        "type": "long",
        "description": "Size in bytes of the process (image file) that"
      },
      "InitiatingProcessFolderPath": {
        "type": "string",
        "description": "Folder containing the process (image file) that"
      },
      "InitiatingProcessId": {
        "type": "long",
        "description": "Process ID (PID) of the process that initiated"
      },
      "InitiatingProcessIntegrityLevel": {
        "type": "string",
        "description": "Integrity level of the process that initiated the"
      },
      "InitiatingProcessMD5": {
        "type": "string",
        "description": "MD5 hash of the process (image file) that"
      },
      "InitiatingProcessParentCreationTime": {
        "type": "datetime",
        "description": "Date and time when the parent of the process"
      },
      "InitiatingProcessParentFileName": {
        "type": "string",
        "description": "Name of the parent process that spawned the"
      },
      "InitiatingProcessParentId": {
        "type": "long",
        "description": "Process ID (PID) of the parent process that"
      },
      "InitiatingProcessRemoteSessionDeviceName": {
        "type": "string",
        "description": "Device name of the remote device from which"
      },
      "InitiatingProcessRemoteSessionIP": {
        "type": "string",
        "description": "IP address of the remote device from which"
      },
      "InitiatingProcessSessionId": {
        "type": "long",
        "description": "Windows session ID of the initiating process."
      },
      "InitiatingProcessSHA1": {
        "type": "string",
        "description": "SHA-1 hash of the process (image file) that"
      },
      "InitiatingProcessSHA256": {
        "type": "string",
        "description": "SHA-256 hash of the process (image file) that"
      },
      "InitiatingProcessTokenElevation": {
        "type": "string",
        "description": "Token type indicating the presence or absence"
      },
      "InitiatingProcessVersionInfoCompanyName": {
        "type": "string",
        "description": "Company name from the version information"
      },
      "InitiatingProcessVersionInfoFileDescription": {
        "type": "string",
        "description": "Description from the version information of"
      },
      "InitiatingProcessVersionInfoInternalFileName": {
        "type": "string",
        "description": "Internal file name from the version information"
      },
      "InitiatingProcessVersionInfoOriginalFileName": {
        "type": "string",
        "description": "Original file name from the version"
      },
      "InitiatingProcessVersionInfoProductName": {
        "type": "string",
        "description": "Product name from the version information of"
      },
      "InitiatingProcessVersionInfoProductVersion": {
        "type": "string",
        "description": "Product version from the version information"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable."
      },
      "IsInitiatingProcessRemoteSession": {
        "type": "bool",
        "description": "Indicates whether the initiating process was"
      },
      "IsLocalAdmin": {
        "type": "bool",
        "description": "Boolean indicator of whether the user is a local"
      },
      "LogonId": {
        "type": "long",
        "description": "Identifier for a logon session. This identifier is"
      },
      "LogonType": {
        "type": "string",
        "description": "Type of logon session, specifically interactive,"
      },
      "remote": {
        "type": "int",
        "description": "eractive (RDP), network, batch, and"
      },
      "MachineGroup": {
        "type": "string",
        "description": "Machine group of the machine. This group is"
      },
      "Protocol": {
        "type": "string",
        "description": "Protocol used during the communication."
      },
      "RemoteDeviceName": {
        "type": "string",
        "description": "Name of the device that performed a remote"
      },
      "RemoteIP": {
        "type": "string",
        "description": "IP address that was being connected to."
      },
      "RemoteIPType": {
        "type": "string",
        "description": "Type of IP address, for example Public, Private,"
      },
      "RemotePort": {
        "type": "int",
        "description": "TCP port on the remote device that was being"
      },
      "ReportId": {
        "type": "long",
        "description": "Event identifier based on a repeating counter."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time the event was recorded by the"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "DeviceNetworkEvents": {
    "tableName": "DeviceNetworkEvents",
    "description": "Microsoft Defender for Endpoints (MDE) device network events table. This table contains contains information about network connections and related events initiated by processes running on the endpoint.",
    "columns": {
      "ActionType": {
        "type": "string",
        "description": "Type of activity that triggered the event."
      },
      "AdditionalFields": {
        "type": "dynamic",
        "description": "Additional information about the entity or"
      },
      "AppGuardContainerId": {
        "type": "string",
        "description": "Identifier for the virtualized container used by"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DeviceId": {
        "type": "string",
        "description": "Unique identifier for the device in the service."
      },
      "DeviceName": {
        "type": "string",
        "description": "Fully qualified domain name (FQDN) of the"
      },
      "InitiatingProcessAccountDomain": {
        "type": "string",
        "description": "Domain of the account that ran the initiating"
      },
      "InitiatingProcessAccountName": {
        "type": "string",
        "description": "User name of the account that ran the"
      },
      "InitiatingProcessAccountObjectId": {
        "type": "string",
        "description": "Azure AD object ID of the user account that"
      },
      "InitiatingProcessAccountSid": {
        "type": "string",
        "description": "Security Identifier (SID) of the account that ran"
      },
      "InitiatingProcessAccountUpn": {
        "type": "string",
        "description": "User principal name (UPN) of the account that"
      },
      "InitiatingProcessCommandLine": {
        "type": "string",
        "description": "Command line used to run the initiating"
      },
      "InitiatingProcessCreationTime": {
        "type": "datetime",
        "description": "Date and time when the process that initiated"
      },
      "InitiatingProcessFileName": {
        "type": "string",
        "description": "Name of the initiating process."
      },
      "InitiatingProcessFileSize": {
        "type": "long",
        "description": "Size of the file (bytes) that ran the process"
      },
      "InitiatingProcessFolderPath": {
        "type": "string",
        "description": "Folder containing the initiating process (image"
      },
      "InitiatingProcessId": {
        "type": "long",
        "description": "Process ID (PID) of the initiating process."
      },
      "InitiatingProcessIntegrityLevel": {
        "type": "string",
        "description": "Integrity level of the initiating process."
      },
      "These": {
        "type": "int",
        "description": "egrity levels influence permissions to"
      },
      "InitiatingProcessMD5": {
        "type": "string",
        "description": "MD5 hash of the initiating process (image file)."
      },
      "InitiatingProcessParentCreationTime": {
        "type": "datetime",
        "description": "Date and time when the parent of the process"
      },
      "InitiatingProcessParentFileName": {
        "type": "string",
        "description": "Name of the parent process that spawned the"
      },
      "InitiatingProcessParentId": {
        "type": "long",
        "description": "Process ID (PID) of the parent process that"
      },
      "InitiatingProcessRemoteSessionDeviceName": {
        "type": "string",
        "description": "Device name of the remote device from which"
      },
      "InitiatingProcessRemoteSessionIP": {
        "type": "string",
        "description": "IP address of the remote device from which"
      },
      "InitiatingProcessSessionId": {
        "type": "long",
        "description": "Windows session ID of the initiating process."
      },
      "InitiatingProcessSHA1": {
        "type": "string",
        "description": "SHA-1 hash of the initiating process (image"
      },
      "InitiatingProcessSHA256": {
        "type": "string",
        "description": "SHA-256 hash of the initiating process (image"
      },
      "InitiatingProcessTokenElevation": {
        "type": "string",
        "description": "Token type indicating the presence or absence"
      },
      "InitiatingProcessVersionInfoCompanyName": {
        "type": "string",
        "description": "The company name in version information"
      },
      "InitiatingProcessVersionInfoFileDescription": {
        "type": "string",
        "description": "The description in version information (image"
      },
      "InitiatingProcessVersionInfoInternalFileName": {
        "type": "string",
        "description": "The internal file name in version information"
      },
      "InitiatingProcessVersionInfoOriginalFileName": {
        "type": "string",
        "description": "The original file name in version information"
      },
      "InitiatingProcessVersionInfoProductName": {
        "type": "string",
        "description": "The product name in version information"
      },
      "InitiatingProcessVersionInfoProductVersion": {
        "type": "string",
        "description": "The product version in version information"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable."
      },
      "IsInitiatingProcessRemoteSession": {
        "type": "bool",
        "description": "Indicates whether the initiating process was"
      },
      "LocalIP": {
        "type": "string",
        "description": "IP address assigned to the local machine used"
      },
      "LocalIPType": {
        "type": "string",
        "description": "Type of IP address, for example Public, Private,"
      },
      "LocalPort": {
        "type": "int",
        "description": "TCP port on the local machine used during"
      },
      "MachineGroup": {
        "type": "string",
        "description": "Machine group of the machine. This group is"
      },
      "Protocol": {
        "type": "string",
        "description": "IP protocol used, whether TCP or UDP."
      },
      "RemoteIP": {
        "type": "string",
        "description": "IP address that was being connected to."
      },
      "RemoteIPType": {
        "type": "string",
        "description": "Type of IP address, for example Public, Private,"
      },
      "RemotePort": {
        "type": "int",
        "description": "TCP port on the remote device that was being"
      },
      "RemoteUrl": {
        "type": "string",
        "description": "URL or fully qualified domain name (FQDN)"
      },
      "ReportId": {
        "type": "long",
        "description": "Event identifier based on a repeating counter."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time the event was recorded by the"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "DeviceNetworkInfo": {
    "tableName": "DeviceNetworkInfo",
    "description": "Microsoft Defender for Endpoints (MDE) device network information table. This table contains Network properties of machines, including adapters, IP and MAC addresses, as well as connected networks and domains.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ConnectedNetworks": {
        "type": "dynamic",
        "description": "Networks that the adapter is connected to. Each JSON element in"
      },
      "DefaultGateways": {
        "type": "dynamic",
        "description": "Default gateway addresses in JSON array format."
      },
      "DeviceId": {
        "type": "string",
        "description": "Unique identifier for the device in the service."
      },
      "DeviceName": {
        "type": "string",
        "description": "Fully qualified domain name (FQDN) of the device."
      },
      "DnsAddresses": {
        "type": "dynamic",
        "description": "DNS server addresses in JSON array format."
      },
      "IPAddresses": {
        "type": "dynamic",
        "description": "JSON array containing all the IP addresses assigned to the adapter,"
      },
      "IPv4Dhcp": {
        "type": "string",
        "description": "IPv4 address of the configured DHCP server."
      },
      "IPv6Dhcp": {
        "type": "string",
        "description": "IPv6 address of the configured DHCP server."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "MacAddress": {
        "type": "string",
        "description": "MAC address of the network adapter."
      },
      "MachineGroup": {
        "type": "string",
        "description": "The machine-group which this machine is associated to. This group"
      },
      "NetworkAdapterName": {
        "type": "string",
        "description": "Name of the network adapter."
      },
      "NetworkAdapterStatus": {
        "type": "string",
        "description": "Operational status of the network adapter."
      },
      "NetworkAdapterType": {
        "type": "string",
        "description": "Network adapter type."
      },
      "NetworkAdapterVendor": {
        "type": "string",
        "description": "Name of the manufacturer or vendor of the network adapter."
      },
      "ReportId": {
        "type": "long",
        "description": "Event identifier based on a repeating counter. To identify unique"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time the event was recorded by the MDE agent on the"
      },
      "TunnelType": {
        "type": "string",
        "description": "Tunneling protocol, when the interface is used for this purpose, for"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "DeviceProcessEvents": {
    "tableName": "DeviceProcessEvents",
    "description": "Microsoft Defender for Endpoints (MDE) device process events table. This table contains contains information about process creation and related events on the endpoint.",
    "columns": {
      "AccountDomain": {
        "type": "string",
        "description": "Domain of the account."
      },
      "AccountName": {
        "type": "string",
        "description": "User name of the account."
      },
      "AccountObjectId": {
        "type": "string",
        "description": "Unique identifier for the account in Azure AD."
      },
      "AccountSid": {
        "type": "string",
        "description": "Security Identifier (SID) of the account."
      },
      "AccountUpn": {
        "type": "string",
        "description": "User principal name (UPN) of the account."
      },
      "ActionType": {
        "type": "string",
        "description": "Type of activity that triggered the event."
      },
      "AdditionalFields": {
        "type": "dynamic",
        "description": "Additional information about the entity or"
      },
      "AppGuardContainerId": {
        "type": "string",
        "description": "Identifier for the virtualized container used by"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CreatedProcessSessionId": {
        "type": "long",
        "description": "Windows session ID of the created process."
      },
      "DeviceId": {
        "type": "string",
        "description": "Unique identifier for the device in the service."
      },
      "DeviceName": {
        "type": "string",
        "description": "Fully qualified domain name (FQDN) of the"
      },
      "FileName": {
        "type": "string",
        "description": "Name of the file that the recorded action was"
      },
      "FileSize": {
        "type": "long",
        "description": "Size of the file in bytes."
      },
      "FolderPath": {
        "type": "string",
        "description": "Folder containing the file that the recorded"
      },
      "InitiatingProcessAccountDomain": {
        "type": "string",
        "description": "Domain of the account that ran the process"
      },
      "InitiatingProcessAccountName": {
        "type": "string",
        "description": "User name of the account that ran the process"
      },
      "InitiatingProcessAccountObjectId": {
        "type": "string",
        "description": "Azure AD object ID of the user account that"
      },
      "InitiatingProcessAccountSid": {
        "type": "string",
        "description": "Security Identifier (SID) of the account that ran"
      },
      "InitiatingProcessAccountUpn": {
        "type": "string",
        "description": "User principal name (UPN) of the account that"
      },
      "InitiatingProcessCommandLine": {
        "type": "string",
        "description": "Command line used to run the process that"
      },
      "InitiatingProcessCreationTime": {
        "type": "datetime",
        "description": "Date and time when the process that initiated"
      },
      "InitiatingProcessFileName": {
        "type": "string",
        "description": "Name of the process that initiated the event."
      },
      "InitiatingProcessFileSize": {
        "type": "long",
        "description": "The size of the file (bytes) that ran the process"
      },
      "InitiatingProcessFolderPath": {
        "type": "string",
        "description": "Folder containing the process (image file) that"
      },
      "InitiatingProcessId": {
        "type": "long",
        "description": "Process ID (PID) of the process that initiated"
      },
      "InitiatingProcessIntegrityLevel": {
        "type": "string",
        "description": "Integrity level of the process that initiated the"
      },
      "InitiatingProcessLogonId": {
        "type": "long",
        "description": "Identifier for a logon session of the process"
      },
      "InitiatingProcessMD5": {
        "type": "string",
        "description": "MD5 hash of the process (image file) that"
      },
      "InitiatingProcessParentCreationTime": {
        "type": "datetime",
        "description": "Date and time when the parent of the process"
      },
      "InitiatingProcessParentFileName": {
        "type": "string",
        "description": "Name of the parent process that spawned the"
      },
      "InitiatingProcessParentId": {
        "type": "long",
        "description": "Process ID (PID) of the parent process that"
      },
      "InitiatingProcessRemoteSessionDeviceName": {
        "type": "string",
        "description": "Device name of the remote device from which"
      },
      "InitiatingProcessRemoteSessionIP": {
        "type": "string",
        "description": "IP address of the remote device from which"
      },
      "InitiatingProcessSessionId": {
        "type": "long",
        "description": "Windows session ID of the initiating process."
      },
      "InitiatingProcessSHA1": {
        "type": "string",
        "description": "SHA-1 hash of the process (image file) that"
      },
      "InitiatingProcessSHA256": {
        "type": "string",
        "description": "SHA-256 hash of the process (image file) that"
      },
      "InitiatingProcessSignatureStatus": {
        "type": "string",
        "description": "Information about the signature status of the"
      },
      "InitiatingProcessSignerType": {
        "type": "string",
        "description": "Type of file signer of the process (image file)"
      },
      "InitiatingProcessTokenElevation": {
        "type": "string",
        "description": "Token type indicating the presence or absence"
      },
      "InitiatingProcessVersionInfoCompanyName": {
        "type": "string",
        "description": "The company name in version information"
      },
      "InitiatingProcessVersionInfoFileDescription": {
        "type": "string",
        "description": "The description in version information (image"
      },
      "InitiatingProcessVersionInfoInternalFileName": {
        "type": "string",
        "description": "The internal file name in version information"
      },
      "InitiatingProcessVersionInfoOriginalFileName": {
        "type": "string",
        "description": "The original file name in version information"
      },
      "InitiatingProcessVersionInfoProductName": {
        "type": "string",
        "description": "The product name in version information"
      },
      "InitiatingProcessVersionInfoProductVersion": {
        "type": "string",
        "description": "The product version in version information"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable."
      },
      "IsInitiatingProcessRemoteSession": {
        "type": "bool",
        "description": "Indicates whether the initiating process was"
      },
      "IsProcessRemoteSession": {
        "type": "bool",
        "description": "Indicates whether the created process was run"
      },
      "LogonId": {
        "type": "long",
        "description": "Identifier for a logon session. This identifier is"
      },
      "MachineGroup": {
        "type": "string",
        "description": "Machine group of the machine. This group is"
      },
      "MD5": {
        "type": "string",
        "description": "MD5 hash of the file that the recorded action"
      },
      "ProcessCommandLine": {
        "type": "string",
        "description": "Command line used to create the new process."
      },
      "ProcessCreationTime": {
        "type": "datetime",
        "description": "Date and time the process was created."
      },
      "ProcessId": {
        "type": "long",
        "description": "Process ID (PID) of the newly created process."
      },
      "ProcessIntegrityLevel": {
        "type": "string",
        "description": "Integrity level of the newly created process."
      },
      "These": {
        "type": "int",
        "description": "egrity levels influence permissions to"
      },
      "ProcessRemoteSessionDeviceName": {
        "type": "string",
        "description": "Device name of the remote device from which"
      },
      "ProcessRemoteSessionIP": {
        "type": "string",
        "description": "IP address of the remote device from which"
      },
      "ProcessTokenElevation": {
        "type": "string",
        "description": "Token type indicating the presence or absence"
      },
      "ProcessVersionInfoCompanyName": {
        "type": "string",
        "description": "Company name from the version information"
      },
      "ProcessVersionInfoFileDescription": {
        "type": "string",
        "description": "Description from the version information of"
      },
      "ProcessVersionInfoInternalFileName": {
        "type": "string",
        "description": "Internal file name from the version information"
      },
      "ProcessVersionInfoOriginalFileName": {
        "type": "string",
        "description": "Original file name from the version"
      },
      "ProcessVersionInfoProductName": {
        "type": "string",
        "description": "Product name from the version information of"
      },
      "ProcessVersionInfoProductVersion": {
        "type": "string",
        "description": "Product version from the version information"
      },
      "ReportId": {
        "type": "long",
        "description": "Event identifier based on a repeating counter."
      },
      "SHA1": {
        "type": "string",
        "description": "SHA-1 hash of the file that the recorded action"
      },
      "SHA256": {
        "type": "string",
        "description": "SHA-256 of the file that the recorded action"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time the event was recorded by the"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "DeviceRegistryEvents": {
    "tableName": "DeviceRegistryEvents",
    "description": "Microsoft Defender for Endpoints (MDE) device registry events table. This table contains contains creation and modification of registry entries on the endpoint, and information about the processes initiating such events.",
    "columns": {
      "ActionType": {
        "type": "string",
        "description": "Type of activity that triggered the event."
      },
      "AppGuardContainerId": {
        "type": "string",
        "description": "Identifier for the virtualized container used by"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DeviceId": {
        "type": "string",
        "description": "Unique identifier for the device in the service."
      },
      "DeviceName": {
        "type": "string",
        "description": "Fully qualified domain name (FQDN) of the"
      },
      "InitiatingProcessAccountDomain": {
        "type": "string",
        "description": "Domain of the account that ran the initiating"
      },
      "InitiatingProcessAccountName": {
        "type": "string",
        "description": "User name of the account that ran the"
      },
      "InitiatingProcessAccountObjectId": {
        "type": "string",
        "description": "Azure AD object ID of the user account that"
      },
      "InitiatingProcessAccountSid": {
        "type": "string",
        "description": "Security Identifier (SID) of the account that ran"
      },
      "InitiatingProcessAccountUpn": {
        "type": "string",
        "description": "User principal name (UPN) of the account that"
      },
      "InitiatingProcessCommandLine": {
        "type": "string",
        "description": "Command line used to run the initiating"
      },
      "InitiatingProcessCreationTime": {
        "type": "datetime",
        "description": "Date and time when the process that initiated"
      },
      "InitiatingProcessFileName": {
        "type": "string",
        "description": "Name of the initiating process."
      },
      "InitiatingProcessFileSize": {
        "type": "long",
        "description": "The size of the file (bytes) that ran the process"
      },
      "InitiatingProcessFolderPath": {
        "type": "string",
        "description": "Folder containing the initiating process (image"
      },
      "InitiatingProcessId": {
        "type": "long",
        "description": "Process ID (PID) of the initiating process."
      },
      "InitiatingProcessIntegrityLevel": {
        "type": "string",
        "description": "Integrity level of the initiating process."
      },
      "These": {
        "type": "int",
        "description": "egrity levels influence permissions to"
      },
      "InitiatingProcessMD5": {
        "type": "string",
        "description": "MD5 hash of the initiating process (image file)."
      },
      "InitiatingProcessParentCreationTime": {
        "type": "datetime",
        "description": "Date and time when the parent of the process"
      },
      "InitiatingProcessParentFileName": {
        "type": "string",
        "description": "Name of the parent process that spawned the"
      },
      "InitiatingProcessParentId": {
        "type": "long",
        "description": "Process ID (PID) of the parent process that"
      },
      "InitiatingProcessRemoteSessionDeviceName": {
        "type": "string",
        "description": "Device name of the remote device from which"
      },
      "InitiatingProcessRemoteSessionIP": {
        "type": "string",
        "description": "IP address of the remote device from which"
      },
      "InitiatingProcessSessionId": {
        "type": "long",
        "description": "Windows session ID of the initiating process."
      },
      "InitiatingProcessSHA1": {
        "type": "string",
        "description": "SHA-1 hash of the initiating process (image"
      },
      "InitiatingProcessSHA256": {
        "type": "string",
        "description": "SHA-256 hash of the initiating process (image"
      },
      "InitiatingProcessTokenElevation": {
        "type": "string",
        "description": "Token type indicating the presence or absence"
      },
      "InitiatingProcessVersionInfoCompanyName": {
        "type": "string",
        "description": "The company name in version information"
      },
      "InitiatingProcessVersionInfoFileDescription": {
        "type": "string",
        "description": "The description in version information (image"
      },
      "InitiatingProcessVersionInfoInternalFileName": {
        "type": "string",
        "description": "The internal file name in version information"
      },
      "InitiatingProcessVersionInfoOriginalFileName": {
        "type": "string",
        "description": "The original file name in version information"
      },
      "InitiatingProcessVersionInfoProductName": {
        "type": "string",
        "description": "The product name in version information"
      },
      "InitiatingProcessVersionInfoProductVersion": {
        "type": "string",
        "description": "The product version in version information"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable."
      },
      "IsInitiatingProcessRemoteSession": {
        "type": "bool",
        "description": "Indicates whether the initiating process was"
      },
      "MachineGroup": {
        "type": "string",
        "description": "Machine group of the machine. This group is"
      },
      "PreviousRegistryKey": {
        "type": "string",
        "description": "Original registry key before it was modified."
      },
      "PreviousRegistryValueData": {
        "type": "string",
        "description": "Original data of the registry value before it"
      },
      "PreviousRegistryValueName": {
        "type": "string",
        "description": "Original name of the registry value before it"
      },
      "RegistryKey": {
        "type": "string",
        "description": "Registry key that the recorded action was"
      },
      "RegistryValueData": {
        "type": "string",
        "description": "Data of the registry value that the recorded"
      },
      "RegistryValueName": {
        "type": "string",
        "description": "Name of the registry value that the recorded"
      },
      "RegistryValueType": {
        "type": "string",
        "description": "Data type, such as binary or string, of the"
      },
      "ReportId": {
        "type": "long",
        "description": "Event identifier based on a repeating counter."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time the event was recorded by the"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "DeviceSkypeHeartbeat": {
    "tableName": "DeviceSkypeHeartbeat",
    "description": "",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Computer": {
        "type": "string",
        "description": ""
      },
      "EventId": {
        "type": "int",
        "description": ""
      },
      "EventName": {
        "type": "string",
        "description": ""
      },
      "HealthServiceId": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "ProviderId": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "State": {
        "type": "string",
        "description": ""
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "DeviceSkypeSignIn": {
    "tableName": "DeviceSkypeSignIn",
    "description": "",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Computer": {
        "type": "string",
        "description": ""
      },
      "EventId": {
        "type": "int",
        "description": ""
      },
      "EventName": {
        "type": "string",
        "description": ""
      },
      "HealthServiceId": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Opcode": {
        "type": "int",
        "description": ""
      },
      "ProviderId": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "DeviceTvmSecureConfigurationAssessment": {
    "tableName": "DeviceTvmSecureConfigurationAssessment",
    "description": "Threat & vulnerability management assessment events, indicating the status of various security configurations on devices.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ConfigurationCategory": {
        "type": "string",
        "description": "Category or grouping to which the configuration belongs"
      },
      "ConfigurationId": {
        "type": "string",
        "description": "Unique identifier for a specific configuration"
      },
      "ConfigurationImpact": {
        "type": "real",
        "description": "Rated impact of the configuration to the overall configuration"
      },
      "ConfigurationSubcategory": {
        "type": "string",
        "description": "Subcategory or subgrouping to which the configuration belongs."
      },
      "Context": {
        "type": "dynamic",
        "description": "Machine data configuration context"
      },
      "DeviceId": {
        "type": "string",
        "description": "Unique identifier for the device in the service"
      },
      "DeviceName": {
        "type": "string",
        "description": "Fully qualified domain name (FQDN) of the device"
      },
      "IsApplicable": {
        "type": "bool",
        "description": "Indicates whether the configuration or policy is applicable"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable"
      },
      "IsCompliant": {
        "type": "bool",
        "description": "Indicates whether the configuration or policy is properly"
      },
      "IsExpectedUserImpact": {
        "type": "bool",
        "description": "Indicates if user impact is expected when configuration applied"
      },
      "OSPlatform": {
        "type": "string",
        "description": "Platform of the operating system running on the device. This"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time when the record was generated"
      },
      "Timestamp": {
        "type": "datetime",
        "description": "Date and time when the record was generated"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "KB": {
    "tableName": "KB",
    "description": "Knowledge base of various security configurations used by Threat & Vulnerability Management to assess devices and includes mappings to various standards and benchmarks.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ConfigurationBenchmarks": {
        "type": "dynamic",
        "description": "List of industry benchmarks which recommend the same or"
      },
      "ConfigurationCategory": {
        "type": "string",
        "description": "Category or grouping to which the configuration belongs."
      },
      "ConfigurationDescription": {
        "type": "string",
        "description": "Description of the configuration."
      },
      "ConfigurationId": {
        "type": "string",
        "description": "Unique identifier for a specific configuration."
      },
      "ConfigurationImpact": {
        "type": "real",
        "description": "Rated impact of the configuration to the overall configuration"
      },
      "ConfigurationName": {
        "type": "string",
        "description": "Display name of the configuration."
      },
      "ConfigurationSubcategory": {
        "type": "string",
        "description": "Subcategory or subgrouping to which the configuration belongs."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable"
      },
      "RelatedMitreTactics": {
        "type": "dynamic",
        "description": "Related tactics from Mitre knowledge base."
      },
      "RelatedMitreTechniques": {
        "type": "dynamic",
        "description": "Related techniques from Mitre knowledge base."
      },
      "RemediationOptions": {
        "type": "string",
        "description": "Recommended actions to reduce or address any associated risks"
      },
      "RiskDescription": {
        "type": "string",
        "description": "Description of any associated risks."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "Tags": {
        "type": "dynamic",
        "description": "Labels representing various attributes, used to identify or"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time when the record was generated."
      },
      "Timestamp": {
        "type": "datetime",
        "description": "Date and time when the record was generated"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "DeviceTvmSoftwareInventory": {
    "tableName": "DeviceTvmSoftwareInventory",
    "description": "Inventory of software installed on devices, including their version information and end-of- support status.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DeviceId": {
        "type": "string",
        "description": "Unique identifier for the device in the service"
      },
      "DeviceName": {
        "type": "string",
        "description": "Fully qualified domain name (FQDN) of the device"
      },
      "EndOfSupportDate": {
        "type": "datetime",
        "description": "End-of-support (EOS) or end-of-life (EOL) date of the software product"
      },
      "EndOfSupportStatus": {
        "type": "string",
        "description": "Indicates the lifecycle stage of the software product relative to its"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "OSArchitecture": {
        "type": "string",
        "description": "Architecture of the operating system running on the machine"
      },
      "OSPlatform": {
        "type": "string",
        "description": "Platform of the operating system running on the device. This indicates"
      },
      "OSVersion": {
        "type": "string",
        "description": "Version of the operating system running on the machine"
      },
      "ProductCodeCpe": {
        "type": "string",
        "description": "The standard Common Platform Enumeration (CPE) name of the"
      },
      "SoftwareName": {
        "type": "string",
        "description": "Name of the software product"
      },
      "SoftwareVendor": {
        "type": "string",
        "description": "Name of the software vendor"
      },
      "SoftwareVersion": {
        "type": "string",
        "description": "Version number of the software product"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time when the record was generated"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "DeviceTvmSoftwareVulnerabilities": {
    "tableName": "DeviceTvmSoftwareVulnerabilities",
    "description": "Captures various identity-related events, like password changes, password expiration, and user principal name (UPN) changes.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CveId": {
        "type": "string",
        "description": "Unique identifier assigned to the security vulnerability"
      },
      "CveTags": {
        "type": "dynamic",
        "description": "Array of tags relevant to the CVE; example: ZeroDay,"
      },
      "DeviceId": {
        "type": "string",
        "description": "Unique identifier for the device in the service"
      },
      "DeviceName": {
        "type": "string",
        "description": "Fully qualified domain name (FQDN) of the device"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "OSArchitecture": {
        "type": "string",
        "description": "Architecture of the operating system running on the"
      },
      "OSPlatform": {
        "type": "string",
        "description": "Platform of the operating system running on the device."
      },
      "OSVersion": {
        "type": "string",
        "description": "Version of the operating system running on the machine"
      },
      "RecommendedSecurityUpdate": {
        "type": "string",
        "description": "Name or description of the security update provided by the"
      },
      "RecommendedSecurityUpdateId": {
        "type": "string",
        "description": "Identifier of the applicable security updates or identifier for"
      },
      "SoftwareName": {
        "type": "string",
        "description": "Name of the software product"
      },
      "SoftwareVendor": {
        "type": "string",
        "description": "Name of the software vendor"
      },
      "SoftwareVersion": {
        "type": "string",
        "description": "Version number of the software product"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time when the record was generated"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "VulnerabilitySeverityLevel": {
        "type": "string",
        "description": "Severity level assigned to the security vulnerability based"
      }
    }
  },
  "DeviceTvmSoftwareVulnerabilitiesKB": {
    "tableName": "DeviceTvmSoftwareVulnerabilitiesKB",
    "description": "Knowledge base of publicly disclosed vulnerabilities, including whether exploit code is publicly available.",
    "columns": {
      "AffectedSoftware": {
        "type": "dynamic",
        "description": "List of all software products affected by the vulnerability."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CveId": {
        "type": "string",
        "description": "Unique identifier assigned to the security vulnerability under the"
      },
      "CvssScore": {
        "type": "real",
        "description": "Severity score assigned to the security vulnerability under the"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "IsExploitAvailable": {
        "type": "bool",
        "description": "Indicates whether exploit code for the vulnerability is publicly"
      },
      "LastModifiedTime": {
        "type": "datetime",
        "description": "Date and time the item or related metadata was last modified."
      },
      "PublishedDate": {
        "type": "datetime",
        "description": "Date vulnerability was disclosed to the public."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time when the record was generated."
      },
      "Timestamp": {
        "type": "datetime",
        "description": "Date and time when the record was generated"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "VulnerabilityDescription": {
        "type": "string",
        "description": "Description of the vulnerability and associated risks."
      },
      "VulnerabilitySeverityLevel": {
        "type": "string",
        "description": "Severity level assigned to the security vulnerability based on the"
      }
    }
  },
  "DnsAuditEvents": {
    "tableName": "DnsAuditEvents",
    "description": "DNS server audit events enable change tracking on the DNS server. An audit event is logged each time server, zone, or resource record settings are changed. This includes operational events such as zone transfers, and DNSSEC zone signing and unsigning. This table captures audit events that are not from dynamic updates.",
    "columns": {
      "Action": {
        "type": "string",
        "description": "If a query meets the criteria of a policy, the action is the"
      },
      "ActiveKey": {
        "type": "string",
        "description": "Signing key of the KSK's active key."
      },
      "AdditionalData": {
        "type": "dynamic",
        "description": "Additional information not already scoped into its own"
      },
      "Base64Data": {
        "type": "string",
        "description": "Key data."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "BufferSize": {
        "type": "int",
        "description": "Size of the buffer used for logging the event data.(in bytes)"
      },
      "ChildZone": {
        "type": "string",
        "description": "Name of a child zone."
      },
      "ClientSubnetList": {
        "type": "string",
        "description": "The list of IPv4 and IPv6 of the client subnet."
      },
      "ClientSubnetRecord": {
        "type": "string",
        "description": "Then name of the client subnet."
      },
      "Condition": {
        "type": "string",
        "description": "Specific circumstances or requirements that trigger certain"
      },
      "Criteria": {
        "type": "string",
        "description": "Criteria or conditions that triggered the event."
      },
      "CryptoAlgorithm": {
        "type": "string",
        "description": "The cryptographic algorithm used for securing DNS-related"
      },
      "CurrentRolloverStatus": {
        "type": "string",
        "description": "The state of the key rollover process from one key to"
      },
      "CurrentState": {
        "type": "string",
        "description": "The current status of a DNS key or zone."
      },
      "DenialOfExistence": {
        "type": "string",
        "description": "The method used to prove that a certain DNS record does"
      },
      "Digest": {
        "type": "string",
        "description": "A secure fingerprint, allowing DNS resolvers to validate the"
      },
      "DigestType": {
        "type": "string",
        "description": "Specifies the type of cryptographic hash algorithm used for"
      },
      "DistributeTrustAnchor": {
        "type": "string",
        "description": "Relates to the distribution of a trust anchor for DNSSEC,"
      },
      "DnsKeyRecordSetTtl": {
        "type": "int",
        "description": "The time-to-live (TTL) value assigned to DNSKEY records"
      },
      "DnsKeySignatureValidityPeriod": {
        "type": "int",
        "description": "The duration in seconds that a DNSKEY record's signature is"
      },
      "DnsQuery": {
        "type": "string",
        "description": "The domain that needs to be resolved."
      },
      "DnsQueryType": {
        "type": "int",
        "description": "The DNS resource record type codes as defined by the"
      },
      "DSRecordGenerationAlgorithm": {
        "type": "string",
        "description": "The algorithm used to generate the Delegation Signer (DS)"
      },
      "DSRecordSetTtl": {
        "type": "int",
        "description": "The time-to-live (TTL) value for the DS (Delegation Signer)"
      },
      "DSSignatureValidityPeriod": {
        "type": "int",
        "description": "The period in seconds that a DS (Delegation Signer) record's"
      },
      "EnableRfc5011KeyRollover": {
        "type": "string",
        "description": "The process of automating the update and rollover of"
      },
      "EventGuid": {
        "type": "string",
        "description": "Unique identifier for the specific event."
      },
      "EventId": {
        "type": "string",
        "description": "Identifier for the underlying Windows event."
      },
      "EventString": {
        "type": "string",
        "description": "Human-readable description of the event."
      },
      "EventType": {
        "type": "string",
        "description": "Type of DNS event (e.g., zone transfer, dynamic update,"
      },
      "FilePath": {
        "type": "string",
        "description": "The location of a file or directory that the DNS server is"
      },
      "Forwarders": {
        "type": "string",
        "description": "DNS forwarders used by the server."
      },
      "InitialRolloverOffset": {
        "type": "int",
        "description": "The initial time delay (in seconds) before the first rollover"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "IsEnabled": {
        "type": "string",
        "description": "This parameter indicates whether the policy or exception list"
      },
      "IsKeyMasterServer": {
        "type": "string",
        "description": "Whether the DNS server is the key master server for a"
      },
      "KeyId": {
        "type": "string",
        "description": "The unique identifier of a DNSSEC signing key."
      },
      "KeyLength": {
        "type": "int",
        "description": "The length of the cryptographic key used in DNSSEC signing"
      },
      "KeyMasterServer": {
        "type": "string",
        "description": "The DNS server that is responsible for generating and"
      },
      "KeyOrZone": {
        "type": "string",
        "description": "The signing key used for authentication and data integrity in"
      },
      "KeyProtocol": {
        "type": "string",
        "description": "Protocol used for DNSSEC key management (e.g., DNSKEY,"
      },
      "KeyStorageProvider": {
        "type": "string",
        "description": "The system or service that is responsible for securely storing"
      },
      "KeyTag": {
        "type": "int",
        "description": "A numeric identifier for the cryptographic key used by the"
      },
      "KeyType": {
        "type": "string",
        "description": "The type of DNSSEC signing key being used."
      },
      "KskOrZsk": {
        "type": "string",
        "description": "The type of signing key used in a specific DNS zone."
      },
      "LastRolloverTime": {
        "type": "datetime",
        "description": "The last time a rollover process took place."
      },
      "ListenAddresses": {
        "type": "string",
        "description": "IP addresses on which the DNS server listens."
      },
      "LookupValue": {
        "type": "string",
        "description": "Type of DNS lookup (e.g., recursive, iterative)."
      },
      "MasterServer": {
        "type": "string",
        "description": "The primary DNS server from which a secondary DNS server"
      },
      "Name": {
        "type": "string",
        "description": "Specifies the domain name or hostname associated with a"
      },
      "NameServer": {
        "type": "string",
        "description": "Name server responsible for the DNS event."
      },
      "NewPropertyValues": {
        "type": "string",
        "description": "The set of properties after they were updated for a specific"
      },
      "NewValue": {
        "type": "string",
        "description": "The updated value assigned to a specific property key within"
      },
      "NextKey": {
        "type": "string",
        "description": "The upcoming key that will be used in the DNS zone signing"
      },
      "NextRolloverAction": {
        "type": "string",
        "description": "The rollover action performed."
      },
      "NextRolloverTime": {
        "type": "datetime",
        "description": "The next time a rollover process should happen."
      },
      "NodeName": {
        "type": "string",
        "description": "The node name within the DNS zone."
      },
      "NSec3HashAlgorithm": {
        "type": "int",
        "description": "The cryptographic hash algorithm used in the NSEC3"
      },
      "NSec3Iterations": {
        "type": "int",
        "description": "The number of additional hashing iterations a DNSSEC-"
      },
      "NSec3OptOut": {
        "type": "string",
        "description": "Indicates if the DNSSEC NSEC3 protocol is configured to"
      },
      "NSec3RandomSaltLength": {
        "type": "int",
        "description": "The length of the random salt value used in the NSEC3"
      },
      "NSec3UserSalt": {
        "type": "string",
        "description": "The user-defined salt value used in the NSEC3 protocol for"
      },
      "OldPropertyValues": {
        "type": "string",
        "description": "The set of properties before they were updated for a specific"
      },
      "ParentHasSecureDelegation": {
        "type": "string",
        "description": "Whether the parent zone has a secure delegation to the"
      },
      "Policy": {
        "type": "string",
        "description": "Defines rules or guidelines for managing specific aspects of"
      },
      "ProcessingOrder": {
        "type": "int",
        "description": "Determines the sequence in which policies are applied."
      },
      "PropagationTime": {
        "type": "int",
        "description": "Time taken for the event information to propagate. Duration"
      },
      "PropertyKey": {
        "type": "string",
        "description": "Specific property or setting affected by the event."
      },
      "RDATA": {
        "type": "string",
        "description": "Represents the data of the resource record that was created,"
      },
      "RecursionScope": {
        "type": "string",
        "description": "A specific area or set of conditions under which DNS"
      },
      "ReplicationScope": {
        "type": "string",
        "description": "Scope of DNS replication (e.g., forest-wide, domain-specific)."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "RolloverPeriod": {
        "type": "int",
        "description": "Time interval for log rollover (e.g., daily, weekly)."
      },
      "RolloverType": {
        "type": "string",
        "description": "Type of rollover (e.g., overwrite, append)."
      },
      "ScavengeServers": {
        "type": "string",
        "description": "Servers involved in DNS scavenging (aging and cleanup of"
      },
      "Scope": {
        "type": "string",
        "description": "The scope of the event (e.g., server-wide, zone-specific)."
      },
      "Scopes": {
        "type": "string",
        "description": "DNS scopes impacted by the event (e.g., global, local)."
      },
      "SecureDelegationPollingPeriod": {
        "type": "int",
        "description": "Interval for polling secure delegation information. Numeric"
      },
      "SeizedOrTransferred": {
        "type": "string",
        "description": "Refers to the action taken, either a seizure (when control is"
      },
      "ServerName": {
        "type": "string",
        "description": "Represents the DNS server where the policy or exception list"
      },
      "Setting": {
        "type": "string",
        "description": "Specific DNS configuration setting modified by the event."
      },
      "SignatureInceptionOffset": {
        "type": "int",
        "description": "Offset time for DNSSEC signature inception. Duration (e.g.,"
      },
      "Source": {
        "type": "string",
        "description": "Source of the DNS event (e.g., server, client)."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "StandbyKey": {
        "type": "string",
        "description": "the backup key that will be used if the current active key is"
      },
      "StoreKeysInAD": {
        "type": "string",
        "description": "Specifies whether the keys are stored in Active Directory"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "SubTreeAging": {
        "type": "string",
        "description": "Mechanism that affects the aging (expiration) of DNS"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the event was generated."
      },
      "TTL": {
        "type": "int",
        "description": "The time-to-live for the DNS record, indicating how long the"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "VirtualizationID": {
        "type": "string",
        "description": "A unique key to manage and coordinate activities within the"
      },
      "WithNewKeys": {
        "type": "string",
        "description": "Indicates whether new DNSSEC keys were generated."
      },
      "WithWithout": {
        "type": "string",
        "description": "Whether key signing key (KSK) metadata is included or"
      },
      "Zone": {
        "type": "string",
        "description": "The zone related to the activity."
      },
      "ZoneFile": {
        "type": "string",
        "description": "The name of the zone file."
      },
      "ZoneName": {
        "type": "string",
        "description": "The name of a DNS zone on which the zone which the event"
      },
      "ZoneScope": {
        "type": "string",
        "description": "A list of scopes and weights for the zone."
      },
      "ZoneSignatureValidityPeriod": {
        "type": "int",
        "description": "The amount of time that signatures that cover all other"
      }
    }
  },
  "DnsEvents": {
    "tableName": "DnsEvents",
    "description": "",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClientIP": {
        "type": "string",
        "description": ""
      },
      "Computer": {
        "type": "string",
        "description": ""
      },
      "Confidence": {
        "type": "string",
        "description": ""
      },
      "Description": {
        "type": "string",
        "description": ""
      },
      "EventId": {
        "type": "int",
        "description": ""
      },
      "IndicatorThreatType": {
        "type": "string",
        "description": ""
      },
      "IPAddresses": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "MaliciousIP": {
        "type": "string",
        "description": ""
      },
      "Message": {
        "type": "string",
        "description": ""
      },
      "Name": {
        "type": "string",
        "description": ""
      },
      "QueryType": {
        "type": "string",
        "description": ""
      },
      "RemoteIPCountry": {
        "type": "string",
        "description": ""
      },
      "RemoteIPLatitude": {
        "type": "real",
        "description": ""
      },
      "RemoteIPLongitude": {
        "type": "real",
        "description": ""
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Result": {
        "type": "string",
        "description": ""
      },
      "ResultCode": {
        "type": "int",
        "description": ""
      },
      "Severity": {
        "type": "int",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "SubType": {
        "type": "string",
        "description": ""
      },
      "TaskCategory": {
        "type": "string",
        "description": ""
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "DnsInventory": {
    "tableName": "DnsInventory",
    "description": "",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Computer": {
        "type": "string",
        "description": ""
      },
      "DnsSecSigned": {
        "type": "string",
        "description": ""
      },
      "DomainName": {
        "type": "string",
        "description": ""
      },
      "DynamicUpdate": {
        "type": "string",
        "description": ""
      },
      "ForestName": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "NameServers": {
        "type": "string",
        "description": ""
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResourceRecordName": {
        "type": "string",
        "description": ""
      },
      "ResourceRecordType": {
        "type": "string",
        "description": ""
      },
      "ServerIPs": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "SubType": {
        "type": "string",
        "description": ""
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "ZoneName": {
        "type": "string",
        "description": ""
      }
    }
  },
  "DynamicEventCollection": {
    "tableName": "DynamicEventCollection",
    "description": "Microsoft Defender for Endpoints (MDE) table for generic windows events. Fields of the raw events are available as part of the AdditionalFields column.",
    "columns": {
      "AccountSid": {
        "type": "string",
        "description": "Security identifier (SID) of the account."
      },
      "AdditionalFields": {
        "type": "dynamic",
        "description": "Additional information about the entity or event."
      },
      "AppGuardContainerId": {
        "type": "string",
        "description": "Identifier for the virtualized container used by Application"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DeviceId": {
        "type": "string",
        "description": "Unique identifier for the device in the service."
      },
      "DeviceName": {
        "type": "string",
        "description": "Fully qualified domain name (FQDN) of the device."
      },
      "EventId": {
        "type": "long",
        "description": "Contains the unique event identifier."
      },
      "InitiatingProcessAccountDomain": {
        "type": "string",
        "description": "Domain of the account that ran the process responsible"
      },
      "InitiatingProcessAccountName": {
        "type": "string",
        "description": "User name of the account that ran the process responsible"
      },
      "InitiatingProcessAccountObjectId": {
        "type": "string",
        "description": "Azure AD object ID of the user account that ran the"
      },
      "InitiatingProcessAccountSid": {
        "type": "string",
        "description": "Security Identifier (SID) of the account that ran the process"
      },
      "InitiatingProcessAccountUpn": {
        "type": "string",
        "description": "User principal name (UPN) of the account that ran the"
      },
      "InitiatingProcessFolderPath": {
        "type": "string",
        "description": "Folder containing the process (image file) that initiated the"
      },
      "InitiatingProcessId": {
        "type": "long",
        "description": "Process ID (PID) of the process that initiated the event."
      },
      "InitiatingProcessLogonId": {
        "type": "long",
        "description": "Identifier for a logon session of the process that initiated"
      },
      "InitiatingProcessMD5": {
        "type": "string",
        "description": "MD5 hash of the process (image file) that initiated the"
      },
      "InitiatingProcessParentFileName": {
        "type": "string",
        "description": "Name of the parent process that spawned the process"
      },
      "InitiatingProcessParentId": {
        "type": "long",
        "description": "Process ID (PID) of the parent process that spawned the"
      },
      "InitiatingProcessSHA1": {
        "type": "string",
        "description": "SHA-1 hash of the process (image file) that initiated the"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "LocalIP": {
        "type": "string",
        "description": "IP address assigned to the local machine used during"
      },
      "LocalPort": {
        "type": "int",
        "description": "TCP port on the local machine used during"
      },
      "MachineGroup": {
        "type": "string",
        "description": "Machine group of the machine. This group is used by role-"
      },
      "ProcessCommandLine": {
        "type": "string",
        "description": "Command line used to create the new process."
      },
      "RemoteDeviceName": {
        "type": "string",
        "description": "Name of the device that performed a remote operation on"
      },
      "RemoteIP": {
        "type": "string",
        "description": "IP address that was being connected to."
      },
      "RemotePort": {
        "type": "int",
        "description": "TCP port on the remote device that was being connected"
      },
      "ReportId": {
        "type": "long",
        "description": "Unique identifier for the event."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time the event was recorded by the MDE agent"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "DynamicSummary": {
    "tableName": "DynamicSummary",
    "description": "Azure Sentinel Dynamic Summary provides a security data storage to persist concentrated findings and summaries for hunting, investigation, search, detection. Summary description and detailed observables can be stored in Log Analytics for further analysis and report generation.",
    "columns": {
      "AzureTenantId": {
        "type": "string",
        "description": "The AAD tenant ID to which this DynamicSummary table belongs."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CreatedBy": {
        "type": "dynamic",
        "description": "The JSON object with the user who created summary, including: object"
      },
      "CreatedTimeUTC": {
        "type": "datetime",
        "description": "The time (UTC) when the summary was created."
      },
      "EventTimeUTC": {
        "type": "datetime",
        "description": "The time (UTC) when the summary item occurred originally."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "ObservableType": {
        "type": "string",
        "description": "Observables are stateful events ot properties that are related to the"
      },
      "ObservableValue": {
        "type": "string",
        "description": "Value for observable type, such as: anomalous RDP activity."
      },
      "PackedContent": {
        "type": "dynamic",
        "description": "The JSON object has packed columns which can be generated by using"
      },
      "Query": {
        "type": "string",
        "description": "This is the query that was used to generate the result."
      },
      "QueryEndDate": {
        "type": "datetime",
        "description": "Events that occurred before this datetime will be included in the result."
      },
      "QueryStartDate": {
        "type": "datetime",
        "description": "Events that occurred after this datetime will be included in the result."
      },
      "RelationId": {
        "type": "string",
        "description": "The original data source ID"
      },
      "RelationName": {
        "type": "string",
        "description": "The original data source name."
      },
      "SearchKey": {
        "type": "string",
        "description": "SearchKey is used to optimize query performance when using"
      },
      "SourceInfo": {
        "type": "dynamic",
        "description": "The JSON object with the data producer info, including source, name,"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "SummaryDataType": {
        "type": "string",
        "description": "This flag is used to tell if the record is either a summary level or a"
      },
      "SummaryDescription": {
        "type": "string",
        "description": "The description provided by user."
      },
      "SummaryId": {
        "type": "string",
        "description": "Summary unique ID."
      },
      "SummaryItemId": {
        "type": "string",
        "description": "Summary item unique ID."
      },
      "SummaryName": {
        "type": "string",
        "description": "The Summary display name, unique within workspace."
      },
      "SummaryStatus": {
        "type": "string",
        "description": "Active or deleted."
      },
      "Tactics": {
        "type": "dynamic",
        "description": "MITRE ATT&CK tactics are what attackers are trying to achieve. For"
      },
      "Techniques": {
        "type": "dynamic",
        "description": "MITRE ATT&CK techniques are how those tactics are accomplished."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the event was ingested to Azure"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UpdatedBy": {
        "type": "dynamic",
        "description": "The JSON object with the user who updated summary, including:"
      },
      "UpdatedTimeUTC": {
        "type": "datetime",
        "description": "The time (UTC) when the summary was updated."
      }
    }
  },
  "Dynamics365Activity": {
    "tableName": "Dynamics365Activity",
    "description": "Audit logs for Dynamics 365 tenants collected by Azure Sentinel.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClientIP": {
        "type": "string",
        "description": "The IP address of the device that was used when the activity"
      },
      "CorrelationId": {
        "type": "string",
        "description": "A unique value used to associate related rows"
      },
      "CrmOrganizationUniqueName": {
        "type": "string",
        "description": "Unique name of the organization"
      },
      "EntityId": {
        "type": "string",
        "description": "Unique identifier of the entity"
      },
      "EntityName": {
        "type": "string",
        "description": "Name of the entity in the organization"
      },
      "Fields": {
        "type": "dynamic",
        "description": "JSON of Key Value pair reflecting the values that were created"
      },
      "InstanceUrl": {
        "type": "string",
        "description": "URL to the instance"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "ItemType": {
        "type": "string",
        "description": "The type of object that was accessed or modified. See the"
      },
      "ItemUrl": {
        "type": "string",
        "description": "URL to the record emitting the log"
      },
      "Message": {
        "type": "string",
        "description": "Name of the message called in the Dynamics365 SDK"
      },
      "OfficeWorkload": {
        "type": "string",
        "description": "The Office 365 service where the activity occurred"
      },
      "Operation": {
        "type": "string",
        "description": "The name of the operation that the user is performing"
      },
      "OrganizationId": {
        "type": "string",
        "description": "The GUID for your organization's Office 365 tenant. This"
      },
      "OriginalObjectId": {
        "type": "string",
        "description": "The ObjectId for SharePoint and OneDrive about business"
      },
      "Query": {
        "type": "string",
        "description": "The query filter parameters used while executing the"
      },
      "QueryResults": {
        "type": "dynamic",
        "description": "One or multiple unique records returned by the Retrieve and"
      },
      "RecordType": {
        "type": "string",
        "description": "The type of operation indicated by the record. See the"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "ResultStatus": {
        "type": "string",
        "description": "Indicates whether the action (specified in the Operation"
      },
      "ServiceName": {
        "type": "string",
        "description": "Name of the Service generating the log"
      },
      "SourceRecordId": {
        "type": "string",
        "description": "Unique identifier of an audit record"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "SystemUserId": {
        "type": "string",
        "description": "Unique identifier of the user GUID in the organization"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The date and time in Coordinated Universal Time (UTC) when"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The user agent"
      },
      "UserId": {
        "type": "string",
        "description": "The UPN (User Principal Name) of the user who performed"
      },
      "UserKey": {
        "type": "string",
        "description": "An alternative ID for the user identified in the UserId property"
      },
      "UserType": {
        "type": "string",
        "description": "The type of user that performed the operation. See the"
      }
    }
  },
  "EGNFailedHttpDataPlaneOperations": {
    "tableName": "EGNFailedHttpDataPlaneOperations",
    "description": "Log for failed HTTP data plane requests to an Event Grid namespace. It can be used for auditing purposes.",
    "columns": {
      "AuthenticationType": {
        "type": "string",
        "description": "Type of authentication used by the client. SharedAccessKey - request"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CallerIpAddress": {
        "type": "string",
        "description": "The IP address of the client issuing the request."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "NetworkAccess": {
        "type": "string",
        "description": "The type of network used by the client issuing the request. Allowed"
      },
      "ObjectId": {
        "type": "string",
        "description": "The Microsoft Entra ObjectId of the caller issuing the request."
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultSignature": {
        "type": "string",
        "description": "The result of the operation. Possible values are: ServiceError, ClientError,"
      },
      "ResultType": {
        "type": "string",
        "description": "The type of the result. Possible values are: Failed."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (UTC) when the log was generated."
      },
      "TLSVersion": {
        "type": "string",
        "description": "The transport layer security (TLS) version used by the client connection."
      },
      "TotalOperations": {
        "type": "string",
        "description": "The total number of request with above values issued within the minute."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "EGNFailedMqttConnections": {
    "tableName": "EGNFailedMqttConnections",
    "description": "Log for failed MQTT connections to an Event Grid namespace.",
    "columns": {
      "AuthenticationType": {
        "type": "string",
        "description": "Type of authentication used by the client."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClientIdentity": {
        "type": "string",
        "description": "Value of the client's identity."
      },
      "ClientIdentitySource": {
        "type": "string",
        "description": "Source of the identity of the client issuing the request."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation."
      },
      "Protocol": {
        "type": "string",
        "description": "Protocol used by the client to connect. Possible values are: MQTT3,"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultDescription": {
        "type": "string",
        "description": "Additional description about the result."
      },
      "ResultSignature": {
        "type": "string",
        "description": "The result of the operation."
      },
      "SessionName": {
        "type": "string",
        "description": "Name of the session provided by the client in the MQTT CONNECT"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (UTC) when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "EGNFailedMqttPublishedMessages": {
    "tableName": "EGNFailedMqttPublishedMessages",
    "description": "Log for failed MQTT published messages to an Event Grid namespace.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClientIdentity": {
        "type": "string",
        "description": "Value of the client's identity."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation."
      },
      "Protocol": {
        "type": "string",
        "description": "Protocol used by the client to connect. Possible values are: MQTT3,"
      },
      "Qos": {
        "type": "int",
        "description": "Quality of service used by the client to publish. Possible values are: 0,1"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultDescription": {
        "type": "string",
        "description": "Additional description about the result."
      },
      "ResultSignature": {
        "type": "string",
        "description": "The result of the operation."
      },
      "SessionName": {
        "type": "string",
        "description": "Name of the session provided by the client in the MQTT CONNECT"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (UTC) when the log was generated."
      },
      "TopicName": {
        "type": "string",
        "description": "MQTT Topic Name used by the client to publish."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "EGNFailedMqttSubscriptions": {
    "tableName": "EGNFailedMqttSubscriptions",
    "description": "Log for failed MQTT subscriptions to an Event Grid namespace.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultDescription": {
        "type": "string",
        "description": "Additional description about the result."
      },
      "ResultSignature": {
        "type": "string",
        "description": "The result of the operation."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (UTC) when the log was generated."
      },
      "TopicFilters": {
        "type": "string",
        "description": "MQTT Topic Filters that the client subscribed to."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "EGNMqttDisconnections": {
    "tableName": "EGNMqttDisconnections",
    "description": "Log for disconnected MQTT connections from an Event Grid namespace.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClientIdentity": {
        "type": "string",
        "description": "Value of the client's identity."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation."
      },
      "Protocol": {
        "type": "string",
        "description": "Protocol used by the client to connect. Possible values are: MQTT3,"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultDescription": {
        "type": "string",
        "description": "Additional description about the result."
      },
      "ResultSignature": {
        "type": "string",
        "description": "The result of the operation."
      },
      "SessionName": {
        "type": "string",
        "description": "Name of the session provided by the client in the MQTT CONNECT"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (UTC) when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "EGNSuccessfulHttpDataPlaneOperations": {
    "tableName": "EGNSuccessfulHttpDataPlaneOperations",
    "description": "Log for successful HTTP data plane requests to an Event Grid namespace. It can be used for auditing purposes.",
    "columns": {
      "AuthenticationType": {
        "type": "string",
        "description": "Type of authentication used by the client. SharedAccessKey - request"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CallerIpAddress": {
        "type": "string",
        "description": "The IP address of the client issuing the request."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "NetworkAccess": {
        "type": "string",
        "description": "The type of network used by the client issuing the request. Allowed"
      },
      "ObjectId": {
        "type": "string",
        "description": "The Microsoft Entra ObjectId of the caller issuing the request."
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultType": {
        "type": "string",
        "description": "The result of the operation. Possible values are: Succeeded."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (UTC) when the log was generated."
      },
      "TLSVersion": {
        "type": "string",
        "description": "The transport layer security (TLS) version used by the client connection."
      },
      "TotalOperations": {
        "type": "string",
        "description": "The total number of request with above values issued within the minute."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "EGNSuccessfulMqttConnections": {
    "tableName": "EGNSuccessfulMqttConnections",
    "description": "Log for successful MQTT connections to an Event Grid namesapce. This log can be used for auditing purposes.",
    "columns": {
      "AuthenticationType": {
        "type": "string",
        "description": "Type of authentication used by the client."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClientIdentity": {
        "type": "string",
        "description": "Value of the client's identity."
      },
      "ClientIdentitySource": {
        "type": "string",
        "description": "Source of the identity of the client issuing the request."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation."
      },
      "Protocol": {
        "type": "string",
        "description": "Protocol used by the client to connect. Possible values are: MQTT3,"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SessionName": {
        "type": "string",
        "description": "Name of the session provided by the client in the MQTT CONNECT"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (UTC) when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "ETWEvent": {
    "tableName": "ETWEvent",
    "description": "",
    "columns": {
      "AzureDeploymentID": {
        "type": "string",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ChannelName": {
        "type": "string",
        "description": ""
      },
      "Computer": {
        "type": "string",
        "description": ""
      },
      "EventId": {
        "type": "int",
        "description": ""
      },
      "EventMessage": {
        "type": "string",
        "description": ""
      },
      "EventSourceName": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "KeywordName": {
        "type": "string",
        "description": ""
      },
      "Level": {
        "type": "string",
        "description": ""
      },
      "Message": {
        "type": "string",
        "description": ""
      },
      "OpcodeName": {
        "type": "string",
        "description": ""
      },
      "Pid": {
        "type": "int",
        "description": ""
      },
      "ProviderGuid": {
        "type": "string",
        "description": ""
      },
      "Role": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "TaskName": {
        "type": "string",
        "description": ""
      },
      "Tid": {
        "type": "int",
        "description": ""
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "EmailAttachmentInfo": {
    "tableName": "EmailAttachmentInfo",
    "description": "Office 365 attached emails information.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DetectionMethods": {
        "type": "string",
        "description": "Sender email address in the from header, which is visible to email"
      },
      "FileName": {
        "type": "string",
        "description": "Name of the file that the recorded action was applied to."
      },
      "FileSize": {
        "type": "long",
        "description": "Size of the file in bytes."
      },
      "FileType": {
        "type": "string",
        "description": "File extension type."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "NetworkMessageId": {
        "type": "string",
        "description": "Unique identifier for the email, generated by Office 365."
      },
      "RecipientEmailAddress": {
        "type": "string",
        "description": "Email address of the recipient, or email address of the recipient after"
      },
      "RecipientObjectId": {
        "type": "string",
        "description": "Email recipient unique identifier in Azure AD."
      },
      "ReportId": {
        "type": "string",
        "description": "Unique identifier for the event."
      },
      "SenderDisplayName": {
        "type": "string",
        "description": "Sender email address in the from header, which is visible to email"
      },
      "SenderFromAddress": {
        "type": "string",
        "description": "Sender domain in the from header, which is visible to email"
      },
      "SenderObjectId": {
        "type": "string",
        "description": "Sender email address in the from header, which is visible to email"
      },
      "SHA256": {
        "type": "string",
        "description": "SHA-256 of the file that the recorded action was applied to."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "ThreatNames": {
        "type": "string",
        "description": "Sender email address in the from header, which is visible to email"
      },
      "ThreatTypes": {
        "type": "string",
        "description": "Verdict from the email filtering stack on whether the email contains"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time (UTC) when the record was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "EmailEvents": {
    "tableName": "EmailEvents",
    "description": "Office 365 email events, including email delivery and blocking events.",
    "columns": {
      "AdditionalFields": {
        "type": "dynamic",
        "description": "Additional information about the entity or event."
      },
      "AttachmentCount": {
        "type": "int",
        "description": "Number of attachments in the email."
      },
      "AuthenticationDetails": {
        "type": "string",
        "description": "List of pass or fail verdicts by email authentication protocols like"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "BulkComplaintLevel": {
        "type": "int",
        "description": "Threshold assigned to email from bulk mailers, a high bulk"
      },
      "ConfidenceLevel": {
        "type": "string",
        "description": "List of confidence levels of any spam or phishing verdicts. For"
      },
      "Connectors": {
        "type": "string",
        "description": "Custom instructions that define organizational mail flow and how"
      },
      "DeliveryAction": {
        "type": "string",
        "description": "Action of the delivered email."
      },
      "DeliveryLocation": {
        "type": "string",
        "description": "Location of the delivered email: Inbox/Folder, On-"
      },
      "DetectionMethods": {
        "type": "string",
        "description": "Delivery action of the email: Delivered, Junked, Blocked, or"
      },
      "EmailAction": {
        "type": "string",
        "description": "Final action taken on the email based on filter verdict, policies, and"
      },
      "EmailActionPolicy": {
        "type": "string",
        "description": "Action policy that took effect: Antispam high-confidence,"
      },
      "EmailActionPolicyGuid": {
        "type": "string",
        "description": "Unique identifier of the policy that took effect."
      },
      "EmailClusterId": {
        "type": "long",
        "description": "Identifier of the email cluster. Emails are clustered (grouped) based"
      },
      "EmailDirection": {
        "type": "string",
        "description": "Email direction: Inbound, Outbound, Intra-org."
      },
      "EmailLanguage": {
        "type": "string",
        "description": "Detected language of the email content."
      },
      "InternetMessageId": {
        "type": "string",
        "description": "Public-facing identifier for the email that is set by the sending"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "LatestDeliveryAction": {
        "type": "string",
        "description": "Last known action attempted on an email by the service or by an"
      },
      "LatestDeliveryLocation": {
        "type": "string",
        "description": "Last known location of the email."
      },
      "NetworkMessageId": {
        "type": "string",
        "description": "Unique identifier for the email, generated by Office 365."
      },
      "OrgLevelAction": {
        "type": "string",
        "description": "Action taken on the email in response to matches to a policy"
      },
      "OrgLevelPolicy": {
        "type": "string",
        "description": "Organizational policy that triggered the action taken on the email."
      },
      "RecipientEmailAddress": {
        "type": "string",
        "description": "Recipient email address or email address of the recipient after"
      },
      "RecipientObjectId": {
        "type": "string",
        "description": "Email recipient Azure AD identifier."
      },
      "ReportId": {
        "type": "string",
        "description": "Unique identifier for the event."
      },
      "SenderDisplayName": {
        "type": "string",
        "description": "Sender email address in the from header, which is visible to email"
      },
      "SenderFromAddress": {
        "type": "string",
        "description": "Sender domain in the from header, which is visible to email"
      },
      "SenderFromDomain": {
        "type": "string",
        "description": "Verdict from the email filtering stack on whether the email contains"
      },
      "SenderIPv4": {
        "type": "string",
        "description": "IPv4 address of the last detected mail server that relayed the"
      },
      "SenderIPv6": {
        "type": "string",
        "description": "IPv6 address of the last detected mail server that relayed the"
      },
      "SenderMailFromAddress": {
        "type": "string",
        "description": "Sender email address in the MAIL from header, also known as the"
      },
      "SenderMailFromDomain": {
        "type": "string",
        "description": "Sender domain in the MAIL from header, also known as the"
      },
      "SenderObjectId": {
        "type": "string",
        "description": "Sender email address in the from header, which is visible to email"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "Subject": {
        "type": "string",
        "description": "Email subject field."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "ThreatNames": {
        "type": "string",
        "description": "Sender email address in the from header, which is visible to email"
      },
      "ThreatTypes": {
        "type": "string",
        "description": "Verdict from the email filtering stack on whether the email contains"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time (UTC) when the record was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UrlCount": {
        "type": "int",
        "description": "Number of embedded URLs in the email."
      },
      "UserLevelAction": {
        "type": "string",
        "description": "Action taken on the email in response to matches to a mailbox"
      },
      "UserLevelPolicy": {
        "type": "string",
        "description": "End user mailbox policy that triggered the action taken on the"
      }
    }
  },
  "EmailPostDeliveryEvents": {
    "tableName": "EmailPostDeliveryEvents",
    "description": "Office 365 security events occurred post email delivery to recipient mailbox.",
    "columns": {
      "Action": {
        "type": "string",
        "description": "Action taken on the entity"
      },
      "ActionResult": {
        "type": "string",
        "description": "Result of the action"
      },
      "ActionTrigger": {
        "type": "string",
        "description": "Indicates whether an action was triggered by an administrator"
      },
      "ActionType": {
        "type": "string",
        "description": "Type of activity that triggered the event"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DeliveryLocation": {
        "type": "string",
        "description": "Delivered email location: Inbox/Folder, On-premises/External, Junk,"
      },
      "DetectionMethods": {
        "type": "string",
        "description": "Methods used to detect malware, phishing, or other threats found in"
      },
      "InternetMessageId": {
        "type": "string",
        "description": "Public-facing identifier for the email that is set by the sending email"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "NetworkMessageId": {
        "type": "string",
        "description": "Email unique identifier generated by Office 365"
      },
      "RecipientEmailAddress": {
        "type": "string",
        "description": "Recipient email address or email address of the recipient after"
      },
      "ReportId": {
        "type": "string",
        "description": "Unique identifier for the event"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "ThreatTypes": {
        "type": "string",
        "description": "Verdict from the email filtering stack on whether the email contains"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time (UTC) when the record was generated"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "EmailUrlInfo": {
    "tableName": "EmailUrlInfo",
    "description": "Office 365 emails URLs information.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "NetworkMessageId": {
        "type": "string",
        "description": "Email unique identifier generated by Office 365"
      },
      "ReportId": {
        "type": "string",
        "description": "Unique identifier for the event"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time (UTC) when the record was generated"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "Url": {
        "type": "string",
        "description": "Information about URLs on Office 365 emails"
      },
      "UrlDomain": {
        "type": "string",
        "description": "Domain part of the Url"
      },
      "UrlLocation": {
        "type": "string",
        "description": "Indicates which part of the email the URL is located"
      }
    }
  },
  "EnrichedMicrosoft365AuditLogs": {
    "tableName": "EnrichedMicrosoft365AuditLogs",
    "description": "This table is part of Identity and Network Access, which contains Enriched Microsoft 365 Audit logs. These logs can be leveraged for policy, risk, and traffic management, as well as to monitor users experience.",
    "columns": {
      "ActorUserType": {
        "type": "string",
        "description": "The type of user that performed the operation. Possible"
      },
      "AdditionalProperties": {
        "type": "dynamic",
        "description": "Additional activity fields"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClientIp": {
        "type": "string",
        "description": "The IP address of the device that was used when the activity"
      },
      "DeviceId": {
        "type": "string",
        "description": "The ID of the source device as reported in the record."
      },
      "DeviceOperatingSystem": {
        "type": "string",
        "description": "The client connecting operating system type."
      },
      "DeviceOperatingSystemVersion": {
        "type": "string",
        "description": "The client connecting operating system version."
      },
      "Id": {
        "type": "string",
        "description": "Unique identifier of an audit record."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "ObjectId": {
        "type": "string",
        "description": "For SharePoint and OneDrive for business activity, the full"
      },
      "Operation": {
        "type": "string",
        "description": "The name of the user or admin activity that performed the"
      },
      "OrganizationId": {
        "type": "string",
        "description": "The GUID for your organization's Office 365 tenant. This"
      },
      "RecordType": {
        "type": "int",
        "description": "The type of operation indicated by the record. See the"
      },
      "ResultStatus": {
        "type": "string",
        "description": "Indicates whether the action (specified in the Operation"
      },
      "SourceIp": {
        "type": "string",
        "description": "The IP address from which the connection or session"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time the record was created."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UniqueTokenId": {
        "type": "string",
        "description": "The unique token identifier"
      },
      "UserId": {
        "type": "string",
        "description": "The UPN (User Principal Name) of the user who performed"
      },
      "UserKey": {
        "type": "string",
        "description": "An alternative ID for the user identified in the UserId"
      },
      "UserType": {
        "type": "string",
        "description": "The type of user that performed the operation."
      },
      "Workload": {
        "type": "string",
        "description": "The Office 365 service where the activity occurred."
      },
      "AzureDeploymentID": {
        "type": "string",
        "description": "Azure deployment ID of the cloud service the log belongs to. Only"
      },
      "Computer": {
        "type": "string",
        "description": "Name of the computer that the event was collected from."
      },
      "EventCategory": {
        "type": "int",
        "description": "Category of the event."
      },
      "EventData": {
        "type": "string",
        "description": "All event data in raw format."
      },
      "EventID": {
        "type": "int",
        "description": "Number of the event."
      },
      "EventLevel": {
        "type": "int",
        "description": "Severity of the event in numeric form."
      },
      "EventLevelName": {
        "type": "string",
        "description": "Severity of the event in text form."
      },
      "EventLog": {
        "type": "string",
        "description": "Name of the event log that the event was collected from."
      },
      "ManagementGroupName": {
        "type": "string",
        "description": "Name of the management group for System Center Operations"
      },
      "Message": {
        "type": "string",
        "description": "Event message for the different Languages. The language is"
      },
      "ParameterXml": {
        "type": "string",
        "description": "Event parameter values in XML format."
      },
      "RenderedDescription": {
        "type": "string",
        "description": "Event description with parameter values."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "Role": {
        "type": "string",
        "description": "Role of the cloud service the log belongs to. Only populated when"
      },
      "Source": {
        "type": "string",
        "description": "Source of the event."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "UserName": {
        "type": "string",
        "description": "User name of the account that logged the event."
      }
    }
  },
  "ExchangeAssessmentRecommendation": {
    "tableName": "ExchangeAssessmentRecommendation",
    "description": "Recommendations generated by Exchange assessments that are started through a scheduled task. When you schedule the assessment it runs by default every 7 days and upload the data into Azure Log Analytics",
    "columns": {
      "ActionArea": {
        "type": "string",
        "description": "The segment in which action is to be performed"
      },
      "ActionAreaId": {
        "type": "string",
        "description": "ID generated for Action Area"
      },
      "ActiveDirectorySite": {
        "type": "string",
        "description": ""
      },
      "AffectedObjectName": {
        "type": "string",
        "description": "Name of the affected object"
      },
      "AffectedObjectType": {
        "type": "string",
        "description": "Type of object which is affected"
      },
      "AssessmentId": {
        "type": "string",
        "description": "ID of the assessment"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Computer": {
        "type": "string",
        "description": "The machine from which data is uploaded"
      },
      "CustomData": {
        "type": "string",
        "description": ""
      },
      "Description": {
        "type": "string",
        "description": "Description of the recommendation"
      },
      "ExchangeAdminGroup": {
        "type": "string",
        "description": ""
      },
      "ExchangeDAG": {
        "type": "string",
        "description": ""
      },
      "ExchangeMailboxDatabase": {
        "type": "string",
        "description": ""
      },
      "ExchangeOrganization": {
        "type": "string",
        "description": ""
      },
      "ExchangePublicFolderDatabase": {
        "type": "string",
        "description": ""
      },
      "ExchangeServer": {
        "type": "string",
        "description": ""
      },
      "FocusArea": {
        "type": "string",
        "description": "Area to be focussed on"
      },
      "FocusAreaId": {
        "type": "string",
        "description": "ID of the Focus Area"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Recommendation": {
        "type": "string",
        "description": "Generated recommendation"
      },
      "RecommendationId": {
        "type": "string",
        "description": "ID of the recommendation generated"
      },
      "RecommendationResult": {
        "type": "string",
        "description": "Result of the recommendation generated"
      },
      "RecommendationWeight": {
        "type": "real",
        "description": "Weight of recommendation"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "Technology": {
        "type": "string",
        "description": ""
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time the record was created."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "Domain": {
        "type": "string",
        "description": "Domain of the system"
      },
      "O365TenantId": {
        "type": "string",
        "description": "ID of O365 Tenant"
      },
      "TenantName": {
        "type": "string",
        "description": "Name of the Tenant"
      }
    }
  },
  "FailedIngestion": {
    "tableName": "FailedIngestion",
    "description": "Failed ingestion operations logs provide detailed information about failed ingest operations. Logs include data source details, as well as error code and failure status (transient or permanent), that can be used for tracking the process of data source ingestion. Users can identify usage errors (permanent bad requests) and handle retries of transient failures. Ingestion logs are supported for queued ingestion to the ingestion endpoint using SDKs, data connections, and connectors.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Database": {
        "type": "string",
        "description": "The name of the database holding the target table"
      },
      "Details": {
        "type": "string",
        "description": "Detailed description of the failure and error message"
      },
      "ErrorCode": {
        "type": "string",
        "description": "The failure's error code"
      },
      "FailedOn": {
        "type": "datetime",
        "description": "Time at which this ingest operation failed"
      },
      "FailureStatus": {
        "type": "string",
        "description": "The failure's status. Permanent , or RetryAttemptsExceeded"
      },
      "IngestionSourceId": {
        "type": "string",
        "description": "A unique identifier representing the ingested source"
      },
      "IngestionSourcePath": {
        "type": "string",
        "description": "The path of the ingestion data sources or the Azure blob"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "OperationId": {
        "type": "string",
        "description": "The ingestion's operation ID"
      },
      "OriginatesFromUpdatePolicy": {
        "type": "bool",
        "description": "Indicates whether or not the failure originate from an update"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "ResultType": {
        "type": "string",
        "description": "The final state of this data ingestion operation"
      },
      "RootActivityId": {
        "type": "string",
        "description": "The ingestion's activity ID"
      },
      "ShouldRetry": {
        "type": "bool",
        "description": "Indicates whether or not the failure is transient and should be"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "Table": {
        "type": "string",
        "description": "The name of the target table into which the data is ingested"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "FileMaliciousContentInfo": {
    "tableName": "FileMaliciousContentInfo",
    "description": "This table shows files that were identified as malicious by Microsoft Defender for Office 365 in SharePoint Online, OneDrive for Business, and Microsoft Teams.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DetectionMethods": {
        "type": "string",
        "description": "Verdict from the email filtering stack on whether the email"
      },
      "DocumentID": {
        "type": "string",
        "description": "Unique identifier of the file."
      },
      "FileCreationTime": {
        "type": "datetime",
        "description": "Timestamp of the file creation."
      },
      "FileName": {
        "type": "string",
        "description": "Name of the file that the recorded action was applied to."
      },
      "FileOwnerDisplayName": {
        "type": "string",
        "description": "Account recorded as owner of the file."
      },
      "FileOwnerUpn": {
        "type": "string",
        "description": "Account recorded as owner of the file"
      },
      "FileSize": {
        "type": "long",
        "description": "Size of the file in bytes."
      },
      "FolderPath": {
        "type": "string",
        "description": "Folder containing the file that the recorded action was applied"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable"
      },
      "LastModifiedTime": {
        "type": "datetime",
        "description": "Date and time the item, or related metadata was last modified."
      },
      "LastModifyingAccountUpn": {
        "type": "string",
        "description": "Account that last modified this file."
      },
      "ReportId": {
        "type": "string",
        "description": "Unique identifier for the event."
      },
      "SHA256": {
        "type": "string",
        "description": "SHA-256 of the file that the recorded action was applied to."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "ThreatNames": {
        "type": "string",
        "description": "Detection name for malware or other threats found."
      },
      "ThreatTypes": {
        "type": "string",
        "description": "Verdict from the email filtering stack on whether the email"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time (UTC) when the record was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "Workload": {
        "type": "string",
        "description": "Information about the workload from which the URL originated"
      }
    }
  },
  "FunctionAppLogs": {
    "tableName": "FunctionAppLogs",
    "description": "Log generated by Function Apps. It includes logs emitted by the Functions host and logs emitted by customer code. Use these logs to monitor application health, performance, and behavior.",
    "columns": {
      "ActivityId": {
        "type": "string",
        "description": "The activity ID that logged the message."
      },
      "AppName": {
        "type": "string",
        "description": "The Function application name."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The log category name."
      },
      "EventId": {
        "type": "int",
        "description": "The event ID."
      },
      "EventName": {
        "type": "string",
        "description": "The event name."
      },
      "ExceptionDetails": {
        "type": "string",
        "description": "The exception details. This includes the exception type, message, and"
      },
      "ExceptionMessage": {
        "type": "string",
        "description": "The exception message."
      },
      "ExceptionType": {
        "type": "string",
        "description": "The exception type (e.g., System.InvalidOperationException)."
      },
      "FunctionInvocationId": {
        "type": "string",
        "description": "The invocation ID that logged the message."
      },
      "FunctionName": {
        "type": "string",
        "description": "The name of the function that logged the message."
      },
      "HostInstanceId": {
        "type": "string",
        "description": "The host instance ID."
      },
      "HostVersion": {
        "type": "string",
        "description": "The Functions host version."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Level": {
        "type": "string",
        "description": "The log level. Valid values are Trace, Debug, Information, Warning,"
      },
      "LevelId": {
        "type": "int",
        "description": "The integer value of the log level. Valid values are 0 (Trace), 1 (Debug),"
      },
      "Location": {
        "type": "string",
        "description": "The location of the server that processed the request (e.g., South"
      },
      "Message": {
        "type": "string",
        "description": "The log message."
      },
      "ProcessId": {
        "type": "int",
        "description": "The process ID."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "RoleInstance": {
        "type": "string",
        "description": "The role instance ID."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The actual time the event described by the log entry occurred."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "GCPResource": {
        "type": "dynamic",
        "description": "Information about the monitored resource associated with the log entry,"
      },
      "InsertId": {
        "type": "string",
        "description": "A unique identifier for the log entry used to prevent duplication."
      },
      "LogName": {
        "type": "string",
        "description": "The full resource name of the log to which this log entry belongs."
      },
      "Operation": {
        "type": "dynamic",
        "description": "Information about an operation associated with the log entry, such as an"
      },
      "ProtoPayload": {
        "type": "dynamic",
        "description": "The structured payload of the log entry, typically in protocol buffer"
      },
      "ReceiveTimestamp": {
        "type": "datetime",
        "description": "The time the log entry was received by the logging system."
      },
      "Severity": {
        "type": "string",
        "description": "The severity level of the log entry (e.g., DEBUG, INFO, WARNING, ERROR,"
      },
      "Timestamp": {
        "type": "datetime",
        "description": "Timestamp of the logged event."
      },
      "AuthenticationInfo": {
        "type": "dynamic",
        "description": "Authentication information."
      },
      "AuthorizationInfo": {
        "type": "string",
        "description": "Authorization details such as"
      },
      "GCPResourceName": {
        "type": "string",
        "description": "Full resource name of the Cloud"
      },
      "GCPResourceType": {
        "type": "string",
        "description": "Type of the resource."
      },
      "Metadata": {
        "type": "dynamic",
        "description": "Other service-specific data about the request, response, and other"
      },
      "MethodName": {
        "type": "string",
        "description": "The name of the API method invoked"
      },
      "NumResponseItems": {
        "type": "string",
        "description": "The number of items returned in a list"
      },
      "PrincipalEmail": {
        "type": "string",
        "description": "The email address of the authenticated user (or service account on"
      },
      "ProjectId": {
        "type": "string",
        "description": "The identifier of the Google Cloud Platform (GCP) project associated"
      },
      "Request": {
        "type": "dynamic",
        "description": "The operation request. This may not include all request parameters,"
      },
      "RequestMetadata": {
        "type": "dynamic",
        "description": "Metadata about the operation."
      },
      "ResourceLocation": {
        "type": "dynamic",
        "description": "The resource location information."
      },
      "ResourceOriginalState": {
        "type": "dynamic",
        "description": "The resource original state before mutation. Present only for"
      },
      "Response": {
        "type": "dynamic",
        "description": "The operation response. This may not include all response elements,"
      },
      "ServiceData": {
        "type": "dynamic",
        "description": "An object containing fields of an arbitrary type. An additional field"
      },
      "ServiceName": {
        "type": "string",
        "description": "Name of the GCP service"
      },
      "Status": {
        "type": "dynamic",
        "description": "The status of the overall operation."
      },
      "StatusMessage": {
        "type": "string",
        "description": "Message describing the status"
      },
      "Subscription": {
        "type": "string",
        "description": "A named resource representing the stream of messages from a"
      },
      "AuthenticationInfoPrincipalEmail": {
        "type": "string",
        "description": "The email of the authenticated identity"
      },
      "AuthzPolicyInfoPolicies": {
        "type": "string",
        "description": "The list of Authorization policies that"
      },
      "AuthzPolicyInfoResult": {
        "type": "string",
        "description": "Stores information about the"
      },
      "BackendTargetProjectNumber": {
        "type": "string",
        "description": "Holds the project number where the"
      },
      "CacheDecision": {
        "type": "string",
        "description": "Indicates caching decisions taken"
      },
      "CacheID": {
        "type": "string",
        "description": "Unique identifier for the cache entry"
      },
      "EnforcedEdgeSecurityPolicyConfiguredAction": {
        "type": "string",
        "description": "The configured action that was"
      },
      "EnforcedEdgeSecurityPolicyName": {
        "type": "string",
        "description": "The name of the edge security policy"
      },
      "EnforcedEdgeSecurityPolicyOutcome": {
        "type": "string",
        "description": "The outcome of applying the policy"
      },
      "EnforcedEdgeSecurityPolicyPriority": {
        "type": "string",
        "description": "The priority value of the rule within"
      },
      "ErrorBackendStatusDetails": {
        "type": "string",
        "description": "Backend-specific error details when a"
      },
      "ErrorService": {
        "type": "string",
        "description": "Holds the backend service that"
      },
      "HttpRequestCacheFillBytes": {
        "type": "string",
        "description": "Number of bytes written to the cache"
      },
      "HttpRequestCacheHit": {
        "type": "bool",
        "description": "Boolean flag indicating whether the"
      },
      "HttpRequestCacheLookup": {
        "type": "bool",
        "description": "Boolean flag indicating whether the"
      },
      "HttpRequestLatency": {
        "type": "string",
        "description": "The latency or total time taken to"
      },
      "HttpRequestRemoteIP": {
        "type": "string",
        "description": "The IP address of the client that made"
      },
      "HttpRequestRequestMethod": {
        "type": "string",
        "description": "HTTP method used for the request"
      },
      "HttpRequestRequestSize": {
        "type": "string",
        "description": "Size of the incoming HTTP request in"
      },
      "HttpRequestRequestUrl": {
        "type": "string",
        "description": "Full URL that was requested"
      },
      "HttpRequestResponseSize": {
        "type": "string",
        "description": "Size of the HTTP response payload"
      },
      "HttpRequestServerIP": {
        "type": "string",
        "description": "IP address of the server (or Google"
      },
      "HttpRequestStatus": {
        "type": "string",
        "description": "HTTP status code returned by the"
      },
      "HttpRequestUserAgent": {
        "type": "string",
        "description": "User agent string from the HTTP"
      },
      "InsertID": {
        "type": "string",
        "description": "A unique identifier for the log entry"
      },
      "JsonPayloadType": {
        "type": "string",
        "description": "The protobuf type URL describing the"
      },
      "LabelsAPIRootTriggerID": {
        "type": "string",
        "description": "The root trigger ID identifying the"
      },
      "LoadBalancingScheme": {
        "type": "string",
        "description": "Holds a string that describes which"
      },
      "OperationFirst": {
        "type": "bool",
        "description": "Indicates if this is the first log"
      },
      "OperationID": {
        "type": "string",
        "description": "Unique identifier for the operation"
      },
      "OperationLast": {
        "type": "bool",
        "description": "Indicates if this is the last log"
      },
      "OperationProducer": {
        "type": "string",
        "description": "The service that produced the"
      },
      "OverrideResponseCode": {
        "type": "string",
        "description": "Holds the override response code"
      },
      "PayloadType": {
        "type": "string",
        "description": "Type of the payload in the log"
      },
      "RemoteIP": {
        "type": "string",
        "description": "The IP address of the client as seen by"
      },
      "RequestBackends": {
        "type": "string",
        "description": "Configuration for backend groups"
      },
      "RequestCDNPolicyCacheKeyPolicyIncludeHost": {
        "type": "bool",
        "description": "Whether the host is included in the"
      },
      "RequestCDNPolicyCacheKeyPolicyIncludeProtocol": {
        "type": "bool",
        "description": "Whether protocol is included in the"
      },
      "RequestCDNPolicyCacheKeyPolicyIncludeQueryString": {
        "type": "bool",
        "description": "Whether the query string is included"
      },
      "RequestCDNPolicyCacheMode": {
        "type": "string",
        "description": "Cache mode setting"
      },
      "RequestCDNPolicyClientTtl": {
        "type": "string",
        "description": "Time-to-live set on responses for"
      },
      "RequestCDNPolicyDefaultTtl": {
        "type": "string",
        "description": "Default TTL applied when no caching"
      },
      "RequestCDNPolicyMaxTtl": {
        "type": "string",
        "description": "Maximum allowed TTL for cached"
      },
      "RequestCDNPolicyNegativeCaching": {
        "type": "bool",
        "description": "Boolean indicating if negative caching"
      },
      "RequestCDNPolicyServeWhileStale": {
        "type": "string",
        "description": "Duration responses are served while"
      },
      "RequestCDNPolicySignedUrlCacheMaxAgeSec": {
        "type": "string",
        "description": "Cache TTL for signed URLs in seconds"
      },
      "RequestCompressionMode": {
        "type": "string",
        "description": "Specifies whether and how"
      },
      "RequestConnectionDrainingTimeoutSec": {
        "type": "string",
        "description": "Time in seconds for draining"
      },
      "RequestDescription": {
        "type": "string",
        "description": "A custom description associated with"
      },
      "RequestEnableCDN": {
        "type": "bool",
        "description": "Boolean indicating if Cloud CDN is"
      },
      "RequestFingerprint": {
        "type": "string",
        "description": "Fingerprint of the request"
      },
      "RequestGroup": {
        "type": "string",
        "description": "The reference to instance group used"
      },
      "RequestHealthChecks": {
        "type": "string",
        "description": "List of health check resources attached"
      },
      "RequestIPAddressSelectionPolicy": {
        "type": "string",
        "description": "Specifies IP address family for the"
      },
      "RequestKeyName": {
        "type": "string",
        "description": "The name of the key used in the"
      },
      "RequestLoadBalancingScheme": {
        "type": "string",
        "description": "Load balancing scheme used"
      },
      "RequestLocalityLbPolicy": {
        "type": "string",
        "description": "Locality-based load balancing strategy"
      },
      "RequestLogConfigEnable": {
        "type": "bool",
        "description": "Boolean to enable request logging"
      },
      "RequestLogConfigSampleRate": {
        "type": "string",
        "description": "Sampling rate for log entries when"
      },
      "RequestMetadataCallerIP": {
        "type": "string",
        "description": "IP address of the caller."
      },
      "RequestMetadataCallerSuppliedUserAgent": {
        "type": "string",
        "description": "User agent string of the request"
      },
      "RequestMetadataDestinationAttributes": {
        "type": "string",
        "description": "Attributes of the destination, often"
      },
      "RequestMetadataRequestAttributesAuth": {
        "type": "string",
        "description": "Authentication attributes of the"
      },
      "RequestMetadataRequestAttributesReason": {
        "type": "string",
        "description": "Encoded reason for the request"
      },
      "RequestMetadataRequestAttributesTime": {
        "type": "datetime",
        "description": "Time when the request was initiated"
      },
      "RequestName": {
        "type": "string",
        "description": "Name field from the request"
      },
      "RequestPortName": {
        "type": "string",
        "description": "The named port of the backend"
      },
      "RequestProtocol": {
        "type": "string",
        "description": "The protocol used"
      },
      "RequestSecurityPolicy": {
        "type": "string",
        "description": "The name or full path of the security"
      },
      "RequestSessionAffinity": {
        "type": "string",
        "description": "Affinity setting used to keep sessions"
      },
      "RequestTimeoutSec": {
        "type": "string",
        "description": "Timeout value (in seconds) for the"
      },
      "RequestType": {
        "type": "string",
        "description": "Type of the request payload object"
      },
      "ResourceLabelsBackendBucketID": {
        "type": "string",
        "description": "Holds the"
      },
      "ResourceLabelsBackendServiceID": {
        "type": "string",
        "description": "The unique identifier for the GCE"
      },
      "ResourceLabelsBackendServiceName": {
        "type": "string",
        "description": "The name of the backend service"
      },
      "ResourceLabelsForwardingRuleName": {
        "type": "string",
        "description": "The name of the forwarding rule"
      },
      "ResourceLabelsLocation": {
        "type": "string",
        "description": "The geographical or regional location"
      },
      "ResourceLabelsProjectID": {
        "type": "string",
        "description": "The identifier of the Google Cloud"
      },
      "ResourceLabelsTargetProxyName": {
        "type": "string",
        "description": "The name of the target proxy object"
      },
      "ResourceLabelsUrlMapName": {
        "type": "string",
        "description": "The name of the URL map object"
      },
      "ResourceLabelsZone": {
        "type": "string",
        "description": "The zone in which the load balancer is"
      },
      "ResourceLocationCurrentLocations": {
        "type": "string",
        "description": "Region or location associated with the"
      },
      "ResponseID": {
        "type": "string",
        "description": "Unique identifier for the response or"
      },
      "ResponseInsertTime": {
        "type": "datetime",
        "description": "Time when the response operation"
      },
      "ResponseName": {
        "type": "string",
        "description": "Name included in the response."
      },
      "ResponseOperationType": {
        "type": "string",
        "description": "Operation type in the response."
      },
      "ResponseProgress": {
        "type": "string",
        "description": "Progress of the operation in"
      },
      "ResponseSelfLink": {
        "type": "string",
        "description": "Self-link URL of the response"
      },
      "ResponseSelfLinkWithID": {
        "type": "string",
        "description": "URI of the operation with ID"
      },
      "ResponseStartTime": {
        "type": "datetime",
        "description": "Time when the operation started"
      },
      "ResponseStatus": {
        "type": "string",
        "description": "Status of the response"
      },
      "ResponseTargetID": {
        "type": "string",
        "description": "ID of the target resource affected by"
      },
      "ResponseTargetLink": {
        "type": "string",
        "description": "Target link URL in the response."
      },
      "ResponseType": {
        "type": "string",
        "description": "Type of the response."
      },
      "ResponseUser": {
        "type": "string",
        "description": "User information from the"
      },
      "SpanID": {
        "type": "string",
        "description": "Identifier of the span within a trace"
      },
      "StatusDetails": {
        "type": "string",
        "description": "Holds a string that explains why the"
      },
      "fetched": {
        "type": "int",
        "description": "o Microsoft Sentinel"
      },
      "Trace": {
        "type": "string",
        "description": "Identifier of the trace"
      },
      "Labels": {
        "type": "dynamic",
        "description": "A set of key-value pairs that provide additional metadata about the log"
      },
      "PayloadAuthenticationInfoPrincipalSubject": {
        "type": "string",
        "description": "The subject identifier of the"
      },
      "PayloadAuthenticationInfoServiceAccountKeyName": {
        "type": "string",
        "description": "The name of the service account"
      },
      "PayloadAuthInfoPrincipalEmail": {
        "type": "string",
        "description": "The email address of the principal"
      },
      "PayloadAuthorizationInfo": {
        "type": "dynamic",
        "description": "Detailed authorization information"
      },
      "PayloadMethodName": {
        "type": "string",
        "description": "The name of the API method that"
      },
      "PayloadRequestBuildpackBuildBaseImage": {
        "type": "string",
        "description": "The base image used by the"
      },
      "PayloadRequestBuildpackBuildEnableAutomaticUpdates": {
        "type": "string",
        "description": "Indicates whether automatic"
      },
      "PayloadRequestDomainMappingApiVersion": {
        "type": "string",
        "description": "The API version of the Cloud Run"
      },
      "PayloadRequestDomainMappingKind": {
        "type": "string",
        "description": "The 'kind' of the Cloud Run domain"
      },
      "PayloadRequestDomainMappingMetadataAnnotations": {
        "type": "string",
        "description": "Annotations associated with the"
      },
      "PayloadRequestDomainMappingMetadataName": {
        "type": "string",
        "description": "The name of the Cloud Run domain"
      },
      "PayloadRequestDomainMappingMetadataNameSpace": {
        "type": "string",
        "description": "The namespace of the Cloud Run"
      },
      "PayloadRequestDomainMappingSpec": {
        "type": "string",
        "description": "The specification details of the"
      },
      "PayloadRequestDomainMappingStatus": {
        "type": "string",
        "description": "The status of the Cloud Run domain"
      },
      "PayloadRequestImageUri": {
        "type": "string",
        "description": "The URI of the container image"
      },
      "PayloadRequestJobApiVersion": {
        "type": "string",
        "description": "The API version of the Cloud Run"
      },
      "PayloadRequestJobKind": {
        "type": "string",
        "description": "The 'kind' of the Cloud Run job"
      },
      "PayloadRequestJobMetadataAnnotations": {
        "type": "string",
        "description": "Annotations associated with the"
      },
      "PayloadRequestJobMetadataName": {
        "type": "string",
        "description": "The name of the Cloud Run job"
      },
      "PayloadRequestJobMetadataNameSpace": {
        "type": "string",
        "description": "The namespace of the Cloud Run"
      },
      "PayloadRequestJobSpec": {
        "type": "string",
        "description": "The specification details of the"
      },
      "PayloadRequestLabelSelector": {
        "type": "string",
        "description": "The label selector used in the"
      },
      "PayloadrequestMetadataCallerIp": {
        "type": "string",
        "description": "The IP address of the client that"
      },
      "PayloadrequestMetadatacallerSuppliedUserAgent": {
        "type": "string",
        "description": "The user agent String provided by"
      },
      "PayloadrequestMetadataDestinationAttributes": {
        "type": "string",
        "description": "Attributes related to the destination"
      },
      "PayloadrequestMetadatarequestAttributesAuth": {
        "type": "string",
        "description": "Authentication attributes"
      },
      "PayloadRequestMetadataRequestAttributesReason": {
        "type": "string",
        "description": "The reason specified in the request"
      },
      "PayloadrequestMetadatarequestAttributesTime": {
        "type": "datetime",
        "description": "The timestamp associated with the"
      },
      "PayloadRequestName": {
        "type": "string",
        "description": "The name of the specific request."
      },
      "PayloadRequestOptionsRequestedPolicyVersion": {
        "type": "string",
        "description": "The requested policy version within"
      },
      "PayloadRequestParent": {
        "type": "string",
        "description": "The parent resource of the request."
      },
      "PayloadRequestRegion": {
        "type": "string",
        "description": "The GCP region where the request"
      },
      "PayloadRequestResource": {
        "type": "string",
        "description": "The resource specified in the"
      },
      "PayloadRequestServiceApiVersion": {
        "type": "string",
        "description": "The API version of the Cloud Run"
      },
      "PayloadRequestServiceKind": {
        "type": "string",
        "description": "The 'kind' of the Cloud Run service"
      },
      "PayloadRequestServiceLatestRevision": {
        "type": "string",
        "description": "The name of the latest revision for"
      },
      "PayloadRequestServiceMetadataAnnotations": {
        "type": "string",
        "description": "Annotations associated with the"
      },
      "PayloadRequestServiceMetadataCreationTimestamp": {
        "type": "string",
        "description": "The timestamp when the Cloud Run"
      },
      "PayloadRequestServiceMetadataGeneration": {
        "type": "string",
        "description": "The generation number of the"
      },
      "PayloadRequestServiceMetadatalabels": {
        "type": "string",
        "description": "Labels from the Cloud Run service"
      },
      "PayloadRequestServiceMetadataName": {
        "type": "string",
        "description": "The name of the Cloud Run service"
      },
      "PayloadRequestServiceMetadataNameSpace": {
        "type": "string",
        "description": "The namespace of the Cloud Run"
      },
      "PayloadRequestServiceMetadataResourceVersion": {
        "type": "string",
        "description": "The resource version of the Cloud"
      },
      "PayloadRequestServiceMetadataSelfLink": {
        "type": "string",
        "description": "The self-link URL for the Cloud Run"
      },
      "PayloadRequestServiceMetadataUID": {
        "type": "string",
        "description": "The unique identifier (UID) of the"
      },
      "PayloadRequestServiceObservedGeneration": {
        "type": "string",
        "description": "The observed generation of the"
      },
      "PayloadRequestServiceReadyRevision": {
        "type": "string",
        "description": "The name of the ready revision for"
      },
      "PayloadRequestServiceServiceURL": {
        "type": "string",
        "description": "The URL of the Cloud Run service in"
      },
      "PayloadRequestServiceSpec": {
        "type": "string",
        "description": "The specification details of the"
      },
      "PayloadRequestServiceStatusConditions": {
        "type": "string",
        "description": "Conditions indicating the current"
      },
      "PayloadRequestServiceTraffic": {
        "type": "string",
        "description": "Traffic distribution settings for the"
      },
      "PayloadRequestStorageSourceGeneration": {
        "type": "string",
        "description": "The generation of the storage"
      },
      "PayloadRequestType": {
        "type": "string",
        "description": "The type of request made to the"
      },
      "PayloadResourceLocationCurrentLocations": {
        "type": "string",
        "description": "Current location(s) of the resource"
      },
      "PayloadResourceName": {
        "type": "string",
        "description": "The name of the GCP resource"
      },
      "PayloadResponseApiVersion": {
        "type": "string",
        "description": "The API version of the response"
      },
      "PayloadResponseKind": {
        "type": "string",
        "description": "The 'kind' of resource returned in"
      },
      "PayloadResponseMetadataAnnotations": {
        "type": "string",
        "description": "Annotations associated with the"
      },
      "PayloadResponseMetadataCreationTimestamp": {
        "type": "string",
        "description": "The timestamp when the resource"
      },
      "PayloadResponseMetadataGeneration": {
        "type": "string",
        "description": "The generation number of the"
      },
      "PayloadResponseMetadataName": {
        "type": "string",
        "description": "The name of the resource within"
      },
      "PayloadResponseMetadataResourceVersion": {
        "type": "string",
        "description": "The resource version of the"
      },
      "PayloadResponseMetadataSelfLink": {
        "type": "string",
        "description": "The self-link URL for the resource in"
      },
      "PayloadResponseMetadataUID": {
        "type": "string",
        "description": "The unique identifier (UID) of the"
      },
      "PayloadResponseNameSpace": {
        "type": "string",
        "description": "The namespace of the resource"
      },
      "PayloadResponseServiceMetadatalabels": {
        "type": "string",
        "description": "Labels from the service metadata"
      },
      "PayloadResponseSpec": {
        "type": "string",
        "description": "The specification details of the"
      },
      "PayloadResponseStatus": {
        "type": "string",
        "description": "The status of the operation or"
      },
      "PayloadResponseType": {
        "type": "string",
        "description": "The type of response received from"
      },
      "PayloadServiceName": {
        "type": "string",
        "description": "The name of the GCP service"
      },
      "ResourceLabelsConfigurationName": {
        "type": "string",
        "description": "The name of the associated Cloud"
      },
      "ResourceLabelsJobName": {
        "type": "string",
        "description": "The name of the associated Cloud"
      },
      "ResourceLabelslocation": {
        "type": "string",
        "description": "The GCP location of the Cloud Run"
      },
      "ResourceLabelsProjectId": {
        "type": "string",
        "description": "Project ID from resource labels."
      },
      "ResourceLabelsRevisionName": {
        "type": "string",
        "description": "The name of the associated Cloud"
      },
      "ResourceLabelsServiceName": {
        "type": "string",
        "description": "The name of the associated Cloud"
      },
      "AuthInfoPrincipalEmail": {
        "type": "string",
        "description": "The principal email address"
      },
      "AuthInfoPrincipalSubject": {
        "type": "string",
        "description": "The subject associated with the"
      },
      "AuthInfoServiceAccountKeyName": {
        "type": "string",
        "description": "Name of the service account"
      },
      "MetadataType": {
        "type": "string",
        "description": "Type of metadata associated"
      },
      "OperationId": {
        "type": "string",
        "description": "Identifier of the associated"
      },
      "OperationInsertTime": {
        "type": "datetime",
        "description": "Timestamp when the operation"
      },
      "RequestBodyBackup": {
        "type": "string",
        "description": "Backup configuration in the"
      },
      "RequestBodyCloneContextDestinationInstanceName": {
        "type": "string",
        "description": "Destination instance name in"
      },
      "RequestBodyCommonName": {
        "type": "string",
        "description": "Common name used for"
      },
      "RequestBodyDescription": {
        "type": "string",
        "description": "Description of the instance or"
      },
      "RequestBodyExportContext": {
        "type": "dynamic",
        "description": "Export context details."
      },
      "RequestBodyFailoverContext": {
        "type": "dynamic",
        "description": "Context for failover"
      },
      "RequestBodyInstance": {
        "type": "string",
        "description": "Instance details in the request"
      },
      "RequestBodyKind": {
        "type": "string",
        "description": "The kind field in the request"
      },
      "RequestBodyLocation": {
        "type": "string",
        "description": "Location setting in the request"
      },
      "RequestBodyNodeCount": {
        "type": "string",
        "description": "Number of nodes configured in"
      },
      "RequestBodyProject": {
        "type": "string",
        "description": "Project ID in the request body."
      },
      "RequestBodyRestoreInstanceSettingsInstanceUid": {
        "type": "string",
        "description": "UID of the instance in restore"
      },
      "RequestBodyRestoreInstanceSettingsName": {
        "type": "string",
        "description": "Instance name in restore"
      },
      "RequestBodyRestoreInstanceSettingsProject": {
        "type": "string",
        "description": "Project ID in restore settings."
      },
      "RequestBodyRestoreInstanceSettingsRegion": {
        "type": "string",
        "description": "Region in restore settings."
      },
      "RequestBodyRotateServerCaContext": {
        "type": "dynamic",
        "description": "Server CA rotation"
      },
      "RequestBodySettingsActivationPolicy": {
        "type": "string",
        "description": "Activation policy for the"
      },
      "RequestBodySettingsActiveDirectoryConfig": {
        "type": "string",
        "description": "Active Directory configuration"
      },
      "RequestBodySettingsAvailabilityType": {
        "type": "string",
        "description": "Availability type setting."
      },
      "RequestBodySettingsBackupEnabled": {
        "type": "bool",
        "description": "Indicates if backups are"
      },
      "RequestBodySettingsBackupLocation": {
        "type": "string",
        "description": "Location for backups."
      },
      "RequestBodySettingsBackupPointInTimeRecoveryEnabled": {
        "type": "string",
        "description": "Flag for point-in-time recovery."
      },
      "RequestBodySettingsBackupStartTime": {
        "type": "string",
        "description": "Scheduled start time for"
      },
      "RequestBodySettingsBinaryLogEnabled": {
        "type": "bool",
        "description": "Indicates if binary logging is"
      },
      "RequestBodySettingsConnectionPoolConfig": {
        "type": "string",
        "description": "Connection pool configuration."
      },
      "RequestBodySettingsdataCacheConfigDataCacheEnabled": {
        "type": "bool",
        "description": "Flag for enabling data cache."
      },
      "RequestBodySettingsDataDiskSizeGb": {
        "type": "string",
        "description": "Size of the data disk in GB."
      },
      "RequestBodySettingsDataDiskType": {
        "type": "string",
        "description": "Type of data disk used."
      },
      "RequestBodySettingsDeletionProtectionEnabled": {
        "type": "bool",
        "description": "Indicates if deletion protection"
      },
      "RequestBodySettingsEdition": {
        "type": "string",
        "description": "Edition of the Cloud SQL"
      },
      "RequestBodySettingsEnableGoogleMlIntegration": {
        "type": "bool",
        "description": "Flag to enable Google ML"
      },
      "RequestBodySettingsInsightsConfig": {
        "type": "dynamic",
        "description": "Insights configuration settings."
      },
      "RequestBodySettingsIPConfiguration": {
        "type": "dynamic",
        "description": "IP configuration settings."
      },
      "RequestBodySettingsLocationPreference": {
        "type": "string",
        "description": "Location preference for the"
      },
      "RequestBodySettingsMaintenanceWindow": {
        "type": "dynamic",
        "description": "Maintenance window"
      },
      "RequestBodySettingsRetainBackupsOnDelete": {
        "type": "bool",
        "description": "Flag to retain backups after"
      },
      "RequestBodySettingsRetentinedBackup": {
        "type": "string",
        "description": "Retention policy for backups."
      },
      "RequestBodySettingsRetentionUnit": {
        "type": "string",
        "description": "Unit of retention for backups."
      },
      "RequestBodySettingsSqlServerAuditConfigRetentionInterval": {
        "type": "datetime",
        "description": "Audit retention interval for SQL"
      },
      "RequestBodySettingsSqlServerAuditConfigUploadInterval": {
        "type": "datetime",
        "description": "Audit upload interval for SQL"
      },
      "RequestBodySettingsStorageAutoResize": {
        "type": "bool",
        "description": "Indicates if storage auto-resize"
      },
      "RequestBodySettingsTier": {
        "type": "string",
        "description": "Service tier of the instance."
      },
      "RequestBodySettingsTmeZone": {
        "type": "string",
        "description": "Time zone settings for the"
      },
      "RequestBodySettingsTransactionLogRetentionDays": {
        "type": "string",
        "description": "Retention period for transaction"
      },
      "RequestBodySettingsUserbackuplable": {
        "type": "string",
        "description": "User backup label setting."
      },
      "RequestBodySettingsVersion": {
        "type": "bool",
        "description": "Version information flag."
      },
      "RequestDatabase": {
        "type": "string",
        "description": "Database name specified in the"
      },
      "RequestEnableFinalBackup": {
        "type": "bool",
        "description": "Indicates if final backup was"
      },
      "RequestEndTime": {
        "type": "datetime",
        "description": "Timestamp marking when the"
      },
      "RequestFilter": {
        "type": "string",
        "description": "Filter used in the request to"
      },
      "RequestFinalBackupTtlDays": {
        "type": "string",
        "description": "Time to live (in days) for the"
      },
      "RequestId": {
        "type": "string",
        "description": "Unique ID of the request."
      },
      "RequestInstance": {
        "type": "string",
        "description": "Instance identifier from the"
      },
      "RequestMaxResults": {
        "type": "string",
        "description": "Maximum number of results"
      },
      "RequestMetadataRequestAttributesDestinationAttributes": {
        "type": "string",
        "description": "Destination attributes for the"
      },
      "RequestMetadataRequestAttributesRequestReason": {
        "type": "string",
        "description": "Reason for the request."
      },
      "RequestMetadataRequestAttributesRequestTime": {
        "type": "datetime",
        "description": "Timestamp when the request"
      },
      "RequestOperation": {
        "type": "string",
        "description": "The operation type included in"
      },
      "RequestPageSize": {
        "type": "string",
        "description": "Page size specified in the"
      },
      "RequestParent": {
        "type": "string",
        "description": "The parent resource under"
      },
      "RequestProject": {
        "type": "string",
        "description": "Project associated with the"
      },
      "RequestResourceId": {
        "type": "string",
        "description": "ID of the resource being"
      },
      "RequestSha1Fingerprint": {
        "type": "string",
        "description": "SHA-1 fingerprint associated"
      },
      "RequestStartTime": {
        "type": "datetime",
        "description": "Start time specified in the"
      },
      "ResourceLabelsDatabaseId": {
        "type": "string",
        "description": "Database identifier from"
      },
      "ResourceLabelsRegion": {
        "type": "string",
        "description": "Region from resource labels."
      },
      "ResponseBackupContextBackupId": {
        "type": "string",
        "description": "Backup ID from the response's"
      },
      "ResponseBackupContextKind": {
        "type": "string",
        "description": "Kind of backup context"
      },
      "ResponseBackupContextName": {
        "type": "string",
        "description": "Name in the backup context of"
      },
      "ResponseClientCert": {
        "type": "string",
        "description": "Client certificate in the"
      },
      "ResponseEphemeralCertKind": {
        "type": "string",
        "description": "Kind of ephemeral certificate in"
      },
      "ResponseInstanceUid": {
        "type": "string",
        "description": "Instance UID returned in the"
      },
      "ResponseKind": {
        "type": "string",
        "description": "Kind field of the response."
      },
      "ResponseOperation": {
        "type": "string",
        "description": "Indicates the type of operation"
      },
      "ResponsePromoteContextPrimary": {
        "type": "string",
        "description": "Primary instance in the promote"
      },
      "ResponsePromoteContextReplica": {
        "type": "string",
        "description": "Replica instance in the promote"
      },
      "ResponseServerCaCert": {
        "type": "string",
        "description": "PEM-encoded CA certificate"
      },
      "ResponseTargetId": {
        "type": "string",
        "description": "Target ID in the response."
      },
      "ResponseTargetProject": {
        "type": "string",
        "description": "Project associated with the"
      },
      "StatusCode": {
        "type": "string",
        "description": "Status code returned by the"
      }
    }
  },
  "GCPDNS": {
    "tableName": "GCPDNS",
    "description": "The Google Cloud Platform DNS data connector provides the capability to ingest Cloud DNS Query logs and Cloud DNS Audit logs into Microsoft Sentinel using the Google Cloud DNS API.",
    "columns": {
      "AuthAnswer": {
        "type": "bool",
        "description": "Indicates if the DNS response is authoritative."
      },
      "AuthenticationInfoPrincipalEmail": {
        "type": "string",
        "description": "Email address of the user or service account"
      },
      "AuthenticationInfoPrincipalSubject": {
        "type": "string",
        "description": "The subject identifier for the principal (user or"
      },
      "AuthorizationInfo": {
        "type": "string",
        "description": "Details about the authorization decision for the"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DestinationIP": {
        "type": "string",
        "description": "Target IP address of the request."
      },
      "GCPResourceName": {
        "type": "string",
        "description": "Name of the resource being accessed or"
      },
      "GCPResourceType": {
        "type": "string",
        "description": "Type of the resource (e.g., compute instance,"
      },
      "InsertId": {
        "type": "string",
        "description": "A unique identifier assigned to each log entry."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable."
      },
      "LogName": {
        "type": "string",
        "description": "The name of the log where this entry is stored."
      },
      "MethodName": {
        "type": "string",
        "description": "The API method or operation invoked in the"
      },
      "PayloadType": {
        "type": "string",
        "description": "The format or type of the payload in the log"
      },
      "Protocol": {
        "type": "string",
        "description": "Protocol used (e.g., TCP, UDP)."
      },
      "QueryName": {
        "type": "string",
        "description": "The domain name queried."
      },
      "QueryType": {
        "type": "string",
        "description": "DNS query type (RFC 1035 section 4.1.2)."
      },
      "Rdata": {
        "type": "string",
        "description": "DNS answer in presentation format."
      },
      "ReqManZoneCloudLogConfigEnableLogging": {
        "type": "bool",
        "description": "Indicates whether logging was enabled in the"
      },
      "ReqManZonePrivVisibConfigNetworks": {
        "type": "string",
        "description": "List of networks configured for private visibility"
      },
      "ReqmetaCallerSuppliedUserAgent": {
        "type": "string",
        "description": "User agent String provided by the caller."
      },
      "ReqmetaRequestAttributesTime": {
        "type": "datetime",
        "description": "Timestamp when the request was initiated."
      },
      "RequestAPIType": {
        "type": "string",
        "description": "The type of API request being logged."
      },
      "RequestChangeAdditions": {
        "type": "string",
        "description": "Details of resource additions in the request."
      },
      "RequestChangeDeletions": {
        "type": "string",
        "description": "Details of resource deletions in the request."
      },
      "RequestManagedZone": {
        "type": "string",
        "description": "Details of the managed DNS zone in the"
      },
      "RequestManagedZoneDescription": {
        "type": "string",
        "description": "Description of the managed DNS zone in the"
      },
      "RequestManagedZoneDnsName": {
        "type": "string",
        "description": "The DNS name of the managed zone in the"
      },
      "RequestManagedZoneName": {
        "type": "string",
        "description": "The name of the managed DNS zone in the"
      },
      "RequestManagedZoneVisibility": {
        "type": "string",
        "description": "The visibility (public or private) of the managed"
      },
      "RequestMetadataCallerIp": {
        "type": "string",
        "description": "IP address of the caller initiating the request."
      },
      "RequestName": {
        "type": "string",
        "description": "Name of the resource affected by the request."
      },
      "RequestProject": {
        "type": "string",
        "description": "Google Cloud project associated with the"
      },
      "RequestType": {
        "type": "string",
        "description": "Type of the request (e.g., Create, Delete,"
      },
      "ResManZoneCloudLogConfigEnableLogging": {
        "type": "bool",
        "description": "Indicates whether logging was enabled in the"
      },
      "ResourceLabelsLocation": {
        "type": "string",
        "description": "Location of the resource."
      },
      "ResourceLabelsPolicyName": {
        "type": "string",
        "description": "Represents the policy name associated with the"
      },
      "ResourceLabelsProjectId": {
        "type": "string",
        "description": "Google Cloud project ID associated with the"
      },
      "ResourceLabelsSourceType": {
        "type": "string",
        "description": "Specifies the source type of the resource being"
      },
      "ResourceLabelsTargetName": {
        "type": "string",
        "description": "The target resource name within Google Cloud"
      },
      "ResourceLabelsTargetType": {
        "type": "string",
        "description": "The type of DNS resource being acted upon"
      },
      "ResourceLabelsZoneName": {
        "type": "string",
        "description": "The name of the managed DNS zone related to"
      },
      "RespManZonePrivVisibConfigNetworks": {
        "type": "string",
        "description": "Lists networks associated with a private"
      },
      "ResponseChangeAdditions": {
        "type": "string",
        "description": "Represents additions made to DNS records"
      },
      "ResponseChangeDeletions": {
        "type": "string",
        "description": "Details of deletions in the response."
      },
      "ResponseChangeId": {
        "type": "string",
        "description": "Identifier for the change request in the"
      },
      "ResponseChangeStartTime": {
        "type": "datetime",
        "description": "Timestamp indicating when the change"
      },
      "ResponseChangeStatus": {
        "type": "string",
        "description": "Status of the change operation in the response."
      },
      "ResponseCode": {
        "type": "string",
        "description": "Response code for the operation."
      },
      "ResponseManagedZoneCreationTime": {
        "type": "datetime",
        "description": "Timestamp when the managed zone was"
      },
      "ResponseManagedZoneDescription": {
        "type": "string",
        "description": "Description of the managed zone returned in"
      },
      "ResponseManagedZoneDnsName": {
        "type": "string",
        "description": "DNS name of the managed zone returned in"
      },
      "ResponseManagedZoneFingerprint": {
        "type": "string",
        "description": "Fingerprint for detecting changes in the"
      },
      "ResponseManagedZoneId": {
        "type": "string",
        "description": "Unique identifier for the managed zone."
      },
      "ResponseManagedZoneName": {
        "type": "string",
        "description": "Name of the managed zone returned in the"
      },
      "ResponseManagedZoneNameServers": {
        "type": "string",
        "description": "List of name servers associated with the"
      },
      "ResponseManagedZoneRrsetCount": {
        "type": "string",
        "description": "The total number of resource record sets"
      },
      "ResponseManagedZoneVisibility": {
        "type": "string",
        "description": "Visibility setting (public/private) of the"
      },
      "ResponseOperationId": {
        "type": "string",
        "description": "A unique identifier for the DNS operation"
      },
      "ResponseOperationStartTime": {
        "type": "datetime",
        "description": "The timestamp when the DNS operation"
      },
      "ResponseOperationStatus": {
        "type": "string",
        "description": "The status of the DNS operation"
      },
      "ResponseOperationType": {
        "type": "string",
        "description": "The type of DNS operation executed (e.g.,"
      },
      "ResponseOperationUser": {
        "type": "string",
        "description": "The user or service account that performed the"
      },
      "ResponseOpZoneContextNewValue": {
        "type": "string",
        "description": "The new value after an operation modifies a"
      },
      "ResponseOpZoneContextOldValue": {
        "type": "string",
        "description": "The previous value before an operation"
      },
      "ResponseType": {
        "type": "string",
        "description": "Type of response returned from the API."
      },
      "ServerLatency": {
        "type": "string",
        "description": "Measures the latency of the request to Google"
      },
      "ServiceName": {
        "type": "string",
        "description": "Name of the Google Cloud service processing"
      },
      "Severity": {
        "type": "string",
        "description": "Log severity level (e.g., INFO, WARNING,"
      },
      "SourceIP": {
        "type": "string",
        "description": "IP address from which the query originated."
      },
      "SourceNetwork": {
        "type": "string",
        "description": "The originating network of the DNS request."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by."
      },
      "StatusCode": {
        "type": "string",
        "description": "HTTP status code returned for the request."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp when the log entry was created."
      },
      "Timestamp": {
        "type": "datetime",
        "description": "Timestamp when the log entry was recorded."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "VmInstanceId": {
        "type": "string",
        "description": "Compute Engine VM instance ID."
      },
      "VmInstanceIdString": {
        "type": "string",
        "description": "The VM instance ID (if applicable) associated"
      },
      "VmInstanceName": {
        "type": "string",
        "description": "Compute Engine VM instance name."
      },
      "VmProjectId": {
        "type": "string",
        "description": "Google Cloud project ID of the network from"
      },
      "VmZoneName": {
        "type": "string",
        "description": "Name of the VM zone from which the query"
      }
    }
  },
  "GCPFirewallLogs": {
    "tableName": "GCPFirewallLogs",
    "description": "The Google Cloud Platform (GCP) firewall logs, enable you to capture network inbound and outbound activity to monitor access and detect potential threats across Google Cloud Platform (GCP) resources.",
    "columns": {
      "Action": {
        "type": "string",
        "description": "The Action that of the firewall rule."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DestIp": {
        "type": "string",
        "description": "the IP address of the target device or service that incoming or"
      },
      "DestPort": {
        "type": "string",
        "description": "the Port of the target device or service that incoming or"
      },
      "Direction": {
        "type": "string",
        "description": "The direction of that the firewall rule applies."
      },
      "Disposition": {
        "type": "string",
        "description": "the final action taken on network traffic that matches a given"
      },
      "GCPResourceType": {
        "type": "string",
        "description": "The identifier of the type associated with this resource, such as"
      },
      "InsertId": {
        "type": "string",
        "description": "Optional. Providing a unique identifier for the log entry allows"
      },
      "InstanceProjectId": {
        "type": "string",
        "description": "the project ID associated with the instance that was involved in"
      },
      "InstanceRegion": {
        "type": "string",
        "description": "the region associated with the instance that was involved in the"
      },
      "InstanceVmName": {
        "type": "string",
        "description": "the virtual machine name associated with the instance that was"
      },
      "InstanceZone": {
        "type": "string",
        "description": "the zone associated with the instance that was involved in the"
      },
      "IpPortInfo": {
        "type": "dynamic",
        "description": "The information regarding the rule port and protocol."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable"
      },
      "LogName": {
        "type": "string",
        "description": "Information including a suffix identifying the log sub-type (e.g.,"
      },
      "Priority": {
        "type": "string",
        "description": "The priority of the rule."
      },
      "ProjectId": {
        "type": "string",
        "description": "The identifier of the Google Cloud Platform (GCP) project"
      },
      "Protocol": {
        "type": "string",
        "description": "the protocol of the target device or service that incoming or"
      },
      "Referance": {
        "type": "string",
        "description": "The rule that triggered the log."
      },
      "RemoteLocationCity": {
        "type": "string",
        "description": "The city name based on the resource location."
      },
      "RemoteLocationContinent": {
        "type": "string",
        "description": "The continent name based on the resource location."
      },
      "RemoteLocationCountry": {
        "type": "string",
        "description": "The country name based on the resource location."
      },
      "RemoteLocationRegion": {
        "type": "string",
        "description": "The region name based on the resource location."
      },
      "ResourceLocation": {
        "type": "string",
        "description": "The resource location information."
      },
      "ResourceSubnetworkName": {
        "type": "string",
        "description": "The resource subnetwork name."
      },
      "SourceRange": {
        "type": "dynamic",
        "description": "The range of the ip addresses that the rule applied to."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "SrcIp": {
        "type": "string",
        "description": "the IP address of the source device or service that incoming or"
      },
      "SrcPort": {
        "type": "string",
        "description": "the Port of the source device or service that incoming or"
      },
      "SubnetworkId": {
        "type": "string",
        "description": "The resource subnetwork id."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The time the log entry was received by logging."
      },
      "Timestamp": {
        "type": "datetime",
        "description": "The time the event described by the log entry occurred."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "VpcName": {
        "type": "string",
        "description": "The name of the Virtual Private Network(VPC) where the firewall"
      },
      "VpcProjectId": {
        "type": "string",
        "description": "The project id of the Virtual Private Network(VPC) where the"
      },
      "VpcSubnetworkName": {
        "type": "string",
        "description": "The Subnetnetwork name of the Virtual Private Network(VPC)"
      }
    }
  },
  "GCPIAM": {
    "tableName": "GCPIAM",
    "description": "The Google Cloud Platform IAM audit logs, ingested from Sentinel's connector, eAudit logs relating to Identity and Access Management (IAM) activities within Google Cloud.",
    "columns": {
      "AuthenticationInfoPrincipalSubject": {
        "type": "string",
        "description": "Subject associated with the authenticated"
      },
      "AuthInfoPrincipalEmail": {
        "type": "string",
        "description": "The email address associated with the"
      },
      "AuthInfoPrincipalSubject": {
        "type": "string",
        "description": "The subject or identifier associated with"
      },
      "AuthInfoServiceAccountDelegationInfo": {
        "type": "string",
        "description": "Delegation information for a service"
      },
      "AuthorizationInfo": {
        "type": "string",
        "description": "Information about permissions or roles"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "GCPResourceName": {
        "type": "string",
        "description": "The name of the resource involved in the"
      },
      "GCPResourceType": {
        "type": "string",
        "description": "The type of resource involved in the"
      },
      "InsertId": {
        "type": "string",
        "description": "A unique identifier for the log entry."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable."
      },
      "LogName": {
        "type": "string",
        "description": "The full log name including resource path."
      },
      "MetadataIdentityDelegationChain": {
        "type": "string",
        "description": "A chain of delegated identities for the"
      },
      "MetadataMappedPrincipal": {
        "type": "string",
        "description": "Mapped principal in the metadata."
      },
      "MetadataType": {
        "type": "string",
        "description": "The type of metadata being provided."
      },
      "MethodName": {
        "type": "string",
        "description": "Name of the API method or function that was"
      },
      "NumResponseItems": {
        "type": "string",
        "description": "Number of items returned in the response, if"
      },
      "OperationFirst": {
        "type": "bool",
        "description": "Indicates if this is the first log entry in a"
      },
      "OperationId": {
        "type": "string",
        "description": "Unique identifier for the operation, useful for"
      },
      "OperationLast": {
        "type": "bool",
        "description": "Indicates if this is the last log entry in a sequence"
      },
      "OperationProducer": {
        "type": "string",
        "description": "Component or service that generated the"
      },
      "PayloadType": {
        "type": "string",
        "description": "Type or format of the payload associated with"
      },
      "ReceiveTimestamp": {
        "type": "datetime",
        "description": "Time the log entry was received by Cloud"
      },
      "RequestAccountId": {
        "type": "string",
        "description": "Account ID associated with the request."
      },
      "RequestFullResourceName": {
        "type": "string",
        "description": "Full name of the resource requested."
      },
      "RequestGrantType": {
        "type": "string",
        "description": "The grant type associated with the request."
      },
      "RequestIncludeInactiveApiRoles": {
        "type": "bool",
        "description": "Boolean indicating whether inactive API"
      },
      "RequestKeyTypes": {
        "type": "string",
        "description": "Types of keys involved in the request."
      },
      "RequestMetadataCallerIp": {
        "type": "string",
        "description": "The IP address from which the request"
      },
      "RequestMetadataCallerSuppliedUserAgent": {
        "type": "string",
        "description": "The user-agent String provided by the"
      },
      "RequestMetadataRequestAttributesTime": {
        "type": "datetime",
        "description": "Timestamp of when the request attributes were"
      },
      "RequestName": {
        "type": "string",
        "description": "Name or identifier of the resource being"
      },
      "RequestOptionsRequestedPolicyVersion": {
        "type": "string",
        "description": "The version of the policy requested."
      },
      "RequestPageSize": {
        "type": "string",
        "description": "The size of the page requested in a"
      },
      "RequestPageToken": {
        "type": "string",
        "description": "Token for pagination in the request."
      },
      "RequestParent": {
        "type": "string",
        "description": "Parent resource of the request, indicating"
      },
      "RequestPolicyAuditConfigs": {
        "type": "string",
        "description": "Configuration for auditing in the request"
      },
      "RequestPolicyBindings": {
        "type": "string",
        "description": "Binding configurations associated with the"
      },
      "RequestPolicyEtag": {
        "type": "string",
        "description": "The ETag value for the request policy."
      },
      "RequestPrivateKeyType": {
        "type": "string",
        "description": "Type of private key being used in the"
      },
      "RequestRemoveDeletedServiceAccounts": {
        "type": "bool",
        "description": "Boolean indicating if deleted service"
      },
      "RequestRequestedTokenType": {
        "type": "string",
        "description": "The type of token requested."
      },
      "RequestResource": {
        "type": "string",
        "description": "The resource being requested."
      },
      "RequestRoleDescription": {
        "type": "string",
        "description": "Description of the role being requested."
      },
      "RequestRoleId": {
        "type": "string",
        "description": "The unique identifier for the role."
      },
      "RequestRoleIncludedPermissions": {
        "type": "string",
        "description": "Permissions included in the role in the"
      },
      "RequestRoleTitle": {
        "type": "string",
        "description": "Title of the role being requested."
      },
      "RequestServiceAccountDescription": {
        "type": "string",
        "description": "Description of the service account being"
      },
      "RequestServiceAccountDisplayName": {
        "type": "string",
        "description": "Display name of the service account being"
      },
      "RequestShowDeleted": {
        "type": "bool",
        "description": "Boolean indicating if deleted items should"
      },
      "RequestSkipVisibilityCheck": {
        "type": "bool",
        "description": "Boolean indicating whether the visibility"
      },
      "RequestSubjectTokenType": {
        "type": "string",
        "description": "The type of subject token being used in"
      },
      "RequestType": {
        "type": "string",
        "description": "Type of request."
      },
      "RequestUpdateMaskPaths": {
        "type": "string",
        "description": "The paths to be updated in the request."
      },
      "RequestView": {
        "type": "string",
        "description": "The view or perspective for the request."
      },
      "ResourceLabelsEmailId": {
        "type": "string",
        "description": "Email identifier associated with the"
      },
      "ResourceLabelsLocation": {
        "type": "string",
        "description": "Geographic or regional location of the resource."
      },
      "ResourceLabelsMethod": {
        "type": "string",
        "description": "The method or operation performed on the"
      },
      "ResourceLabelsProjectId": {
        "type": "string",
        "description": "Project ID associated with the resource, typically"
      },
      "ResourceLabelsRoleName": {
        "type": "string",
        "description": "The name of the role associated with the"
      },
      "ResourceLabelsService": {
        "type": "string",
        "description": "Service label indicating which cloud service."
      },
      "ResourceLabelsTopicId": {
        "type": "string",
        "description": "The topic ID associated with the resource."
      },
      "ResourceLabelsUniqueId": {
        "type": "string",
        "description": "A unique identifier for the resource."
      },
      "ResourceLabelsVersion": {
        "type": "string",
        "description": "The version of the resource being logged."
      },
      "ResponseAuditConfigs": {
        "type": "string",
        "description": "Audit configurations in the response."
      },
      "ResponseBindings": {
        "type": "string",
        "description": "The bindings used in the response."
      },
      "ResponseDescription": {
        "type": "string",
        "description": "Description of the response."
      },
      "ResponseDisplayName": {
        "type": "string",
        "description": "Display name associated with the"
      },
      "ResponseEmail": {
        "type": "string",
        "description": "Email associated with the response."
      },
      "ResponseEtag": {
        "type": "string",
        "description": "The ETag value for the response."
      },
      "ResponseGroupName": {
        "type": "string",
        "description": "The group name for the response."
      },
      "ResponseGroupTitle": {
        "type": "string",
        "description": "The title of the group in the response."
      },
      "ResponseIncludedPermissions": {
        "type": "string",
        "description": "Permissions included in the response."
      },
      "ResponseKeyAlgorithm": {
        "type": "string",
        "description": "The key algorithm used in the response."
      },
      "ResponseKeyOrigin": {
        "type": "string",
        "description": "The origin of the key in the response."
      },
      "ResponseKeyType": {
        "type": "string",
        "description": "The type of key used in the response."
      },
      "ResponseName": {
        "type": "string",
        "description": "Name or ID of the resource returned in the"
      },
      "ResponseOauth2ClientId": {
        "type": "string",
        "description": "OAuth2 client ID associated with the"
      },
      "ResponsePrivateKeyType": {
        "type": "string",
        "description": "The type of private key used in the"
      },
      "ResponseProjectId": {
        "type": "string",
        "description": "Project ID associated with the response."
      },
      "ResponseTitle": {
        "type": "string",
        "description": "Title associated with the response."
      },
      "ResponseType": {
        "type": "string",
        "description": "Type or format of the response returned from"
      },
      "ResponseUniqueId": {
        "type": "string",
        "description": "Unique identifier for the response."
      },
      "ResponseValidAfterTimeSeconds": {
        "type": "string",
        "description": "Time in seconds after which the response"
      },
      "ResponseValidBeforeTimeSeconds": {
        "type": "string",
        "description": "Time in seconds before the response"
      },
      "ServiceDataPermissionDeltaAddedPermissions": {
        "type": "string",
        "description": "Permissions that were added in the service"
      },
      "ServiceDataPermissionDeltaRemovedPermissions": {
        "type": "string",
        "description": "Permissions that were removed in the"
      },
      "ServiceDataPolicyDeltaBindingDeltas": {
        "type": "string",
        "description": "Changes to policy bindings in the"
      },
      "ServiceDataType": {
        "type": "string",
        "description": "The type of service data being logged."
      },
      "ServiceName": {
        "type": "string",
        "description": "Name of the cloud service associated with the"
      },
      "Severity": {
        "type": "string",
        "description": "Indicates the severity level of the log entry or"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For"
      },
      "StatusCode": {
        "type": "string",
        "description": "The HTTP or operation status code for the"
      },
      "StatusMessage": {
        "type": "string",
        "description": "The message associated with the status"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp when the log entry was"
      },
      "Timestamp": {
        "type": "datetime",
        "description": "The original timestamp of the event as recorded"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "AlertSeverity": {
        "type": "string",
        "description": "Severity of the threat. One of INFORMATIONAL,"
      },
      "AlertTime": {
        "type": "datetime",
        "description": "Time when the threat was discovered."
      },
      "Application": {
        "type": "string",
        "description": "Suspected traffic's application type-for example,"
      },
      "AuthenticationInfoPrincipalEmail": {
        "type": "string",
        "description": "Email address of the authenticated user or"
      },
      "Category": {
        "type": "string",
        "description": "Sub-type of the threat."
      },
      "CVEs": {
        "type": "string",
        "description": "A list of CVEs associated with the threat."
      },
      "DestinationIPAddress": {
        "type": "string",
        "description": "Suspected traffic's destination IP address."
      },
      "DestinationPort": {
        "type": "string",
        "description": "Suspected traffic's destination port."
      },
      "Details": {
        "type": "string",
        "description": "Additional information about the type of threat."
      },
      "Direction": {
        "type": "string",
        "description": "Suspected traffic's direction (client-to-server or"
      },
      "ElapsedTime": {
        "type": "string",
        "description": "The elapsed time of the session."
      },
      "IPProtocol": {
        "type": "string",
        "description": "Suspected traffic's IP protocol."
      },
      "JsonPayloadName": {
        "type": "string",
        "description": "Threat name."
      },
      "JsonPayloadType": {
        "type": "string",
        "description": "Type of the threat."
      },
      "Network": {
        "type": "string",
        "description": "The network associated with the IDS endpoint."
      },
      "RepeatCount": {
        "type": "string",
        "description": "The number of sessions with the same source IP,"
      },
      "RequestEndpointId": {
        "type": "string",
        "description": "Unique identifier of the endpoint that handled"
      },
      "RequestEndpointName": {
        "type": "string",
        "description": "Name of the endpoint to which the request was"
      },
      "RequestEndpointNetwork": {
        "type": "string",
        "description": "Network path or name through which the"
      },
      "RequestEndpointSeverity": {
        "type": "string",
        "description": "Severity associated with the endpoint in the"
      },
      "RequestEndpointThreatExceptions": {
        "type": "string",
        "description": "Threat exceptions applied to the endpoint for"
      },
      "RequestEndpointTrafficLogs": {
        "type": "string",
        "description": "Details or references to traffic logs related to the"
      },
      "RequestMetadataCallerIP": {
        "type": "string",
        "description": "IP address of the caller who initiated the request."
      },
      "RequestMetadataDestinationAttributes": {
        "type": "string",
        "description": "Metadata attributes about the destination"
      },
      "RequestMetadataRequestAttributesAuth": {
        "type": "string",
        "description": "Authentication-related request attributes, such"
      },
      "RequestMetadataRequestAttributesReason": {
        "type": "string",
        "description": "Reason for the request, such as a policy action or"
      },
      "ResourceLabelsId": {
        "type": "string",
        "description": "Unique identifier for the resource involved in the"
      },
      "ResourceLabelsResourceContainer": {
        "type": "string",
        "description": "Name of the container or logical grouping the"
      },
      "ResourceLocationCurrentLocations": {
        "type": "string",
        "description": "Current physical or logical location(s) of the"
      },
      "ResponseNetwork": {
        "type": "string",
        "description": "Network path or identifier associated with the"
      },
      "ResponseSeverity": {
        "type": "string",
        "description": "Severity level of the response, especially in the"
      },
      "ResponseState": {
        "type": "string",
        "description": "State or result of the response action taken for"
      },
      "ResponseThreatExceptions": {
        "type": "string",
        "description": "List of any threat exceptions applied during the"
      },
      "ResponseTrafficLogs": {
        "type": "bool",
        "description": "Indicates whether traffic logs were captured for"
      },
      "SessionId": {
        "type": "string",
        "description": "An internal numerical identifier applied to each"
      },
      "SourceIPAddress": {
        "type": "string",
        "description": "Suspected traffic's source IP address."
      },
      "SourcePort": {
        "type": "string",
        "description": "The source port of the traffic."
      },
      "StartTime": {
        "type": "datetime",
        "description": "The time of the session start."
      },
      "Status": {
        "type": "string",
        "description": "Status of the operation or request, such as"
      },
      "ThreatId": {
        "type": "string",
        "description": "Unique threat identifier."
      },
      "TotalBytes": {
        "type": "string",
        "description": "The total number of bytes transferred in the"
      },
      "TotalPackets": {
        "type": "string",
        "description": "The total number of packets transferred in the"
      },
      "URIOrFilename": {
        "type": "string",
        "description": "URI or filename of the relevant threat, if"
      }
    }
  },
  "GCPLoadBalancer": {
    "tableName": "GCPLoadBalancer",
    "description": "The Google Cloud Platform (GCP) GCPLoadBalancer logs, enable you to capture network inbound activity from the load balancer and Web Application Firewall (WAF) to monitor access and detect potential threats across Google Cloud Platform (GCP) resources.",
    "columns": {
      "BackendServiceName": {
        "type": "string",
        "description": "The backend service name in Google Cloud Platform ."
      },
      "BackendTargetProjectNumber": {
        "type": "string",
        "description": "The Backend Service Project Number."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CacheDecision": {
        "type": "dynamic",
        "description": "Indicates whether a request was served from the cache or the"
      },
      "EnforcedEdgeSecurityPolicy": {
        "type": "dynamic",
        "description": "the edge security policy rule that was enforced."
      },
      "EnforcedSecurityPolicy": {
        "type": "dynamic",
        "description": "Indicates whether a security policy (such as a WAF or access"
      },
      "ForwardingRuleName": {
        "type": "string",
        "description": "The forwarding rule resource of the load balancer in Google"
      },
      "InsertId": {
        "type": "string",
        "description": "A unique ID for the log entry."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "Latency": {
        "type": "string",
        "description": "The latency of the request."
      },
      "LogName": {
        "type": "string",
        "description": "The full resource name of the log (e.g.,"
      },
      "PayloadRemoteIp": {
        "type": "string",
        "description": "The remote ip address of the payload."
      },
      "PreviewEdgeSecurityPolicy": {
        "type": "dynamic",
        "description": "populated if a request matches an edge security policy rule"
      },
      "PreviewSecurityPolicy": {
        "type": "dynamic",
        "description": "Request matches a rule configured for preview (present only"
      },
      "ProjectId": {
        "type": "string",
        "description": "GCP Project ID where the event occurred."
      },
      "RemoteIp": {
        "type": "string",
        "description": "The remote ip of the request."
      },
      "RequestMethod": {
        "type": "string",
        "description": "The http method of the request."
      },
      "RequestSize": {
        "type": "string",
        "description": "The size of the request."
      },
      "RequestStatus": {
        "type": "string",
        "description": "The status code of the request."
      },
      "RequestUrl": {
        "type": "string",
        "description": "The url of the request."
      },
      "SecurityPolicyRequestData": {
        "type": "dynamic",
        "description": "The security policy data of the request."
      },
      "Severity": {
        "type": "string",
        "description": "Log level indicating the severity of the event (e.g., INFO,"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For"
      },
      "StatusDetails": {
        "type": "string",
        "description": "The status details of the request."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The time the log entry was received by logging."
      },
      "Timestamp": {
        "type": "datetime",
        "description": "The time the event described by the log entry occurred."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UrlMapName": {
        "type": "string",
        "description": "The url map resource name in Google Cloud Platform."
      },
      "UserAgent": {
        "type": "string",
        "description": "User agent string of the caller."
      },
      "Zone": {
        "type": "string",
        "description": "The Zone name of the Load Balancer."
      },
      "GCPResource": {
        "type": "dynamic",
        "description": "The monitored resource associated with the metric (e.g., VM instance, GKE"
      },
      "MetricKind": {
        "type": "string",
        "description": "The type of metric: GAUGE (instant value), DELTA (change over time), or"
      },
      "MetricLabels": {
        "type": "dynamic",
        "description": "Key-value pairs that identify the characteristics of the metric (e.g., instance"
      },
      "MetricType": {
        "type": "string",
        "description": "The full path of the metric type being monitored (e.g.,"
      },
      "Points": {
        "type": "dynamic",
        "description": "A list of time series data points that contain values and timestamps for the"
      },
      "ValueType": {
        "type": "string",
        "description": "The type of value recorded: INT64, DOUBLE, BOOL, STRING, or"
      },
      "AllocationStatus": {
        "type": "string",
        "description": "Status of the NAT IP address allocation."
      },
      "ASN": {
        "type": "string",
        "description": "Autonomous System Number (ASN) associated with the destination IP."
      },
      "City": {
        "type": "string",
        "description": "City of the destination IP address (geo-located)."
      },
      "Continent": {
        "type": "string",
        "description": "Continent where the destination IP is located."
      },
      "Country": {
        "type": "string",
        "description": "Country of the destination IP address (geo-located)."
      },
      "DestinationRegion": {
        "type": "string",
        "description": "Continent or larger geographical region of the destination."
      },
      "DestIp": {
        "type": "string",
        "description": "Destination external IP address the traffic was sent to."
      },
      "DestPort": {
        "type": "string",
        "description": "Destination port on the remote host."
      },
      "EndpointRegion": {
        "type": "string",
        "description": "Region of the destination endpoint."
      },
      "EndpointZone": {
        "type": "string",
        "description": "Zone of the destination endpoint if applicable."
      },
      "GatewayName": {
        "type": "string",
        "description": "Name of the Cloud NAT gateway instance."
      },
      "GCPResourceType": {
        "type": "string",
        "description": "The type of resource involved in the operation (e.g.,"
      },
      "NatIp": {
        "type": "string",
        "description": "Public NAT IP address assigned for this flow."
      },
      "NatPort": {
        "type": "string",
        "description": "Public NAT port assigned for this flow."
      },
      "Protocol": {
        "type": "string",
        "description": "Network protocol used in the connection."
      },
      "ReceiveTimestamp": {
        "type": "datetime",
        "description": "The time the log entry was received by Cloud Logging."
      },
      "Region": {
        "type": "string",
        "description": "Region of the GCP resource involved in the NAT traffic."
      },
      "RouterId": {
        "type": "string",
        "description": "Identifier of the Cloud Router."
      },
      "SrcIp": {
        "type": "string",
        "description": "Source internal IP address from which the traffic originated."
      },
      "SrcPort": {
        "type": "string",
        "description": "Source port on the internal VM or resource."
      },
      "VmName": {
        "type": "string",
        "description": "Name of the virtual machine that initiated the NAT traffic."
      },
      "AuthorizationInfo": {
        "type": "string",
        "description": "Details on the authorization checks performed, including"
      },
      "CallerIp": {
        "type": "string",
        "description": "IP address of the caller."
      },
      "EncryptedInterconnectRouter": {
        "type": "bool",
        "description": "Whether the router uses encrypted interconnect."
      },
      "GCPResourceName": {
        "type": "string",
        "description": "The name of the resource that the operation is acting on."
      },
      "MethodName": {
        "type": "string",
        "description": "The API method that was called (e.g.,"
      },
      "OperationFirst": {
        "type": "bool",
        "description": "Indicates whether this is the first log entry for a long-"
      },
      "OperationId": {
        "type": "string",
        "description": "Identifier of the operation."
      },
      "OperationLast": {
        "type": "bool",
        "description": "Indicates whether this is the last log entry for a long-"
      },
      "OperationProducer": {
        "type": "string",
        "description": "The name of the producer of the operation (e.g., the GCP"
      },
      "PayloadRequestNats": {
        "type": "string",
        "description": "NATs request payload."
      },
      "PayloadType": {
        "type": "string",
        "description": "The type of the log payload (e.g., protoPayload,"
      },
      "PrincipalEmail": {
        "type": "string",
        "description": "Email of the principal initiating the request."
      },
      "PrincipalSubject": {
        "type": "string",
        "description": "Subject or identity of the principal."
      },
      "RequestAttributeAuth": {
        "type": "string",
        "description": "Authorization details of the request."
      },
      "RequestAttributeDestination": {
        "type": "string",
        "description": "Destination details of the request."
      },
      "RequestAttributeTime": {
        "type": "datetime",
        "description": "Timestamp of the request attribute."
      },
      "RequestId": {
        "type": "string",
        "description": "Unique ID of the request."
      },
      "RequestName": {
        "type": "string",
        "description": "The name or ID of the resource targeted by the request."
      },
      "RequestNetwork": {
        "type": "string",
        "description": "Network where the request was made."
      },
      "RequestRegion": {
        "type": "string",
        "description": "Region where the request originated."
      },
      "RequestSelfLink": {
        "type": "string",
        "description": "SelfLink URL of the request resource."
      },
      "RequestType": {
        "type": "string",
        "description": "The type of request being made (e.g., Create, Update,"
      },
      "ResourceLocation": {
        "type": "string",
        "description": "Geographic location of the resource."
      },
      "ResourceRegion": {
        "type": "string",
        "description": "Region of the GCP resource."
      },
      "ResponseErrorCode": {
        "type": "string",
        "description": "Error code if any error occurred."
      },
      "ResponseErrorMessage": {
        "type": "string",
        "description": "Error message returned, if any."
      },
      "ResponseErrors": {
        "type": "string",
        "description": "Details of any errors returned."
      },
      "ResponseId": {
        "type": "string",
        "description": "Identifier of the response."
      },
      "ResponseInsertTime": {
        "type": "datetime",
        "description": "Insert time of the response."
      },
      "ResponseName": {
        "type": "string",
        "description": "The full resource name returned in the response."
      },
      "ResponseOperationType": {
        "type": "string",
        "description": "Type of operation performed."
      },
      "ResponseProgress": {
        "type": "string",
        "description": "Progress status of the response."
      },
      "ResponseRegion": {
        "type": "string",
        "description": "Region associated with the response."
      },
      "ResponseSelfLink": {
        "type": "string",
        "description": "SelfLink URL of the response."
      },
      "ResponseSelfLinkWithId": {
        "type": "string",
        "description": "SelfLink URL with ID in the response."
      },
      "ResponseStartTime": {
        "type": "datetime",
        "description": "Start time of the response."
      },
      "ResponseStatus": {
        "type": "string",
        "description": "Status of the response."
      },
      "ResponseTargetId": {
        "type": "string",
        "description": "Target ID in the response."
      },
      "ResponseTargetLink": {
        "type": "string",
        "description": "Target link in the response."
      },
      "ResponseType": {
        "type": "string",
        "description": "The type of the response payload."
      },
      "ResponseUser": {
        "type": "string",
        "description": "User returned in the response."
      },
      "RootTriggerId": {
        "type": "string",
        "description": "Root trigger ID of the operation."
      },
      "ServiceName": {
        "type": "string",
        "description": "The name of the GCP service handling the request (e.g.,"
      },
      "AuthenticationInfoPrincipalEmail": {
        "type": "string",
        "description": "The email address of the authenticated principal making"
      },
      "AuthenticationInfoPrincipalSubject": {
        "type": "string",
        "description": "The unique subject identifier for the principal (useful for"
      },
      "AuthenticationInfoServiceAccountKeyName": {
        "type": "string",
        "description": "The resource name of the service account key used to"
      },
      "InsertID": {
        "type": "string",
        "description": "A unique ID for the log entry used for deduplication."
      },
      "MetadataParentDeltaDestinationParentId": {
        "type": "string",
        "description": "The destination parent ID when a resource moves"
      },
      "MetadataParentDeltaDestinationParentType": {
        "type": "string",
        "description": "The type of destination parent (e.g., folder, organization)."
      },
      "MetadataParentDeltaSourceParentId": {
        "type": "string",
        "description": "The original parent ID of the resource before the move."
      },
      "MetadataParentDeltaSourceParentType": {
        "type": "string",
        "description": "The type of source parent (e.g., folder, organization)."
      },
      "MetadataType": {
        "type": "string",
        "description": "The type of metadata associated with the log entry."
      },
      "NumResponseItems": {
        "type": "string",
        "description": "The number of items returned in the response, if"
      },
      "OperationID": {
        "type": "string",
        "description": "An identifier for a long-running operation shared across"
      },
      "RequestConstraint": {
        "type": "string",
        "description": "The Org Policy constraint specified in the request."
      },
      "RequestCreateTime": {
        "type": "datetime",
        "description": "The timestamp when the resource was created as"
      },
      "RequestCustomConstraint": {
        "type": "string",
        "description": "Custom constraint configuration specified in the request."
      },
      "RequestDestinationParent": {
        "type": "string",
        "description": "The resource name of the destination parent, used in"
      },
      "RequestFolderDisplayName": {
        "type": "string",
        "description": "The display name of the folder provided in the request."
      },
      "RequestFolderParent": {
        "type": "string",
        "description": "The parent resource of the folder specified in the"
      },
      "RequestLifecycleState": {
        "type": "string",
        "description": "The lifecycle state of the resource in the request (e.g.,"
      },
      "RequestListValue": {
        "type": "string",
        "description": "A list of values specified in the request (e.g., tags,"
      },
      "RequestMetadataCallerIP": {
        "type": "string",
        "description": "The IP address of the caller who made the request."
      },
      "RequestMetadataCallerSuppliedUserAgent": {
        "type": "string",
        "description": "The user agent String provided by the caller's client"
      },
      "RequestMetadataDestinationAttributes": {
        "type": "string",
        "description": "Metadata about the request destination, such as port or"
      },
      "RequestMetadataRequestAttributesAuth": {
        "type": "string",
        "description": "Authentication attributes related to the request, such as"
      },
      "RequestMetadataRequestAttributesReason": {
        "type": "string",
        "description": "The reason or justification for making the request (if"
      },
      "RequestMetadataRequestAttributesTime": {
        "type": "datetime",
        "description": "The timestamp when the request was made."
      },
      "RequestOptionsRequestedPolicyVersion": {
        "type": "string",
        "description": "The version of the IAM policy format requested."
      },
      "RequestPageSize": {
        "type": "string",
        "description": "The number of results to return per page in a list request."
      },
      "RequestParent": {
        "type": "string",
        "description": "The parent resource (e.g., folder or org) under which the"
      },
      "RequestPolicyAuditConfigs": {
        "type": "string",
        "description": "The audit configuration settings defined in the policy"
      },
      "RequestPolicyBindings": {
        "type": "string",
        "description": "A list of role bindings defined in the IAM policy request."
      },
      "RequestPolicyEtag": {
        "type": "string",
        "description": "The ETag used for concurrency control in the policy"
      },
      "RequestPolicyName": {
        "type": "string",
        "description": "The resource name of the policy being modified in the"
      },
      "RequestPolicySpec": {
        "type": "string",
        "description": "Detailed specification of the Org Policy being applied."
      },
      "RequestProjectCreateTime": {
        "type": "datetime",
        "description": "The time the project was created as per the request."
      },
      "RequestProjectId": {
        "type": "string",
        "description": "The project ID associated with the request."
      },
      "RequestProjectLabels": {
        "type": "string",
        "description": "Key-value labels assigned to the project in the request."
      },
      "RequestProjectLifecycleState": {
        "type": "string",
        "description": "The lifecycle state of the project (e.g., ACTIVE,"
      },
      "RequestProjectName": {
        "type": "string",
        "description": "The display name of the project specified in the request."
      },
      "RequestProjectParent": {
        "type": "string",
        "description": "The parent resource (folder or organization) under which"
      },
      "RequestProjectProjectId": {
        "type": "string",
        "description": "The unique project ID provided in the request."
      },
      "RequestProjectProjectNumber": {
        "type": "string",
        "description": "The numerical project identifier."
      },
      "RequestQuery": {
        "type": "string",
        "description": "A query String used for filtering results (e.g., in search or"
      },
      "RequestResource": {
        "type": "string",
        "description": "The full representation of the resource included in the"
      },
      "RequestTagBindingParent": {
        "type": "string",
        "description": "The full name of the resource to which the tag is being"
      },
      "RequestTagBindingTagValue": {
        "type": "string",
        "description": "The tag value being bound to a resource in the request."
      },
      "RequestTagKeyName": {
        "type": "string",
        "description": "The full resource name of the tag key referenced in the"
      },
      "RequestTagValueName": {
        "type": "string",
        "description": "The full resource name of the tag value in the request."
      },
      "RequestUpdateMask": {
        "type": "string",
        "description": "A comma-separated list specifying the fields to be"
      },
      "ResourceLabelsFolderId": {
        "type": "string",
        "description": "The folder ID associated with the resource."
      },
      "ResourceLabelsMethod": {
        "type": "string",
        "description": "The method name label used for filtering in logs."
      },
      "ResourceLabelsOrganizationId": {
        "type": "string",
        "description": "The organization ID associated with the resource."
      },
      "ResourceLabelsProjectId": {
        "type": "string",
        "description": "The project ID associated with the resource."
      },
      "ResourceLabelsService": {
        "type": "string",
        "description": "The service name label used for filtering in logs."
      },
      "ResponseAuditConfigs": {
        "type": "string",
        "description": "The audit configurations returned in the response."
      },
      "ResponseBindings": {
        "type": "string",
        "description": "The IAM role bindings included in the response."
      },
      "ResponseCreateTime": {
        "type": "datetime",
        "description": "The timestamp when the resource was created, as"
      },
      "ResponseDescription": {
        "type": "string",
        "description": "A description of the resource or result returned in the"
      },
      "ResponseDisplayName": {
        "type": "string",
        "description": "The display name of the resource returned in the"
      },
      "ResponseEtag": {
        "type": "string",
        "description": "The ETag used for concurrency control in the response."
      },
      "ResponseLabels": {
        "type": "string",
        "description": "The key-value labels attached to the resource in the"
      },
      "ResponseLifecycleState": {
        "type": "string",
        "description": "The lifecycle state of the resource in the response (e.g.,"
      },
      "ResponseNamespacedName": {
        "type": "string",
        "description": "A namespaced identifier for the resource (used in"
      },
      "ResponseParent": {
        "type": "string",
        "description": "The parent resource name associated with the response."
      },
      "ResponsePolicySpec": {
        "type": "string",
        "description": "The policy specification returned in the response (Org"
      },
      "ResponseProjectId": {
        "type": "string",
        "description": "The project ID returned in the response."
      },
      "ResponseProjectNumber": {
        "type": "string",
        "description": "The project ID returned in the response."
      },
      "ResponseShortName": {
        "type": "string",
        "description": "The short, user-defined name of the resource returned in"
      },
      "ResponseState": {
        "type": "string",
        "description": "The current state of the resource (e.g., ACTIVE, DELETED)."
      },
      "ResponseTagKey": {
        "type": "string",
        "description": "The tag key associated with the resource returned in the"
      },
      "ResponseTagValue": {
        "type": "string",
        "description": "The tag value associated with the resource in the"
      },
      "ResponseTagValueNamespacedName": {
        "type": "string",
        "description": "A fully qualified name (including tag key) for the tag"
      },
      "ResponseUpdateTime": {
        "type": "datetime",
        "description": "The time when the resource was last updated, as per the"
      },
      "ServiceDataPolicyDeltaBindingDeltas": {
        "type": "string",
        "description": "Changes (additions or removals) to IAM bindings as part"
      },
      "ServiceDataType": {
        "type": "string",
        "description": "The type of service-specific data returned in the"
      },
      "Status": {
        "type": "string",
        "description": "The status of the request, including error codes and"
      }
    }
  },
  "GCPVPCFlow": {
    "tableName": "GCPVPCFlow",
    "description": "The Google Cloud Platform (GCP) VPC Flow Logs enable you to capture network traffic activity at the VPC level, allowing you to monitor access patterns, analyze network performance, and detect potential threats across GCP resources.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "BytesSent": {
        "type": "string",
        "description": "Amount of bytes sent from the source to the"
      },
      "DestGatewayInterconnectName": {
        "type": "string",
        "description": "If the type of the gateway is"
      },
      "DestGatewayInterconnectProjectNumber": {
        "type": "string",
        "description": "If the type of the gateway is"
      },
      "DestGatewayLocation": {
        "type": "string",
        "description": "Region of the destination gateway"
      },
      "DestGatewayName": {
        "type": "string",
        "description": "Name of the destination gateway"
      },
      "DestGatewayProjectId": {
        "type": "string",
        "description": "Google Cloud project ID of the destination"
      },
      "DestGatewayType": {
        "type": "string",
        "description": "Type of the destination gateway. Can be"
      },
      "DestGatewayVpc": {
        "type": "dynamic",
        "description": "VPC network details of the gateway"
      },
      "DestGkeClusterLocation": {
        "type": "string",
        "description": "Location of the destination cluster. This can be a"
      },
      "DestGkeClusterName": {
        "type": "string",
        "description": "Destination GKE cluster name."
      },
      "DestGkePodName": {
        "type": "string",
        "description": "Name of the destination Pod"
      },
      "DestGkePodNamespace": {
        "type": "string",
        "description": "Namespace of the destination Pod"
      },
      "DestGkePodWorkloadName": {
        "type": "string",
        "description": "Name of the top-level destination workload"
      },
      "DestGkePodWorkloadType": {
        "type": "string",
        "description": "Type of the top-level destination workload"
      },
      "DestGkeService": {
        "type": "dynamic",
        "description": "Destination GKE Service name."
      },
      "DestGoogleServiceType": {
        "type": "string",
        "description": "This field is set to GOOGLE_API if the destination is"
      },
      "DestInstanceGroupName": {
        "type": "string",
        "description": "Name of the instance group"
      },
      "DestInstanceGroupRegion": {
        "type": "string",
        "description": "If the instance group is regional, this field is"
      },
      "DestInstanceGroupZone": {
        "type": "string",
        "description": "If the instance group is zonal, this field is"
      },
      "DestInstanceProjectId": {
        "type": "string",
        "description": "ID of the Google Cloud project that contains the"
      },
      "DestInstanceRegion": {
        "type": "string",
        "description": "Region of the VM"
      },
      "DestInstanceVmName": {
        "type": "string",
        "description": "Instance name of the VM"
      },
      "DestInstanceZone": {
        "type": "string",
        "description": "Zone of the VM"
      },
      "DestIp": {
        "type": "string",
        "description": "Destination IP address"
      },
      "DestLocationAsn": {
        "type": "string",
        "description": "The ASN of the external destination network to"
      },
      "DestLocationCity": {
        "type": "string",
        "description": "City for external destination endpoints."
      },
      "DestLocationContinent": {
        "type": "string",
        "description": "Continent for external destination endpoints."
      },
      "DestLocationCountry": {
        "type": "string",
        "description": "Country for external destination endpoints."
      },
      "DestLocationRegion": {
        "type": "string",
        "description": "Region for external destination endpoints."
      },
      "DestPort": {
        "type": "string",
        "description": "Destination port"
      },
      "DestVpcName": {
        "type": "string",
        "description": "Name of the network"
      },
      "DestVpcProjectId": {
        "type": "string",
        "description": "ID of the Google Cloud project containing the VPC"
      },
      "DestVpcSubnetworkName": {
        "type": "string",
        "description": "Name of the subnet"
      },
      "DestVpcSubnetworkRegion": {
        "type": "string",
        "description": "Region of the subnet"
      },
      "EndTime": {
        "type": "datetime",
        "description": "Timestamp of the last observed packet during the"
      },
      "GCPResourceType": {
        "type": "string",
        "description": "Type of the resource (e.g., compute instance, DNS"
      },
      "InsertId": {
        "type": "string",
        "description": "A unique identifier for the log entry, used to deduplicate log"
      },
      "InternetRoutingDetailsEgressAsn": {
        "type": "string",
        "description": "List of relevant AS paths. If there are multiple AS"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "LbBackendGroupLocation": {
        "type": "string",
        "description": "Location of the backend group"
      },
      "LbBackendGroupName": {
        "type": "string",
        "description": "Name of the backend group"
      },
      "LbBackendGroupType": {
        "type": "string",
        "description": "Type of the backend group"
      },
      "LbBackendServiceName": {
        "type": "string",
        "description": "Name of the backend service."
      },
      "LbForwardingRuleName": {
        "type": "string",
        "description": "Name of the forwarding rule"
      },
      "LbForwardingRuleProjectId": {
        "type": "string",
        "description": "Google Cloud project ID of the forwarding rule"
      },
      "LbReporter": {
        "type": "string",
        "description": "Cloud Load Balancing reporter. Can be either"
      },
      "LbScheme": {
        "type": "string",
        "description": "Load balancer scheme"
      },
      "LbType": {
        "type": "string",
        "description": "Load balancer type."
      },
      "LbUrlMapName": {
        "type": "string",
        "description": "Name of the URL map. Populated if the type of the"
      },
      "LbVpc": {
        "type": "dynamic",
        "description": "VPC network details of the load balancer"
      },
      "Location": {
        "type": "string",
        "description": "Geographical region or zone of the GKE cluster or resource."
      },
      "LogName": {
        "type": "string",
        "description": "The full resource name of the log to which this log entry belongs,"
      },
      "NetworkServiceDscp": {
        "type": "string",
        "description": "If the Differentiated Services field is present in"
      },
      "PacketsSent": {
        "type": "string",
        "description": "Number of packets sent from the source to the"
      },
      "ProjectId": {
        "type": "string",
        "description": "ProjectId of the resource."
      },
      "Protocol": {
        "type": "string",
        "description": "The protocol used for the request, such as HTTP."
      },
      "PscAttachmentProjectId": {
        "type": "string",
        "description": "Google Cloud project ID of the service attachment"
      },
      "PscAttachmentRegion": {
        "type": "string",
        "description": "Region of the service attachment"
      },
      "PscAttachmentVpc": {
        "type": "dynamic",
        "description": "VPC network details of the service attachment"
      },
      "PscEndpointConnectionId": {
        "type": "string",
        "description": "Private Service Connect connection ID"
      },
      "PscEndpointProjectId": {
        "type": "string",
        "description": "Google Cloud project ID of the Private Service"
      },
      "PscEndpointRegion": {
        "type": "string",
        "description": "Region of the endpoint. Not populated if the"
      },
      "PscEndpointTargetServiceType": {
        "type": "string",
        "description": "Target service type. Can be either"
      },
      "PscEndpointVpc": {
        "type": "dynamic",
        "description": "VPC network details of the Private Service Connect"
      },
      "ReceiveTimestamp": {
        "type": "datetime",
        "description": "The timestamp when the log entry was received by the logging"
      },
      "Reporter": {
        "type": "string",
        "description": "The side which reported the flow."
      },
      "Rttmsec": {
        "type": "string",
        "description": "The measured latency is the time elapsed between"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "SrcGatewayInterconnectName": {
        "type": "string",
        "description": "If the type of the gateway is"
      },
      "SrcGatewayInterconnectProjectNumber": {
        "type": "string",
        "description": "If the type of the gateway is"
      },
      "SrcGatewayLocation": {
        "type": "string",
        "description": "Region of the gateway"
      },
      "SrcGatewayName": {
        "type": "string",
        "description": "Name of the gateway"
      },
      "SrcGatewayProjectId": {
        "type": "string",
        "description": "Google Cloud project ID of the gateway"
      },
      "SrcGatewayType": {
        "type": "string",
        "description": "Type of the gateway. Can be"
      },
      "SrcGatewayVpc": {
        "type": "dynamic",
        "description": "VPC network details of the gateway"
      },
      "SrcGkeClusterLocation": {
        "type": "string",
        "description": "Location of the source cluster. This can be a zone"
      },
      "SrcGkeClusterName": {
        "type": "string",
        "description": "Source GKE cluster name."
      },
      "SrcGkePodName": {
        "type": "string",
        "description": "Name of the source Pod"
      },
      "SrcGkePodNamespace": {
        "type": "string",
        "description": "Namespace of the source Pod"
      },
      "SrcGkePodWorkloadName": {
        "type": "string",
        "description": "Name of the top-level source workload controller"
      },
      "SrcGkePodWorkloadType": {
        "type": "string",
        "description": "Type of the top-level source workload controller."
      },
      "SrcGkeService": {
        "type": "dynamic",
        "description": "Source GKE Service name."
      },
      "SrcGoogleServiceType": {
        "type": "string",
        "description": "This field is set to GOOGLE_API if the source is a"
      },
      "SrcInstanceGroupName": {
        "type": "string",
        "description": "Name of the source instance group"
      },
      "SrcInstanceGroupRegion": {
        "type": "string",
        "description": "If the source instance group is regional, this field is"
      },
      "SrcInstanceGroupZone": {
        "type": "string",
        "description": "If the source instance group is zonal, this field is"
      },
      "SrcInstanceProjectId": {
        "type": "string",
        "description": "ID of the Google Cloud project that contains the"
      },
      "SrcInstanceRegion": {
        "type": "string",
        "description": "Region of the source VM"
      },
      "SrcInstanceVmName": {
        "type": "string",
        "description": "Instance name of the source VM"
      },
      "SrcInstanceZone": {
        "type": "string",
        "description": "Zone of the source VM"
      },
      "SrcIp": {
        "type": "string",
        "description": "Source IP address"
      },
      "SrcLocationAsn": {
        "type": "string",
        "description": "The ASN of the external source network to which"
      },
      "SrcLocationCity": {
        "type": "string",
        "description": "City for external source endpoints."
      },
      "SrcLocationContinent": {
        "type": "string",
        "description": "Continent for external source endpoints."
      },
      "SrcLocationCountry": {
        "type": "string",
        "description": "Country for external source endpoints."
      },
      "SrcLocationRegion": {
        "type": "string",
        "description": "Region for external source endpoints."
      },
      "SrcPort": {
        "type": "string",
        "description": "Source port"
      },
      "SrcVpcName": {
        "type": "string",
        "description": "Name of the source network"
      },
      "SrcVpcProjectId": {
        "type": "string",
        "description": "ID of the Google Cloud project containing the VPC"
      },
      "SrcVpcSubnetworkName": {
        "type": "string",
        "description": "Name of the source subnet,"
      },
      "SrcVpcSubnetworkRegion": {
        "type": "string",
        "description": "Name of the source region"
      },
      "StartTime": {
        "type": "datetime",
        "description": "The time when metric collection or evaluation started for the"
      },
      "SubnetworkId": {
        "type": "string",
        "description": "ID of the Google Cloud project containing the VPC"
      },
      "SubnetworkName": {
        "type": "string",
        "description": "Name of the subnet"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp indicating when the log event was created or"
      },
      "Timestamp": {
        "type": "datetime",
        "description": "Timestamp of the log entry."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "ApfAdditionalLatency": {
        "type": "string",
        "description": "Additional latency due to APF throttling."
      },
      "ApfExecutionTime": {
        "type": "string",
        "description": "Time taken to execute the request excluding APF wait time."
      },
      "ApfFs": {
        "type": "string",
        "description": "APF Flow Schema."
      },
      "ApfFSeats": {
        "type": "int",
        "description": "Final number of seats used after adjustments."
      },
      "ApfISeats": {
        "type": "int",
        "description": "Number of seats initially allocated by APF."
      },
      "ApfPl": {
        "type": "string",
        "description": "API Priority and Fairness (APF) Priority Level."
      },
      "AuditID": {
        "type": "string",
        "description": "An identifier used for tracking the audit trail of the request."
      },
      "ClusterName": {
        "type": "string",
        "description": "Name of the GKE cluster from which the log originated."
      },
      "ComponentLocation": {
        "type": "string",
        "description": "Location or zone of the component (e.g., us-central1-a) within the"
      },
      "ComponentName": {
        "type": "string",
        "description": "Name of the component or microservice generating the log (e.g.,"
      },
      "ComputeResourceName": {
        "type": "string",
        "description": "Name of the compute resource (e.g., VM instance) related to the"
      },
      "HttpVerb": {
        "type": "string",
        "description": "The HTTP method used in the request (e.g., GET, POST)."
      },
      "Labels": {
        "type": "dynamic",
        "description": "Dynamic field containing various labels associated with the log"
      },
      "Latency": {
        "type": "string",
        "description": "Request latency duration (e.g., time taken to complete the request)."
      },
      "Message": {
        "type": "string",
        "description": "The content of the log message."
      },
      "Pid": {
        "type": "string",
        "description": "Process ID associated with the log entry, if available."
      },
      "ProjectID": {
        "type": "string",
        "description": "Google Cloud project ID associated with the log entry."
      },
      "ResponseCode": {
        "type": "int",
        "description": "HTTP status code returned in the response (e.g., 200, 403)."
      },
      "Severity": {
        "type": "string",
        "description": "The severity level of the log (e.g., INFO, WARNING, ERROR)."
      },
      "SourceFile": {
        "type": "string",
        "description": "The source file where the log was generated, if available from"
      },
      "SourceLine": {
        "type": "string",
        "description": "The line number in the source file where the log was generated."
      },
      "SrcIP": {
        "type": "string",
        "description": "Source IP address of the client making the request."
      },
      "URI": {
        "type": "string",
        "description": "The requested URI path extracted from the log message."
      },
      "UserAgent": {
        "type": "string",
        "description": "The user agent string from the client that made the request."
      },
      "ContainerName": {
        "type": "string",
        "description": "The name of the container inside the pod that generated the log."
      },
      "JsonPayload": {
        "type": "dynamic",
        "description": "The JSON representation of the log entry payload, often containing key"
      },
      "NamespaceName": {
        "type": "string",
        "description": "The Kubernetes namespace associated with the log entry."
      },
      "PodName": {
        "type": "string",
        "description": "The name of the Kubernetes pod where the container is running."
      },
      "TextPayload": {
        "type": "string",
        "description": "Unstructured text message associated with the log entry."
      },
      "logName": {
        "type": "string",
        "description": "The full name of the log (e.g.,"
      },
      "LogType": {
        "type": "string",
        "description": "The category or type of log, such as GKEAudit, indicating the origin of"
      },
      "Operation": {
        "type": "dynamic",
        "description": "Contains information about an operation associated with the log, such as"
      },
      "ProtoPayload": {
        "type": "dynamic",
        "description": "A structured representation of the audit log entry using the Protobuf"
      },
      "Duration": {
        "type": "string",
        "description": "The time duration the operation took, generally in seconds with"
      },
      "Key": {
        "type": "string",
        "description": "A unique identifier for the Kubernetes resource (typically"
      },
      "Kind": {
        "type": "string",
        "description": "The type of Kubernetes resource being managed or referenced"
      },
      "Logger": {
        "type": "string",
        "description": "The logging class or module that generated the message, often"
      },
      "SyncStatus": {
        "type": "string",
        "description": "The synchronization status or result of the controller operation"
      },
      "ActuationLatencySeconds": {
        "type": "real",
        "description": "Time taken (in seconds) to apply the autoscaling decision from"
      },
      "ActuationTime": {
        "type": "datetime",
        "description": "The timestamp when the autoscaler made a scaling decision."
      },
      "ConfiguredSize": {
        "type": "int",
        "description": "The number of replicas configured after the autoscaler decision."
      },
      "HPA": {
        "type": "string",
        "description": "The name of the Horizontal Pod Autoscaler making the decision."
      },
      "LeadingMetricIndex": {
        "type": "int",
        "description": "Index indicating the metric that most influenced the autoscaling"
      },
      "Replicas": {
        "type": "int",
        "description": "The current number of replicas before the scaling decision."
      },
      "TargetRefAPIVersion": {
        "type": "string",
        "description": "API version of the target resource (e.g., apps/v1)."
      },
      "TargetRefKind": {
        "type": "string",
        "description": "Kind of the target Kubernetes resource (e.g., Deployment,"
      },
      "TargetRefName": {
        "type": "string",
        "description": "The name of the target Kubernetes object being scaled."
      },
      "TopLevelLimit": {
        "type": "string",
        "description": "The top-level scaling limit set on the number of replicas (e.g.,"
      },
      "TopLevelOverride": {
        "type": "string",
        "description": "An override value for top-level limits, if specified (e.g., via policy or"
      },
      "VMName": {
        "type": "string",
        "description": "The name of the VM instance hosting the workload."
      },
      "Zone": {
        "type": "string",
        "description": "The specific zone in which the resource resides."
      }
    }
  },
  "GoogleCloudSCC": {
    "tableName": "GoogleCloudSCC",
    "description": "Security Command Center is a comprehensive security and risk management platform for Google Cloud. It offers features such as asset inventory and discovery, vulnerability and threat detection, and risk mitigation and remediation to help you gain insight into your organization's security and data attack surface. This integration enables you to perform tasks related to findings and assets more effectively.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Findings": {
        "type": "dynamic",
        "description": "A Dynamic array of all the findings associated with the resource."
      },
      "FindingsResource": {
        "type": "dynamic",
        "description": "A Dynamic array of the resource that was affected by the security finding."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable"
      },
      "SourceProperties": {
        "type": "dynamic",
        "description": "A map of additional properties about the source of the security finding."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "AccountState": {
        "type": "string",
        "description": "Parameter to indicate the account state on the device."
      },
      "ActorCallerType": {
        "type": "string",
        "description": "The type of actor."
      },
      "ActorEmail": {
        "type": "string",
        "description": "The email address of the actor."
      },
      "ActorIsCollaboratorAccount": {
        "type": "bool",
        "description": "Indicates whether the actor is a collaborator account."
      },
      "ActorKey": {
        "type": "string",
        "description": "Indicates the unique key of the actor."
      },
      "ActorProfileId": {
        "type": "string",
        "description": "The unique Google Workspace profile ID of the actor."
      },
      "ApiKind": {
        "type": "string",
        "description": "The kind of API request made."
      },
      "ApplicationEdition": {
        "type": "string",
        "description": "The Google Workspace edition."
      },
      "ApplicationName": {
        "type": "string",
        "description": "The application's name."
      },
      "AppName": {
        "type": "string",
        "description": "The name of the application making the API request."
      },
      "Billable": {
        "type": "bool",
        "description": "Whether this activity is billable."
      },
      "CalendarId": {
        "type": "string",
        "description": "Calendar Id of the relevant calendar in context of this action (for"
      },
      "ClientId": {
        "type": "string",
        "description": "Client ID to which access has been granted / revoked."
      },
      "ClientType": {
        "type": "string",
        "description": "The type of client making the request."
      },
      "DestinationFolderId": {
        "type": "string",
        "description": "The unique identifier of the destination folder."
      },
      "DestinationFolderTitle": {
        "type": "string",
        "description": "The title of the destination folder."
      },
      "DestUserUpn": {
        "type": "string",
        "description": ""
      },
      "DocId": {
        "type": "string",
        "description": "The unique identifier of the document."
      },
      "DocTitle": {
        "type": "string",
        "description": "The title of the document."
      },
      "DocType": {
        "type": "string",
        "description": "The type of the document."
      },
      "DstUserUpn": {
        "type": "string",
        "description": ""
      },
      "DvcGuid": {
        "type": "string",
        "description": "The unique identifier of the device used."
      },
      "DvcInterfaceGuid": {
        "type": "string",
        "description": "The unique identifier of the device interface."
      },
      "DvcModelName": {
        "type": "string",
        "description": "The model name of the device used."
      },
      "DvcModelNumber": {
        "type": "string",
        "description": "The model number of the device used."
      },
      "DvcType": {
        "type": "string",
        "description": "The type of the device used."
      },
      "Etag": {
        "type": "string",
        "description": "An entity tag used for concurrency control."
      },
      "EventEndTime": {
        "type": "string",
        "description": "The end time of the event."
      },
      "EventGuest": {
        "type": "string",
        "description": "The email address of the event guest."
      },
      "EventId": {
        "type": "string",
        "description": "The unique identifier of the event."
      },
      "EventMessage": {
        "type": "string",
        "description": "The name of the event."
      },
      "EventOriginalMessage": {
        "type": "string",
        "description": "An array representing a chain of events, where each element is"
      },
      "EventProduct": {
        "type": "string",
        "description": "The product associated with the event."
      },
      "EventResponseStatus": {
        "type": "string",
        "description": "The response status of the event."
      },
      "EventStartTime": {
        "type": "string",
        "description": "The start time of the event."
      },
      "EventTitle": {
        "type": "string",
        "description": "The title of the event."
      },
      "EventType": {
        "type": "string",
        "description": "The type of the event."
      },
      "EventUid": {
        "type": "string",
        "description": "The unique identifier of the event."
      },
      "EventVendor": {
        "type": "string",
        "description": "The vendor of the event."
      },
      "GroupDomain": {
        "type": "string",
        "description": "The organizational unit (OU) name (path)."
      },
      "IdApplicationName": {
        "type": "string",
        "description": "The name of the application."
      },
      "IosVendorId": {
        "type": "string",
        "description": "The vendor ID for iOS devices."
      },
      "IosVendorUID": {
        "type": "string",
        "description": "The vendor UID for iOS devices."
      },
      "IsSecondFactor": {
        "type": "bool",
        "description": "Indicates if the event involves a second-factor authentication"
      },
      "IsSuspicious": {
        "type": "bool",
        "description": "Indicates if the event is considered suspicious."
      },
      "LastSyncAuditDate": {
        "type": "string",
        "description": "The date of the last synchronization audit."
      },
      "LoginChallengeMethod": {
        "type": "string",
        "description": "The method used for the login challenge."
      },
      "LoginChallengeStatus": {
        "type": "string",
        "description": "The status of the login challenge."
      },
      "LoginType": {
        "type": "string",
        "description": "The type of credentials used to attempt login."
      },
      "ModuleName": {
        "type": "string",
        "description": "The new license for this product name."
      },
      "NeqValue": {
        "type": "string",
        "description": "The new license SKU."
      },
      "NotificationMessageId": {
        "type": "string",
        "description": "The notification message Id."
      },
      "NotificationMethod": {
        "type": "string",
        "description": "The method used for the notification."
      },
      "NotificationType": {
        "type": "string",
        "description": "The type of notification."
      },
      "OldEventTitle": {
        "type": "string",
        "description": "If the title of a calendar event has been changed, this is the"
      },
      "OldValue": {
        "type": "string",
        "description": "The previous advertising option."
      },
      "OldVisibility": {
        "type": "string",
        "description": "Old Visibility of Target File."
      },
      "OrganizerCalendarId": {
        "type": "string",
        "description": "Calendar Id of this Event's organizer."
      },
      "OriginatingAppId": {
        "type": "string",
        "description": "The Google Cloud Project ID of the application that performed"
      },
      "OsProperty": {
        "type": "string",
        "description": "Operating System properties."
      },
      "Owner": {
        "type": "string",
        "description": "The owner of the resource involved in the event."
      },
      "OwnerDomain": {
        "type": "string",
        "description": "The domain of the owner of the resource involved in the event."
      },
      "OwnerIsSharedDrive": {
        "type": "bool",
        "description": "Indicates if the owner is a shared drive."
      },
      "OwnerIsTeamDrive": {
        "type": "bool",
        "description": "Indicates if the owner is a team drive."
      },
      "PrimaryEvent": {
        "type": "bool",
        "description": "Indicates if the event is the primary event in a chain of events."
      },
      "ProcessName": {
        "type": "string",
        "description": "The unique name (ID) of the setting that was changed."
      },
      "RegisterPrivelege": {
        "type": "string",
        "description": "Device Policy app's privilege on the user's device."
      },
      "Resource_Id": {
        "type": "string",
        "description": "The unique resource Id of the device."
      },
      "RoleName": {
        "type": "string",
        "description": "The unique name (ID) of the role assigned to the user."
      },
      "Scope": {
        "type": "string",
        "description": "The scope of the access request."
      },
      "ScopeData": {
        "type": "string",
        "description": "Additional data related to the scope."
      },
      "SerialNumber": {
        "type": "string",
        "description": "The serial number of the device."
      },
      "SharedDriveId": {
        "type": "string",
        "description": "The shared drive root ID if the document owner is a shared"
      },
      "SourceFolderId": {
        "type": "string",
        "description": "The ID of the source folder if the document is located in a"
      },
      "SourceFolderTitle": {
        "type": "string",
        "description": "The title of the source folder if the document is located in a"
      },
      "SrcIpAddr": {
        "type": "string",
        "description": "The IP address from which the action was performed."
      },
      "TargetCalendarId": {
        "type": "string",
        "description": "The ID of the calendar targeted by the event."
      },
      "TargetUserDomain": {
        "type": "string",
        "description": "The domain targeted by the event."
      },
      "TargetUserName": {
        "type": "string",
        "description": "The user targeted by the event."
      },
      "TeamDriveId": {
        "type": "string",
        "description": ""
      },
      "UserAadid": {
        "type": "string",
        "description": "This ID helps correlate events and activities to the correct"
      },
      "UserAgentOriginal": {
        "type": "string",
        "description": "The user agent from the request that triggered this action."
      },
      "UserEmail": {
        "type": "string",
        "description": "The user's primary email address."
      },
      "Visibility": {
        "type": "string",
        "description": "Visibility associated with the event."
      },
      "VisibilityChange": {
        "type": "string",
        "description": ""
      }
    }
  },
  "HDInsightAmbariClusterAlerts": {
    "tableName": "HDInsightAmbariClusterAlerts",
    "description": "Cluster Alerts generated by Ambari.",
    "columns": {
      "AlertFirmness": {
        "type": "string",
        "description": "The firmness of the alert."
      },
      "AlertID": {
        "type": "int",
        "description": "The ID of the alert message."
      },
      "AlertInstance": {
        "type": "string",
        "description": "Instance number of the alert."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClusterName": {
        "type": "string",
        "description": "The name of the cluster the alert came from."
      },
      "ClusterType": {
        "type": "string",
        "description": "The type of cluster where the alert was generated."
      },
      "ComponentName": {
        "type": "string",
        "description": "The component that generated the alert."
      },
      "DefinitionId": {
        "type": "int",
        "description": "Id of the alert definition."
      },
      "DefinitionName": {
        "type": "string",
        "description": "Name of the alert definition"
      },
      "HostFQDN": {
        "type": "string",
        "description": "The FQDN of the host where the alert was generated."
      },
      "HostName": {
        "type": "string",
        "description": "The name of the host where the alert was generated."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable"
      },
      "Label": {
        "type": "string",
        "description": "The label of the alert."
      },
      "LatestTimestamp": {
        "type": "long",
        "description": "The latest time the alert occurred."
      },
      "MaintenanceState": {
        "type": "string",
        "description": "The maintenance classifaction state of the alert."
      },
      "Occurences": {
        "type": "int",
        "description": "The number of times an alert has occurred."
      },
      "OriginalTimestamp": {
        "type": "long",
        "description": "The timestamp the alert first occurred."
      },
      "ReferenceURI": {
        "type": "string",
        "description": "The URI to the alert."
      },
      "RepeatTolerance": {
        "type": "int",
        "description": "The total number of occurences an alert can have before being"
      },
      "RepeatToleranceRemaining": {
        "type": "int",
        "description": "The amount of occurences left before an alert gets escalted."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "Scope": {
        "type": "string",
        "description": "The scope of the alert."
      },
      "ServiceName": {
        "type": "string",
        "description": "The name of the service that generated the alert."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "State": {
        "type": "string",
        "description": "The state of the alert."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "Text": {
        "type": "string",
        "description": "The informational text of the alert."
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "HDInsightAmbariSystemMetrics": {
    "tableName": "HDInsightAmbariSystemMetrics",
    "description": "System metrics from each individual node generated by Ambari.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "BytesIn": {
        "type": "real",
        "description": "Bytes ingested in last timeframe."
      },
      "BytesOut": {
        "type": "real",
        "description": "Bytes sent out."
      },
      "CachedMemory": {
        "type": "real",
        "description": "amount of cached memory in KB."
      },
      "ClusterName": {
        "type": "string",
        "description": "Name of the cluster the host belongs to."
      },
      "ClusterType": {
        "type": "string",
        "description": "Type of cluster the record came from."
      },
      "CpuIdle": {
        "type": "real",
        "description": "Percent of CPU time spent in idle state in past cycle."
      },
      "CpuIOWait": {
        "type": "real",
        "description": "Percent of CPU time spent waiting for I/O requests in past cycle."
      },
      "CpuNice": {
        "type": "real",
        "description": "Percent of CPU time spent running processes with positive nice values."
      },
      "CpuSystem": {
        "type": "real",
        "description": "Percent of CPU time spent running system level processes in past cycle."
      },
      "CpuUser": {
        "type": "real",
        "description": "Percent of CPU time spent running user level processes in past cycle."
      },
      "DiskFree": {
        "type": "real",
        "description": "Amount of free disk space (in GB)."
      },
      "DiskTotal": {
        "type": "real",
        "description": "Total disk space (in GB)."
      },
      "FifteenMinutLoad": {
        "type": "real",
        "description": "load over past 15 minutes."
      },
      "FiveMinuteLoad": {
        "type": "real",
        "description": "load over past five minutes."
      },
      "FreeMemory": {
        "type": "real",
        "description": "amount of free memory in KB."
      },
      "FreeSwapMemory": {
        "type": "real",
        "description": "amount of free swap memory in KB."
      },
      "HostName": {
        "type": "string",
        "description": "Name of the host the record came from."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "NumberOfCpu": {
        "type": "real",
        "description": "Number of CPU cores running on the node."
      },
      "OneMinuteLoad": {
        "type": "real",
        "description": "load over past one minute."
      },
      "PacketsIn": {
        "type": "real",
        "description": "Packets ingest in last timeframe."
      },
      "PacketsOut": {
        "type": "real",
        "description": "Packets sent out in last timeframe."
      },
      "ProcessesRun": {
        "type": "real",
        "description": "Processes run in last timeframe."
      },
      "ReadBytes": {
        "type": "real",
        "description": "Number of bytes read."
      },
      "ReadCount": {
        "type": "real",
        "description": "Number of read operations."
      },
      "ReadTime": {
        "type": "real",
        "description": "Time spent on read operations."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SharedMemory": {
        "type": "real",
        "description": "amount of sharedmemory in KB."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "TotalMemory": {
        "type": "real",
        "description": "total amount of memory in KB."
      },
      "TotalProcesses": {
        "type": "real",
        "description": "Total amount of processes run on host."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "WriteBytes": {
        "type": "real",
        "description": "Number of bytes written."
      },
      "WriteCount": {
        "type": "real",
        "description": "Number of write operations."
      },
      "WriteTime": {
        "type": "real",
        "description": "Time spent on write operations."
      }
    }
  },
  "HDInsightGatewayAuditLogs": {
    "tableName": "HDInsightGatewayAuditLogs",
    "description": "Authentication audit logs from HDInsight Gateway nodes.",
    "columns": {
      "AccessRequestCount": {
        "type": "real",
        "description": "Number of login requests associated with the user."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClusterDnsName": {
        "type": "string",
        "description": "The DNS name of the cluster."
      },
      "ErrorMessage": {
        "type": "string",
        "description": "Any error message associated with the login attempt."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "Status": {
        "type": "string",
        "description": "The outcome of the login attempt."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserName": {
        "type": "string",
        "description": "The username used for the login attempt."
      }
    }
  },
  "HDInsightHBaseLogs": {
    "tableName": "HDInsightHBaseLogs",
    "description": "All logs from HDInsight HBase Logs.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClusterName": {
        "type": "string",
        "description": "Name of cluster."
      },
      "ClusterType": {
        "type": "string",
        "description": "Name of cluster."
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID for correlated events. Can be used to identify correlated events"
      },
      "HostName": {
        "type": "string",
        "description": "Name of host where log was emitted."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogLevel": {
        "type": "string",
        "description": "log level of message (INFO, WARN, ERROR, etc.)."
      },
      "LogType": {
        "type": "string",
        "description": "The name of the log file that a record came from (e.g. RegionServer,"
      },
      "Message": {
        "type": "string",
        "description": "message from HBase log."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "HDInsightHBaseMetrics": {
    "tableName": "HDInsightHBaseMetrics",
    "description": "JMX metrics from HBase clusters.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClusterName": {
        "type": "string",
        "description": "Name of cluster."
      },
      "ClusterType": {
        "type": "string",
        "description": "Type of the cluster."
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID for correlated events. Can be used to identify correlated events"
      },
      "HostName": {
        "type": "string",
        "description": "Name of host where log was emitted."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "MetricName": {
        "type": "string",
        "description": "Name of the metric for the record (e.g. queueSize, receivedBytes,"
      },
      "MetricNamespace": {
        "type": "string",
        "description": "Category of metric (value of the jmx query string e.g."
      },
      "MetricValue": {
        "type": "real",
        "description": "Value of metric in the record."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "Tags": {
        "type": "dynamic",
        "description": "Information about the record. For example a record may be tagged with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "HDInsightHadoopAndYarnLogs": {
    "tableName": "HDInsightHadoopAndYarnLogs",
    "description": "Logs from HDInsight Hadoop Clusters and YARN-related logs such as ResourceManager, NodeManager, and TimelineServer logs from all cluster types that use YARN.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClusterName": {
        "type": "string",
        "description": "Name of cluster."
      },
      "ClusterType": {
        "type": "string",
        "description": "Type of the cluster."
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID for correlated events. Can be used to identify correlated events"
      },
      "HostName": {
        "type": "string",
        "description": "Name of host where log was emitted."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogLevel": {
        "type": "string",
        "description": "log level of message (INFO, WARN, ERROR, etc.)."
      },
      "LogType": {
        "type": "string",
        "description": "The name of the log file that a record came from (e.g. YarnTimeLineServer,"
      },
      "Message": {
        "type": "string",
        "description": "message from Hadoop or YARN log."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "HDInsightHadoopAndYarnMetrics": {
    "tableName": "HDInsightHadoopAndYarnMetrics",
    "description": "JMX metrics from Hadoop clusters and Yarn JMX metrics from any YARN-based cluster type.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClusterName": {
        "type": "string",
        "description": "Name of cluster."
      },
      "ClusterType": {
        "type": "string",
        "description": "Name of cluster."
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID for correlated events. Can be used to identify correlated events"
      },
      "HostName": {
        "type": "string",
        "description": "Name of host where log was emitted."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "MetricName": {
        "type": "string",
        "description": "Name of the metric for the record (e.g. AppsCompleted, AppsKilled,"
      },
      "MetricNamespace": {
        "type": "string",
        "description": "Category of metric (value of jmx query URIs e.g."
      },
      "MetricValue": {
        "type": "real",
        "description": "Value of metric in the record."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "Tags": {
        "type": "dynamic",
        "description": "Information about the record. For example a record may be tagged with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "HDInsightHiveAndLLAPLogs": {
    "tableName": "HDInsightHiveAndLLAPLogs",
    "description": "All logs from HDInsight Hive and LLAP Clusters.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClusterName": {
        "type": "string",
        "description": "Name of cluster."
      },
      "ClusterType": {
        "type": "string",
        "description": "Type of the cluster."
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID for correlated events. Can be used to identify correlated events"
      },
      "HostName": {
        "type": "string",
        "description": "Name of host where log was emitted."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogLevel": {
        "type": "string",
        "description": "log level of message (INFO, WARN, ERROR, etc.)."
      },
      "LogType": {
        "type": "string",
        "description": "The name of the log file that a record came from (e.g. HiveServerLog,"
      },
      "Message": {
        "type": "string",
        "description": "message from Hive or LLAP log."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "HDInsightHiveAndLLAPMetrics": {
    "tableName": "HDInsightHiveAndLLAPMetrics",
    "description": "JMX metrics from Hive and LLAP clusters.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClusterName": {
        "type": "string",
        "description": "Name of cluster."
      },
      "ClusterType": {
        "type": "string",
        "description": "Type of the cluster."
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID for correlated events. Can be used to identify correlated events"
      },
      "HostName": {
        "type": "string",
        "description": "Name of host where log was emitted."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "MetricName": {
        "type": "string",
        "description": "Name of the metric for the record (e.g. CacheCapacityRemaining,"
      },
      "MetricNamespace": {
        "type": "string",
        "description": "Category of metric (value of jmx query string e.g."
      },
      "MetricValue": {
        "type": "real",
        "description": "Value of metric in the record."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "Tags": {
        "type": "dynamic",
        "description": "Information about the record. For example a record may be tagged with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "HDInsightHiveQueryAppStats": {
    "tableName": "HDInsightHiveQueryAppStats",
    "description": "Hive Query Metrics emitted from the YARN Timeline Server.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClientIpAddress": {
        "type": "string",
        "description": "The query client's IP address."
      },
      "ClusterName": {
        "type": "string",
        "description": "Name of cluster."
      },
      "ClusterType": {
        "type": "string",
        "description": "Type of cluster (e.g. LLAP or Hadoop)."
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID for correlated events. Can be used to identify correlated"
      },
      "Domain": {
        "type": "string",
        "description": "The domain associated with the query."
      },
      "Entity": {
        "type": "string",
        "description": "Name of the query's entity."
      },
      "EntityType": {
        "type": "string",
        "description": "The type of the query's entity."
      },
      "ExecutionMode": {
        "type": "string",
        "description": "The execution mode of the query."
      },
      "HiveInstanceType": {
        "type": "string",
        "description": "The type of hive instance running the query."
      },
      "HostName": {
        "type": "string",
        "description": "Name of host where log was emitted."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "IsMapReduce": {
        "type": "bool",
        "description": "True if the query is a MapReduce query."
      },
      "IsTez": {
        "type": "bool",
        "description": "True if the query is a Tez query."
      },
      "MetricName": {
        "type": "string",
        "description": "Name of the metric for the record (e.g. AppsCompleted, AppsKilled,"
      },
      "MetricValue": {
        "type": "real",
        "description": "Value of metric in the record."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "QueryCompletionTime": {
        "type": "long",
        "description": "Time that query was completed."
      },
      "QuerySubmissionTime": {
        "type": "long",
        "description": "Time that query was submitted."
      },
      "Queue": {
        "type": "string",
        "description": "The queue the query was served from."
      },
      "RequestUser": {
        "type": "string",
        "description": "The client user that submitted the request."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SessionId": {
        "type": "string",
        "description": "The session ID of the query."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TablesRead": {
        "type": "string",
        "description": "The tables read by the query."
      },
      "Tags": {
        "type": "dynamic",
        "description": "Information about the record. For example a record may be tagged"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "ThreadName": {
        "type": "string",
        "description": "The name of the thread running the query."
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "User": {
        "type": "string",
        "description": "The user of the Hive instance executing the query."
      }
    }
  },
  "HDInsightHiveTezAppStats": {
    "tableName": "HDInsightHiveTezAppStats",
    "description": "Tez Application Metrics emitted from the YARN Resource Manager.",
    "columns": {
      "AMContainerLogs": {
        "type": "string",
        "description": "The Application Master? container logs."
      },
      "ApplicationId": {
        "type": "string",
        "description": "The ID of the Application that the metrics describe."
      },
      "ApplicationName": {
        "type": "string",
        "description": "The name of the application that the metrics describe."
      },
      "ApplicationType": {
        "type": "string",
        "description": "The type of application."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClusterId": {
        "type": "long",
        "description": "The final status of the application if it has reached a terminal state."
      },
      "ClusterName": {
        "type": "string",
        "description": "Name of cluster."
      },
      "ClusterType": {
        "type": "string",
        "description": "Name of cluster."
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID for correlated events. Can be used to identify correlated"
      },
      "ElapsedTime": {
        "type": "long",
        "description": "The time elapsed while the application was running."
      },
      "FinalStatus": {
        "type": "string",
        "description": "The final status of the application if it has reached a terminal state."
      },
      "FinishedTime": {
        "type": "long",
        "description": "The time the application finished."
      },
      "HostName": {
        "type": "string",
        "description": "Name of host where log was emitted."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "LogAggregationStatus": {
        "type": "string",
        "description": "The log aggregation status."
      },
      "MetricName": {
        "type": "string",
        "description": "Name of the metric for the record (e.g. AppsCompleted, AppsKilled,"
      },
      "MetricValue": {
        "type": "real",
        "description": "Value of metric in the record."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "Queue": {
        "type": "string",
        "description": "The queue of the application."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "StartedTime": {
        "type": "long",
        "description": "The time the application started."
      },
      "State": {
        "type": "string",
        "description": "The state of the application."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "Tags": {
        "type": "dynamic",
        "description": "Information about the record. For example a record may be tagged"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "TrackingUI": {
        "type": "string",
        "description": "?."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UnmanagedApplication": {
        "type": "bool",
        "description": "True if application is unmanaged, false if otherwise."
      },
      "User": {
        "type": "string",
        "description": "The name of the user of the application."
      }
    }
  },
  "HDInsightJupyterNotebookEvents": {
    "tableName": "HDInsightJupyterNotebookEvents",
    "description": "Spark Events Log.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClusterDnsName": {
        "type": "string",
        "description": "The DNS name of the cluster running the application."
      },
      "ClusterTenantId": {
        "type": "string",
        "description": "The tenant ID of the cluster running the application."
      },
      "Dim0": {
        "type": "string",
        "description": "Varies based of of type of event."
      },
      "Dim1": {
        "type": "datetime",
        "description": "Varies based of of type of event."
      },
      "Dim10": {
        "type": "string",
        "description": "Varies based of of type of event."
      },
      "Dim2": {
        "type": "int",
        "description": "Varies based of of type of event."
      },
      "Dim3": {
        "type": "int",
        "description": "Varies based of of type of event."
      },
      "Dim4": {
        "type": "string",
        "description": "Varies based of of type of event."
      },
      "Dim5": {
        "type": "int",
        "description": "Varies based of of type of event."
      },
      "Dim6": {
        "type": "string",
        "description": "Varies based of of type of event."
      },
      "Dim7": {
        "type": "string",
        "description": "Varies based of of type of event."
      },
      "Dim8": {
        "type": "string",
        "description": "Varies based of of type of event."
      },
      "Dim9": {
        "type": "string",
        "description": "Varies based of of type of event."
      },
      "EventName": {
        "type": "string",
        "description": "The name of the event."
      },
      "Host": {
        "type": "string",
        "description": "The FQDN of the host."
      },
      "IpAddress": {
        "type": "string",
        "description": "The IP Address of the node running the application."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Region": {
        "type": "string",
        "description": "The region of the cluster running the application."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Role": {
        "type": "string",
        "description": "The type of node the application running the application."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserSubscriptionId": {
        "type": "string",
        "description": "The subscription ID of the cluster running the application"
      }
    }
  },
  "HDInsightKafkaLogs": {
    "tableName": "HDInsightKafkaLogs",
    "description": "All logs from HDInsight Kafka Logs.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClusterName": {
        "type": "string",
        "description": "Name of cluster."
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID for correlated events. Can be used to identify correlated events"
      },
      "HostName": {
        "type": "string",
        "description": "Name of host where log was emitted."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogLevel": {
        "type": "string",
        "description": "log level of message (INFO, WARN, ERROR, etc.)."
      },
      "LogType": {
        "type": "string",
        "description": "The name of the log file that a record came from (e.g. KafkaServer,"
      },
      "Message": {
        "type": "string",
        "description": "message from Kafka log."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "HDInsightKafkaMetrics": {
    "tableName": "HDInsightKafkaMetrics",
    "description": "All metrics from Kafka clusters.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClusterName": {
        "type": "string",
        "description": "Name of cluster."
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID for correlated events. Can be used to identify correlated events"
      },
      "HostName": {
        "type": "string",
        "description": "Name of host where log was emitted."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "MetricDataType": {
        "type": "string",
        "description": "CollectD datatype of the metric (e.g. gauge, counter, etc.). Determines"
      },
      "MetricName": {
        "type": "string",
        "description": "Name of the metric for the record (e.g. OfflinePartitionsCount,"
      },
      "MetricNamespace": {
        "type": "string",
        "description": "Category of metric (e.g. RequestMetrics, BrokerTopicMetrics,"
      },
      "MetricValue": {
        "type": "real",
        "description": "Value of metric in the record."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "Tags": {
        "type": "string",
        "description": "Information about the record. For example a record may be tagged with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "HDInsightKafkaServerLog": {
    "tableName": "HDInsightKafkaServerLog",
    "description": "HDInsight Kafka Server Log",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClusterDnsName": {
        "type": "string",
        "description": "Name of cluster"
      },
      "ClusterType": {
        "type": "string",
        "description": "Type of the Cluster"
      },
      "CorrelationId": {
        "type": "string",
        "description": "Id of associated events"
      },
      "FluentdIngestTimestamp": {
        "type": "datetime",
        "description": "Time log was ingested by Fluentd framework"
      },
      "HostName": {
        "type": "string",
        "description": "Name of host where log was emitted"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Message": {
        "type": "string",
        "description": "Entry of Kafka Server Log"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "HDInsightOozieLogs": {
    "tableName": "HDInsightOozieLogs",
    "description": "All logs from Oozie component.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClusterName": {
        "type": "string",
        "description": "Name of cluster."
      },
      "ClusterType": {
        "type": "string",
        "description": "Name of cluster."
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID for correlated events. Can be used to identify correlated events"
      },
      "HostName": {
        "type": "string",
        "description": "Name of host where log was emitted."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogLevel": {
        "type": "string",
        "description": "log level of message (INFO, WARN, ERROR, etc.)."
      },
      "LogType": {
        "type": "string",
        "description": "The name of the log file that a record came from."
      },
      "Message": {
        "type": "string",
        "description": "message from Oozie log."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "HDInsightRangerAuditLogs": {
    "tableName": "HDInsightRangerAuditLogs",
    "description": "Audit logs from the Ranger component (only for ESP clusters).",
    "columns": {
      "AccessName": {
        "type": "string",
        "description": "Name of the access method."
      },
      "Action": {
        "type": "string",
        "description": "Type of action made by the event."
      },
      "AdditionalInfo": {
        "type": "string",
        "description": "Additional info about the request including the remote and forwarded"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CliIpAddress": {
        "type": "string",
        "description": "IP address of where CLI request was made."
      },
      "CliType": {
        "type": "string",
        "description": "Type of CLI used to create request."
      },
      "ClusterName": {
        "type": "string",
        "description": "Name of cluster."
      },
      "ClusterResource": {
        "type": "string",
        "description": "Resource involved in request event."
      },
      "ClusterResourceType": {
        "type": "string",
        "description": "The type of resource accessed."
      },
      "ClusterType": {
        "type": "string",
        "description": "Type of the cluster that emitted the record."
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID for correlated events. Can be used to identify correlated events"
      },
      "Enforcer": {
        "type": "string",
        "description": "Name of the policy enforcer."
      },
      "EventCount": {
        "type": "int",
        "description": "Number of events associated with the request."
      },
      "EventDurationMs": {
        "type": "int",
        "description": "Duration of the event in milliseconds."
      },
      "HostName": {
        "type": "string",
        "description": "Name of host where log was emitted."
      },
      "Id": {
        "type": "string",
        "description": "ID of the event request."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "LogType": {
        "type": "string",
        "description": "Type of log the record came from."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "Policy": {
        "type": "int",
        "description": "Code representing the policy."
      },
      "Repo": {
        "type": "string",
        "description": "Name the repo."
      },
      "RepoType": {
        "type": "int",
        "description": "Integer representing the repo type."
      },
      "RequestData": {
        "type": "string",
        "description": "Source that provides the request data."
      },
      "RequestUser": {
        "type": "string",
        "description": "Username associated with the event."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Result": {
        "type": "int",
        "description": "Status code of the event result."
      },
      "SequenceNumber": {
        "type": "int",
        "description": "Sequence number of the event."
      },
      "SessionId": {
        "type": "string",
        "description": "ID associated witht the user session."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "Tags": {
        "type": "string",
        "description": "List of tags associated with the event."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "HDInsightSecurityLogs": {
    "tableName": "HDInsightSecurityLogs",
    "description": "Security related logs including Ambari Audit and Auth Log.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClusterName": {
        "type": "string",
        "description": "Name of cluster."
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID for correlated events. Can be used to identify correlated events"
      },
      "HostName": {
        "type": "string",
        "description": "Name of host where log was emitted."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogType": {
        "type": "string",
        "description": "The name of the log file that a record came from (e.g. AmbariAuditLog,"
      },
      "Message": {
        "type": "string",
        "description": "message from log file."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "HDInsightSparkApplicationEvents": {
    "tableName": "HDInsightSparkApplicationEvents",
    "description": "Spark Application Events.",
    "columns": {
      "AppAttemptId": {
        "type": "string",
        "description": "The application attempt id."
      },
      "ApplicationId": {
        "type": "string",
        "description": "The application id of the application producing the record."
      },
      "AppName": {
        "type": "string",
        "description": "The application name."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClusterDnsName": {
        "type": "string",
        "description": "The DNS name of the cluster running the application."
      },
      "ClusterTenantId": {
        "type": "string",
        "description": "The tenant ID of the cluster running the application."
      },
      "CompletionTime": {
        "type": "datetime",
        "description": "The time (UTC) the application submission completed."
      },
      "Host": {
        "type": "string",
        "description": "The fqdn the node was run on."
      },
      "IpAddress": {
        "type": "string",
        "description": "The IP Address of the node running the application."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Region": {
        "type": "string",
        "description": "The region of the cluster running the application."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Role": {
        "type": "string",
        "description": "The type of node running the application."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "SparkUser": {
        "type": "string",
        "description": "The Spark User associated with the record."
      },
      "SubmissionTime": {
        "type": "datetime",
        "description": "The time (UTC) the application was submitted."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserSubscriptionId": {
        "type": "string",
        "description": "The subscription ID of the cluster running the application"
      }
    }
  },
  "HDInsightSparkBlockManagerEvents": {
    "tableName": "HDInsightSparkBlockManagerEvents",
    "description": "Spark Block Manager Events.",
    "columns": {
      "AddedTime": {
        "type": "datetime",
        "description": "The time (UTC) the event was added."
      },
      "ApplicationId": {
        "type": "string",
        "description": "The application ID of the application producing the record."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "BlockHost": {
        "type": "string",
        "description": "The block host."
      },
      "BlockManagerHost": {
        "type": "string",
        "description": "The host where the Block Manager is running."
      },
      "ClusterDnsName": {
        "type": "string",
        "description": "The DNS name of the cluster the Block Manager is running on."
      },
      "ClusterTenantId": {
        "type": "string",
        "description": "The tenant ID of the cluster the Block Manager is running on."
      },
      "ExecutorId": {
        "type": "string",
        "description": "The ID of the executor running the application."
      },
      "Host": {
        "type": "string",
        "description": "The FQDN of the host."
      },
      "IpAddress": {
        "type": "string",
        "description": "The IP Address of the node the Block Manager is running on."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "MaxMemory": {
        "type": "long",
        "description": "The max memory usage from the event."
      },
      "MaxOffHeapMemory": {
        "type": "long",
        "description": "The max off heap memory usage from the event."
      },
      "MaxOnHeapMemory": {
        "type": "long",
        "description": "The max on heap memory usage from the event."
      },
      "Region": {
        "type": "string",
        "description": "The region of the cluster the Block Manager is running on."
      },
      "RemovedTime": {
        "type": "datetime",
        "description": "The time (UTC) the application was removed."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Role": {
        "type": "string",
        "description": "The type of node the Block Manager is running on."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserSubscriptionId": {
        "type": "string",
        "description": "The subscription ID of the cluster the Block Manager is running on."
      }
    }
  },
  "HDInsightSparkEnvironmentEvents": {
    "tableName": "HDInsightSparkEnvironmentEvents",
    "description": "Spark Environment Events.",
    "columns": {
      "ApplicationId": {
        "type": "string",
        "description": "The application ID of the application producing the record."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClusterDnsName": {
        "type": "string",
        "description": "The DNS name of the cluster running the application."
      },
      "ClusterTenantId": {
        "type": "string",
        "description": "The tenant ID of the cluster running the application."
      },
      "Host": {
        "type": "string",
        "description": "The FQDN of the host."
      },
      "IpAddress": {
        "type": "string",
        "description": "The IP Address of the node running the application."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Region": {
        "type": "string",
        "description": "The region of the cluster running the application."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "Role": {
        "type": "string",
        "description": "The type of node running the application."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "SparkDeployMode": {
        "type": "string",
        "description": "The spark deployment mode of the application."
      },
      "SparkExecutorCores": {
        "type": "int",
        "description": "The number of Executor cores."
      },
      "SparkExecutorInstances": {
        "type": "int",
        "description": "The number of Spark Executor instances."
      },
      "SparkExecutorMemory": {
        "type": "string",
        "description": "The memory usage of the Spark Executor"
      },
      "SparkMaster": {
        "type": "string",
        "description": "The master mode of the Spark Application"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserSubscriptionId": {
        "type": "string",
        "description": "The subscription ID of the cluster running the application"
      },
      "YarnMaxAttempts": {
        "type": "int",
        "description": "The max number of attempts Yarn will make for the application."
      },
      "YarnQueue": {
        "type": "string",
        "description": "The type of YARN queue for the application."
      },
      "YarnTags": {
        "type": "string",
        "description": "The YARN tag of the application."
      }
    }
  },
  "HDInsightSparkExecutorEvents": {
    "tableName": "HDInsightSparkExecutorEvents",
    "description": "Spark Executor Events.",
    "columns": {
      "AddedTime": {
        "type": "datetime",
        "description": "The time (UTC) the Executor was added."
      },
      "ApplicationId": {
        "type": "string",
        "description": "The application ID of the application producing the record."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClusterDnsName": {
        "type": "string",
        "description": "The DNS name of the cluster running the Executor."
      },
      "ClusterTenantId": {
        "type": "string",
        "description": "The tenant ID of the cluster running the Executor."
      },
      "ExecutorCores": {
        "type": "int",
        "description": "The number of cores the Spark Executor has."
      },
      "ExecutorHost": {
        "type": "string",
        "description": "The host the Executor ran on"
      },
      "ExecutorId": {
        "type": "string",
        "description": "The ID of the Spark Executor."
      },
      "Host": {
        "type": "string",
        "description": "The FQDN of the host."
      },
      "IpAddress": {
        "type": "string",
        "description": "The IP Address of the node running the Executor."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Region": {
        "type": "string",
        "description": "The region of the cluster running the Executor."
      },
      "RemovedReason": {
        "type": "string",
        "description": "The reason the Executor was removed."
      },
      "RemovedTime": {
        "type": "datetime",
        "description": "The time (UTC) the Executor was removed."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Role": {
        "type": "string",
        "description": "The type of node running the Executor."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserSubscriptionId": {
        "type": "string",
        "description": "The subscription ID of the cluster running the Executor."
      }
    }
  },
  "HDInsightSparkExtraEvents": {
    "tableName": "HDInsightSparkExtraEvents",
    "description": "Spark Extra Events.",
    "columns": {
      "ApplicationId": {
        "type": "string",
        "description": "The application ID of the application producing the record."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClusterDnsName": {
        "type": "string",
        "description": "The DNS name of the cluster running the application."
      },
      "ClusterTenantId": {
        "type": "string",
        "description": "The tenant ID of the cluster running the application."
      },
      "EventJson": {
        "type": "string",
        "description": "Json with information about the event."
      },
      "Host": {
        "type": "string",
        "description": "The FQDN of the host."
      },
      "IpAddress": {
        "type": "string",
        "description": "The IP Address of the node running the application."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Region": {
        "type": "string",
        "description": "The region of the cluster running the application."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Role": {
        "type": "string",
        "description": "The type of node running the application."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserSubscriptionId": {
        "type": "string",
        "description": "The subscription ID of the cluster running the application."
      }
    }
  },
  "HDInsightSparkJobEvents": {
    "tableName": "HDInsightSparkJobEvents",
    "description": "Spark Job Events.",
    "columns": {
      "ApplicationId": {
        "type": "string",
        "description": "The application ID of the application producing the record."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClusterDnsName": {
        "type": "string",
        "description": "The DNS name of the cluster running the job."
      },
      "ClusterTenantId": {
        "type": "string",
        "description": "The tenant ID of the cluster running the job."
      },
      "CompletionTime": {
        "type": "datetime",
        "description": "The time (UTC) the job was completed."
      },
      "Host": {
        "type": "string",
        "description": "The FQDN of the host."
      },
      "IpAddress": {
        "type": "string",
        "description": "The IP Address of the node running the job."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "JobId": {
        "type": "string",
        "description": "The ID of the job."
      },
      "JobResult": {
        "type": "string",
        "description": "The result of the job."
      },
      "Region": {
        "type": "string",
        "description": "The region of the cluster running the job."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Role": {
        "type": "string",
        "description": "The type of node running the job."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "StageIds": {
        "type": "string",
        "description": "The stages included in the job."
      },
      "SubmissionTime": {
        "type": "datetime",
        "description": "The time (UTC) the job was submitted."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserSubscriptionId": {
        "type": "string",
        "description": "The subscription ID of the cluster running the job."
      }
    }
  },
  "HDInsightSparkLogs": {
    "tableName": "HDInsightSparkLogs",
    "description": "All logs from related to Spark including Jupyter and Livy logs.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClusterName": {
        "type": "string",
        "description": "Name of cluster."
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID for correlated events. Can be used to identify correlated events"
      },
      "HostName": {
        "type": "string",
        "description": "Name of host where log was emitted."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogLevel": {
        "type": "string",
        "description": "log level of message (INFO, WARN, ERROR, etc.)."
      },
      "LogType": {
        "type": "string",
        "description": "The name of the log file that a record came from (e.g. SparkExecutorLog,"
      },
      "Message": {
        "type": "string",
        "description": "message from HBase log."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "HDInsightSparkSQLExecutionEvents": {
    "tableName": "HDInsightSparkSQLExecutionEvents",
    "description": "Spark SQL Execution Events.",
    "columns": {
      "ApplicationId": {
        "type": "string",
        "description": "The application ID of the application producing the record."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClusterDnsName": {
        "type": "string",
        "description": "The DNS name of the cluster running the Spark SQL execution."
      },
      "ClusterTenantId": {
        "type": "string",
        "description": "The tenant ID of the cluster running the Spark SQL execution."
      },
      "EndTime": {
        "type": "datetime",
        "description": "The time (UTC) the Spark SQL execution ended."
      },
      "ExecutionId": {
        "type": "string",
        "description": "The ID of the Spark SQL execution."
      },
      "Host": {
        "type": "string",
        "description": "The FQDN of the host."
      },
      "IpAddress": {
        "type": "string",
        "description": "The IP Address of the node running the Spark SQL execution."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "PhysicalPlanDescription": {
        "type": "string",
        "description": "The description of the Physical/Logical plan of the Spark SQL"
      },
      "Region": {
        "type": "string",
        "description": "The region of the cluster running the Spark SQL execution."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "Role": {
        "type": "string",
        "description": "The type of node running the Spark SQL execution."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "SparkPlanInfo": {
        "type": "string",
        "description": "Json object containing information on the Spark SQL execution."
      },
      "StartTime": {
        "type": "datetime",
        "description": "The time (UTC) the Spark SQL execution started."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserSubscriptionId": {
        "type": "string",
        "description": "The subscription ID of the cluster running the Spark SQL execution."
      }
    }
  },
  "HDInsightSparkStageEvents": {
    "tableName": "HDInsightSparkStageEvents",
    "description": "Spark Stage Events.",
    "columns": {
      "ApplicationId": {
        "type": "string",
        "description": "The application ID of the application producing the record."
      },
      "AttemptId": {
        "type": "string",
        "description": "The Id of the stage attempt."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClusterDnsName": {
        "type": "string",
        "description": "The DNS name of the cluster running the stage."
      },
      "ClusterTenantId": {
        "type": "string",
        "description": "The tenant ID of the cluster running the stage."
      },
      "CompletionTime": {
        "type": "datetime",
        "description": "The time (UTC) the stage was completed."
      },
      "Details": {
        "type": "string",
        "description": "The exception details for any stage failures."
      },
      "FailureReason": {
        "type": "string",
        "description": "The reason for failure if the stage failed."
      },
      "Host": {
        "type": "string",
        "description": "The FQDN of the host."
      },
      "IpAddress": {
        "type": "string",
        "description": "The IP Address of the node running the stage."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "RDDInfo": {
        "type": "string",
        "description": "Json containing information about RDDs used in the stage."
      },
      "Region": {
        "type": "string",
        "description": "The region of the cluster running the stage."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Role": {
        "type": "string",
        "description": "The type of node running the stage."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "StageId": {
        "type": "string",
        "description": "The ID of the stage."
      },
      "StageName": {
        "type": "string",
        "description": "The name of the stage."
      },
      "SubmissionTime": {
        "type": "datetime",
        "description": "The time (UTC) the stage was submitted."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TaskCount": {
        "type": "int",
        "description": "The count of tasks associated with the stage."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserSubscriptionId": {
        "type": "string",
        "description": "The subscription ID of the cluster running the stage."
      }
    }
  },
  "HDInsightSparkStageTaskAccumulables": {
    "tableName": "HDInsightSparkStageTaskAccumulables",
    "description": "Spark Stage Task Accumulables.",
    "columns": {
      "ApplicationId": {
        "type": "string",
        "description": "The application ID of the application producing the record."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClusterDnsName": {
        "type": "string",
        "description": "The DNS name of the cluster where the metric was collected."
      },
      "ClusterTenantId": {
        "type": "string",
        "description": "The tenant ID of the cluster where the metric was collected."
      },
      "Entity": {
        "type": "string",
        "description": "The name of the entity being described."
      },
      "EntityId": {
        "type": "string",
        "description": "The ID of the entity."
      },
      "Host": {
        "type": "string",
        "description": "The FQDN of the host where the metric was collected."
      },
      "IpAddress": {
        "type": "string",
        "description": "The IP Address of the node where the metric was collected."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "MetricId": {
        "type": "string",
        "description": "The ID of the metric."
      },
      "MetricName": {
        "type": "string",
        "description": "The name of the metric."
      },
      "MetricValue": {
        "type": "long",
        "description": "The value of the metric."
      },
      "ParentId": {
        "type": "string",
        "description": "The ID of the parent entity."
      },
      "Region": {
        "type": "string",
        "description": "The region of the cluster where the metric was collected."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Role": {
        "type": "string",
        "description": "The type of node where the metric was collected."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserSubscriptionId": {
        "type": "string",
        "description": "The subscription ID of the cluster where the metric was collected."
      }
    }
  },
  "HDInsightSparkTaskEvents": {
    "tableName": "HDInsightSparkTaskEvents",
    "description": "Spark Task Events.",
    "columns": {
      "ApplicationId": {
        "type": "string",
        "description": "The application ID of the application producing the record."
      },
      "AttemptId": {
        "type": "string",
        "description": "The ID of task attempt."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "BytesRead": {
        "type": "long",
        "description": "The number bytes read during the task."
      },
      "BytesWritten": {
        "type": "long",
        "description": "The number of bytes written by the task."
      },
      "ClusterDnsName": {
        "type": "string",
        "description": "The DNS name of the cluster running the task."
      },
      "ClusterTenantId": {
        "type": "string",
        "description": "The tenant ID of the cluster running the task."
      },
      "DiskBytesSpilled": {
        "type": "long",
        "description": "The number of disk bytes spilled."
      },
      "EndReason": {
        "type": "string",
        "description": "Reason why the task ended."
      },
      "ExecutorCPUTime": {
        "type": "long",
        "description": "The CPU time consumed by the task executor."
      },
      "ExecutorDeserializeCPUTime": {
        "type": "long",
        "description": "The CPU time the task executor spent deserializing."
      },
      "ExecutorDeserializeTime": {
        "type": "long",
        "description": "The time the task executor spent deserializing."
      },
      "ExecutorId": {
        "type": "string",
        "description": "The ID executor."
      },
      "ExecutorRunTime": {
        "type": "long",
        "description": "The time task executor spent running."
      },
      "Failed": {
        "type": "bool",
        "description": "Boolean describing whether the task failed."
      },
      "FinishTime": {
        "type": "datetime",
        "description": "The time (UTC) the task finished."
      },
      "Host": {
        "type": "string",
        "description": "The FQDN of the host running the task."
      },
      "InputMetrics": {
        "type": "long",
        "description": "The metrics associated with the task input."
      },
      "IpAddress": {
        "type": "string",
        "description": "The IP Address of the node running the task."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "JvmGcTime": {
        "type": "long",
        "description": "The time the JVM spent garbage collecting."
      },
      "Killed": {
        "type": "bool",
        "description": "Boolean describing whether the task was killed."
      },
      "LaunchTime": {
        "type": "datetime",
        "description": "The time (UTC) the task was launched."
      },
      "MemoryBytesSpilled": {
        "type": "long",
        "description": "The bytes of memory spilled."
      },
      "NumUpdatedBlockStatuses": {
        "type": "long",
        "description": "The number updated block statuses during the task."
      },
      "OutputMetrics": {
        "type": "long",
        "description": "The metrics associated with the task output."
      },
      "PeakExecutionMemory": {
        "type": "long",
        "description": "The peak amount of memory used during execution."
      },
      "RecordsRead": {
        "type": "long",
        "description": "The number of records read during the task."
      },
      "RecordsWritten": {
        "type": "long",
        "description": "The number of records written by the task."
      },
      "Region": {
        "type": "string",
        "description": "The region of the cluster running the task."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "ResultSerializationTime": {
        "type": "long",
        "description": "The serialization time spent while getting the result."
      },
      "ResultSize": {
        "type": "long",
        "description": "Size of the result."
      },
      "Role": {
        "type": "string",
        "description": "The type of node running the task."
      },
      "SchedulerDelay": {
        "type": "long",
        "description": "The amount of delay the scheduler experienced."
      },
      "ShuffleBytesWritten": {
        "type": "long",
        "description": "The bytes written during the shuffle task."
      },
      "ShuffleFetchWaitTime": {
        "type": "long",
        "description": "The time spent waitng for fetching."
      },
      "ShuffleLocalBlocksFetched": {
        "type": "long",
        "description": "The number of local blocks fethced during the shuffle task."
      },
      "ShuffleReadMetrics": {
        "type": "long",
        "description": "The metrics associated with shuffle reads."
      },
      "ShuffleRecordsWritten": {
        "type": "long",
        "description": "The number of records written during the shuffle task."
      },
      "ShuffleRemoteBlocksFetched": {
        "type": "long",
        "description": "The number of remote blocks fethced during the shuffle task."
      },
      "ShuffleTotalBlocksFetched": {
        "type": "long",
        "description": "The number of blocks fethced during the shuffle task."
      },
      "ShuffleTotalBytesRead": {
        "type": "long",
        "description": "The number bytes read during the shuffle task."
      },
      "ShuffleWriteMetrics": {
        "type": "long",
        "description": "The metrics associated with shuffle writes."
      },
      "ShuffleWriteTime": {
        "type": "long",
        "description": "The time spent writing during the shuffle task."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "StageId": {
        "type": "string",
        "description": "The ID of the stage associated with the task."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TaskId": {
        "type": "string",
        "description": "The ID of the task."
      },
      "TaskType": {
        "type": "string",
        "description": "The task type."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UpdatedBlocks": {
        "type": "long",
        "description": "The number of updated blocks."
      },
      "UserSubscriptionId": {
        "type": "string",
        "description": "The subscription ID of the cluster running the task"
      }
    }
  },
  "HDInsightStormLogs": {
    "tableName": "HDInsightStormLogs",
    "description": "All Logs from Storm cluster nodes.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClusterName": {
        "type": "string",
        "description": "Name of cluster."
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID for correlated events. Can be used to identify correlated events"
      },
      "HostName": {
        "type": "string",
        "description": "Name of host where log was emitted."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogLevel": {
        "type": "string",
        "description": "The severity level of the log (e.g. INFO,WARN, ERROR, etc.)"
      },
      "LogType": {
        "type": "string",
        "description": "The name of the log file that a record came from (e.g. StormNimbus,"
      },
      "Message": {
        "type": "string",
        "description": "message from Storm log."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "HDInsightStormMetrics": {
    "tableName": "HDInsightStormMetrics",
    "description": "Cluster Level Metrics from Storm clusters.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClusterName": {
        "type": "string",
        "description": "Name of cluster."
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID for correlated events. Can be used to identify correlated events"
      },
      "HostName": {
        "type": "string",
        "description": "Name of host where log was emitted."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "MetricDataType": {
        "type": "string",
        "description": "CollectD datatype of the metric (e.g. gauge, counter, etc.). Determines"
      },
      "MetricName": {
        "type": "string",
        "description": "Name of the metric for the record (e.g. num-submitTopology-calls-"
      },
      "MetricNamespace": {
        "type": "string",
        "description": "Category of metric(e.g. StormNimbusMetrics, StormSupervisorMetrics,"
      },
      "MetricValue": {
        "type": "real",
        "description": "Value of metric in the record."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "HDInsightStormTopologyMetrics": {
    "tableName": "HDInsightStormTopologyMetrics",
    "description": "Topology Level Metrics from Storm clusters.",
    "columns": {
      "Acked": {
        "type": "real",
        "description": "The number of Tuple \"trees\" successfully processed. A value of 0"
      },
      "AssignedCPUPercent": {
        "type": "real",
        "description": "Percent of CPU cores assigned to the topology."
      },
      "AssignedMemOffHeapMB": {
        "type": "real",
        "description": "MB of off heap memory assigned to the topology."
      },
      "AssignedMemOnHeapMB": {
        "type": "real",
        "description": "MB of on heap memory assigned to the topology."
      },
      "AssignedTotalMemMB": {
        "type": "real",
        "description": "MB of total memory assigned to the topology."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "BoltId": {
        "type": "string",
        "description": "The ID of the bolt."
      },
      "Capacity": {
        "type": "real",
        "description": "If this is around 1.0, the corresponding Bolt is running as fast as it"
      },
      "ClusterName": {
        "type": "string",
        "description": "The name of the cluster."
      },
      "ClusterType": {
        "type": "string",
        "description": "The type of the cluster."
      },
      "CompleteLatencyMs": {
        "type": "real",
        "description": "The average time (millisecond) a Tuple \"tree\" takes to be"
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID for correlated events. Can be used to identify correlated"
      },
      "Debug": {
        "type": "bool",
        "description": "Boolean representing whether debug tracing is activated."
      },
      "Emitted": {
        "type": "real",
        "description": "The number of Tuples emitted."
      },
      "EncodedBoltId": {
        "type": "string",
        "description": "The encoded ID of the bolt."
      },
      "EncodedId": {
        "type": "string",
        "description": "The enocded ID of the topology."
      },
      "EncodedSpoutId": {
        "type": "string",
        "description": "The encoded ID of the Spout."
      },
      "ErrorHost": {
        "type": "string",
        "description": "Host where the error occurred."
      },
      "ErrorPort": {
        "type": "string",
        "description": "Port associated with the error."
      },
      "ErrorWorkerLogLink": {
        "type": "string",
        "description": "Link to the log of the worker where an error occurred."
      },
      "Executed": {
        "type": "real",
        "description": "The number of incoming Tuples processed."
      },
      "ExecuteLatencyMs": {
        "type": "real",
        "description": "The average time (millisecond) a Tuple spends in the execute"
      },
      "Executors": {
        "type": "int",
        "description": "The number of threads being used to execute a task."
      },
      "ExecutorsTotal": {
        "type": "int",
        "description": "The total amount of executors currently used and already used to"
      },
      "Failed": {
        "type": "real",
        "description": "The number of Tuple \"trees\" that were explicitly failed or timed"
      },
      "HostName": {
        "type": "string",
        "description": "Hostname of the host the record came from."
      },
      "Id": {
        "type": "string",
        "description": "The name of the component the record is from (could be spout,"
      },
      "InstanceName": {
        "type": "string",
        "description": "Type of record shape (there are bolt, spout, topology, and"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "LastError": {
        "type": "string",
        "description": "Last error to occur in the component."
      },
      "MsgTimeout": {
        "type": "real",
        "description": "The number of seconds until a message times out."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "Owner": {
        "type": "string",
        "description": "Name of the user that owns the topology."
      },
      "ProcessLatencyMs": {
        "type": "real",
        "description": "The average time (millisecond) it takes to Ack a Tuple after it is"
      },
      "ReplicationCount": {
        "type": "int",
        "description": "The amount of replicas kept by the topology."
      },
      "RequestedCpuPercent": {
        "type": "real",
        "description": "The percent of CPU requested by the topology."
      },
      "RequestMemOffHeapMB": {
        "type": "real",
        "description": "MB of off heap memory requested by the topology."
      },
      "RequestMemOnHeapMB": {
        "type": "real",
        "description": "MB of on heap memory requested by the topology."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "SamplingPct": {
        "type": "real",
        "description": "Percentage of messages sampled to calculate metrics."
      },
      "SchedulerDisplayResource": {
        "type": "bool",
        "description": "Boolean describing the scheduler display setting."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "SpoutId": {
        "type": "string",
        "description": "The ID of the spout."
      },
      "Status": {
        "type": "string",
        "description": "The status of the topology."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "Tasks": {
        "type": "int",
        "description": "The number of tasks running."
      },
      "TasksTotal": {
        "type": "int",
        "description": "The total amount of tasks run."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "TopologyId": {
        "type": "string",
        "description": "The ID of the topology."
      },
      "TopologyName": {
        "type": "string",
        "description": "Name of the topology."
      },
      "Transferred": {
        "type": "real",
        "description": "The number of Tuples emitted that sent to one or more bolts."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "Uptime": {
        "type": "string",
        "description": "The length of time an Executor (thread) has been alive."
      },
      "UptimeSeconds": {
        "type": "real",
        "description": "The amount of time the topology has been running in seconds."
      },
      "Window": {
        "type": "real",
        "description": "The time window for the metrics in the record in seconds."
      },
      "WindowHint": {
        "type": "string",
        "description": "The time window for the metrics in the record in hours, minutes,"
      },
      "WindowPretty": {
        "type": "string",
        "description": "String description of the time window for the metrics in the"
      },
      "Workers": {
        "type": "string",
        "description": "JSON with worker specific metrics."
      },
      "WorkersTotal": {
        "type": "int",
        "description": "The total amount of workers."
      }
    }
  },
  "HealthStateChangeEvent": {
    "tableName": "HealthStateChangeEvent",
    "description": "Workload Monitor Health. This data represents state transitions of a health monitor.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CurrentMonitorState": {
        "type": "string",
        "description": "Current state of the monitor (Critical, Warning,"
      },
      "CurrentStateFirstObservedTimestamp": {
        "type": "datetime",
        "description": "Timestamp (UTC) when the current state of the"
      },
      "EvaluationTimestamp": {
        "type": "datetime",
        "description": "Timestamp (UTC) when the monitor health state"
      },
      "Evidence": {
        "type": "dynamic",
        "description": "Snapshot of samples and reason the monitor changed"
      },
      "ImpactStartTimestamp": {
        "type": "datetime",
        "description": "Timestamp (UTC) the monitor start change to non-"
      },
      "InstrumentationData": {
        "type": "dynamic",
        "description": "Current state of the monitor (Critical, Warning,"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "MonitorConfiguration": {
        "type": "dynamic",
        "description": "Configuration for the monitor. Aggregate monitor"
      },
      "MonitoredObject": {
        "type": "string",
        "description": "Object the monitor is monitoring. Values only exist for"
      },
      "MonitorName": {
        "type": "string",
        "description": "Name of the monitor, e.g. logical-disks|C:|free-space-"
      },
      "MonitorResourceId": {
        "type": "string",
        "description": "ARM resource id of the monitor."
      },
      "MonitorType": {
        "type": "string",
        "description": "Type of the monitor. Same as the monitor name for"
      },
      "ParentMonitorName": {
        "type": "string",
        "description": "Parent monitor name, e.g. logical-disks|C: for Windows"
      },
      "PreviousMonitorState": {
        "type": "string",
        "description": "Previous state of the monitor (Critical, Warning,"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (UTC) when the record was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "Heartbeat": {
    "tableName": "Heartbeat",
    "description": "Records logged by Log Analytics agents once per minute to report on agent health.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "Value is Direct Agent SCOM Agent or SCOM Management Server."
      },
      "Computer": {
        "type": "string",
        "description": "Computer name"
      },
      "ComputerEnvironment": {
        "type": "string",
        "description": "Environment that hosts the computer: Azure or Non-Azure"
      },
      "ComputerIP": {
        "type": "string",
        "description": "IP address of the computer. Note that public IP is used"
      },
      "ComputerPrivateIPs": {
        "type": "dynamic",
        "description": "The list of private IP addresses of the computer."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "IsGatewayInstalled": {
        "type": "bool",
        "description": "If Log Analytics gateway is installed value is true otherwise value is"
      },
      "ManagementGroupName": {
        "type": "string",
        "description": "Name of Operations Manager management group."
      },
      "OSMajorVersion": {
        "type": "string",
        "description": "Operating system major version."
      },
      "OSMinorVersion": {
        "type": "string",
        "description": "Operating system minor version."
      },
      "OSName": {
        "type": "string",
        "description": "Name of OS."
      },
      "OSType": {
        "type": "string",
        "description": "Type of OS. Possible values are Windows or Linux."
      },
      "RemoteIPCountry": {
        "type": "string",
        "description": "Geographic location where computer is deployed."
      },
      "RemoteIPLatitude": {
        "type": "real",
        "description": "Latitude of computer's geographic location."
      },
      "RemoteIPLongitude": {
        "type": "real",
        "description": "Longitude of computer's geographic location."
      },
      "Resource": {
        "type": "string",
        "description": "Resource group name of the Azure resource running the agent."
      },
      "ResourceGroup": {
        "type": "string",
        "description": "Resource name of the Azure resource running the agent."
      },
      "ResourceId": {
        "type": "string",
        "description": "Resource ID of the Azure resource running the agent. Retained for"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "ResourceProvider": {
        "type": "string",
        "description": "Resource provider of the Azure resource running the agent"
      },
      "ResourceType": {
        "type": "string",
        "description": "Type of the Azure resource running the agent. Examples include"
      },
      "SCAgentChannel": {
        "type": "string",
        "description": "Specfies how agent is connected to workspace. Possible values"
      },
      "Solutions": {
        "type": "string",
        "description": "List of solutions deployed on the agent at the moment when"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "SubscriptionId": {
        "type": "string",
        "description": "Subscription ID of the Azure resource running the agent"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time the record was created."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "Version": {
        "type": "string",
        "description": "Version of the agent."
      },
      "VMUUID": {
        "type": "string",
        "description": "Unique identifier of the virtual machine."
      }
    }
  },
  "HuntingBookmark": {
    "tableName": "HuntingBookmark",
    "description": "Azure sentinel hunting bookmarks audit table",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "BookmarkId": {
        "type": "string",
        "description": "Guid - the bookmark ARM resource name"
      },
      "BookmarkName": {
        "type": "string",
        "description": "Bookmark name given by the user"
      },
      "BookmarkType": {
        "type": "string",
        "description": "Can be used to mark bookmark origin - currently not used"
      },
      "CreatedBy": {
        "type": "string",
        "description": "JSON object with the user who created the bookmark, including: ObjectID,"
      },
      "CreatedTime": {
        "type": "datetime",
        "description": "The timestamp of bookmark first creation time"
      },
      "Entities": {
        "type": "string",
        "description": "A serialized JSON of entities mapped by this bookmark"
      },
      "EventTime": {
        "type": "datetime",
        "description": "The timestamp of the original event that is bookmarked"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LastUpdatedTime": {
        "type": "datetime",
        "description": "The timestamp of bookmark last update time"
      },
      "Notes": {
        "type": "string",
        "description": "Notes provided by user"
      },
      "QueryEndTime": {
        "type": "datetime",
        "description": "Query time range end time"
      },
      "QueryResultRow": {
        "type": "string",
        "description": "JSON object with a single result row of the query"
      },
      "QueryStartTime": {
        "type": "datetime",
        "description": "Query time range start time"
      },
      "QueryText": {
        "type": "string",
        "description": "Original log analytics query text"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SoftDeleted": {
        "type": "bool",
        "description": "Was the bookmark deleted by user"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "Tags": {
        "type": "string",
        "description": "Comma seperated list of tags provided by user"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of the log"
      },
      "Type": {
        "type": "string",
        "description": ""
      },
      "UpdatedBy": {
        "type": "string",
        "description": "JSON object with the user who last updated the bookmark, including:"
      }
    }
  },
  "IdentityDirectoryEvents": {
    "tableName": "IdentityDirectoryEvents",
    "description": "Captures various identity-related events, like password changes, password expiration, and user principal name (UPN) changes.",
    "columns": {
      "AccountDisplayName": {
        "type": "string",
        "description": "Name of the account user displayed in the address book"
      },
      "AccountDomain": {
        "type": "string",
        "description": "Domain of the account"
      },
      "AccountName": {
        "type": "string",
        "description": "User name of the account"
      },
      "AccountObjectId": {
        "type": "string",
        "description": "Unique identifier for the account in Azure AD"
      },
      "AccountSid": {
        "type": "string",
        "description": "Security Identifier (SID) of the account"
      },
      "AccountUpn": {
        "type": "string",
        "description": "User principal name (UPN) of the account"
      },
      "ActionType": {
        "type": "string",
        "description": "Type of activity that triggered the event"
      },
      "AdditionalFields": {
        "type": "dynamic",
        "description": "Additional information about the entity or event"
      },
      "Application": {
        "type": "string",
        "description": "Application that performed the recorded action"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DestinationDeviceName": {
        "type": "string",
        "description": "Name of the device running the server application that"
      },
      "DestinationIPAddress": {
        "type": "string",
        "description": "IP address of the device running the server application that"
      },
      "DestinationPort": {
        "type": "string",
        "description": "Destination port of related network communications"
      },
      "DeviceName": {
        "type": "string",
        "description": "Fully qualified domain name (FQDN) of the device"
      },
      "IPAddress": {
        "type": "string",
        "description": "IP address assigned to the endpoint and used during related"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable"
      },
      "ISP": {
        "type": "string",
        "description": "Internet service provider (ISP) associated with the endpoint IP"
      },
      "Location": {
        "type": "string",
        "description": "City, country, or other geographic location associated with the"
      },
      "Port": {
        "type": "string",
        "description": "TCP port used during communication"
      },
      "Protocol": {
        "type": "string",
        "description": "Protocol used during the communication"
      },
      "ReportId": {
        "type": "string",
        "description": "Unique identifier for the event"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "TargetAccountDisplayName": {
        "type": "string",
        "description": "Display name of the account that the recorded action was"
      },
      "TargetAccountUpn": {
        "type": "string",
        "description": "User principal name (UPN) of the account that the recorded"
      },
      "TargetDeviceName": {
        "type": "string",
        "description": "Fully qualified domain name (FQDN) of the device that the"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time (UTC) when the record was generated"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "IdentityInfo": {
    "tableName": "IdentityInfo",
    "description": "This table is populated by Azure Sentinel UEBA with all your users identities information. It can be used to correlate user information and insights with analytics or hunting queries.",
    "columns": {
      "AccountCloudSID": {
        "type": "string",
        "description": "The Azure AD security identifier of the account"
      },
      "AccountCreationTime": {
        "type": "datetime",
        "description": "The date the user account was created (UTC)"
      },
      "AccountDisplayName": {
        "type": "string",
        "description": "The user account display name"
      },
      "AccountDomain": {
        "type": "string",
        "description": "Domain name of the user account"
      },
      "AccountName": {
        "type": "string",
        "description": "User name of the account"
      },
      "AccountObjectId": {
        "type": "string",
        "description": "The Azure Active Directory object ID for the account"
      },
      "AccountSID": {
        "type": "string",
        "description": "The on premises security identifier of the account"
      },
      "AccountTenantId": {
        "type": "string",
        "description": "The Azure Active Directory Tenant ID of the account"
      },
      "AccountUPN": {
        "type": "string",
        "description": "User principal name of the account"
      },
      "AdditionalMailAddresses": {
        "type": "dynamic",
        "description": "Additional email addresses of the user"
      },
      "Applications": {
        "type": "string",
        "description": "All known applications this user account accessed"
      },
      "AssignedRoles": {
        "type": "dynamic",
        "description": "AAD roles the user account is assigned to"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "BlastRadius": {
        "type": "string",
        "description": "The potential impact of the user account in the org"
      },
      "ChangeSource": {
        "type": "string",
        "description": "The source of the latest change of the entity"
      },
      "City": {
        "type": "string",
        "description": "The city of the user account as defined in AAD"
      },
      "CompanyName": {
        "type": "string",
        "description": "The name for the company in which the user works."
      },
      "Country": {
        "type": "string",
        "description": "The country of the user account as defined in AAD"
      },
      "DeletedDateTime": {
        "type": "datetime",
        "description": "The date and time the user was deleted"
      },
      "Department": {
        "type": "string",
        "description": "The user account department as defined in AAD"
      },
      "EmployeeId": {
        "type": "string",
        "description": "The employee identifier assigned to the user by the"
      },
      "EntityRiskScore": {
        "type": "dynamic",
        "description": "The risk score of the entity as part of the UEBA scoring"
      },
      "ExtensionProperty": {
        "type": "dynamic",
        "description": "ExtensionProperty fields from Azure AD"
      },
      "GivenName": {
        "type": "string",
        "description": "The user account given name"
      },
      "GroupMembership": {
        "type": "dynamic",
        "description": "Azure AD Groups the user account is a member"
      },
      "InvestigationPriority": {
        "type": "int",
        "description": "The Investigation Priority score of the account"
      },
      "InvestigationPriorityPercentile": {
        "type": "int",
        "description": "The account score compared to the organization"
      },
      "IsAccountEnabled": {
        "type": "bool",
        "description": "Indication if the account is enabled in AAD or not"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "IsMFARegistered": {
        "type": "bool",
        "description": "Indication if MFA is registered for this user account or not"
      },
      "IsServiceAccount": {
        "type": "bool",
        "description": "The account is a service account."
      },
      "JobTitle": {
        "type": "string",
        "description": "The user account job title as defined in AAD"
      },
      "LastSeenDate": {
        "type": "datetime",
        "description": "Date of the last activity observed in this account"
      },
      "MailAddress": {
        "type": "string",
        "description": "The user account primary email address"
      },
      "Manager": {
        "type": "string",
        "description": "The user accounts manager alias"
      },
      "OnPremisesDistinguishedName": {
        "type": "string",
        "description": "Active Directory distinguished name (DN). A DN is a"
      },
      "OnPremisesExtensionAttributes": {
        "type": "string",
        "description": "OnPremisesExtensionAttributes field from Azure AD"
      },
      "Phone": {
        "type": "string",
        "description": "The phone number of the user account as defined in AAD"
      },
      "RelatedAccounts": {
        "type": "dynamic",
        "description": "Various accounts that correlate to a certain user"
      },
      "RiskLevel": {
        "type": "string",
        "description": "The AAD risk level (Low/Medium/High) of the user account"
      },
      "RiskLevelDetails": {
        "type": "string",
        "description": "Details regarding the AAD risk level"
      },
      "RiskState": {
        "type": "string",
        "description": "Indication if the account is at risk now or if the risk was"
      },
      "SAMAccountName": {
        "type": "string",
        "description": "The SAM account name of the account."
      },
      "ServicePrincipals": {
        "type": "dynamic",
        "description": "Azure AD service principals that are owned by the user"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "State": {
        "type": "string",
        "description": "The geographical state of the user account as defined in"
      },
      "StreetAddress": {
        "type": "string",
        "description": "The office street address of the user account as defined in"
      },
      "Surname": {
        "type": "string",
        "description": "The user account surname"
      },
      "Tags": {
        "type": "string",
        "description": "Relevant information on the user account which is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Time when the event was generated (UTC)"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UACFlags": {
        "type": "string",
        "description": "User Access control flags from AD & AAD"
      },
      "UserAccountControl": {
        "type": "dynamic",
        "description": "Security attributes of the user account in the AD domain"
      },
      "UserState": {
        "type": "string",
        "description": "The current state in AAD of the account"
      },
      "UserStateChangedOn": {
        "type": "datetime",
        "description": "Date of the last time the account state was changed (UTC)"
      },
      "UserType": {
        "type": "string",
        "description": "The user type as appears in Azure AD"
      }
    }
  },
  "IdentityLogonEvents": {
    "tableName": "IdentityLogonEvents",
    "description": "Authentication activities made through your on-premises Active Directory.",
    "columns": {
      "AccountDisplayName": {
        "type": "string",
        "description": "Name of the account user displayed in the address book"
      },
      "AccountDomain": {
        "type": "string",
        "description": "Domain of the account"
      },
      "AccountName": {
        "type": "string",
        "description": "User name of the account"
      },
      "AccountObjectId": {
        "type": "string",
        "description": "Unique identifier for the account in Azure AD"
      },
      "AccountSid": {
        "type": "string",
        "description": "Security Identifier (SID) of the account"
      },
      "AccountUpn": {
        "type": "string",
        "description": "User principal name (UPN) of the account"
      },
      "ActionType": {
        "type": "string",
        "description": "Type of activity that triggered the event"
      },
      "AdditionalFields": {
        "type": "dynamic",
        "description": "Additional information about the entity or event"
      },
      "Application": {
        "type": "string",
        "description": "Application that performed the recorded action"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DestinationDeviceName": {
        "type": "string",
        "description": "Name of the device running the server application that"
      },
      "DestinationIPAddress": {
        "type": "string",
        "description": "IP address of the device running the server application that"
      },
      "DestinationPort": {
        "type": "string",
        "description": "Destination port of related network communications"
      },
      "DeviceName": {
        "type": "string",
        "description": "Fully qualified domain name (FQDN) of the device"
      },
      "DeviceType": {
        "type": "string",
        "description": "Type of device"
      },
      "FailureReason": {
        "type": "string",
        "description": "Information explaining why the recorded action failed"
      },
      "IPAddress": {
        "type": "string",
        "description": "IP address assigned to the endpoint and used during related"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable"
      },
      "ISP": {
        "type": "string",
        "description": "Internet service provider (ISP) associated with the endpoint IP"
      },
      "Location": {
        "type": "string",
        "description": "City, country, or other geographic location associated with the"
      },
      "LogonType": {
        "type": "string",
        "description": "Type of logon session"
      },
      "OSPlatform": {
        "type": "string",
        "description": "Platform of the operating system running on the machine"
      },
      "Port": {
        "type": "string",
        "description": "TCP port used during communication"
      },
      "Protocol": {
        "type": "string",
        "description": "Network protocol used"
      },
      "ReportId": {
        "type": "string",
        "description": "Unique identifier for the event"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "TargetAccountDisplayName": {
        "type": "string",
        "description": "Display name of the account that the recorded action was"
      },
      "TargetDeviceName": {
        "type": "string",
        "description": "Fully qualified domain name (FQDN) of the device that the"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time (UTC) when the record was generated"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "IdentityQueryEvents": {
    "tableName": "IdentityQueryEvents",
    "description": "Information about queries performed against Active Directory objects, such as users, groups, devices, and domains.",
    "columns": {
      "AccountDisplayName": {
        "type": "string",
        "description": "Name of the account user displayed in the address book"
      },
      "AccountDomain": {
        "type": "string",
        "description": "Domain of the account"
      },
      "AccountName": {
        "type": "string",
        "description": "User name of the account"
      },
      "AccountObjectId": {
        "type": "string",
        "description": "Unique identifier for the account in Azure AD"
      },
      "AccountSid": {
        "type": "string",
        "description": "Security Identifier (SID) of the account"
      },
      "AccountUpn": {
        "type": "string",
        "description": "User principal name (UPN) of the account"
      },
      "ActionType": {
        "type": "string",
        "description": "Type of activity that triggered the event"
      },
      "AdditionalFields": {
        "type": "dynamic",
        "description": "Additional information about the entity or event"
      },
      "Application": {
        "type": "string",
        "description": "Application that performed the recorded action"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DestinationDeviceName": {
        "type": "string",
        "description": "Name of the device running the server application that"
      },
      "DestinationIPAddress": {
        "type": "string",
        "description": "IP address of the device running the server application that"
      },
      "DestinationPort": {
        "type": "string",
        "description": "Destination port of related network communications"
      },
      "DeviceName": {
        "type": "string",
        "description": "Fully qualified domain name (FQDN) of the device"
      },
      "IPAddress": {
        "type": "string",
        "description": "IP address assigned to the endpoint and used during related"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Location": {
        "type": "string",
        "description": "City, country, or other geographic location associated with the"
      },
      "Port": {
        "type": "int",
        "description": "Source or service port involved in the communication."
      },
      "Protocol": {
        "type": "string",
        "description": "Protocol used during the communication"
      },
      "Query": {
        "type": "string",
        "description": "String used to run the query"
      },
      "QueryTarget": {
        "type": "string",
        "description": "Name of user, group, device, domain, or any other entity type"
      },
      "QueryType": {
        "type": "string",
        "description": "Type of query, such as QueryGroup, QueryUser, or"
      },
      "ReportId": {
        "type": "string",
        "description": "Unique identifier for the event"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "TargetAccountDisplayName": {
        "type": "string",
        "description": "Display name of the account that the recorded action was"
      },
      "TargetAccountUpn": {
        "type": "string",
        "description": "User principal name (UPN) of the account that the recorded"
      },
      "TargetDeviceName": {
        "type": "string",
        "description": "Fully qualified domain name (FQDN) of the device that the"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp when the record or event was logged."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "AzureResourceId": {
        "type": "string",
        "description": "The Azure resource ID associated with the event."
      },
      "CvssSeverity": {
        "type": "string",
        "description": "CVSS (Common Vulnerability Scoring System) severity rating."
      },
      "DestCity": {
        "type": "string",
        "description": "City where the destination IP is geolocated."
      },
      "DestCountry": {
        "type": "string",
        "description": "Country where the destination IP is located."
      },
      "DestIP": {
        "type": "string",
        "description": "IP address of the destination."
      },
      "DestIsWellKnown": {
        "type": "bool",
        "description": "Indicates if the destination is a known/trusted entity."
      },
      "DestLabel": {
        "type": "string",
        "description": "Label or tag assigned to the destination entity."
      },
      "DestPort": {
        "type": "int",
        "description": "Port number on the destination endpoint."
      },
      "DestThreatLevel": {
        "type": "string",
        "description": "Threat level associated with the destination IP."
      },
      "FlowCount": {
        "type": "int",
        "description": "Number of flows or sessions detected for this event."
      },
      "IllumioTenantId": {
        "type": "string",
        "description": "Tenant ID assigned by Illumio for multi-tenant environments."
      },
      "IllumioUrl": {
        "type": "string",
        "description": "URL to view the record or associated details in the Illumio console."
      },
      "Name": {
        "type": "string",
        "description": "The name or type of the insight or event."
      },
      "Proto": {
        "type": "string",
        "description": "Protocol used in the communication (e.g., TCP, UDP)."
      },
      "ResourceInternalId": {
        "type": "string",
        "description": "Internal identifier for the monitored resource within Illumio."
      },
      "ResourceRegion": {
        "type": "string",
        "description": "The Azure region where the resource is deployed."
      },
      "ResourceSubId": {
        "type": "string",
        "description": "Azure subscription ID that contains the resource."
      },
      "ResourceTenantId": {
        "type": "string",
        "description": "Azure tenant ID to which the resource belongs."
      },
      "ResourceVnetId": {
        "type": "string",
        "description": "Identifier for the Virtual Network (VNet) associated with the resource."
      },
      "Service": {
        "type": "string",
        "description": "The name of the detected or used service (e.g., HTTP, SSH)."
      },
      "SrcCity": {
        "type": "string",
        "description": "City where the source IP is geolocated."
      },
      "SrcCountry": {
        "type": "string",
        "description": "Country where the source IP is located."
      },
      "SrcIP": {
        "type": "string",
        "description": "IP address of the source."
      },
      "SrcIsWellKnown": {
        "type": "bool",
        "description": "Indicates if the source is a known/trusted entity."
      },
      "SrcLabel": {
        "type": "string",
        "description": "Label or tag assigned to the source entity."
      },
      "SrcPort": {
        "type": "int",
        "description": "Port number used by the source entity."
      },
      "SrcThreatLevel": {
        "type": "string",
        "description": "Threat level (e.g., Low, Medium, High) associated with the source IP."
      },
      "Status": {
        "type": "string",
        "description": "Current status of the insight (e.g., Active, Resolved)."
      },
      "TotalReceivedBytes": {
        "type": "int",
        "description": "Total number of bytes received during the communication flow."
      },
      "TotalSentBytes": {
        "type": "int",
        "description": "Total number of bytes sent during the communication flow."
      },
      "UniqueId": {
        "type": "string",
        "description": "A unique identifier for the specific insight or event."
      },
      "VEScore": {
        "type": "real",
        "description": "Vulnerability exposure score indicating the risk level."
      }
    }
  },
  "InsightsMetrics": {
    "tableName": "InsightsMetrics",
    "description": "Table that stores metrics. 'Perf' table also stores many metrics and over time they all will converge to InsightsMetrics for Azure Monitor Solutions",
    "columns": {
      "AgentId": {
        "type": "string",
        "description": "Unique ID of the agent that sourced the metric instance"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Computer": {
        "type": "string",
        "description": "Computer name/Node name that sourced the metric instance"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Name": {
        "type": "string",
        "description": "Name of the metric"
      },
      "Namespace": {
        "type": "string",
        "description": "Name space/Category of the metric. Ex;- 'container.azm.ms/disk'"
      },
      "Origin": {
        "type": "string",
        "description": "Source of the metric. Ex;- 'container.azm.ms/telegraf'"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "Tags": {
        "type": "string",
        "description": "Dimensions of the metric in json"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time the record was created."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "Val": {
        "type": "real",
        "description": "Value of the metric"
      },
      "Value": {
        "type": "string",
        "description": ""
      }
    }
  },
  "IntuneAuditLogs": {
    "tableName": "IntuneAuditLogs",
    "description": "",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": ""
      },
      "CorrelationId": {
        "type": "string",
        "description": ""
      },
      "Identity": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "OperationName": {
        "type": "string",
        "description": ""
      },
      "Properties": {
        "type": "string",
        "description": ""
      },
      "ResultDescription": {
        "type": "string",
        "description": ""
      },
      "ResultType": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "IntuneDeviceComplianceOrg": {
    "tableName": "IntuneDeviceComplianceOrg",
    "description": "Intune device compliance specialist report.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ComplianceState": {
        "type": "string",
        "description": "The compliance state of the device."
      },
      "DeviceHealthThreatLevel": {
        "type": "string",
        "description": "The device health threat level."
      },
      "DeviceId": {
        "type": "string",
        "description": "The ID of the device"
      },
      "DeviceName": {
        "type": "string",
        "description": "The name of the device"
      },
      "DeviceType": {
        "type": "string",
        "description": "The type of the device."
      },
      "IMEI": {
        "type": "string",
        "description": "The international mobile equipment identifier of the device"
      },
      "InGracePeriodUntil": {
        "type": "string",
        "description": "The device grace period end time"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "LastContact": {
        "type": "string",
        "description": "The date and time of last contact"
      },
      "ManagementAgents": {
        "type": "string",
        "description": "The management agents."
      },
      "OS": {
        "type": "string",
        "description": "The operating system of the device"
      },
      "OSDescription": {
        "type": "string",
        "description": "The operating system of the device."
      },
      "OSVersion": {
        "type": "string",
        "description": "The version of the operating system"
      },
      "OwnerType": {
        "type": "string",
        "description": "The type of owner."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "Result": {
        "type": "string",
        "description": "The result of the operation"
      },
      "RetireAfterDatetime": {
        "type": "string",
        "description": "The retire after date time."
      },
      "SerialNumber": {
        "type": "string",
        "description": "The serial number of the device"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time when the report was generated (UTC)"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UPN": {
        "type": "string",
        "description": "The user principal name"
      },
      "UserEmail": {
        "type": "string",
        "description": "The user email address"
      },
      "UserId": {
        "type": "string",
        "description": "The Id of the user."
      },
      "UserName": {
        "type": "string",
        "description": "The user name"
      },
      "AADTenantId": {
        "type": "string",
        "description": "The AAD Tenant ID"
      },
      "AndroidPatchLevel": {
        "type": "string",
        "description": "The Android patch level of the device"
      },
      "BatchId": {
        "type": "string",
        "description": "The unique ID for the exported report"
      },
      "CategoryName": {
        "type": "string",
        "description": "The category name of the device"
      },
      "CompliantState": {
        "type": "string",
        "description": "The compliant state of the device"
      },
      "CreatedDate": {
        "type": "string",
        "description": "The date and time of the device entry was created"
      },
      "DeviceRegistrationState": {
        "type": "string",
        "description": "The registration state of the device"
      },
      "DeviceState": {
        "type": "string",
        "description": "The state of the device"
      },
      "EasID": {
        "type": "string",
        "description": "The Emergency Alert System Identification of the device"
      },
      "EncryptionStatusString": {
        "type": "string",
        "description": "String describing whether the device is encrypted"
      },
      "GraphDeviceIsManaged": {
        "type": "bool",
        "description": "Boolean describing whether the graph device is managed"
      },
      "IntuneAccountId": {
        "type": "string",
        "description": "The Intune Account ID"
      },
      "JailBroken": {
        "type": "string",
        "description": "String describing whether the device is jail broken"
      },
      "JoinType": {
        "type": "string",
        "description": "The device join type"
      },
      "ManagedBy": {
        "type": "string",
        "description": "The authority that the device is managed by"
      },
      "ManagedDeviceName": {
        "type": "string",
        "description": "The managed device name"
      },
      "Manufacturer": {
        "type": "string",
        "description": "The manufacturer of the device"
      },
      "MEID": {
        "type": "string",
        "description": "The mobile equipment identifier of the device"
      },
      "Model": {
        "type": "string",
        "description": "The model of the device"
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation"
      },
      "Ownership": {
        "type": "string",
        "description": "The ownership of the device"
      },
      "PhoneNumber": {
        "type": "string",
        "description": "The phone number"
      },
      "PrimaryUser": {
        "type": "string",
        "description": "The ID of the primary user"
      },
      "ReferenceId": {
        "type": "string",
        "description": "The AAD Device ID"
      },
      "SkuFamily": {
        "type": "string",
        "description": "The stock-keeping unit family of the device"
      },
      "Stats": {
        "type": "dynamic",
        "description": "Statistics about the export, including the number of records"
      },
      "StorageFree": {
        "type": "long",
        "description": "The free storage size of the device"
      },
      "StorageTotal": {
        "type": "long",
        "description": "The total storage size of the device"
      },
      "SubscriberCarrierNetwork": {
        "type": "string",
        "description": "The subscriber carrier network"
      },
      "SupervisedStatusString": {
        "type": "string",
        "description": "String describing whether the device is supervised"
      },
      "WifiMacAddress": {
        "type": "string",
        "description": "The WiFi MAC address of the device"
      }
    }
  },
  "IntuneOperationalLogs": {
    "tableName": "IntuneOperationalLogs",
    "description": "",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "OperationName": {
        "type": "string",
        "description": ""
      },
      "Properties": {
        "type": "string",
        "description": ""
      },
      "Result": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "CallerIpAddress": {
        "type": "string",
        "description": ""
      },
      "ClientInfo_s": {
        "type": "string",
        "description": ""
      },
      "Confidence": {
        "type": "string",
        "description": ""
      },
      "CorrelationId": {
        "type": "string",
        "description": ""
      },
      "Description": {
        "type": "string",
        "description": ""
      },
      "DurationMs": {
        "type": "long",
        "description": ""
      },
      "FirstReportedDateTime": {
        "type": "string",
        "description": ""
      },
      "HttpStatusCode_d": {
        "type": "real",
        "description": ""
      },
      "Id_s": {
        "type": "string",
        "description": ""
      },
      "Identity_o": {
        "type": "string",
        "description": ""
      },
      "IndicatorThreatType": {
        "type": "string",
        "description": ""
      },
      "IsActive": {
        "type": "string",
        "description": ""
      },
      "KeyProperties_o": {
        "type": "string",
        "description": ""
      },
      "LastReportedDateTime": {
        "type": "string",
        "description": ""
      },
      "MaliciousIP": {
        "type": "string",
        "description": ""
      },
      "OperationVersion": {
        "type": "string",
        "description": ""
      },
      "RemoteIPCountry": {
        "type": "string",
        "description": ""
      },
      "RemoteIPLatitude": {
        "type": "real",
        "description": ""
      },
      "RemoteIPLongitude": {
        "type": "real",
        "description": ""
      },
      "RequestUri_s": {
        "type": "string",
        "description": ""
      },
      "Resource": {
        "type": "string",
        "description": ""
      },
      "ResourceGroup": {
        "type": "string",
        "description": ""
      },
      "ResourceId": {
        "type": "string",
        "description": ""
      },
      "ResourceProvider": {
        "type": "string",
        "description": ""
      },
      "ResultDescription": {
        "type": "string",
        "description": ""
      },
      "ResultSignature": {
        "type": "string",
        "description": ""
      },
      "ResultType": {
        "type": "string",
        "description": ""
      },
      "SecretProperties_o": {
        "type": "string",
        "description": ""
      },
      "Severity": {
        "type": "int",
        "description": ""
      },
      "SubscriptionId": {
        "type": "string",
        "description": ""
      },
      "TLPLevel": {
        "type": "string",
        "description": ""
      },
      "VaultProperties_o": {
        "type": "string",
        "description": ""
      }
    }
  },
  "KubeEvents": {
    "tableName": "KubeEvents",
    "description": "Table that stores Kubernetes events",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClusterId": {
        "type": "string",
        "description": "ID of the kubernetes cluster from which the event was sourced"
      },
      "ClusterName": {
        "type": "string",
        "description": "ID of the kubernetes cluster from which the event was sourced"
      },
      "Computer": {
        "type": "string",
        "description": "Computer/node name in the cluster for which the event applies. If not,"
      },
      "Count": {
        "type": "real",
        "description": "Cumulative count of the number of occurences of a specific event"
      },
      "FirstSeen": {
        "type": "datetime",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "KubeEventType": {
        "type": "string",
        "description": "Type of kubernetes event [event.type]. Ex;- 'Normal'"
      },
      "LastSeen": {
        "type": "datetime",
        "description": "Time event was last observed [event.lastTimestamp]"
      },
      "Message": {
        "type": "string",
        "description": "Event message [event.message]"
      },
      "Name": {
        "type": "string",
        "description": "Involved kubernetes object's name [event.InvolvedObject.name]. Ex;-"
      },
      "Namespace": {
        "type": "string",
        "description": "Involved kubernetes object's namespace"
      },
      "ObjectKind": {
        "type": "string",
        "description": "Kind of kubernetes object applicable for the event"
      },
      "Reason": {
        "type": "string",
        "description": "Reason as seen in kubernetes event [event.reason]"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceComponent": {
        "type": "string",
        "description": "Source component that generated the event [event.source.component] ."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time the record was created."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "KubeHealth": {
    "tableName": "KubeHealth",
    "description": "",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClusterId": {
        "type": "string",
        "description": ""
      },
      "Details": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "MonitorConfig": {
        "type": "string",
        "description": ""
      },
      "MonitorInstanceId": {
        "type": "string",
        "description": ""
      },
      "MonitorLabels": {
        "type": "string",
        "description": ""
      },
      "MonitorTypeId": {
        "type": "string",
        "description": ""
      },
      "NewState": {
        "type": "string",
        "description": ""
      },
      "OldState": {
        "type": "string",
        "description": ""
      },
      "ParentMonitorInstanceId": {
        "type": "string",
        "description": ""
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TimeFirstObserved": {
        "type": "datetime",
        "description": ""
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "KubeMonAgentEvents": {
    "tableName": "KubeMonAgentEvents",
    "description": "Table that stores events from the Kubernetes cluster monitoring agent [Azure Monitor Agent]",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "Category of the event. For example: container.azm.ms/promscraping,"
      },
      "ClusterId": {
        "type": "string",
        "description": "ID of the kubernetes cluster from which the event was sourced"
      },
      "ClusterName": {
        "type": "string",
        "description": "ID of the kubernetes cluster from which the event was sourced"
      },
      "Computer": {
        "type": "string",
        "description": "Computer/node name in the cluster for which the event applies. If not,"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Level": {
        "type": "string",
        "description": "Event level for the event. [Error, Warning, Info]"
      },
      "Message": {
        "type": "string",
        "description": "Event message."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "Tags": {
        "type": "string",
        "description": "Dimensions/properties for the event"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time the record was created."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "KubeNodeInventory": {
    "tableName": "KubeNodeInventory",
    "description": "Table that stores Kubernetes cluster's node information.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClusterId": {
        "type": "string",
        "description": "ID of the Kubernetes cluster from which the event was sourced."
      },
      "ClusterName": {
        "type": "string",
        "description": "ID of the Kubernetes cluster from which the event was sourced."
      },
      "Computer": {
        "type": "string",
        "description": "Computer/node name in the cluster for which the event applies. If"
      },
      "CreationTimeStamp": {
        "type": "datetime",
        "description": "Node created time."
      },
      "DockerVersion": {
        "type": "string",
        "description": "Container runtime version."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "KubeletVersion": {
        "type": "string",
        "description": "Version of Kubelet in the node."
      },
      "KubeProxyVersion": {
        "type": "string",
        "description": "Version of KubeProxy in the node."
      },
      "KubernetesProviderID": {
        "type": "string",
        "description": "Provider ID for Kubernetes."
      },
      "Labels": {
        "type": "string",
        "description": "Kubernetes Node Labels."
      },
      "LastTransitionTimeReady": {
        "type": "datetime",
        "description": "Last transition to or from ready condition for the node (no matter"
      },
      "OperatingSystem": {
        "type": "string",
        "description": "Node's host OS Image."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "Status": {
        "type": "string",
        "description": "Comma separated list of node's status.conditions.type for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time the record was created."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "KubePVInventory": {
    "tableName": "KubePVInventory",
    "description": "Kubernetes persistent volumes and their properties.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClusterId": {
        "type": "string",
        "description": "The ID of the Kubernetes cluster of the persistent volume"
      },
      "ClusterName": {
        "type": "string",
        "description": "The name of the Kubernetes cluster of the persistent volume"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "PVAccessModes": {
        "type": "string",
        "description": "A comma separated list of access modes of the persistent volume"
      },
      "PVCapacityBytes": {
        "type": "real",
        "description": "The capacity of the persistent volume measured in bytes"
      },
      "PVCName": {
        "type": "string",
        "description": "The Kubernetes persistent volume claim name"
      },
      "PVCNamespace": {
        "type": "string",
        "description": "The Kubernetes namespace of the persistent volume claim"
      },
      "PVCreationTimeStamp": {
        "type": "datetime",
        "description": "The Kubernetes persistent volume creation time"
      },
      "PVName": {
        "type": "string",
        "description": "The Kubernetes persistent volume name"
      },
      "PVStatus": {
        "type": "string",
        "description": "The status of the persistent volume: Available, Bound, Released, or"
      },
      "PVStorageClassName": {
        "type": "string",
        "description": "The name of the storage class of the persistent volume"
      },
      "PVType": {
        "type": "string",
        "description": "The type of persistent volume from the list of Kubernetes supported"
      },
      "PVTypeInfo": {
        "type": "dynamic",
        "description": "The specific dimensions relating to the type of the persistent volume"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The date and time the record was created"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "KubePodInventory": {
    "tableName": "KubePodInventory",
    "description": "Table that stores kubernetes cluster's Pod & container information",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClusterId": {
        "type": "string",
        "description": "ID of the kubernetes cluster from which the event was sourced"
      },
      "ClusterName": {
        "type": "string",
        "description": "ID of the kubernetes cluster from which the event was sourced"
      },
      "Computer": {
        "type": "string",
        "description": "Computer/node name in the cluster that has this"
      },
      "ContainerCreationTimeStamp": {
        "type": "datetime",
        "description": "Container creation time"
      },
      "ContainerID": {
        "type": "string",
        "description": "Container's ID"
      },
      "ContainerLastStatus": {
        "type": "string",
        "description": "Container's last observed last status"
      },
      "ContainerName": {
        "type": "string",
        "description": "Container name. This is in poduid/containername format."
      },
      "ContainerRestartCount": {
        "type": "int",
        "description": "Restart count for the container"
      },
      "ContainerStartTime": {
        "type": "datetime",
        "description": "Time container started."
      },
      "ContainerStatus": {
        "type": "string",
        "description": "Container's last observered current state [container.state]"
      },
      "ContainerStatusReason": {
        "type": "string",
        "description": "Reason if any for container's status."
      },
      "ControllerKind": {
        "type": "string",
        "description": "Container/Pod's controller kind. For example: ReplicaSet"
      },
      "ControllerName": {
        "type": "string",
        "description": "Container/Pod's controller Name. Ex;- kubernetes-dashboard-"
      },
      "InstanceName": {
        "type": "string",
        "description": "Not used currently[for future use]"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "Name": {
        "type": "string",
        "description": "Kubernetes Pod Name"
      },
      "Namespace": {
        "type": "string",
        "description": "Kubernetes Namespace for the pod/container"
      },
      "PodCreationTimeStamp": {
        "type": "datetime",
        "description": "Pod creation time"
      },
      "PodIp": {
        "type": "string",
        "description": "Pod's IP Address"
      },
      "PodLabel": {
        "type": "string",
        "description": "Pod Labels"
      },
      "PodRestartCount": {
        "type": "int",
        "description": "Restart count for the pod. [Sum of all restarts of all containers"
      },
      "PodStartTime": {
        "type": "datetime",
        "description": "Pod's start time (for started pods)"
      },
      "PodStatus": {
        "type": "string",
        "description": "Last observed Pod Status [pod.status.phase]"
      },
      "PodUid": {
        "type": "string",
        "description": "Unique ID of the pod"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "ServiceName": {
        "type": "string",
        "description": "Kubernetes Service the pod belongs to (if any)"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time the record was created."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "KubeServices": {
    "tableName": "KubeServices",
    "description": "Table that stores Kubernetes services information.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClusterId": {
        "type": "string",
        "description": "ID of the Kubernetes cluster from which the event was sourced."
      },
      "ClusterIp": {
        "type": "string",
        "description": "Cluster IP address of the service."
      },
      "ClusterName": {
        "type": "string",
        "description": "Name of the Kubernetes cluster from which the event was sourced."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Namespace": {
        "type": "string",
        "description": "Kubernetes namespace for the service."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SelectorLabels": {
        "type": "string",
        "description": "Selector labels for label based services."
      },
      "ServiceName": {
        "type": "string",
        "description": "Name of the Kubernetes service."
      },
      "ServiceType": {
        "type": "string",
        "description": "Type of Kubernetes service"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The time (UTC) of each status change in the job."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "CorrelationId": {
        "type": "string",
        "description": "The correlation ID of the Job action. Can be used to reference with logs"
      },
      "Destination": {
        "type": "dynamic",
        "description": "The destination information based on the JobType. e.g. 'Export' includes"
      },
      "JobId": {
        "type": "string",
        "description": "The ID of the job. Can be used as operationId in the operation resource"
      },
      "JobType": {
        "type": "string",
        "description": "The type of the job. e.g. 'Export'."
      },
      "Message": {
        "type": "string",
        "description": "A message describing the job's operation or error."
      },
      "ResultsGB": {
        "type": "real",
        "description": "The results volume in Gigabytes. e.g. the number of Gigabytes exported"
      },
      "ResultsRecordCount": {
        "type": "long",
        "description": "The number of records in the job's result."
      },
      "SourceTable": {
        "type": "string",
        "description": "The table(s) used in the job's query."
      },
      "Status": {
        "type": "string",
        "description": "The job's status, including 'Started', 'Succeeded', 'Canceled, 'Failed'."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      }
    }
  },
  "LAQueryLogs": {
    "tableName": "LAQueryLogs",
    "description": "Audit logs for queries executed in Log Analytics Workspaces.",
    "columns": {
      "AADClientId": {
        "type": "string",
        "description": "AAD ClientId used by the caller."
      },
      "AADEmail": {
        "type": "string",
        "description": "AAD Email of the caller."
      },
      "AADObjectId": {
        "type": "string",
        "description": "AAD ObjectId of the caller."
      },
      "AADTenantId": {
        "type": "string",
        "description": "AAD TenantId of the caller."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ConditionalDataAccess": {
        "type": "string",
        "description": "Indicates whether the query was executed with an applicable"
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID for correlated events."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "IsBillableQuery": {
        "type": "bool",
        "description": "Indicates whether query execution is billed."
      },
      "IsWorkspaceInFailover": {
        "type": "bool",
        "description": "Indicates whether the queried workspace was in failover mode."
      },
      "QueryText": {
        "type": "string",
        "description": "The full body of the query as submitted by the user."
      },
      "QueryTimeRangeEnd": {
        "type": "datetime",
        "description": "The end time (UTC) of the time range across which the query was"
      },
      "QueryTimeRangeStart": {
        "type": "datetime",
        "description": "The starting time (UTC) of the time range across which the query"
      },
      "RequestClientApp": {
        "type": "string",
        "description": "ClientApp string in the request header (x-ms-app)."
      },
      "RequestContext": {
        "type": "dynamic",
        "description": "ResourceId of all referenced workspaces, applications, and"
      },
      "RequestContextFilters": {
        "type": "dynamic",
        "description": "Filters applied to the request context."
      },
      "RequestTarget": {
        "type": "string",
        "description": "ResourceId of the request URL."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "ResponseCode": {
        "type": "int",
        "description": "The HTTP response code for the request."
      },
      "ResponseDurationMs": {
        "type": "real",
        "description": "The duration (in ms) that the query took to execute."
      },
      "ResponseRowCount": {
        "type": "int",
        "description": "The number of rows that were returned."
      },
      "ScannedGB": {
        "type": "real",
        "description": "For billable queries, like Basic logs queries, indicates the total GB of"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "StatsCPUTimeMs": {
        "type": "real",
        "description": "The CPU (in ms) used in the execution of this query."
      },
      "StatsDataProcessedEnd": {
        "type": "datetime",
        "description": "The end time (UTC) of the time range across which the data"
      },
      "StatsDataProcessedStart": {
        "type": "datetime",
        "description": "The starting time (UTC) of the time range across which the data"
      },
      "StatsRegionCount": {
        "type": "int",
        "description": "The number of regions that the workspaces accessed are spread"
      },
      "StatsWorkspaceCount": {
        "type": "int",
        "description": "The number of workspaces that the query accessed, either explicitly"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) at which the query was submitted."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "WorkspaceRegion": {
        "type": "string",
        "description": "The region of the queried workspace."
      }
    }
  },
  "LASummaryLogs": {
    "tableName": "LASummaryLogs",
    "description": "Provides Summary logs rules execution details, including run status, duration and errors. Can be used to view bins executions statuses, identify rules that take a long time to complete, and failures that could be optimized in query, or shorted bin time.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "BinSize": {
        "type": "int",
        "description": "The time ranges summarization is performed in minutes. For"
      },
      "BinStartTime": {
        "type": "datetime",
        "description": "The bin start time (UTC). For example, value can be 2023-01-"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable."
      },
      "Message": {
        "type": "string",
        "description": "An error message when applicable."
      },
      "QueryDurationMs": {
        "type": "long",
        "description": "The execution duration in milliseconds."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record"
      },
      "ResultsRecordCount": {
        "type": "long",
        "description": "The number of records returned in aggregation."
      },
      "RuleLastModifiedTime": {
        "type": "datetime",
        "description": "The time the rule last modified. Can be used to reason changes in"
      },
      "RuleName": {
        "type": "string",
        "description": "The rule name."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For"
      },
      "Status": {
        "type": "string",
        "description": "The bin execution status. Can be Started, Succeeded or Failed."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when this event was"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "AgreementProperties": {
        "type": "dynamic",
        "description": "Agreement properties for the electronic data"
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID for correlated events."
      },
      "Error": {
        "type": "dynamic",
        "description": "The tracking event error information."
      },
      "EventRecordType": {
        "type": "string",
        "description": "The Tracking record type."
      },
      "EventTime": {
        "type": "datetime",
        "description": "The event time."
      },
      "MessageProperties": {
        "type": "dynamic",
        "description": "Message properties for the electronic data"
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation represented by this"
      },
      "OperationVersion": {
        "type": "string",
        "description": "The version of the operation represented by this"
      },
      "SourceType": {
        "type": "string",
        "description": "The tracking events source type."
      },
      "TrackingId": {
        "type": "string",
        "description": "The tracking ID."
      },
      "WorkflowName": {
        "type": "string",
        "description": "The name of the workflow."
      },
      "WorkflowOperationClientRequestId": {
        "type": "string",
        "description": "The client request ID of the logic app operation."
      },
      "WorkflowOperationCorrelationId": {
        "type": "string",
        "description": "The correlation ID of the logic app operation."
      },
      "WorkflowOperationName": {
        "type": "string",
        "description": "The logic app operation name."
      },
      "WorkflowOperationOperationTrackingId": {
        "type": "string",
        "description": "The operation tracking ID of the logic app"
      },
      "WorkflowOperationTrackingId": {
        "type": "string",
        "description": "The tracking ID of the logic app operation."
      },
      "WorkflowRepeatItemBatchIndex": {
        "type": "int",
        "description": "The index of the repeat item batch."
      },
      "WorkflowRepeatItemIndex": {
        "type": "int",
        "description": "The repeat item index."
      },
      "WorkflowRepeatItemScopeName": {
        "type": "string",
        "description": "The repeat item scope name."
      },
      "WorkflowResourceGroup": {
        "type": "string",
        "description": "The resource group name of the workflow."
      },
      "WorkflowRunClientTrackingId": {
        "type": "string",
        "description": "The client tracking ID of the run."
      },
      "WorkflowRunId": {
        "type": "string",
        "description": "The logic app run ID."
      },
      "WorkflowRunTrackingId": {
        "type": "string",
        "description": "The tracking ID of the run."
      },
      "WorkflowSubscriptionId": {
        "type": "string",
        "description": "The subscription ID of the workflow."
      },
      "WorkflowSystemId": {
        "type": "string",
        "description": "The workflow system tracking ID."
      },
      "WorkflowVersion": {
        "type": "string",
        "description": "The version of the workflow."
      }
    }
  },
  "LogicAppWorkflowRuntime": {
    "tableName": "LogicAppWorkflowRuntime",
    "description": "Logs generated during Logic Apps workflow runtime.",
    "columns": {
      "ActionName": {
        "type": "string",
        "description": "The name of the workflow action."
      },
      "ActionTrackingId": {
        "type": "string",
        "description": "The unique ID of the workflow action."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClientKeywords": {
        "type": "string",
        "description": "The client keywords sent through the header."
      },
      "ClientTrackingId": {
        "type": "string",
        "description": "The unique ID of the client."
      },
      "Code": {
        "type": "string",
        "description": "The HTTP status code of the request."
      },
      "EndTime": {
        "type": "datetime",
        "description": "The end time (UTC) of the operation."
      },
      "Error": {
        "type": "string",
        "description": "The error message of this operation."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Location": {
        "type": "string",
        "description": "The geographical run location of the workflow."
      },
      "OperationName": {
        "type": "string",
        "description": "The name of this operation."
      },
      "OriginRunId": {
        "type": "string",
        "description": "The unique ID of the original workflow run, only relevant for resubmission"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "RetryHistory": {
        "type": "string",
        "description": "The retry history of the workflow action."
      },
      "RunId": {
        "type": "string",
        "description": "The unique ID of the workflow run."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "StartTime": {
        "type": "datetime",
        "description": "The start time (UTC) of the operation."
      },
      "Status": {
        "type": "string",
        "description": "The status of the operation, e.g. Succeeded, Failed, Skipped, Ignored."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "Tags": {
        "type": "string",
        "description": "The custom tags associated with the workflow."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "TrackedProperties": {
        "type": "string",
        "description": "The custom tracked properties."
      },
      "TriggerName": {
        "type": "string",
        "description": "The name of the workflow trigger."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "WorkflowId": {
        "type": "string",
        "description": "The unique ID of the workflow."
      },
      "WorkflowName": {
        "type": "string",
        "description": "The name of the workflow."
      }
    }
  },
  "MAApplication": {
    "tableName": "MAApplication",
    "description": "",
    "columns": {
      "AppCategory": {
        "type": "string",
        "description": ""
      },
      "AppLanguage": {
        "type": "string",
        "description": ""
      },
      "AppName": {
        "type": "string",
        "description": ""
      },
      "AppType": {
        "type": "string",
        "description": ""
      },
      "AppVendor": {
        "type": "string",
        "description": ""
      },
      "AppVersion": {
        "type": "string",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "HasSupportStatement": {
        "type": "bool",
        "description": ""
      },
      "Importance": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "IsVirtualized": {
        "type": "bool",
        "description": ""
      },
      "MonthlyActiveDevices": {
        "type": "int",
        "description": ""
      },
      "NPId": {
        "type": "string",
        "description": ""
      },
      "ProgramId": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "TestOwner": {
        "type": "string",
        "description": ""
      },
      "TestPlan": {
        "type": "string",
        "description": ""
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "TotalInstalls": {
        "type": "int",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "MAApplicationHealth": {
    "tableName": "MAApplicationHealth",
    "description": "",
    "columns": {
      "ActiveDevicesOnSource": {
        "type": "int",
        "description": ""
      },
      "ActiveDevicesOnTarget": {
        "type": "int",
        "description": ""
      },
      "AppLanguage": {
        "type": "string",
        "description": ""
      },
      "AppName": {
        "type": "string",
        "description": ""
      },
      "AppVendor": {
        "type": "string",
        "description": ""
      },
      "AppVersion": {
        "type": "string",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DevicesWithCrashesOnSource": {
        "type": "int",
        "description": ""
      },
      "DevicesWithCrashesOnTarget": {
        "type": "int",
        "description": ""
      },
      "DevicesWithCrashesPercentOnTargetForCommercial": {
        "type": "real",
        "description": ""
      },
      "HealthStatus": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is"
      },
      "OSVersion": {
        "type": "string",
        "description": ""
      },
      "ProgramId": {
        "type": "string",
        "description": ""
      },
      "SessionsWithCrashesOnSource": {
        "type": "int",
        "description": ""
      },
      "SessionsWithCrashesOnTarget": {
        "type": "int",
        "description": ""
      },
      "SessionsWithCrashesPercentOnTargetForCommercial": {
        "type": "real",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "TotalDevicesInstalledOnSource": {
        "type": "int",
        "description": ""
      },
      "TotalDevicesInstalledOnTarget": {
        "type": "int",
        "description": ""
      },
      "TotalSessionsOnSource": {
        "type": "int",
        "description": ""
      },
      "TotalSessionsOnTarget": {
        "type": "int",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "MAApplicationHealthAlternativeVersions": {
    "tableName": "MAApplicationHealthAlternativeVersions",
    "description": "",
    "columns": {
      "AdoptionStatus": {
        "type": "string",
        "description": ""
      },
      "AppLanguage": {
        "type": "string",
        "description": ""
      },
      "AppName": {
        "type": "string",
        "description": ""
      },
      "AppVendor": {
        "type": "string",
        "description": ""
      },
      "AppVersion": {
        "type": "string",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DevicesWithCrashesPercentOnTargetForCommercial": {
        "type": "real",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is"
      },
      "OSVersion": {
        "type": "string",
        "description": ""
      },
      "ProgramId": {
        "type": "string",
        "description": ""
      },
      "SessionsWithCrashesPercentOnTargetForCommercial": {
        "type": "real",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "MAApplicationHealthIssues": {
    "tableName": "MAApplicationHealthIssues",
    "description": "",
    "columns": {
      "AppFileDisplayName": {
        "type": "string",
        "description": ""
      },
      "AppFileName": {
        "type": "string",
        "description": ""
      },
      "AppFileVersion": {
        "type": "string",
        "description": ""
      },
      "AppLanguage": {
        "type": "string",
        "description": ""
      },
      "AppName": {
        "type": "string",
        "description": ""
      },
      "AppVendor": {
        "type": "string",
        "description": ""
      },
      "AppVersion": {
        "type": "string",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DeviceId": {
        "type": "string",
        "description": ""
      },
      "DiagnosticSignature": {
        "type": "string",
        "description": ""
      },
      "FailureId": {
        "type": "string",
        "description": ""
      },
      "FailureInstanceCount": {
        "type": "int",
        "description": ""
      },
      "FirstFailureDate": {
        "type": "datetime",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "LastFailureDate": {
        "type": "datetime",
        "description": ""
      },
      "OSVersion": {
        "type": "string",
        "description": ""
      },
      "ProgramId": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "MAApplicationInstance": {
    "tableName": "MAApplicationInstance",
    "description": "",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DeviceId": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "ProgramID": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "MAApplicationInstanceReadiness": {
    "tableName": "MAApplicationInstanceReadiness",
    "description": "",
    "columns": {
      "AppLanguage": {
        "type": "string",
        "description": ""
      },
      "AppName": {
        "type": "string",
        "description": ""
      },
      "AppVendor": {
        "type": "string",
        "description": ""
      },
      "AppVersion": {
        "type": "string",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ConfigMgrClientID": {
        "type": "string",
        "description": ""
      },
      "DeploymentPlanId": {
        "type": "string",
        "description": ""
      },
      "DeviceId": {
        "type": "string",
        "description": ""
      },
      "DeviceName": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Issue": {
        "type": "string",
        "description": ""
      },
      "ProgramId": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "MAApplicationReadiness": {
    "tableName": "MAApplicationReadiness",
    "description": "",
    "columns": {
      "AdoptionStatus": {
        "type": "string",
        "description": ""
      },
      "AHAInsight": {
        "type": "string",
        "description": ""
      },
      "AppCategory": {
        "type": "string",
        "description": ""
      },
      "AppLanguage": {
        "type": "string",
        "description": ""
      },
      "AppName": {
        "type": "string",
        "description": ""
      },
      "AppType": {
        "type": "string",
        "description": ""
      },
      "AppVendor": {
        "type": "string",
        "description": ""
      },
      "AppVersion": {
        "type": "string",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DeploymentPlanId": {
        "type": "string",
        "description": ""
      },
      "DevicesWithIssues": {
        "type": "int",
        "description": ""
      },
      "Guidance": {
        "type": "string",
        "description": ""
      },
      "HasSupportStatement": {
        "type": "bool",
        "description": ""
      },
      "Importance": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Issue": {
        "type": "string",
        "description": ""
      },
      "IsVirtualized": {
        "type": "bool",
        "description": ""
      },
      "MonthlyActiveDevices": {
        "type": "int",
        "description": ""
      },
      "Notes": {
        "type": "string",
        "description": ""
      },
      "NPId": {
        "type": "string",
        "description": ""
      },
      "ProgramId": {
        "type": "string",
        "description": ""
      },
      "Remediation": {
        "type": "string",
        "description": ""
      },
      "RiskAssessment": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "TestOwner": {
        "type": "string",
        "description": ""
      },
      "TestPlan": {
        "type": "string",
        "description": ""
      },
      "TestResult": {
        "type": "string",
        "description": ""
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "TotalInstalls": {
        "type": "int",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UpgradeDecision": {
        "type": "string",
        "description": ""
      }
    }
  },
  "MADeploymentPlan": {
    "tableName": "MADeploymentPlan",
    "description": "",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CompletionDate": {
        "type": "datetime",
        "description": ""
      },
      "DeploymentPlanId": {
        "type": "string",
        "description": ""
      },
      "DeploymentTask": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Name": {
        "type": "string",
        "description": ""
      },
      "OfficeTargetBuild": {
        "type": "string",
        "description": ""
      },
      "OfficeTargetRelease": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "WindowsTargetBuild": {
        "type": "string",
        "description": ""
      },
      "WindowsTargetRelease": {
        "type": "string",
        "description": ""
      }
    }
  },
  "MADeviceNRT": {
    "tableName": "MADeviceNRT",
    "description": "",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DeviceFirstSeenDate": {
        "type": "datetime",
        "description": ""
      },
      "DeviceId": {
        "type": "string",
        "description": ""
      },
      "DeviceName": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Manufacturer": {
        "type": "string",
        "description": ""
      },
      "ModelFamily": {
        "type": "string",
        "description": ""
      },
      "OSBuildNumber": {
        "type": "int",
        "description": ""
      },
      "OSRevisionNumber": {
        "type": "int",
        "description": ""
      },
      "OSVersion": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "MADeviceNotEnrolled": {
    "tableName": "MADeviceNotEnrolled",
    "description": "",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ConfigMgrClientID": {
        "type": "string",
        "description": ""
      },
      "ConfigMgrLastSeenDate": {
        "type": "datetime",
        "description": ""
      },
      "DeviceName": {
        "type": "string",
        "description": ""
      },
      "HasEnrollmentError": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "OEMSerialNumber": {
        "type": "string",
        "description": ""
      },
      "PropertyBag": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "MADeviceReadiness": {
    "tableName": "MADeviceReadiness",
    "description": "",
    "columns": {
      "AppIssues": {
        "type": "int",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ConfigMgrClientID": {
        "type": "string",
        "description": ""
      },
      "DeploymentPlanId": {
        "type": "string",
        "description": ""
      },
      "DeviceId": {
        "type": "string",
        "description": ""
      },
      "DeviceLastSeenDate": {
        "type": "datetime",
        "description": ""
      },
      "DeviceName": {
        "type": "string",
        "description": ""
      },
      "DeviceStatus": {
        "type": "int",
        "description": ""
      },
      "DriverIssues": {
        "type": "int",
        "description": ""
      },
      "InventoryCompleteness": {
        "type": "bool",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable"
      },
      "MacroIssues": {
        "type": "int",
        "description": ""
      },
      "Manufacturer": {
        "type": "string",
        "description": ""
      },
      "ModelFamily": {
        "type": "string",
        "description": ""
      },
      "OfficeAddInIssues": {
        "type": "int",
        "description": ""
      },
      "OfficeAppIssues": {
        "type": "int",
        "description": ""
      },
      "OfficeBuild": {
        "type": "string",
        "description": ""
      },
      "OfficeUpgradeDecision": {
        "type": "string",
        "description": ""
      },
      "OfficeVersion": {
        "type": "string",
        "description": ""
      },
      "OSBuild": {
        "type": "string",
        "description": ""
      },
      "OSVersion": {
        "type": "string",
        "description": ""
      },
      "PilotDevice": {
        "type": "bool",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "SysReqIssues": {
        "type": "int",
        "description": ""
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "TotalIssues": {
        "type": "int",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "WindowsUpgradeDecision": {
        "type": "string",
        "description": ""
      }
    }
  },
  "MADriverInstanceReadiness": {
    "tableName": "MADriverInstanceReadiness",
    "description": "",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ConfigMgrClientID": {
        "type": "string",
        "description": ""
      },
      "DeploymentPlanId": {
        "type": "string",
        "description": ""
      },
      "DeviceId": {
        "type": "string",
        "description": ""
      },
      "DeviceName": {
        "type": "string",
        "description": ""
      },
      "DriverName": {
        "type": "string",
        "description": ""
      },
      "DriverVersion": {
        "type": "string",
        "description": ""
      },
      "HardwareID": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Issue": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "MADriverReadiness": {
    "tableName": "MADriverReadiness",
    "description": "",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DeploymentPlanId": {
        "type": "string",
        "description": ""
      },
      "DriverAvailability": {
        "type": "string",
        "description": ""
      },
      "DriverDate": {
        "type": "string",
        "description": ""
      },
      "DriverKey": {
        "type": "long",
        "description": ""
      },
      "DriverName": {
        "type": "string",
        "description": ""
      },
      "DriverVendor": {
        "type": "string",
        "description": ""
      },
      "DriverVersion": {
        "type": "string",
        "description": ""
      },
      "Guidance": {
        "type": "string",
        "description": ""
      },
      "HardwareID": {
        "type": "string",
        "description": ""
      },
      "HardwareName": {
        "type": "string",
        "description": ""
      },
      "HardwareType": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Issue": {
        "type": "string",
        "description": ""
      },
      "Remediation": {
        "type": "string",
        "description": ""
      },
      "RiskAssessment": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "TotalComputers": {
        "type": "int",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UpgradeDecision": {
        "type": "string",
        "description": ""
      }
    }
  },
  "MAOfficeAddin": {
    "tableName": "MAOfficeAddin",
    "description": "",
    "columns": {
      "AddinInstanceId": {
        "type": "string",
        "description": ""
      },
      "AddinName": {
        "type": "string",
        "description": ""
      },
      "AddinProducts": {
        "type": "string",
        "description": ""
      },
      "AddinPublisher": {
        "type": "string",
        "description": ""
      },
      "AddinRemarks": {
        "type": "string",
        "description": ""
      },
      "AddinSupportStatementUrl": {
        "type": "string",
        "description": ""
      },
      "AddinSupportStatus": {
        "type": "string",
        "description": ""
      },
      "AddinVersion": {
        "type": "string",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Importance": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "TestOwner": {
        "type": "string",
        "description": ""
      },
      "TestPlan": {
        "type": "string",
        "description": ""
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "TotalInstalls": {
        "type": "int",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "DeviceId": {
        "type": "string",
        "description": ""
      },
      "DurationInMicroseconds": {
        "type": "int",
        "description": ""
      },
      "EventType": {
        "type": "int",
        "description": ""
      },
      "EventTypeName": {
        "type": "string",
        "description": ""
      },
      "IsVSTO": {
        "type": "bool",
        "description": ""
      },
      "LoadAttempts": {
        "type": "int",
        "description": ""
      },
      "OfficeApplication": {
        "type": "string",
        "description": ""
      },
      "OfficeAppRelease": {
        "type": "string",
        "description": ""
      },
      "OfficeInterface": {
        "type": "string",
        "description": ""
      },
      "OfficeMethod": {
        "type": "string",
        "description": ""
      },
      "Timestamp": {
        "type": "datetime",
        "description": ""
      }
    }
  },
  "MAOfficeAddinInstance": {
    "tableName": "MAOfficeAddinInstance",
    "description": "",
    "columns": {
      "AddinInstanceId": {
        "type": "string",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DeviceId": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "MAOfficeAddinReadiness": {
    "tableName": "MAOfficeAddinReadiness",
    "description": "",
    "columns": {
      "AddinInstanceId": {
        "type": "string",
        "description": ""
      },
      "AddinName": {
        "type": "string",
        "description": ""
      },
      "AddinProducts": {
        "type": "string",
        "description": ""
      },
      "AddinPublisher": {
        "type": "string",
        "description": ""
      },
      "AddinRemarks": {
        "type": "string",
        "description": ""
      },
      "AddinSupportStatementUrl": {
        "type": "string",
        "description": ""
      },
      "AddinSupportStatus": {
        "type": "string",
        "description": ""
      },
      "AddinVersion": {
        "type": "string",
        "description": ""
      },
      "AdoptionStatus": {
        "type": "string",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DeploymentPlanId": {
        "type": "string",
        "description": ""
      },
      "Guidance": {
        "type": "string",
        "description": ""
      },
      "Importance": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable"
      },
      "Issue": {
        "type": "string",
        "description": ""
      },
      "Remediation": {
        "type": "string",
        "description": ""
      },
      "RiskAssessment": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "TargetOfficeBitness": {
        "type": "string",
        "description": ""
      },
      "TestOwner": {
        "type": "string",
        "description": ""
      },
      "TestPlan": {
        "type": "string",
        "description": ""
      },
      "TestResult": {
        "type": "string",
        "description": ""
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "TotalInstalls": {
        "type": "int",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UpgradeDecision": {
        "type": "string",
        "description": ""
      }
    }
  },
  "MAOfficeAppInstance": {
    "tableName": "MAOfficeAppInstance",
    "description": "",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DeviceId": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "OfficeAppId": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "MAOfficeAppReadiness": {
    "tableName": "MAOfficeAppReadiness",
    "description": "",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DeploymentPlanId": {
        "type": "string",
        "description": ""
      },
      "DevicesWithIssues": {
        "type": "int",
        "description": ""
      },
      "Guidance": {
        "type": "string",
        "description": ""
      },
      "Importance": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Issue": {
        "type": "string",
        "description": ""
      },
      "MonthlyActiveUsers": {
        "type": "int",
        "description": ""
      },
      "Notes": {
        "type": "string",
        "description": ""
      },
      "OfficeAppArchitecture": {
        "type": "string",
        "description": ""
      },
      "OfficeAppId": {
        "type": "string",
        "description": ""
      },
      "OfficeAppMajorVersion": {
        "type": "int",
        "description": ""
      },
      "OfficeAppName": {
        "type": "string",
        "description": ""
      },
      "OfficeAppRelease": {
        "type": "string",
        "description": ""
      },
      "OfficeAppVersion": {
        "type": "string",
        "description": ""
      },
      "Remediation": {
        "type": "string",
        "description": ""
      },
      "RiskAssessment": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "TestOwner": {
        "type": "string",
        "description": ""
      },
      "TestPlan": {
        "type": "string",
        "description": ""
      },
      "TestResult": {
        "type": "string",
        "description": ""
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "TotalInstalls": {
        "type": "int",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UpgradeDecision": {
        "type": "string",
        "description": ""
      }
    }
  },
  "MAOfficeBuildInfo": {
    "tableName": "MAOfficeBuildInfo",
    "description": "",
    "columns": {
      "AvailabilityDate": {
        "type": "datetime",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "BuildId": {
        "type": "int",
        "description": ""
      },
      "BuildVersion": {
        "type": "string",
        "description": ""
      },
      "EOSDate": {
        "type": "datetime",
        "description": ""
      },
      "FeatureCurrency": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "KBUrl": {
        "type": "string",
        "description": ""
      },
      "OfferedBuildType": {
        "type": "string",
        "description": ""
      },
      "ReleaseType": {
        "type": "string",
        "description": ""
      },
      "ReleaseVersion": {
        "type": "string",
        "description": ""
      },
      "SecurityCompliance": {
        "type": "string",
        "description": ""
      },
      "ServicingChannel": {
        "type": "string",
        "description": ""
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "MAOfficeCurrencyAssessment": {
    "tableName": "MAOfficeCurrencyAssessment",
    "description": "",
    "columns": {
      "AssessmentTime": {
        "type": "datetime",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "BuildId": {
        "type": "int",
        "description": ""
      },
      "BuildVersion": {
        "type": "string",
        "description": ""
      },
      "DeviceId": {
        "type": "string",
        "description": ""
      },
      "FeatureCurrency": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "LastEventTime": {
        "type": "datetime",
        "description": ""
      },
      "ReleaseVersion": {
        "type": "string",
        "description": ""
      },
      "SecurityCompliance": {
        "type": "string",
        "description": ""
      },
      "ServicingChannel": {
        "type": "string",
        "description": ""
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "MAOfficeSuiteInstance": {
    "tableName": "MAOfficeSuiteInstance",
    "description": "",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DeviceId": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "OfficeAppId": {
        "type": "string",
        "description": ""
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "MAProposedPilotDevices": {
    "tableName": "MAProposedPilotDevices",
    "description": "",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Coverage": {
        "type": "real",
        "description": ""
      },
      "DeploymentPlanId": {
        "type": "string",
        "description": ""
      },
      "DeviceFamily": {
        "type": "string",
        "description": ""
      },
      "DeviceId": {
        "type": "string",
        "description": ""
      },
      "DeviceName": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "PilotStatus": {
        "type": "string",
        "description": ""
      },
      "Rank": {
        "type": "int",
        "description": ""
      },
      "Redundancy": {
        "type": "real",
        "description": ""
      },
      "Source": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "MAWindowsBuildInfo": {
    "tableName": "MAWindowsBuildInfo",
    "description": "",
    "columns": {
      "AvailabilityDate": {
        "type": "datetime",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "BuildId": {
        "type": "int",
        "description": ""
      },
      "BuildVersion": {
        "type": "string",
        "description": ""
      },
      "EOSDate": {
        "type": "datetime",
        "description": ""
      },
      "ExtEOSDate": {
        "type": "datetime",
        "description": ""
      },
      "FeatureCurrencyExtended": {
        "type": "string",
        "description": ""
      },
      "FeatureCurrencyPaid": {
        "type": "string",
        "description": ""
      },
      "FeatureCurrencyStandard": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "KB": {
        "type": "string",
        "description": ""
      },
      "KBUrl": {
        "type": "string",
        "description": ""
      },
      "OfferedBuildType": {
        "type": "string",
        "description": ""
      },
      "PaidEOSDate": {
        "type": "datetime",
        "description": ""
      },
      "ReleaseType": {
        "type": "string",
        "description": ""
      },
      "ReleaseVersion": {
        "type": "string",
        "description": ""
      },
      "SecurityCompliance": {
        "type": "string",
        "description": ""
      },
      "ServicingChannel": {
        "type": "string",
        "description": ""
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "MAWindowsCurrencyAssessment": {
    "tableName": "MAWindowsCurrencyAssessment",
    "description": "",
    "columns": {
      "AssessmentTime": {
        "type": "datetime",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "BuildId": {
        "type": "int",
        "description": ""
      },
      "BuildVersion": {
        "type": "string",
        "description": ""
      },
      "DeviceEOSDate": {
        "type": "datetime",
        "description": ""
      },
      "DeviceId": {
        "type": "string",
        "description": ""
      },
      "DeviceServicingLevel": {
        "type": "string",
        "description": ""
      },
      "FeatureCurrency": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable"
      },
      "LastEventTime": {
        "type": "datetime",
        "description": ""
      },
      "ReleaseServicingLevel": {
        "type": "string",
        "description": ""
      },
      "ReleaseVersion": {
        "type": "string",
        "description": ""
      },
      "SecurityCompliance": {
        "type": "string",
        "description": ""
      },
      "ServicingChannel": {
        "type": "string",
        "description": ""
      },
      "ServicingState": {
        "type": "string",
        "description": ""
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "AggregationTime": {
        "type": "datetime",
        "description": ""
      },
      "DeviceCount": {
        "type": "int",
        "description": ""
      },
      "FeatureCurrencyLegend": {
        "type": "string",
        "description": ""
      },
      "SecurityComplianceLegend": {
        "type": "string",
        "description": ""
      },
      "SnapshotTime": {
        "type": "datetime",
        "description": ""
      }
    }
  },
  "MAWindowsDeploymentStatus": {
    "tableName": "MAWindowsDeploymentStatus",
    "description": "",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "BuildId": {
        "type": "int",
        "description": ""
      },
      "DeploymentDuration": {
        "type": "int",
        "description": ""
      },
      "DeploymentEndTime": {
        "type": "datetime",
        "description": ""
      },
      "DeploymentOverviewStatus": {
        "type": "string",
        "description": ""
      },
      "DeploymentStage": {
        "type": "string",
        "description": ""
      },
      "DeploymentStartTime": {
        "type": "datetime",
        "description": ""
      },
      "DeploymentStatus": {
        "type": "string",
        "description": ""
      },
      "DeviceId": {
        "type": "string",
        "description": ""
      },
      "DeviceName": {
        "type": "string",
        "description": ""
      },
      "ErrorCode": {
        "type": "int",
        "description": ""
      },
      "ErrorDescription": {
        "type": "string",
        "description": ""
      },
      "ExtendedErrorCode": {
        "type": "int",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable"
      },
      "LastEventTime": {
        "type": "datetime",
        "description": ""
      },
      "Manufacturer": {
        "type": "string",
        "description": ""
      },
      "Model": {
        "type": "string",
        "description": ""
      },
      "PauseState": {
        "type": "string",
        "description": ""
      },
      "RecommendedAction": {
        "type": "string",
        "description": ""
      },
      "ReleaseType": {
        "type": "string",
        "description": ""
      },
      "ReleaseVersion": {
        "type": "string",
        "description": ""
      },
      "SourceBuild": {
        "type": "string",
        "description": ""
      },
      "StateName": {
        "type": "string",
        "description": ""
      },
      "TargetBuild": {
        "type": "string",
        "description": ""
      },
      "TargetReleaseName": {
        "type": "string",
        "description": ""
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UpdateDeferral": {
        "type": "int",
        "description": ""
      },
      "UpdateSource": {
        "type": "string",
        "description": ""
      }
    }
  },
  "MCCEventLogs": {
    "tableName": "MCCEventLogs",
    "description": "This table includes logs for cache events. Can be used for performance metrics.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CacheNodeId": {
        "type": "string",
        "description": "Unique CacheNode identifier."
      },
      "EgressMbps": {
        "type": "real",
        "description": "The total data volume (MB) per second delivered including: data volume"
      },
      "HitMbps": {
        "type": "real",
        "description": "Data volume (MB) per second that came directly from Microsoft Connected"
      },
      "HitRatioMbps": {
        "type": "real",
        "description": "Ratio of Data volume (MB) per second that came directly from Microsoft"
      },
      "Hits": {
        "type": "int",
        "description": "The number of times data is found in the cache."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Misses": {
        "type": "int",
        "description": "The number of times data is not found in the cache and had to download"
      },
      "MissMbps": {
        "type": "real",
        "description": "Data volume (MB) per second that Microsoft Connected Cache had to"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (UTC) when the log was created."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "MCVPAuditLogs": {
    "tableName": "MCVPAuditLogs",
    "description": "The MCVP audit logs. This table will include audit logs for MCVP service transactions.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CallerAccessLevels": {
        "type": "string",
        "description": "The caller access level - Administrator, Writer or Reader."
      },
      "CallerIdentities": {
        "type": "string",
        "description": "The caller identity, user alias or email address."
      },
      "CallerIpAddress": {
        "type": "string",
        "description": "IPV4 caller ip address."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "OperationAccessLevel": {
        "type": "string",
        "description": "The operation access level of the request - Administrator,"
      },
      "OperationCategories": {
        "type": "string",
        "description": "The operation request categories like Provision, Connection"
      },
      "OperationCategoryDescription": {
        "type": "string",
        "description": "The operation request category general description."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation request name where the audit log was"
      },
      "OperationResult": {
        "type": "string",
        "description": "The operation request result - Success or Fail."
      },
      "OperationResultDescription": {
        "type": "string",
        "description": "The operation request result description. The column will"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "SpanId": {
        "type": "string",
        "description": "An identifier of the request as known by the caller."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (in UTC) when the audit log was created."
      },
      "TraceId": {
        "type": "string",
        "description": "An identifier for distributed tracing through a system (W3C"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "MCVPOperationLogs": {
    "tableName": "MCVPOperationLogs",
    "description": "The MCVP Azure monitor logs. This table will include logs for vehicle provision, connection and activities sending command and receiving telemetry messages.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DeviceName": {
        "type": "string",
        "description": "Device friendly name."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Message": {
        "type": "string",
        "description": "The general log message."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation name where the log was created."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SeverityText": {
        "type": "string",
        "description": "The log severity."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "SpanId": {
        "type": "string",
        "description": "An identifier of the request as known by the caller."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (in UTC) when the log was created."
      },
      "TraceId": {
        "type": "string",
        "description": "An identifier for distributed tracing through a system (W3C TraceContext)."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "VehicleId": {
        "type": "string",
        "description": "Unique vehicle identifier."
      }
    }
  },
  "MDCDetectionDNSEvents": {
    "tableName": "MDCDetectionDNSEvents",
    "description": "DNS Events. This table is collected by the detection team in MDC.",
    "columns": {
      "AdditionalData": {
        "type": "dynamic",
        "description": "Holds Additional Data."
      },
      "Addresses": {
        "type": "dynamic",
        "description": "The list of IP addresses resolved by the DNS lookup call."
      },
      "AzureResourceId": {
        "type": "string",
        "description": "The Azure resource ID of the K8S cluster resource."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Comm": {
        "type": "string",
        "description": "The command name which initiated the dns lookup call - i.e. curl,"
      },
      "ContainerId": {
        "type": "string",
        "description": "The container id of the docker container which initiated the dns"
      },
      "ContainerName": {
        "type": "string",
        "description": "The name of the docker container which initiated the dns lookup call."
      },
      "Cwd": {
        "type": "string",
        "description": "The current working directory of the process which initiated the dns"
      },
      "DataPipelineMetadata": {
        "type": "dynamic",
        "description": "Holds Data PipelineMetadata."
      },
      "Digest": {
        "type": "string",
        "description": "The digest of the Image running in the docker container which"
      },
      "Domain": {
        "type": "string",
        "description": "The domain name that was queried/resolved by the DNS lookup call."
      },
      "EventGuid": {
        "type": "string",
        "description": "The unique identifier for the event."
      },
      "Exe": {
        "type": "string",
        "description": "The executable path of the process which initiated the dns lookup"
      },
      "Gid": {
        "type": "string",
        "description": "The group id of the user who initiated the dns lookup call."
      },
      "ImageName": {
        "type": "string",
        "description": "The name of the Image running in the docker container which"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Latency": {
        "type": "string",
        "description": "The latency of the DNS lookup call."
      },
      "NameServer": {
        "type": "string",
        "description": "The nameserver used in order to resolve the DNS lookup call."
      },
      "Namespace": {
        "type": "string",
        "description": "The namespace of the pod in which the container is running."
      },
      "NodeName": {
        "type": "string",
        "description": "The name of the node on which the pod is running."
      },
      "PacketId": {
        "type": "string",
        "description": "The packet id in the packet that was sent for the DNS lookup call."
      },
      "Pcomm": {
        "type": "string",
        "description": "The parent command name which initiated the dns lookup call."
      },
      "PID": {
        "type": "string",
        "description": "The process id of the process which initiated the dns lookup call."
      },
      "PodName": {
        "type": "string",
        "description": "The name of the pod in which the container is running."
      },
      "Ppid": {
        "type": "string",
        "description": "The parent process id of the process which initiated the dns lookup"
      },
      "QR": {
        "type": "string",
        "description": "Q for Query packets, R for Response packets."
      },
      "Qtype": {
        "type": "string",
        "description": "The type of the DNS query - i.e. A, AAAA, CNAME etc."
      },
      "Rcode": {
        "type": "string",
        "description": "A string representing Succes/Error DNS lookup result."
      },
      "Region": {
        "type": "string",
        "description": "The region where the K8S cluster is deployed."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "Tid": {
        "type": "string",
        "description": "The thread id of the DNS lookup call."
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The time (UTC) when the monitored entity was created, renamed,"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "Uid": {
        "type": "string",
        "description": "The user id of the user who initiated the dns lookup call."
      }
    }
  },
  "MDCDetectionFimEvents": {
    "tableName": "MDCDetectionFimEvents",
    "description": "Events from this table are collected by the detection team in MDC.",
    "columns": {
      "AdditionalData": {
        "type": "dynamic",
        "description": "Holds Additional Data."
      },
      "AgentId": {
        "type": "string",
        "description": "Holds the Tivan Agent Id."
      },
      "AzureResourceId": {
        "type": "string",
        "description": "The Azure resource ID of the resource whose"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Computer": {
        "type": "string",
        "description": "The name of the machine on which the monitored"
      },
      "DataPipelineMetadata": {
        "type": "dynamic",
        "description": "Holds Data PipelineMetadata."
      },
      "EventType": {
        "type": "string",
        "description": "The type of change that occurred on the entity. Must"
      },
      "FileName": {
        "type": "string",
        "description": "Holds the name of the file that was created,"
      },
      "FilePath": {
        "type": "string",
        "description": "Holds the path of the file that was created, renamed,"
      },
      "FileType": {
        "type": "string",
        "description": "Holds the type of the file that was created, renamed,"
      },
      "InitiatingParentProcessId": {
        "type": "string",
        "description": "Holds the process Id of the initiating parents process"
      },
      "InitiatingParentProcessName": {
        "type": "string",
        "description": "Holds the name of the initiating parents process that"
      },
      "InitiatingProcessAccountDomainName": {
        "type": "string",
        "description": "Holds the name of the process account domain that"
      },
      "InitiatingProcessAccountName": {
        "type": "string",
        "description": "Holds the name of the process account that caused"
      },
      "InitiatingProcessId": {
        "type": "string",
        "description": "Holds the process Id of the initiating process that"
      },
      "InitiatingProcessName": {
        "type": "string",
        "description": "Holds the name of the initiating process that caused"
      },
      "Inode": {
        "type": "int",
        "description": "Holds the Tivan Agent Id."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "IsDir": {
        "type": "bool",
        "description": "True if event is for a directory, false if event is for a"
      },
      "Region": {
        "type": "string",
        "description": "The region the resource whose monitored entity was"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The time (UTC) when the monitored entity was"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "MDCDetectionGatingValidationEvents": {
    "tableName": "MDCDetectionGatingValidationEvents",
    "description": "K8s Gating validation events. This table is collected by the detection team in MDC.",
    "columns": {
      "Action": {
        "type": "string",
        "description": "The validation action that was performed."
      },
      "AdmissionControlVersions": {
        "type": "dynamic",
        "description": "The gating components versions."
      },
      "AzureResourceId": {
        "type": "string",
        "description": "The resource ID of the K8S cluster resource."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "EvaluatedResourceDetails": {
        "type": "dynamic",
        "description": "The evaluated resource details."
      },
      "EvaluatedResourceKind": {
        "type": "string",
        "description": "The evaluated K8s resource kind."
      },
      "EvaluatedResourceName": {
        "type": "string",
        "description": "The evaluated K8s resource name."
      },
      "EvaluatedResourceParentKind": {
        "type": "string",
        "description": "The evaluated K8s resource's parent kind (Controlled By)."
      },
      "EvaluatedResourceParentName": {
        "type": "string",
        "description": "The evaluated K8s resource's parent name (Controlled By)."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "Namespace": {
        "type": "string",
        "description": "The evaluated K8s resource namespace."
      },
      "Region": {
        "type": "string",
        "description": "The region where the K8S cluster is deployed."
      },
      "RuleProperties": {
        "type": "dynamic",
        "description": "The rule properties that was applied during the validation."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The time (UTC) when the monitored entity was created,"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "MDCDetectionK8SApiEvents": {
    "tableName": "MDCDetectionK8SApiEvents",
    "description": "Events from this table are collected by the detection team in MDC.",
    "columns": {
      "AdditionalMetadata": {
        "type": "dynamic",
        "description": "Metadata related to the event."
      },
      "AuthenticationTypes": {
        "type": "dynamic",
        "description": "A list of well-known authentication mechanisms that were detected,"
      },
      "AzureResourceId": {
        "type": "string",
        "description": "The unique identifier for the Azure resource."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ChunkNum": {
        "type": "int",
        "description": "The index of the payload chunk. Starts from zero. If the full payload"
      },
      "ClientIPs": {
        "type": "dynamic",
        "description": "A list of client IPs extracted from the X-Forwarded-For header in the"
      },
      "ContainsAuthentication": {
        "type": "bool",
        "description": "Whether a well-known authentication mechanism was detected."
      },
      "ContainsPublicIp": {
        "type": "bool",
        "description": "Whether one of the IPs extracted from the X-Forwarded-For header"
      },
      "DataPipelineMetadata": {
        "type": "dynamic",
        "description": "Metadata related to the data processing pipeline."
      },
      "Elapsed": {
        "type": "real",
        "description": "The time in milliseconds that have elapsed between the request and"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "IsLastChunk": {
        "type": "bool",
        "description": "Whether the payload chunk in this event is the last one or not. True"
      },
      "IsRequest": {
        "type": "bool",
        "description": "Whether this event is for the request or the response. True if this"
      },
      "K8SClusterName": {
        "type": "string",
        "description": "The name of the K8S cluster containing the pod from where this"
      },
      "K8SDaemonsetName": {
        "type": "string",
        "description": "The name of the daemonset containing the pod from where this"
      },
      "K8SDeploymentName": {
        "type": "string",
        "description": "The name of the deployment containing the pod from where this"
      },
      "K8SNamespaceName": {
        "type": "string",
        "description": "The namespace containing the pod from where this event was"
      },
      "K8SNodeName": {
        "type": "string",
        "description": "The name of the node that has the pod from where this event was"
      },
      "K8SPodName": {
        "type": "string",
        "description": "The name of the pod from where this event was captured."
      },
      "K8SStatefulsetName": {
        "type": "string",
        "description": "The name of the stateful set containing the pod from where this"
      },
      "Method": {
        "type": "string",
        "description": "The HTTP verb for this request."
      },
      "Payload": {
        "type": "string",
        "description": "A chunk of payload for the request or the response in this event."
      },
      "PayloadEncoding": {
        "type": "string",
        "description": "The value of the Content-Encoding header, if present."
      },
      "PayloadLength": {
        "type": "int",
        "description": "The length of the payload chunk in this event. If there is no payload,"
      },
      "PayloadType": {
        "type": "string",
        "description": "The value of the Content-Type header, if present."
      },
      "Region": {
        "type": "string",
        "description": "The Azure region where the resource is located."
      },
      "RequestId": {
        "type": "string",
        "description": "A unique identifier that identifies the request and response events"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "StatusCode": {
        "type": "int",
        "description": "The HTTP response code of the response for this request."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The time (UTC) when the monitored entity was created, renamed,"
      },
      "Timestamp": {
        "type": "datetime",
        "description": "The time at which this event was captured."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "Url": {
        "type": "string",
        "description": "The full url for this request. This will contain the scheme, host, port"
      }
    }
  },
  "MDCDetectionProcessV2Events": {
    "tableName": "MDCDetectionProcessV2Events",
    "description": "K8s process events. This table is collected by the detection team in MDC.",
    "columns": {
      "AdditionalData": {
        "type": "dynamic",
        "description": "Additional metadata about the container event."
      },
      "AgentId": {
        "type": "string",
        "description": "The ID of the monitoring agent tracking the container."
      },
      "Auid": {
        "type": "string",
        "description": "The audit user ID associated with the container process."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Cmdline": {
        "type": "string",
        "description": "The command-line instruction that started the container."
      },
      "Comm": {
        "type": "string",
        "description": "The name of the executed command."
      },
      "Computer": {
        "type": "string",
        "description": "The name of the node where the container is running."
      },
      "ContainerID": {
        "type": "string",
        "description": "The unique identifier of the running container."
      },
      "ContainerName": {
        "type": "string",
        "description": "The name of the container."
      },
      "Cwd": {
        "type": "string",
        "description": "The current working directory of the container process."
      },
      "Digest": {
        "type": "string",
        "description": "The SHA-256 digest of the container image."
      },
      "DriftAction": {
        "type": "string",
        "description": "Indicates if there were any modifications in the container files."
      },
      "Exe": {
        "type": "string",
        "description": "The path to the executable running inside the container."
      },
      "Gid": {
        "type": "string",
        "description": "The group ID under which the process is running."
      },
      "Group": {
        "type": "string",
        "description": "The group name associated with the process."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Memfd": {
        "type": "bool",
        "description": "Indicates if the container has memory file descriptor (memfd) execution."
      },
      "Namespace": {
        "type": "string",
        "description": "The namespace where the Kubernetes pod is deployed."
      },
      "Pid": {
        "type": "string",
        "description": "The process ID of the containerized application."
      },
      "Pname": {
        "type": "string",
        "description": "The parent process name of the containerized application."
      },
      "PodLabels": {
        "type": "dynamic",
        "description": "Labels associated with the Kubernetes pod."
      },
      "PodName": {
        "type": "string",
        "description": "The name of the Kubernetes pod."
      },
      "Ppid": {
        "type": "string",
        "description": "The parent process ID of the containerized application."
      },
      "Repository": {
        "type": "string",
        "description": "The container image repository."
      },
      "Ses": {
        "type": "string",
        "description": "The session ID of the container process."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "Success": {
        "type": "string",
        "description": "Indicates whether the command execution was successful."
      },
      "Tag": {
        "type": "string",
        "description": "The tag of the container image."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp when the event was recorded in UTC."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "Uid": {
        "type": "string",
        "description": "The user ID under which the process is running."
      },
      "UpperLayer": {
        "type": "bool",
        "description": "Indicates if the container image uses an upper layer in the overlay"
      },
      "User": {
        "type": "string",
        "description": "The username running the process inside the container."
      }
    }
  },
  "MDCFileIntegrityMonitoringEvents": {
    "tableName": "MDCFileIntegrityMonitoringEvents",
    "description": "View changes of Windows and Linux Files, as well as of software registry keys. Events from this table are collected by Microsoft Defender for Endpoint (MDE).",
    "columns": {
      "AADTenantID": {
        "type": "string",
        "description": "The AAD tenant ID of the subscription in which the"
      },
      "AzureResourceId": {
        "type": "string",
        "description": "The Azure resource ID of the resource whose"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ChangeType": {
        "type": "string",
        "description": "The type of change that occurred on the entity. For"
      },
      "CloudIdentifier": {
        "type": "string",
        "description": "The cloud identifier of the resource."
      },
      "CloudProvider": {
        "type": "string",
        "description": "The cloud provider of the resource."
      },
      "CloudResourceType": {
        "type": "string",
        "description": "The type of the cloud resource."
      },
      "Computer": {
        "type": "string",
        "description": "The name of the machine on which the monitored"
      },
      "FileMd5": {
        "type": "string",
        "description": "Relevant for 'File' monitored entity type. Holds the"
      },
      "FileName": {
        "type": "string",
        "description": "Relevant for 'File' monitored entity type. Holds the"
      },
      "FilePath": {
        "type": "string",
        "description": "Relevant for 'File' monitored entity type. Holds the"
      },
      "FileSha1": {
        "type": "string",
        "description": "Relevant for 'File' monitored entity type. Holds the"
      },
      "FileSha256": {
        "type": "string",
        "description": "Relevant for 'File' monitored entity type. Holds the"
      },
      "FileSize": {
        "type": "long",
        "description": "Relevant for 'File' monitored entity type. Holds the"
      },
      "FileType": {
        "type": "string",
        "description": "Relevant for 'File' monitored entity type. Holds the"
      },
      "InitiatingProcessAccountDomainName": {
        "type": "string",
        "description": "Holds the account domain name of the initiating"
      },
      "InitiatingProcessAccountName": {
        "type": "string",
        "description": "Holds the account name of the initiating process that"
      },
      "InitiatingProcessAccountSid": {
        "type": "string",
        "description": "Holds the account SID of the initiating process that"
      },
      "InitiatingProcessCreationTime": {
        "type": "datetime",
        "description": "Holds the creation time of the initiating process that"
      },
      "InitiatingProcessFirstSeen": {
        "type": "datetime",
        "description": "Holds the first seen time of the initiating process that"
      },
      "InitiatingProcessId": {
        "type": "long",
        "description": "Holds the process Id of the initiating process that"
      },
      "InitiatingProcessImageFileName": {
        "type": "string",
        "description": "Holds the image file name of the initiating process"
      },
      "InitiatingProcessImageFilePath": {
        "type": "string",
        "description": "Holds the image file path of the initiating process"
      },
      "InitiatingProcessImageFileType": {
        "type": "string",
        "description": "Holds the image file type of the initiating process"
      },
      "InitiatingProcessName": {
        "type": "string",
        "description": "Holds the name of the initiating process that caused"
      },
      "InitiatingProcessSessionId": {
        "type": "long",
        "description": "Holds the session Id of the initiating process that"
      },
      "InitiatingProcessSource": {
        "type": "string",
        "description": "Holds the source of the initiating process that caused"
      },
      "InitProcImageCreationTimeUtc": {
        "type": "datetime",
        "description": "Holds the image creation time for the image of the"
      },
      "InitProcImageFileSizeInBytes": {
        "type": "long",
        "description": "Holds the image file size (in Bytes) of the initiating"
      },
      "InitProcImageLastAccessTimeUtc": {
        "type": "datetime",
        "description": "Holds the image last access time for the image of the"
      },
      "InitProcImageLastWriteTimeUtc": {
        "type": "datetime",
        "description": "Holds the image last write time for the image of the"
      },
      "InitProcImageLsHash": {
        "type": "string",
        "description": "Holds the image LS hash for the image of the"
      },
      "InitProcImageMd5": {
        "type": "string",
        "description": "Holds the image MD5 for the image of the initiating"
      },
      "InitProcImagePeTimestampUtc": {
        "type": "datetime",
        "description": "Holds the image PE time for the image of the"
      },
      "InitProcImageSha1": {
        "type": "string",
        "description": "Holds the image SHA 1 for the image of the initiating"
      },
      "InitProcImageSha256": {
        "type": "string",
        "description": "Holds the image SHA 256 for the image of the"
      },
      "InitProcVersionInfoCompanyName": {
        "type": "string",
        "description": "Holds the version info company name of the"
      },
      "InitProcVersionInfoFileDescription": {
        "type": "string",
        "description": "Holds the version info file description of the initiating"
      },
      "InitProcVersionInfoInternalFileName": {
        "type": "string",
        "description": "Holds the version info internal file name of the"
      },
      "InitProcVersionInfoOriginalFileName": {
        "type": "string",
        "description": "Holds the version info original file name of the"
      },
      "InitProcVersionInfoProductName": {
        "type": "string",
        "description": "Holds the version info product name of the initiating"
      },
      "InitProcVersionInfoProductVersion": {
        "type": "string",
        "description": "Holds the version info product version of the"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "MonitoredEntityType": {
        "type": "string",
        "description": "The type of the monitored entity that was created,"
      },
      "NewValueData": {
        "type": "string",
        "description": "Relevant for 'Registry' monitored entity type. Holds"
      },
      "NewValueName": {
        "type": "string",
        "description": "Relevant for 'Registry' monitored entity type. Holds"
      },
      "NewValueType": {
        "type": "string",
        "description": "Relevant for 'Registry' monitored entity type. Holds"
      },
      "OldValueData": {
        "type": "string",
        "description": "Relevant for 'Registry' monitored entity type. Holds"
      },
      "OldValueFullRegistryKey": {
        "type": "string",
        "description": "Relevant for 'Registry' monitored entity type. Holds"
      },
      "OldValueName": {
        "type": "string",
        "description": "Relevant for 'Registry' monitored entity type. Holds"
      },
      "OldValueType": {
        "type": "string",
        "description": "Relevant for 'Registry' monitored entity type. Holds"
      },
      "OriginalFileName": {
        "type": "string",
        "description": "Relevant for 'File' monitored entity type and for a"
      },
      "OriginalFilePath": {
        "type": "string",
        "description": "Relevant for 'File' monitored entity type and for a"
      },
      "RegistryHive": {
        "type": "string",
        "description": "Relevant for 'Registry' monitored entity type. Holds"
      },
      "RegistryKey": {
        "type": "string",
        "description": "Relevant for 'Registry' monitored entity type. Holds"
      },
      "RequestAccountDomain": {
        "type": "string",
        "description": "Relevant for 'File' monitored entity type. Holds the"
      },
      "RequestAccountName": {
        "type": "string",
        "description": "Relevant for 'File' monitored entity type. Holds the"
      },
      "RequestAccountSid": {
        "type": "string",
        "description": "Relevant for 'File' monitored entity type. Holds the"
      },
      "RequestSource": {
        "type": "string",
        "description": "Relevant for 'File' monitored entity type. Holds the"
      },
      "RequestSourceIP": {
        "type": "string",
        "description": "Relevant for 'File' monitored entity type. Holds the"
      },
      "RequestSourcePort": {
        "type": "string",
        "description": "Relevant for 'File' monitored entity type. Holds the"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The time (UTC) when the monitored entity was"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "MDECustomCollectionDeviceFileEvents": {
    "tableName": "MDECustomCollectionDeviceFileEvents",
    "description": "This table is part of Microsoft Defender for Endpoints for the Custom Collection scenario. This table contains file creation, modification, and other file system events for anything explicitly requested by the customer for collection.",
    "columns": {
      "ActionType": {
        "type": "string",
        "description": "Type of activity that triggered the event."
      },
      "AdditionalFields": {
        "type": "dynamic",
        "description": "Additional information about the entity or event."
      },
      "AppGuardContainerId": {
        "type": "string",
        "description": "Identifier for the virtualized container used by"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DeviceId": {
        "type": "string",
        "description": "Unique identifier for the device in the service."
      },
      "DeviceName": {
        "type": "string",
        "description": "Fully qualified domain name (FQDN) of the device."
      },
      "FileName": {
        "type": "string",
        "description": "Name of the file that the recorded action was"
      },
      "FileOriginIP": {
        "type": "string",
        "description": "IP address where the file was downloaded from."
      },
      "FileOriginReferrerUrl": {
        "type": "string",
        "description": "URL of the web page that links to the downloaded"
      },
      "FileOriginUrl": {
        "type": "string",
        "description": "URL where the file was downloaded from."
      },
      "FileSize": {
        "type": "long",
        "description": "Size of the file in bytes."
      },
      "FolderPath": {
        "type": "string",
        "description": "Folder containing the file that the recorded action"
      },
      "InitProcessAccountDomain": {
        "type": "string",
        "description": "Domain of the account that ran the process"
      },
      "InitProcessAccountName": {
        "type": "string",
        "description": "User name of the account that ran the process"
      },
      "InitProcessAccountObjectId": {
        "type": "string",
        "description": "Azure AD object ID of the user account that ran the"
      },
      "InitProcessAccountSid": {
        "type": "string",
        "description": "Security Identifier (SID) of the account that ran the"
      },
      "InitProcessAccountUpn": {
        "type": "string",
        "description": "User principal name (UPN) of the account that ran"
      },
      "InitProcessCommandLine": {
        "type": "string",
        "description": "Command line used to run the process that initiated"
      },
      "InitProcessCreationTime": {
        "type": "datetime",
        "description": "Date and time when the process that initiated the"
      },
      "InitProcessFileName": {
        "type": "string",
        "description": "Name of the process that initiated the event."
      },
      "InitProcessFileSize": {
        "type": "long",
        "description": "Size in bytes of the process (image file) that initiated"
      },
      "InitProcessFolderPath": {
        "type": "string",
        "description": "Folder containing the process (image file) that"
      },
      "InitProcessId": {
        "type": "long",
        "description": "Process ID (PID) of the process that initiated the"
      },
      "InitProcessIntegrityLevel": {
        "type": "string",
        "description": "Integrity level of the process that initiated the event."
      },
      "InitProcessMD5": {
        "type": "string",
        "description": "MD5 hash of the process (image file) that initiated"
      },
      "InitProcessParentCreationTime": {
        "type": "datetime",
        "description": "Date and time when the parent of the process"
      },
      "InitProcessParentFileName": {
        "type": "string",
        "description": "Name of the parent process that spawned the"
      },
      "InitProcessParentId": {
        "type": "long",
        "description": "Process ID (PID) of the parent process that spawned"
      },
      "InitProcessSHA1": {
        "type": "string",
        "description": "SHA-1 hash of the process (image file) that initiated"
      },
      "InitProcessSHA256": {
        "type": "string",
        "description": "SHA-256 hash of the process (image file) that"
      },
      "InitProcessTokenElevation": {
        "type": "string",
        "description": "Token type indicating the presence or absence of"
      },
      "InitProcessVersionInfoCompanyName": {
        "type": "string",
        "description": "Company name from the version information of the"
      },
      "InitProcessVersionInfoFileDescription": {
        "type": "string",
        "description": "Description from the version information of the"
      },
      "InitProcessVersionInfoInternalFileName": {
        "type": "string",
        "description": "Internal file name from the version information of"
      },
      "InitProcessVersionInfoOriginalFileName": {
        "type": "string",
        "description": "Original file name from the version information of"
      },
      "InitProcessVersionInfoProductName": {
        "type": "string",
        "description": "Product name from the version information of the"
      },
      "InitProcessVersionInfoProductVersion": {
        "type": "string",
        "description": "Product version from the version information of the"
      },
      "IsAzureInfoProtectionApplied": {
        "type": "bool",
        "description": "Indicates whether the file is encrypted by Azure"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable."
      },
      "MachineGroup": {
        "type": "string",
        "description": "Machine group of the machine. This group is used"
      },
      "MD5": {
        "type": "string",
        "description": "MD5 hash of the file that the recorded action was"
      },
      "PreviousFileName": {
        "type": "string",
        "description": "Original name of the file that was renamed as a"
      },
      "PreviousFolderPath": {
        "type": "string",
        "description": "Original folder containing the file before the"
      },
      "ReportId": {
        "type": "long",
        "description": "Event identifier based on a repeating counter. To"
      },
      "RequestAccountDomain": {
        "type": "string",
        "description": "Domain of the account used to remotely initiate the"
      },
      "RequestAccountName": {
        "type": "string",
        "description": "User name of account used to remotely initiate the"
      },
      "RequestAccountSid": {
        "type": "string",
        "description": "Security Identifier (SID) of the account used to"
      },
      "RequestProtocol": {
        "type": "string",
        "description": "Network protocol, if applicable, used to initiate the"
      },
      "RequestSourceIP": {
        "type": "string",
        "description": "IPv4 or IPv6 address of the remote device that"
      },
      "RequestSourcePort": {
        "type": "int",
        "description": "Source port on the remote device that initiated the"
      },
      "SensitivityLabel": {
        "type": "string",
        "description": "Label applied to an email, file, or other content to"
      },
      "SensitivitySubLabel": {
        "type": "string",
        "description": "Sublabel applied to an email, file, or other content"
      },
      "SHA1": {
        "type": "string",
        "description": "SHA-1 hash of the file that the recorded action was"
      },
      "SHA256": {
        "type": "string",
        "description": "SHA-256 of the file that the recorded action was"
      },
      "ShareName": {
        "type": "string",
        "description": "Name of shared folder containing the file."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time the event was recorded by the MDE"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "MDPResourceLog": {
    "tableName": "MDPResourceLog",
    "description": "Logs pertaining to the provisioning agent resources for a Managed DevOps Pool.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Location": {
        "type": "string",
        "description": "The location of the Pool."
      },
      "OperationName": {
        "type": "string",
        "description": "Type of Operation (Provisioning, Reimage, Return, etc)."
      },
      "Properties": {
        "type": "dynamic",
        "description": "Json object containing the properties of the event."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the event was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "MNFDeviceUpdates": {
    "tableName": "MNFDeviceUpdates",
    "description": "Components state updates representing the status changes of ethernet ports, power supply units, fan modules, chassis and device software.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DeviceId": {
        "type": "string",
        "description": "Device ID of the Nexus cluster which was generating the log."
      },
      "DeviceTime": {
        "type": "long",
        "description": "Time when the log was generated in the Nexus cluster. This is in unix time"
      },
      "EventCategory": {
        "type": "string",
        "description": "Event category describing the category of events on Nexus network fabric"
      },
      "EventName": {
        "type": "string",
        "description": "Event name describing the update performed on Nexus network fabric"
      },
      "FabricId": {
        "type": "string",
        "description": "Fabric ID of the Nexus cluster which was generating the log."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Properties": {
        "type": "dynamic",
        "description": "Properties of the log."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (UTC) when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "MNFSystemSessionHistoryUpdates": {
    "tableName": "MNFSystemSessionHistoryUpdates",
    "description": "System session history update events in the Nexus network fabric devices.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DeviceId": {
        "type": "string",
        "description": "Device ID of the Nexus cluster which was generating the log."
      },
      "DeviceName": {
        "type": "string",
        "description": "Name of the device which was generating the log."
      },
      "DiffTimeStamp": {
        "type": "long",
        "description": "Time when the diffs were generated in the Nexus cluster. This is"
      },
      "EventCategory": {
        "type": "string",
        "description": "Event category describing the category of events on Nexus"
      },
      "FabricId": {
        "type": "string",
        "description": "Fabric ID of the Nexus cluster which was generating the log."
      },
      "GnmiTimeStamp": {
        "type": "long",
        "description": "Time when the log was generated in the Nexus cluster. This is in"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "SessionDiffs": {
        "type": "string",
        "description": "Differences in the session."
      },
      "SessionUpdateSessionId": {
        "type": "string",
        "description": "Session ID of the update."
      },
      "SessionUpdateSize": {
        "type": "long",
        "description": "Size of the session update."
      },
      "SessionUpdateTimeStamp": {
        "type": "long",
        "description": "Time when the session was updated. This is in unix time format"
      },
      "SessionUpdateUser": {
        "type": "string",
        "description": "User who updated the session."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (UTC) when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "MNFSystemStateMessageUpdates": {
    "tableName": "MNFSystemStateMessageUpdates",
    "description": "System state message update events in the Nexus network fabric devices.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DeviceId": {
        "type": "string",
        "description": "Device ID of the Nexus cluster which was generating the log."
      },
      "DeviceTime": {
        "type": "long",
        "description": "Time when the log was generated in the Nexus cluster. This is in unix time"
      },
      "EventCategory": {
        "type": "string",
        "description": "Event category describing the category of events on Nexus network fabric"
      },
      "EventName": {
        "type": "string",
        "description": "Event name describing the update performed on Nexus network fabric"
      },
      "FabricId": {
        "type": "string",
        "description": "Fabric ID of the Nexus cluster which was generating the log."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Properties": {
        "type": "dynamic",
        "description": "Properties of the log."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the event was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "Category": {
        "type": "string",
        "description": "Category of the audit log."
      },
      "CorrelationId": {
        "type": "string",
        "description": "Id of the request."
      },
      "Location": {
        "type": "string",
        "description": "Location of the service sending the log."
      },
      "Message": {
        "type": "string",
        "description": "The message from the ingestion process."
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation that triggered the event."
      }
    }
  },
  "McasShadowItReporting": {
    "tableName": "McasShadowItReporting",
    "description": "McasShadowItReporting",
    "columns": {
      "AadTenantId": {
        "type": "string",
        "description": ""
      },
      "AppCategory": {
        "type": "string",
        "description": ""
      },
      "AppId": {
        "type": "string",
        "description": ""
      },
      "AppInstance": {
        "type": "string",
        "description": ""
      },
      "AppName": {
        "type": "string",
        "description": ""
      },
      "AppScore": {
        "type": "int",
        "description": ""
      },
      "AppTags": {
        "type": "dynamic",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "BlockedEvents": {
        "type": "int",
        "description": ""
      },
      "Date": {
        "type": "datetime",
        "description": ""
      },
      "DownloadedBytes": {
        "type": "int",
        "description": ""
      },
      "EnrichedUserName": {
        "type": "string",
        "description": ""
      },
      "IpAddress": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "MachineId": {
        "type": "string",
        "description": ""
      },
      "MachineName": {
        "type": "string",
        "description": ""
      },
      "RawUserName": {
        "type": "string",
        "description": ""
      },
      "RichUserName": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "StreamName": {
        "type": "string",
        "description": ""
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "TotalBytes": {
        "type": "int",
        "description": ""
      },
      "TotalEvents": {
        "type": "int",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UploadedBytes": {
        "type": "int",
        "description": ""
      },
      "UserName": {
        "type": "string",
        "description": ""
      }
    }
  },
  "MicrosoftAzureBastionAuditLogs": {
    "tableName": "MicrosoftAzureBastionAuditLogs",
    "description": "Microsoft Azure Bastion Audit Logs",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClientIpAddress": {
        "type": "string",
        "description": "Browser IP Address that was used to log into the VirtualMachine from"
      },
      "ClientPort": {
        "type": "int",
        "description": "Browser Port Number that was used to log into the VirtualMachine from"
      },
      "Duration": {
        "type": "int",
        "description": "Duration in milliseconds where the Bastion Session lasted (available only"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Location": {
        "type": "string",
        "description": "The location of the server that processed the request (e.g., South Central"
      },
      "Message": {
        "type": "string",
        "description": "Additonal text that's assoicated of this event"
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation represented by this event"
      },
      "Protocol": {
        "type": "string",
        "description": "Protocol (could be ssh or rdp) that was used to log into the"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResourceType": {
        "type": "string",
        "description": "Resource Type that was accessed during the session. This could be a"
      },
      "SessionEndTime": {
        "type": "string",
        "description": "Timestamp (UTC) of when the Bastion Session was ended"
      },
      "SessionStartTime": {
        "type": "datetime",
        "description": "Timestamp (UTC) of when the Bastion Session was started"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TargetResourceId": {
        "type": "string",
        "description": "ResourceID of the VirtualMachine where the Bastion was connected to"
      },
      "TargetVMIPAddress": {
        "type": "string",
        "description": "IP Address of VirtualMachine where the Bastion was connected to"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "Time": {
        "type": "datetime",
        "description": "The timestamp (UTC) of the log"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "TunnelId": {
        "type": "string",
        "description": "Internal Bastion Connection GUID"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "Browser User Agent that the request was sent"
      },
      "UserEmail": {
        "type": "string",
        "description": "UserEmail account that was used to log into the VirtualMachine"
      },
      "UserName": {
        "type": "string",
        "description": "UserName that was used to log into the VirtualMachine from Bastion"
      }
    }
  },
  "MicrosoftDataShareReceivedSnapshotLog": {
    "tableName": "MicrosoftDataShareReceivedSnapshotLog",
    "description": "Data Share consumer side synchronization logs.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The name of the log that belongs to"
      },
      "CorrelationId": {
        "type": "string",
        "description": "CorrelationId of the event, this can be use as a reference to join with"
      },
      "DataSetMappingType": {
        "type": "string",
        "description": "Indicating the dataSetMapping type, this can be"
      },
      "DataSetName": {
        "type": "string",
        "description": "Name of provider source dataset"
      },
      "DataSetType": {
        "type": "string",
        "description": "Indicating the dataSet type, this can be Blob/container/bolbfolder,etc"
      },
      "DetailMessage": {
        "type": "string",
        "description": "This shows the event details. Can be empty if synchronization is not"
      },
      "EndTime": {
        "type": "string",
        "description": "Datashare synchronization end time, can be empty if job not finished"
      },
      "FilesRead": {
        "type": "string",
        "description": "Number of files read from source"
      },
      "FilesWritten": {
        "type": "string",
        "description": "Number of files written into sink"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation represented by this event"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SizeRead": {
        "type": "string",
        "description": "Size of files read from source"
      },
      "SizeWritten": {
        "type": "string",
        "description": "Size of files into sink in bytes"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "StartTime": {
        "type": "string",
        "description": "Datashare synchronization start time"
      },
      "Status": {
        "type": "string",
        "description": "Synchronization status, can be inprogress/succeed/failed"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The time (UTC) when the event is generated"
      },
      "TriggerType": {
        "type": "string",
        "description": "Indicating whether the trigger is on-demand trigger or manual trigger"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "MicrosoftDataShareSentSnapshotLog": {
    "tableName": "MicrosoftDataShareSentSnapshotLog",
    "description": "Data Share provider side synchronization logs.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The name of the log that belongs to"
      },
      "CorrelationId": {
        "type": "string",
        "description": "CorrelationId of the event, this can be use as a reference to join with"
      },
      "DataSetMappingType": {
        "type": "string",
        "description": "Indicating the dataSetMapping type, this can be"
      },
      "DataSetName": {
        "type": "string",
        "description": "Name of provider source dataset"
      },
      "DataSetType": {
        "type": "string",
        "description": "Indicating the dataSet type, this can be Blob/container/bolbfolder,etc"
      },
      "DetailMessage": {
        "type": "string",
        "description": "This shows the event details. Can be empty if synchronization is not"
      },
      "EndTime": {
        "type": "string",
        "description": "Datashare synchronization end time, can be empty if job not finished"
      },
      "FilesRead": {
        "type": "string",
        "description": "Number of files read from source"
      },
      "FilesWritten": {
        "type": "string",
        "description": "Number of files written into sink"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation represented by this event"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SizeRead": {
        "type": "string",
        "description": "Size of files read from source"
      },
      "SizeWritten": {
        "type": "string",
        "description": "Size of files into sink in bytes"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "StartTime": {
        "type": "string",
        "description": "Datashare synchronization start time"
      },
      "Status": {
        "type": "string",
        "description": "Synchronization status, can be inprogress/succeed/failed"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The time (UTC) when the event is generated"
      },
      "TriggerType": {
        "type": "string",
        "description": "Indicating whether the trigger is on-demand trigger or manual trigger"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "MicrosoftDataShareShareLog": {
    "tableName": "MicrosoftDataShareShareLog",
    "description": "Microsoft Data Share Share Log",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The name of the log that belongs to"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation represented by this event"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The date and time the request was received."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "AadTenantId": {
        "type": "string",
        "description": "The Azure AD tenant ID."
      },
      "ApiVersion": {
        "type": "string",
        "description": "The API version of the event."
      },
      "AppId": {
        "type": "string",
        "description": "The identifier for the application."
      },
      "ATContent": {
        "type": "string",
        "description": "Reserved for future use."
      },
      "ATContentH": {
        "type": "string",
        "description": "Reserved for future use."
      },
      "ATContentP": {
        "type": "string",
        "description": "Reserved for future use."
      },
      "ClientAuthMethod": {
        "type": "int",
        "description": "Indicates how the client was authenticated. For a public client, the"
      },
      "ClientRequestId": {
        "type": "string",
        "description": "Optional. The client request identifier when sent. If no client request"
      },
      "DeviceId": {
        "type": "string",
        "description": "The identifier of the device from which the authentication request"
      },
      "DurationMs": {
        "type": "int",
        "description": "The duration of the request in milliseconds."
      },
      "IdentityProvider": {
        "type": "string",
        "description": "The identity provider that authenticated the subject of the token."
      },
      "IPAddress": {
        "type": "string",
        "description": "The IP address of the client from where the request occurred."
      },
      "Location": {
        "type": "string",
        "description": "The name of the region that served the request."
      },
      "OperationId": {
        "type": "string",
        "description": "The identifier for the batch. For non-batched requests, this will be"
      },
      "RequestId": {
        "type": "string",
        "description": "The identifier representing the request."
      },
      "RequestMethod": {
        "type": "string",
        "description": "The HTTP method of the event."
      },
      "RequestUri": {
        "type": "string",
        "description": "The URI of the request."
      },
      "ResponseSizeBytes": {
        "type": "int",
        "description": "The size of the response in Bytes."
      },
      "ResponseStatusCode": {
        "type": "int",
        "description": "The HTTP response status code for the event."
      },
      "Roles": {
        "type": "string",
        "description": "The roles in token claims."
      },
      "Scopes": {
        "type": "string",
        "description": "The scopes in token claims."
      },
      "ServicePrincipalId": {
        "type": "string",
        "description": "The identifier of the servicePrincipal making the request."
      },
      "SessionId": {
        "type": "string",
        "description": "The unique identifier for the authentication session."
      },
      "SignInActivityId": {
        "type": "string",
        "description": "The identifier representing the sign-in activitys."
      },
      "TokenIssuedAt": {
        "type": "datetime",
        "description": "The timestamp the token was issued at."
      },
      "UniqueTokenId": {
        "type": "string",
        "description": "The unique token identifier of the API call used to make the audited"
      },
      "UserAgent": {
        "type": "string",
        "description": "The user agent information related to request."
      },
      "UserId": {
        "type": "string",
        "description": "The identifier of the user making the request."
      },
      "Wids": {
        "type": "string",
        "description": "Denotes the tenant-wide roles assigned to this user."
      }
    }
  },
  "MicrosoftHealthcareApisAuditLogs": {
    "tableName": "MicrosoftHealthcareApisAuditLogs",
    "description": "Azure API for FHIR audit logs",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CallerIdentity": {
        "type": "dynamic",
        "description": "The caller's identity."
      },
      "CallerIdentityIssuer": {
        "type": "string",
        "description": "The JWD token Issuer."
      },
      "CallerIdentityObjectId": {
        "type": "string",
        "description": "The AAD object ID."
      },
      "CallerIPAddress": {
        "type": "string",
        "description": "The IP address of the caller."
      },
      "CorrelationId": {
        "type": "string",
        "description": "The correlation id of the request."
      },
      "FhirResourceType": {
        "type": "string",
        "description": "The resource type the operation was executed for."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Location": {
        "type": "string",
        "description": "The location of the server that processed the request (e.g., South"
      },
      "LogCategory": {
        "type": "string",
        "description": "The audit event category."
      },
      "OperationDuration": {
        "type": "int",
        "description": "The duration of the operation in ms."
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation represented by this event."
      },
      "Properties": {
        "type": "dynamic",
        "description": "Additional properties."
      },
      "RequestUri": {
        "type": "string",
        "description": "The URI of the request."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultType": {
        "type": "string",
        "description": "The result type."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "StatusCode": {
        "type": "int",
        "description": "The HTTP status code."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of the log."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "MicrosoftPurviewInformationProtection": {
    "tableName": "MicrosoftPurviewInformationProtection",
    "description": "Microsoft Purview Information Protection audit logs.",
    "columns": {
      "ActionSource": {
        "type": "string",
        "description": "The source of the label action."
      },
      "ActionSourceDetail": {
        "type": "string",
        "description": "More details about the source of the label action."
      },
      "AppAccessContext": {
        "type": "dynamic",
        "description": "The application context for the user or service principal"
      },
      "Application": {
        "type": "string",
        "description": "The application that where the activity happened."
      },
      "ApplicationMode": {
        "type": "string",
        "description": "The label application mode, how the label was applied."
      },
      "AutoSensitivityLabelPolicyInfo": {
        "type": "dynamic",
        "description": "Auto Sensitivity Label Policy Info"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClientIP": {
        "type": "string",
        "description": "The IP address of the device that was used when the"
      },
      "Common": {
        "type": "dynamic",
        "description": "Azure Information Protection - common event data."
      },
      "ConditionMatch": {
        "type": "dynamic",
        "description": "The condition match that triggered the auto labeling."
      },
      "ContentType": {
        "type": "string",
        "description": "Content type."
      },
      "CorrelationId": {
        "type": "string",
        "description": "Correlation ID."
      },
      "CurrentProtectionType": {
        "type": "dynamic",
        "description": "Current protection event information."
      },
      "CurrentProtectionTypeName": {
        "type": "string",
        "description": "The type of protection applied."
      },
      "DataState": {
        "type": "string",
        "description": "Azure Information Protection - data state."
      },
      "DeviceName": {
        "type": "string",
        "description": "The device on which the activity happened."
      },
      "EmailInfo": {
        "type": "dynamic",
        "description": "The information required when the internalTarget is an"
      },
      "ExchangeMetaData": {
        "type": "dynamic",
        "description": "Exchange auto labeling metadata."
      },
      "ExecutionRuleId": {
        "type": "string",
        "description": "The ID of the rule that was executed."
      },
      "ExecutionRuleName": {
        "type": "string",
        "description": "The name of the rule that was executed."
      },
      "ExecutionRuleVersion": {
        "type": "string",
        "description": "The version of the rule that was executed."
      },
      "Id": {
        "type": "string",
        "description": "Unique identifier of an audit record."
      },
      "IrmContentId": {
        "type": "string",
        "description": "The unique ID used for identifying the encrypted"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "IsViewableByExternalUsers": {
        "type": "bool",
        "description": "Is viewable by external users."
      },
      "ItemCreationTime": {
        "type": "datetime",
        "description": "The date and time the item was created."
      },
      "ItemLastModifiedTime": {
        "type": "datetime",
        "description": "The date and time the item was last modified."
      },
      "ItemName": {
        "type": "string",
        "description": "The item name."
      },
      "ItemSize": {
        "type": "string",
        "description": "The item size."
      },
      "JustificationText": {
        "type": "string",
        "description": "The justification to be provided, when configured by the"
      },
      "LabelAction": {
        "type": "string",
        "description": "The action applied by the label."
      },
      "LabelAppliedDateTime": {
        "type": "datetime",
        "description": "The date and time the label was applied."
      },
      "LabelEventType": {
        "type": "string",
        "description": "The label operation."
      },
      "LabelName": {
        "type": "string",
        "description": "The label name applied to the item."
      },
      "LabelVersion": {
        "type": "string",
        "description": "The label version applied by the auto labeling policy."
      },
      "MachineName": {
        "type": "string",
        "description": "The machine name."
      },
      "MgtRuleId": {
        "type": "string",
        "description": "Management rule ID."
      },
      "ObjectId": {
        "type": "string",
        "description": "For SharePoint and OneDrive for Business activity, the full"
      },
      "OldSensitivityLabelId": {
        "type": "string",
        "description": "The identifier of the sensitivity label previously applied to"
      },
      "OldSensitivityLabelOwnerEmail": {
        "type": "string",
        "description": "The email address of the owner of the old sensitivity label."
      },
      "Operation": {
        "type": "string",
        "description": "The name of the user or admin activity."
      },
      "OrganizationId": {
        "type": "string",
        "description": "The GUID for your organization's Office 365 tenant. This"
      },
      "OverriddenActions": {
        "type": "dynamic",
        "description": "Actions that were overridden by the rule actions."
      },
      "OverRideReason": {
        "type": "string",
        "description": "The reason the sensitivity label was overridden."
      },
      "OverRideType": {
        "type": "string",
        "description": "Override type."
      },
      "Platform": {
        "type": "string",
        "description": "The platform on which the activity happened."
      },
      "PolicyId": {
        "type": "string",
        "description": "Policy ID."
      },
      "PolicyName": {
        "type": "string",
        "description": "Policy name."
      },
      "PolicyVersion": {
        "type": "string",
        "description": "Policy version."
      },
      "PreviousProtectionType": {
        "type": "dynamic",
        "description": "Previous protection event information."
      },
      "PreviousProtectionTypeName": {
        "type": "string",
        "description": "Previous protection type."
      },
      "ProtectionEventData": {
        "type": "dynamic",
        "description": "Azure Information Protection - protection event data."
      },
      "ProtectionEventTypeName": {
        "type": "string",
        "description": "Protection event type name."
      },
      "Receivers": {
        "type": "dynamic",
        "description": "The email addresses of the receivers."
      },
      "RecordType": {
        "type": "int",
        "description": "The type of operation indicated by the record."
      },
      "RecordTypeName": {
        "type": "string",
        "description": "The record type name."
      },
      "ResultStatus": {
        "type": "string",
        "description": "Indicates whether the action (specified in the Operation"
      },
      "RuleActions": {
        "type": "dynamic",
        "description": "Actions defined by the rules."
      },
      "RuleMode": {
        "type": "string",
        "description": "The current mode of the rule."
      },
      "Scope": {
        "type": "string",
        "description": "Was this event created by a hosted O365 service or an on-"
      },
      "ScopedLocationId": {
        "type": "string",
        "description": "The address that triggered the policy match."
      },
      "Sender": {
        "type": "string",
        "description": "The email address of the sender."
      },
      "SensitiveInfoDetectionIsIncluded": {
        "type": "bool",
        "description": "Determines if sensitive info detection is included."
      },
      "SensitiveInfoTypeData": {
        "type": "dynamic",
        "description": "Azure Information Protection - sensitive information types."
      },
      "SensitivityLabelEventFailureData": {
        "type": "dynamic",
        "description": "Sensitivity Label Event Failure Data"
      },
      "SensitivityLabelId": {
        "type": "string",
        "description": "The identifier for the sensitivity label recommended, as per"
      },
      "SensitivityLabelOwnerEmail": {
        "type": "string",
        "description": "The email address of the owner of the sensitivity label."
      },
      "SensitivityLabelPolicyId": {
        "type": "string",
        "description": "The identifier for the sensitivity labeling policy that was"
      },
      "Severity": {
        "type": "string",
        "description": "The severity of the auto label policy match."
      },
      "SharePointMetaData": {
        "type": "dynamic",
        "description": "SharePoint auto labeling metadata."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "TargetLocation": {
        "type": "string",
        "description": "The location of the document with respect to the user'"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The date and time when the user performed the activity."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserId": {
        "type": "string",
        "description": "The UPN (User Principal Name) of the user who performed"
      },
      "UserKey": {
        "type": "string",
        "description": "An alternative ID for the user identified in the UserId"
      },
      "UserType": {
        "type": "string",
        "description": "The type of user that performed the operation."
      },
      "Workload": {
        "type": "string",
        "description": "The Office 365 service where the activity occurred."
      },
      "WorkLoadItemId": {
        "type": "string",
        "description": "The workload item id."
      }
    }
  },
  "MicrosoftServicePrincipalSignInLogs": {
    "tableName": "MicrosoftServicePrincipalSignInLogs",
    "description": "Microsoft applications' service principal sign-in logs.",
    "columns": {
      "AppId": {
        "type": "string",
        "description": "Unique GUID representing the app ID in Entra ID."
      },
      "AppOwnerTenantId": {
        "type": "string",
        "description": "The tenant identifier of the owner of the application in"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "Category of log."
      },
      "CorrelationId": {
        "type": "string",
        "description": "ID to provide sign-in trail"
      },
      "CreatedDateTime": {
        "type": "datetime",
        "description": "Datetime of the sign-in activity."
      },
      "DurationMs": {
        "type": "long",
        "description": "The duration of the operation in milliseconds"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "OperationName": {
        "type": "string",
        "description": "For sign-ins, this value is always Sign-in activity"
      },
      "OperationVersion": {
        "type": "string",
        "description": "The REST API version that's requested by the client"
      },
      "ResourceDisplayName": {
        "type": "string",
        "description": "Name of the resource that was authenticated to"
      },
      "ResourceGroup": {
        "type": "string",
        "description": "Resource group for the logs"
      },
      "ResourceIdentity": {
        "type": "string",
        "description": "ID of the resource that was authenticated to"
      },
      "ResourceOwnerTenantId": {
        "type": "string",
        "description": "The tenant ID of the owner of the resource being"
      },
      "ResourceServicePrincipalId": {
        "type": "string",
        "description": "Service Principal Id of the resource"
      },
      "ResultSignature": {
        "type": "string",
        "description": "The result of the sign-in. Can be either success or"
      },
      "ServicePrincipalCredentialKeyId": {
        "type": "string",
        "description": "Key id of the service principal that initiated the sign-in"
      },
      "ServicePrincipalCredentialThumbprint": {
        "type": "string",
        "description": "Thumbprint of the service principal that initiated the"
      },
      "ServicePrincipalId": {
        "type": "string",
        "description": "ID of the service principal who initiated the sign-in"
      },
      "ServicePrincipalName": {
        "type": "string",
        "description": "Service Principal Name of the service principal who"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UniqueTokenIdentifier": {
        "type": "string",
        "description": "Unique token identifier for the request"
      },
      "ConnectionId": {
        "type": "string",
        "description": "Unique connection ID generated by MySQL."
      },
      "Db": {
        "type": "string",
        "description": "Name of database accessed."
      },
      "ErrorCode": {
        "type": "int",
        "description": "Error code if query failed. 0 means no error."
      },
      "EventClass": {
        "type": "string",
        "description": "Class of the log event."
      },
      "EventSubclass": {
        "type": "string",
        "description": "Subclass of the log event."
      },
      "EventTime": {
        "type": "datetime",
        "description": "Query start time in UTC timestamp."
      },
      "Host": {
        "type": "string",
        "description": "Host name of client connecting to MySQL."
      },
      "Ip": {
        "type": "string",
        "description": "IP address of client connecting to MySQL."
      },
      "IsAadAuth": {
        "type": "string",
        "description": "Is AAD auth or not."
      },
      "ReplicationSetRole": {
        "type": "string",
        "description": "Replication set role of MySQL flexible server."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SqlText": {
        "type": "string",
        "description": "Full query text."
      },
      "Status": {
        "type": "int",
        "description": "Status of connection."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "Table": {
        "type": "string",
        "description": "Name of table accessed."
      },
      "ThreadId": {
        "type": "int",
        "description": "ID of thread that executed the query."
      },
      "User": {
        "type": "string",
        "description": "Name of user executing the query."
      },
      "InsertId": {
        "type": "int",
        "description": "The insert ID."
      },
      "LastInsertId": {
        "type": "int",
        "description": "The first automatically generated value successfully inserted for an"
      },
      "LockDurationMs": {
        "type": "long",
        "description": "Total time in milliseconds the query was locked."
      },
      "QueryDurationMs": {
        "type": "long",
        "description": "Total time in milliseconds the query took to execute."
      },
      "RowsExamined": {
        "type": "int",
        "description": "Number of rows examined."
      },
      "RowsSent": {
        "type": "int",
        "description": "Number of rows sent."
      },
      "ServerId": {
        "type": "int",
        "description": "ID of the MySQL flexible server."
      },
      "StartTime": {
        "type": "datetime",
        "description": "Query start time in UTC timestamp."
      }
    }
  },
  "NCBMBreakGlassAuditLogs": {
    "tableName": "NCBMBreakGlassAuditLogs",
    "description": "Security log events on Nexus Baremetal Machines to monitor and detect user access to the system.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClusterManagerName": {
        "type": "string",
        "description": "Name of the ClusterManager managing the Nexus cluster."
      },
      "ClusterName": {
        "type": "string",
        "description": "Name of the on-prem Nexus cluster."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Location": {
        "type": "string",
        "description": "Location of the Nexus Baremetal machine."
      },
      "Log": {
        "type": "string",
        "description": "The log message generated by the system during user access."
      },
      "Message": {
        "type": "string",
        "description": "The message parsed from the log on user access."
      },
      "Mode": {
        "type": "string",
        "description": "Mode of the operation by the user."
      },
      "Node": {
        "type": "string",
        "description": "Host name of the Baremetal Machine."
      },
      "ProcessId": {
        "type": "int",
        "description": "ID of the process emitting the log."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (UTC) when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "User": {
        "type": "string",
        "description": "User accessing the system."
      }
    }
  },
  "NCBMSecurityDefenderLogs": {
    "tableName": "NCBMSecurityDefenderLogs",
    "description": "Security log events on Nexus Baremetal Machines to monitor and detect user access to the system.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClusterManagerName": {
        "type": "string",
        "description": "Name of the ClusterManager managing the Nexus cluster."
      },
      "ClusterName": {
        "type": "string",
        "description": "Name of the on-prem Nexus cluster."
      },
      "ComponentName": {
        "type": "string",
        "description": "Name of the defender component managing the Nexus cluster."
      },
      "ComponentVersion": {
        "type": "string",
        "description": "Version of the defender component managing the Nexus cluster."
      },
      "ContainerName": {
        "type": "string",
        "description": "Name of the container generating the log for the Nexus cluster."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Location": {
        "type": "string",
        "description": "Location of the Nexus Baremetal machine."
      },
      "LogType": {
        "type": "string",
        "description": "Type of defender log E.g. Trace, Heartbeat."
      },
      "Message": {
        "type": "string",
        "description": "Syslog message generated by the Baremetal machine."
      },
      "NamespaceName": {
        "type": "string",
        "description": "Namespace where the pod is running in the Nexus cluster."
      },
      "Node": {
        "type": "string",
        "description": "Host name of the Baremetal Machine."
      },
      "PodName": {
        "type": "string",
        "description": "Pod name generating the log in the Nexus cluster."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Severity": {
        "type": "string",
        "description": "Severity of the log record. E.g. Info, Warning, Critical, Error, Notice,"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (UTC) when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "NCBMSecurityLogs": {
    "tableName": "NCBMSecurityLogs",
    "description": "Security log events on Nexus Baremetal Machines to monitor and detect user access to the system.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClusterManagerName": {
        "type": "string",
        "description": "Name of the ClusterManager managing the Nexus cluster."
      },
      "ClusterName": {
        "type": "string",
        "description": "Name of the on-prem Nexus cluster."
      },
      "Facility": {
        "type": "string",
        "description": "Log facility type. E.g. daemon, kern, syslog, user."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Location": {
        "type": "string",
        "description": "Location of the Nexus Baremetal machine."
      },
      "Message": {
        "type": "string",
        "description": "Syslog message generated by the Baremetal machine."
      },
      "Node": {
        "type": "string",
        "description": "Host name of the Baremetal Machine."
      },
      "ProcessId": {
        "type": "int",
        "description": "ID of the process emitting the log."
      },
      "ProcessName": {
        "type": "string",
        "description": "Identification of the process generating the log."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Severity": {
        "type": "string",
        "description": "Severity of the log record. E.g. Info, Warning, Critical, Error, Notice,"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (UTC) when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "NCBMSystemLogs": {
    "tableName": "NCBMSystemLogs",
    "description": "Syslog events on Nexus Baremetal Machines providing critical insights into system activities, errors and anomalies for effecient troubleshooting and monitoring.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClusterManagerName": {
        "type": "string",
        "description": "Name of the ClusterManager managing the Nexus cluster."
      },
      "ClusterName": {
        "type": "string",
        "description": "Name of the On-prem Nexus cluster."
      },
      "Facility": {
        "type": "string",
        "description": "Log facility type. E.g. daemon, kern, syslog, user."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Location": {
        "type": "string",
        "description": "Location of the Nexus cluster."
      },
      "Message": {
        "type": "string",
        "description": "Message generated by the kubernetes containers running on Nexus"
      },
      "Node": {
        "type": "string",
        "description": "Node name of the Nexus cluster which is generating the log."
      },
      "ProcessId": {
        "type": "int",
        "description": "ID of the process emitting the log."
      },
      "ProcessName": {
        "type": "string",
        "description": "Identification of the process generating the log."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Severity": {
        "type": "string",
        "description": "Severity of the log record. E.g. Info, Warning, Critical, Error, Notice,"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (UTC) when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "ContainerName": {
        "type": "string",
        "description": "Name of the container generating the log for the Nexus cluster."
      },
      "NamespaceName": {
        "type": "string",
        "description": "Namespace where the pod is running in the Nexus cluster."
      },
      "PodName": {
        "type": "string",
        "description": "Pod name generating the log in the Nexus cluster."
      }
    }
  },
  "NCCKubernetesLogs": {
    "tableName": "NCCKubernetesLogs",
    "description": "Containerized application logs from Nexus clusters to gain insight onto the container orchestration platform.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClusterManagerName": {
        "type": "string",
        "description": "Name of the ClusterManager managing the Nexus cluster."
      },
      "ClusterName": {
        "type": "string",
        "description": "Name of the On-prem Nexus cluster."
      },
      "ContainerName": {
        "type": "string",
        "description": "Name of the container generating the log for the Nexus cluster."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Location": {
        "type": "string",
        "description": "Location of the Nexus cluster."
      },
      "Message": {
        "type": "string",
        "description": "Message generated by the kubernetes containers running on Nexus"
      },
      "NamespaceName": {
        "type": "string",
        "description": "Namespace where the pod is running in the Nexus cluster."
      },
      "Node": {
        "type": "string",
        "description": "Node name of the Nexus cluster which is generating the log."
      },
      "PodName": {
        "type": "string",
        "description": "Pod name generating the log in the Nexus cluster."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Severity": {
        "type": "string",
        "description": "Severity of the log record. E.g. Info, Warning, Critical, Error, Notice,"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (UTC) when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "NCCPlatformOperationsLogs": {
    "tableName": "NCCPlatformOperationsLogs",
    "description": "Logs from the Nexus undercloud platform to gain insight onto the container orchestration platform.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClusterManagerName": {
        "type": "string",
        "description": "Name of the ClusterManager managing the Nexus cluster."
      },
      "ClusterName": {
        "type": "string",
        "description": "Name of the On-prem Nexus cluster."
      },
      "ContainerName": {
        "type": "string",
        "description": "Name of the container generating the log for the Nexus cluster."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Location": {
        "type": "string",
        "description": "Location of the Nexus cluster."
      },
      "Message": {
        "type": "string",
        "description": "Message generated by the kubernetes containers running on Nexus"
      },
      "NamespaceName": {
        "type": "string",
        "description": "Namespace where the pod is running in the Nexus cluster."
      },
      "Node": {
        "type": "string",
        "description": "Node name of the Nexus cluster which is generating the log."
      },
      "PodName": {
        "type": "string",
        "description": "Pod name generating the log in the Nexus cluster."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Severity": {
        "type": "string",
        "description": "Severity of the log record. E.g. Info, Warning, Critical, Error, Notice,"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (UTC) when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "NCCVMOrchestrationLogs": {
    "tableName": "NCCVMOrchestrationLogs",
    "description": "Logs from Virtual Machine Orchestrator of Nexus cluster to track seamless coordination and management of virtual machines.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClusterManagerName": {
        "type": "string",
        "description": "Name of the ClusterManager managing the Nexus cluster."
      },
      "ClusterName": {
        "type": "string",
        "description": "Name of the On-prem Nexus cluster."
      },
      "ContainerName": {
        "type": "string",
        "description": "Name of the container generating the log for the Nexus cluster."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Location": {
        "type": "string",
        "description": "Location of the Nexus cluster."
      },
      "Message": {
        "type": "string",
        "description": "Message generated by the kubernetes containers running on Nexus"
      },
      "NamespaceName": {
        "type": "string",
        "description": "Namespace where the pod is running in the Nexus cluster."
      },
      "Node": {
        "type": "string",
        "description": "Node name of the Nexus cluster which is generating the log."
      },
      "PodName": {
        "type": "string",
        "description": "Pod name generating the log in the Nexus cluster."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Severity": {
        "type": "string",
        "description": "Severity of the log record Severity of the log record. E.g. Info,"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (UTC) when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "NCMClusterOperationsLogs": {
    "tableName": "NCMClusterOperationsLogs",
    "description": "Cluster Manager logs to track the deployment or upgrade of Nexus cluster.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClusterManagerName": {
        "type": "string",
        "description": "Name of the ClusterManager managing the Nexus cluster."
      },
      "ClusterName": {
        "type": "string",
        "description": "Name of the On-prem Nexus cluster."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Level": {
        "type": "string",
        "description": "Log level of the message."
      },
      "Location": {
        "type": "string",
        "description": "Location of the Nexus cluster."
      },
      "Message": {
        "type": "string",
        "description": "Message generated by the kubernetes containers running on Nexus"
      },
      "Node": {
        "type": "string",
        "description": "Node name of the Nexus cluster which is generating the log."
      },
      "OperationID": {
        "type": "string",
        "description": "Unique identifier for the operation."
      },
      "PodName": {
        "type": "string",
        "description": "Pod name generating the log in the Nexus cluster."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (UTC) when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "NCSStorageAlerts": {
    "tableName": "NCSStorageAlerts",
    "description": "Alert events logged from Nexus storage appliance providing storage system level alerts.",
    "columns": {
      "Action": {
        "type": "string",
        "description": "Action for the storage appliance."
      },
      "ArrayController": {
        "type": "string",
        "description": "Array controller name of the storage appliance."
      },
      "ArrayName": {
        "type": "string",
        "description": "Array name of the storage appliance."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClusterManagerName": {
        "type": "string",
        "description": "Name of the ClusterManager managing the Nexus cluster."
      },
      "ClusterName": {
        "type": "string",
        "description": "Name of the on-prem Nexus cluster."
      },
      "ContainerName": {
        "type": "string",
        "description": "Name of the container generating the log for the Nexus cluster."
      },
      "Domain": {
        "type": "string",
        "description": "Array domain of the storage appliance."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Location": {
        "type": "string",
        "description": "Location of the Nexus cluster."
      },
      "Message": {
        "type": "string",
        "description": "Message generated by the kubernetes containers running on Nexus"
      },
      "Node": {
        "type": "string",
        "description": "Node name of the Nexus cluster which is generating the log."
      },
      "PodName": {
        "type": "string",
        "description": "Pod name generating the log in the Nexus cluster."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Severity": {
        "type": "string",
        "description": "Array result of the storage appliance."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (UTC) when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "User": {
        "type": "string",
        "description": "Array user of the storage appliance."
      }
    }
  },
  "NCSStorageAudits": {
    "tableName": "NCSStorageAudits",
    "description": "Audit log events from Nexus storage appliance providing insight into data and system access.",
    "columns": {
      "Action": {
        "type": "string",
        "description": "Action for the storage appliance."
      },
      "ArrayController": {
        "type": "string",
        "description": "Array controller name of the storage appliance."
      },
      "ArrayName": {
        "type": "string",
        "description": "Array name of the storage appliance."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClusterManagerName": {
        "type": "string",
        "description": "Name of the ClusterManager managing the Nexus cluster."
      },
      "ClusterName": {
        "type": "string",
        "description": "Name of the on-prem Nexus cluster."
      },
      "ContainerName": {
        "type": "string",
        "description": "Name of the container generating the log for the Nexus cluster."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Location": {
        "type": "string",
        "description": "Location of the Nexus cluster."
      },
      "Message": {
        "type": "string",
        "description": "Message generated by the kubernetes containers running on Nexus"
      },
      "Node": {
        "type": "string",
        "description": "Node name of the Nexus cluster which is generating the log."
      },
      "PodName": {
        "type": "string",
        "description": "Pod name generating the log in the Nexus cluster."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Result": {
        "type": "string",
        "description": "Array result of the storage appliance."
      },
      "Session": {
        "type": "string",
        "description": "Array session of the storage appliance."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (UTC) when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "User": {
        "type": "string",
        "description": "Array user of the storage appliance."
      }
    }
  },
  "NCSStorageLogs": {
    "tableName": "NCSStorageLogs",
    "description": "All Logs from Nexus storage appliance other than audit & alert logs.",
    "columns": {
      "ArrayController": {
        "type": "string",
        "description": "Array controller name of the storage appliance."
      },
      "ArrayName": {
        "type": "string",
        "description": "Array name of the storage appliance."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClusterManagerName": {
        "type": "string",
        "description": "Name of the ClusterManager managing the Nexus cluster."
      },
      "ClusterName": {
        "type": "string",
        "description": "Name of the on-prem Nexus cluster."
      },
      "ContainerName": {
        "type": "string",
        "description": "Name of the container generating the log for the Nexus cluster."
      },
      "IPAddress": {
        "type": "string",
        "description": "IP address generating the log in the Nexus cluster."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Location": {
        "type": "string",
        "description": "Location of the Nexus cluster."
      },
      "Message": {
        "type": "string",
        "description": "Message generated by the kubernetes containers running on Nexus"
      },
      "Node": {
        "type": "string",
        "description": "Node name of the Nexus cluster which is generating the log."
      },
      "PodName": {
        "type": "string",
        "description": "Pod name generating the log in the Nexus cluster."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (UTC) when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "NGXOperationLogs": {
    "tableName": "NGXOperationLogs",
    "description": "NGINX access and error logs captured by NGINXaaS.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Facility": {
        "type": "string",
        "description": "The facility of log records from syslog as defined in RFC 3164.Facility can be"
      },
      "FilePath": {
        "type": "string",
        "description": "The file path where log records come from."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Location": {
        "type": "string",
        "description": "The location (region) the NGINX instance was accessed in."
      },
      "Message": {
        "type": "string",
        "description": "The message of the log record."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Severity": {
        "type": "string",
        "description": "The severity of log records from syslog as defined in RFC 3164."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "Tag": {
        "type": "string",
        "description": "The tag of log records from syslog."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (UTC) when the log record was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "NGXSecurityLogs": {
    "tableName": "NGXSecurityLogs",
    "description": "NGINX security logs captured by NGINXaaS.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Facility": {
        "type": "string",
        "description": "The facility of log records from syslog as defined in RFC 3164.Facility can be"
      },
      "FilePath": {
        "type": "string",
        "description": "The file path where log records come from."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Location": {
        "type": "string",
        "description": "The location (region) the NGINX instance was accessed in."
      },
      "Message": {
        "type": "string",
        "description": "The message of the log record."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Severity": {
        "type": "string",
        "description": "The severity of log records from syslog as defined in RFC 3164."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "Tag": {
        "type": "string",
        "description": "The tag of log records from syslog."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (UTC) when the log record was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "NSPAccessLogs": {
    "tableName": "NSPAccessLogs",
    "description": "Logs of Network Security Perimeter (NSP) inbound access allowed based on NSP access rules.",
    "columns": {
      "AccessRuleVersion": {
        "type": "string",
        "description": "Access rule version of the NSP profile to which PaaS resource is"
      },
      "AppId": {
        "type": "string",
        "description": "Unique GUID representing the app ID of resource in the Azure"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "NSP access log categories."
      },
      "DestinationEmailAddress": {
        "type": "string",
        "description": "Email address of destination receiver. It be must specified if"
      },
      "DestinationFqdn": {
        "type": "string",
        "description": "Fully Qualified Domain(FQDN) name of the destination."
      },
      "DestinationParameters": {
        "type": "string",
        "description": "List of optional destination properties in key-value pair format."
      },
      "DestinationPhoneNumber": {
        "type": "string",
        "description": "Phone number of destination receiver. It be must specified if"
      },
      "DestinationPort": {
        "type": "string",
        "description": "Port number of outbound connection, when available."
      },
      "DestinationProtocol": {
        "type": "string",
        "description": "Application layer protocol and transport layer protocol used for"
      },
      "DestinationResourceId": {
        "type": "string",
        "description": "Resource ID of destination PaaS resource for an outbound"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Location": {
        "type": "string",
        "description": "Indicates the region of NSP."
      },
      "MatchedRule": {
        "type": "string",
        "description": "JSON property bag containing matched access rule name. It can"
      },
      "OperationName": {
        "type": "string",
        "description": "Indicates top-level PaaS operation name."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The API version associated with the operation."
      },
      "Parameters": {
        "type": "string",
        "description": "List of optional PaaS resource properties in key-value pair format."
      },
      "Profile": {
        "type": "string",
        "description": "Name of the NSP profile associated to the resource."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "ResultAction": {
        "type": "string",
        "description": "Indicates whether the result of evaluation is 'Approved' or"
      },
      "ResultDescription": {
        "type": "string",
        "description": "Additional description about the operation result, when available."
      },
      "ResultDirection": {
        "type": "string",
        "description": "Direction of evaluation result whether 'Inbound' or 'Outbound'."
      },
      "RuleType": {
        "type": "string",
        "description": "Indicates where the rule is defined: NSP or PaaS resource."
      },
      "ServiceFqdn": {
        "type": "string",
        "description": "Fully Qualified Domain Name (FQDN) of PaaS resource emitting"
      },
      "ServiceResourceId": {
        "type": "string",
        "description": "Resource ID of PaaS resource emitting NSP access logs."
      },
      "SourceAppId": {
        "type": "string",
        "description": "Unique GUID representing the app ID of source in the Azure"
      },
      "SourceIpAddress": {
        "type": "string",
        "description": "IP address of source making inbound connection, when available."
      },
      "SourceParameters": {
        "type": "string",
        "description": "List of optional source properties in key-value pair format. For"
      },
      "SourcePerimeterGuids": {
        "type": "string",
        "description": "List of perimeter GUIDs of source resource. It should be specified"
      },
      "SourcePort": {
        "type": "string",
        "description": "Port number of inbound connection, when available."
      },
      "SourceProtocol": {
        "type": "string",
        "description": "Application layer protocol and transport layer protocol used for"
      },
      "SourceResourceId": {
        "type": "string",
        "description": "Resource ID of source PaaS resource for an inbound connection,"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Event generation time."
      },
      "TrafficType": {
        "type": "string",
        "description": "Indicates whether traffic is 'Private', 'Public', 'Intra' or 'Cross'"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "NTAInsights": {
    "tableName": "NTAInsights",
    "description": "Traffic Analytics insights are provided for flow data which shows anomalies in data pattern.",
    "columns": {
      "AdFlag": {
        "type": "real",
        "description": "A ternary series containing (+1, -1, 0) marking up/down/no anomaly"
      },
      "AdScore": {
        "type": "real",
        "description": "Anomaly score."
      },
      "AggregationType": {
        "type": "string",
        "description": "Type of data aggregation - 1 for short aggregation and 2 for long"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DataPoints": {
        "type": "string",
        "description": "Data points for aggregated data."
      },
      "FlowStatus": {
        "type": "string",
        "description": "The considered traffic is Allowed/Denied/All."
      },
      "InsightsResourceId": {
        "type": "string",
        "description": "Resource ID for the resource for which data is aggregated"
      },
      "IntervalEnd": {
        "type": "datetime",
        "description": "End time of the data insights processing interval."
      },
      "IntervalStart": {
        "type": "datetime",
        "description": "Start time of the data insights processing interval."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Periodicity": {
        "type": "real",
        "description": "The number of hours after whichthe data repeats itself."
      },
      "PivotType": {
        "type": "string",
        "description": "Pivot type for insights aggregation."
      },
      "ProcessingTime": {
        "type": "datetime",
        "description": "The time when periodicty is calculated."
      },
      "Region": {
        "type": "string",
        "description": "Region of Vnet flow logs."
      },
      "SchemaVersion": {
        "type": "string",
        "description": "Schema version."
      },
      "SeriesNumber": {
        "type": "real",
        "description": "An incremental value to represent the last aggregated series."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "SubType": {
        "type": "string",
        "description": "Subtype for the insights logs."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The time when the data gets ingested into the Log Analytics"
      },
      "TrafficTime": {
        "type": "datetime",
        "description": "Time when the anomaly has occured in data pattern."
      },
      "TrafficVolumeActual": {
        "type": "real",
        "description": "The actual traffic volume in the time period."
      },
      "TrafficVolumeBaseline": {
        "type": "real",
        "description": "The predicted value of the series, according to the decomposition per"
      },
      "TrafficVolumeUnit": {
        "type": "string",
        "description": "The aggregated values represent Flows/Bytes/Packets."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "NTAIpDetails": {
    "tableName": "NTAIpDetails",
    "description": "Traffic Analytics provides WHOIS data and geographic location for all public IPs in the customer's environment. For Malicious IP, it provides DNS domain, threat type and thread descriptions as identified by Microsoft security intelligence solutions. IP Details are published to your Log Analytics Workspace so you can create custom queries and put alerts on them. You can also access pre-populated queries from the traffic analytics dashboard.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DnsDomain": {
        "type": "string",
        "description": "For Malicious IPs only: Domain name associated with this IP."
      },
      "FaSchemaVersion": {
        "type": "string",
        "description": "Schema version."
      },
      "FlowIntervalEndTime": {
        "type": "datetime",
        "description": "End time of the flow log processing interval."
      },
      "FlowIntervalStartTime": {
        "type": "datetime",
        "description": "Start time of the flow log processing interval. This is time from which"
      },
      "flow": {
        "type": "int",
        "description": "erval is measured."
      },
      "FlowType": {
        "type": "string",
        "description": "Can be AzurePublic/ExternalPublic/MaliciousFlow."
      },
      "Ip": {
        "type": "string",
        "description": "Public IP whose information is provided in the record."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Location": {
        "type": "string",
        "description": "For Azure Public IP: Azure region of virtual network/network"
      },
      "Port": {
        "type": "int",
        "description": "For Malicious IPs only: Port associated with this IP."
      },
      "PublicIpDetails": {
        "type": "string",
        "description": "For AzurePublic IP: Azure Service owning the IP OR \"Microsoft Virtual"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "SubType": {
        "type": "string",
        "description": "Subtype for the flow logs. Use only FlowLog, other values of"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "ThreatDescription": {
        "type": "string",
        "description": "For Malicious IPs only: Description of the threat posed by the"
      },
      "ThreatType": {
        "type": "string",
        "description": "For Malicious IPs only: One of the threats from the list of currently"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The time when the data gets ingested into the Log Analytics"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "Url": {
        "type": "string",
        "description": "For Malicious IPs only: Url associated with this IP."
      }
    }
  },
  "NTANetAnalytics": {
    "tableName": "NTANetAnalytics",
    "description": "Traffic Analytics records for Flowlog enriched data.",
    "columns": {
      "AclGroup": {
        "type": "string",
        "description": "Access control list group refers to the network security"
      },
      "AclRule": {
        "type": "string",
        "description": "Access control list rule refers to the network security group"
      },
      "AllowedInFlows": {
        "type": "long",
        "description": "Count of inbound flows that were allowed. This represents"
      },
      "AllowedOutFlows": {
        "type": "long",
        "description": "Count of outbound flows that were allowed(Outbound to"
      },
      "AzureRegion": {
        "type": "string",
        "description": "Azure region locations."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "BytesDestToSrc": {
        "type": "long",
        "description": "Represents bytes sent from the destination to the source of"
      },
      "BytesSrcToDest": {
        "type": "long",
        "description": "Represents bytes sent from the source to the destination of"
      },
      "CompletedFlows": {
        "type": "long",
        "description": "This is populated with non-zero value when a flow gets a"
      },
      "ConnectingVnets": {
        "type": "string",
        "description": "Space separated list of virtual network names."
      },
      "ConnectionName": {
        "type": "string",
        "description": "Connection Name."
      },
      "ConnectionType": {
        "type": "string",
        "description": "Type of the connection. Possible values are VNetPeering,"
      },
      "Country": {
        "type": "string",
        "description": "Two letter country code (ISO 3166-1 alpha-2)."
      },
      "DeniedInFlows": {
        "type": "long",
        "description": "Count of inbound flows that were denied(Inbound to the"
      },
      "network": {
        "type": "int",
        "description": "erface at which the flow was captured)."
      },
      "DeniedOutFlows": {
        "type": "long",
        "description": "Count of outbound flows that were denied(Outbound to"
      },
      "DestApplicationGateway": {
        "type": "string",
        "description": "Application gateway associated with the destination IP in"
      },
      "DestCloud": {
        "type": "string",
        "description": "Cloud associated with the source IP in the flow. Possible"
      },
      "DestEnvironment": {
        "type": "string",
        "description": "Environment associated with the destination IP in the flow."
      },
      "DestExpressRouteCircuit": {
        "type": "string",
        "description": "Express route circuit associated with the destination IP in"
      },
      "DestIp": {
        "type": "string",
        "description": "Destination IP address."
      },
      "DestLoadBalancer": {
        "type": "string",
        "description": "Load balancer associated with the destination IP in the flow."
      },
      "DestLocalNetworkGateway": {
        "type": "string",
        "description": "Local network gateway associated with the destination IP in"
      },
      "DestNic": {
        "type": "string",
        "description": "NIC associated with the destination IP in the flow."
      },
      "DestPort": {
        "type": "int",
        "description": "Destination port."
      },
      "DestPublicIps": {
        "type": "string",
        "description": "Destination public IP addresses flow information."
      },
      "DestRegion": {
        "type": "string",
        "description": "Azure region of virtual network/ network interface/ virtual"
      },
      "DestServiceId": {
        "type": "string",
        "description": "Service ID associated with the destination IP in the flow."
      },
      "DestServiceName": {
        "type": "string",
        "description": "Service Name associated with the destination IP in the flow."
      },
      "DestSubnet": {
        "type": "string",
        "description": "Subnet associated with the destination IP in the flow."
      },
      "DestSubscription": {
        "type": "string",
        "description": "Subscription Id of virtual network/ network interface/ virtual"
      },
      "DestTenantId": {
        "type": "string",
        "description": "Tenant ID associated with the destination IP in the flow."
      },
      "DestTenantName": {
        "type": "string",
        "description": "Tenant Name associated with the destination IP in the flow."
      },
      "DestVm": {
        "type": "string",
        "description": "Virtual machine associated with the destination IP in the"
      },
      "ExpressRouteCircuitPeeringType": {
        "type": "string",
        "description": "The peering type of the associated express route circuit for"
      },
      "FaSchemaVersion": {
        "type": "string",
        "description": "Schema version for ingestion."
      },
      "FlowDirection": {
        "type": "string",
        "description": "Direction of the flow which can be inbound or outbound."
      },
      "FlowEncryption": {
        "type": "string",
        "description": "The type of flow encryption."
      },
      "FlowEndTime": {
        "type": "datetime",
        "description": "Last occurrence of the flow (which will get aggregated) in"
      },
      "FlowIntervalEndTime": {
        "type": "datetime",
        "description": "Ending time(in UTC) of the flow log processing interval."
      },
      "FlowIntervalStartTime": {
        "type": "datetime",
        "description": "Starting time(in UTC) of the flow log processing interval."
      },
      "FlowLogResourceId": {
        "type": "string",
        "description": "The resource Id for the flow log"
      },
      "FlowStartTime": {
        "type": "datetime",
        "description": "First occurrence of the flow (which will get aggregated) in"
      },
      "FlowStatus": {
        "type": "string",
        "description": "Status of flow which can be allowed or denied."
      },
      "FlowType": {
        "type": "string",
        "description": "Category of the flows(allowed values are IntraVNet,"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "IsFlowCapturedAtUdrHop": {
        "type": "bool",
        "description": "True if flow gets captured at a UDR hop."
      },
      "L4Protocol": {
        "type": "string",
        "description": "Transport Protocol,T = TCP, U = UDP."
      },
      "L7Protocol": {
        "type": "string",
        "description": "Application Layer protocol name."
      },
      "MacAddress": {
        "type": "string",
        "description": "MAC address of the network interface at which the flow was"
      },
      "NsgList": {
        "type": "string",
        "description": "Network Security Group(NSG) associated with the flow. This"
      },
      "NsgRule": {
        "type": "string",
        "description": "NSG rule that allowed or denied this flow. This is a"
      },
      "NsgRuleType": {
        "type": "string",
        "description": "The type of Network Security Group(NSG) rule used by the"
      },
      "PacketsDestToSrc": {
        "type": "long",
        "description": "Represents packets sent from the destination to the source"
      },
      "PacketsSrcToDest": {
        "type": "long",
        "description": "Represents packets sent from the source to the destination"
      },
      "PrivateEndpointResourceId": {
        "type": "string",
        "description": "Resource ID of the private endpoint resource."
      },
      "PrivateLinkResourceId": {
        "type": "string",
        "description": "Resource ID of the private link service."
      },
      "PrivateLinkResourceName": {
        "type": "string",
        "description": "Resource name of the private link service."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "SrcApplicationGateway": {
        "type": "string",
        "description": "Application gateway associated with the source IP in the"
      },
      "SrcCloud": {
        "type": "string",
        "description": "Cloud associated with the source IP in the flow. Possible"
      },
      "SrcEnvironment": {
        "type": "string",
        "description": "Environment associated with the source IP in the flow."
      },
      "SrcExpressRouteCircuit": {
        "type": "string",
        "description": "Express route circuit associated with the source IP in the"
      },
      "SrcIp": {
        "type": "string",
        "description": "Source IP address."
      },
      "SrcLoadBalancer": {
        "type": "string",
        "description": "Load balancer associated with the source IP in the flow."
      },
      "SrcLocalNetworkGateway": {
        "type": "string",
        "description": "Local network gateway associated with the source IP in the"
      },
      "SrcNic": {
        "type": "string",
        "description": "NIC associated with the source IP in the flow."
      },
      "SrcPorts": {
        "type": "string",
        "description": "Pipe Separated Source Ports."
      },
      "SrcPublicIps": {
        "type": "string",
        "description": "Source public IP addresses flow information."
      },
      "SrcRegion": {
        "type": "string",
        "description": "Azure region of virtual network/ network interface/ virtual"
      },
      "SrcServiceId": {
        "type": "string",
        "description": "Service ID associated with the source IP in the flow."
      },
      "SrcServiceName": {
        "type": "string",
        "description": "Service Name associated with the source IP in the flow."
      },
      "SrcSubnet": {
        "type": "string",
        "description": "Subnet associated with the source IP in the flow."
      },
      "SrcSubscription": {
        "type": "string",
        "description": "Subscription of the Azure virtual network/ network"
      },
      "SrcTenantId": {
        "type": "string",
        "description": "Tenant ID associated with the source IP in the flow."
      },
      "SrcTenantName": {
        "type": "string",
        "description": "Tenant Name associated with the source IP in the flow."
      },
      "SrcVm": {
        "type": "string",
        "description": "Virtual machine associated with the source IP in the flow."
      },
      "Status": {
        "type": "string",
        "description": "Status of the ingestion. Possible values can be Completed,"
      },
      "SubType": {
        "type": "string",
        "description": "Subtype of the ingestion. Values can be Flowlog and"
      },
      "TargetResourceId": {
        "type": "string",
        "description": "Target Resource Id for the resource where flow logging has"
      },
      "TargetResourceType": {
        "type": "string",
        "description": "Target Resource Type where flow logging is enabled. It can"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The time when the data gets ingested into the log analytics"
      },
      "TimeProcessed": {
        "type": "datetime",
        "description": "Time(in UTC) at which the traffic analytics processed the raw"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "NTATopologyDetails": {
    "tableName": "NTATopologyDetails",
    "description": "Traffic Analytics records for Topology data.",
    "columns": {
      "Access": {
        "type": "string",
        "description": "Access(Allow/Deny) associated with network security group rule."
      },
      "AddressPrefixes": {
        "type": "string",
        "description": "The address prefixes associated with the discovered resource."
      },
      "AllowForwardedTraffic": {
        "type": "bool",
        "description": "Whether the forwarded traffic from the VMs in the local virtual network will be"
      },
      "AllowGatewayTransit": {
        "type": "bool",
        "description": "If gateway links can be used in remote virtual networking to link to this virtual network."
      },
      "AllowVirtualNetworkAccess": {
        "type": "bool",
        "description": "Whether the VMs in the local virtual network space would be able to access the VMs in"
      },
      "AppGatewayType": {
        "type": "string",
        "description": "Type of the application gateway resource. This would be either internal or internet facing."
      },
      "ApplicationGatewayBackendPools": {
        "type": "string",
        "description": "Pool of application gateway backend IP addresses."
      },
      "AzureAsn": {
        "type": "long",
        "description": "The Azure ASN of express route circuit peering."
      },
      "AzureResourceType": {
        "type": "string",
        "description": "Resource type of the discovered resource."
      },
      "BackendAddressPool": {
        "type": "string",
        "description": "The reference to backend address pool resource."
      },
      "BackendIpAddress": {
        "type": "string",
        "description": "Backend IP address associated with the inbound NAT rules."
      },
      "BackendPort": {
        "type": "int",
        "description": "Backend port associated with the inbound NAT rules. The port used for the internal"
      },
      "BackendSubnets": {
        "type": "string",
        "description": "List of space separated subnets associated with the discovered resource."
      },
      "BgpEnabled": {
        "type": "bool",
        "description": "Whether BGP is enabled for this resource or not."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CircuitProvisioningState": {
        "type": "string",
        "description": "The current provisioning state of express route circuit."
      },
      "ComponentType": {
        "type": "string",
        "description": "Component type of the status message. Possible values are Flowlog/Topology."
      },
      "ConnectionStatus": {
        "type": "string",
        "description": "Gateway connection status."
      },
      "ConnectionType": {
        "type": "string",
        "description": "Connection type of the discovered connection."
      },
      "Description": {
        "type": "string",
        "description": "Description of with network security group rule."
      },
      "DestinationAddressPrefix": {
        "type": "string",
        "description": "Destination address prefix associated with network security group rule."
      },
      "DestinationPortRange": {
        "type": "string",
        "description": "Destination port range associated with network security group rule."
      },
      "Direction": {
        "type": "string",
        "description": "Direction associated with network security group rule."
      },
      "DiscoveryRegion": {
        "type": "string",
        "description": "The region where resource is discovered."
      },
      "EgressBytesTransferred": {
        "type": "long",
        "description": "The egress bytes transferred in this connection."
      },
      "EnableIpForwarding": {
        "type": "bool",
        "description": "Indicates whether IP forwarding is enabled on the network interface."
      },
      "EncryptionEnabled": {
        "type": "bool",
        "description": "Indicates whether encryption is enabled on the virtual network."
      },
      "EncryptionEnforcement": {
        "type": "string",
        "description": "Indicates whether the encrypted virtual network allows VM that does not support"
      },
      "FloatingIpEnabled": {
        "type": "bool",
        "description": "Configures a virtual machine's endpoint for the floating IP capability required to configure"
      },
      "FlowLogStorageAccount": {
        "type": "string",
        "description": "Id of the storage account which is used to store the flow log."
      },
      "FrontendIpAddress": {
        "type": "string",
        "description": "Frontend IP address associated with the inbound NAT rule."
      },
      "FrontendIps": {
        "type": "string",
        "description": "Frontend IP address of the load balancer."
      },
      "FrontendPort": {
        "type": "int",
        "description": "Frontend port associated with the inbound NAT rules. The port for the external endpoint."
      },
      "FrontendSubnet": {
        "type": "string",
        "description": "The subnet of the discovered load balancer resource. This will be populated when the load"
      },
      "FrontendSubnets": {
        "type": "string",
        "description": "List of space separated subnets of the discovered load balancer resource. This will be"
      },
      "GatewayConnectionType": {
        "type": "string",
        "description": "Gateway connection type."
      },
      "GatewaySubnet": {
        "type": "string",
        "description": "Subnet associated with the application aateway resource."
      },
      "GatewayType": {
        "type": "string",
        "description": "Gateway Type assocaited with virtual network gateway, VPN or express route."
      },
      "IngressBytesTransferred": {
        "type": "long",
        "description": "The ingress bytes transferred in this connection."
      },
      "IpAddress": {
        "type": "string",
        "description": "Gateway IP address of the discovered resource."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false ingestion isn't"
      },
      "IsFlowEnabled": {
        "type": "bool",
        "description": "Flag to enable/disable flow logging."
      },
      "IsVirtualAppliance": {
        "type": "bool",
        "description": "Boolean to specify if the discovered resource is a virtual appliance."
      },
      "LoadBalancerBackendPools": {
        "type": "string",
        "description": "Pool of load balancer backend IP addresses."
      },
      "LoadBalancerType": {
        "type": "string",
        "description": "The type of the discovered load balancer resource. Possible values are internal load"
      },
      "LocalNetworkGateway": {
        "type": "string",
        "description": "The reference to local network gateway resource."
      },
      "LocalPreference": {
        "type": "string",
        "description": "Local preference value as set with the set local-preference route-map configuration"
      },
      "MacAddress": {
        "type": "string",
        "description": "MAC address of the discovered NIC."
      },
      "Name": {
        "type": "string",
        "description": "Name of the discovered resource."
      },
      "Network": {
        "type": "string",
        "description": "IP address of a network entity associated with the express route circuit route."
      },
      "NextHopIp": {
        "type": "string",
        "description": "The IP address packets should be forwarded to. Next hop values are only allowed in routes"
      },
      "NextHopType": {
        "type": "string",
        "description": "The type of azure hop the packet should be sent to."
      },
      "Nsg": {
        "type": "string",
        "description": "The reference to the network security group resource."
      },
      "Path": {
        "type": "string",
        "description": "Autonomous system paths to the destination network of the express route circuit route."
      },
      "Peer": {
        "type": "string",
        "description": "The reference to peerings resource."
      },
      "PeerAsn": {
        "type": "long",
        "description": "The peer ASN of express route circuit peering."
      },
      "PeeringType": {
        "type": "string",
        "description": "The peering type of express route circuit peering."
      },
      "PrimaryAzurePort": {
        "type": "string",
        "description": "The primary port of express route circuit peering."
      },
      "PrimaryBytesIn": {
        "type": "long",
        "description": "The primary bytes in of the peering."
      },
      "PrimaryBytesOut": {
        "type": "long",
        "description": "The primary bytes out of the peering."
      },
      "PrimaryNextHop": {
        "type": "string",
        "description": "Primary next hop address of the express route circuit route."
      },
      "PrimaryPeerAddressPrefix": {
        "type": "string",
        "description": "The primary peer address prefix of express route circuit peering."
      },
      "Priority": {
        "type": "int",
        "description": "Specifies the priority for the virtual machine. Minimum api-version: 2019-03-01."
      },
      "PrivateEndpointResourceId": {
        "type": "string",
        "description": "Resource ID of the private endpoint resource."
      },
      "PrivateFrontendIps": {
        "type": "string",
        "description": "Front end private IP addresses associated with the application gateway resource."
      },
      "PrivateIpAddresses": {
        "type": "string",
        "description": "Private IP address of the IP configuration."
      },
      "PrivateLinkResourceId": {
        "type": "string",
        "description": "Resource ID of the private link service."
      },
      "Protocol": {
        "type": "string",
        "description": "Protocol associated with network security group rule."
      },
      "PublicFrontendIps": {
        "type": "string",
        "description": "Front end public IP addresses associated with the application gateway resource."
      },
      "PublicIpAddresses": {
        "type": "string",
        "description": "Public IP address bound to the IP configuration."
      },
      "Region": {
        "type": "string",
        "description": "Region of the discovered resource."
      },
      "RouteTable": {
        "type": "string",
        "description": "The reference to the route table resource."
      },
      "RoutingWeight": {
        "type": "int",
        "description": "The routing weight."
      },
      "RuleType": {
        "type": "string",
        "description": "The type of the network security group rule."
      },
      "SchemaVersion": {
        "type": "string",
        "description": "This is topology schema version and not related to flow log schema version."
      },
      "SecondaryAzurePort": {
        "type": "string",
        "description": "The secondary port of express route circuit peering."
      },
      "SecondaryBytesIn": {
        "type": "long",
        "description": "The secondary bytes in of the peering."
      },
      "SecondaryBytesOut": {
        "type": "long",
        "description": "The secondary bytes out of the peering."
      },
      "SecondaryNextHop": {
        "type": "string",
        "description": "Secondary next hop address of the express route circuit route."
      },
      "SecondaryPeerAddressPrefix": {
        "type": "string",
        "description": "The secondary peer address prefix of express route circuit peering."
      },
      "ServiceProviderProperties": {
        "type": "string",
        "description": "\"Contains service provider properties in an express route circuit. Service provider"
      },
      "ServiceProviderProvisioningState": {
        "type": "string",
        "description": "The service provider provisioning state state of the resource."
      },
      "Sku": {
        "type": "string",
        "description": "SKU or pricing associated with the discovered resource."
      },
      "SkuDetail": {
        "type": "string",
        "description": "\"The SKU of express route circuit. Express route circuit SKU detail semicolon seperated"
      },
      "SourceAddressPrefix": {
        "type": "string",
        "description": "Source address prefix associated with network security group rule."
      },
      "SourcePortRange": {
        "type": "string",
        "description": "Source port range associated with network security group rule."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for Windows"
      },
      "State": {
        "type": "string",
        "description": "The peering state of express route circuit peering."
      },
      "Status": {
        "type": "string",
        "description": "Status of the ingestion. Possible values can be Completed/Partial/Failed."
      },
      "Subnet1": {
        "type": "string",
        "description": "Subnet associated with the discovered subnetwork connection."
      },
      "Subnet2": {
        "type": "string",
        "description": "Subnet associated with the discovered subnetwork connection."
      },
      "SubnetPrefixes": {
        "type": "string",
        "description": "Space separated string of address prefixes in local network address space."
      },
      "SubnetRegion1": {
        "type": "string",
        "description": "Subnet region associated with the discovered subnetwork connection."
      },
      "SubnetRegion2": {
        "type": "string",
        "description": "Subnet region associated with the discovered subnetwork connection."
      },
      "Subnetwork": {
        "type": "string",
        "description": "The refrence to the subnetwork resource."
      },
      "Subscription": {
        "type": "string",
        "description": "Subscription guid of the discovered resource."
      },
      "SubscriptionName": {
        "type": "string",
        "description": "Subscription name of the discovered resource."
      },
      "SubType": {
        "type": "string",
        "description": "Subtype of the ingestion. Values can be Topology and StatusMessage."
      },
      "Tags": {
        "type": "string",
        "description": "Tags associated with the discovered resource."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The time when the data gets ingested into the log analytics workspace."
      },
      "TimeProcessed": {
        "type": "datetime",
        "description": "Time(in UTC) at which the traffic analytics discovered the topology resource."
      },
      "TopologyVersion": {
        "type": "string",
        "description": "Topology version."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UseRemoteGateways": {
        "type": "bool",
        "description": "If remote gateways can be used on this virtual network. If the flag is set to true, and"
      },
      "VipAddress": {
        "type": "string",
        "description": "Space separated list of IP addresses associated with virtual network gateway."
      },
      "VirtualAppliances": {
        "type": "string",
        "description": "Virtual appliances associated with the discovered subnetwork connection."
      },
      "VirtualMachine": {
        "type": "string",
        "description": "The reference to a virtual machine."
      },
      "VirtualNetwork1": {
        "type": "string",
        "description": "The reference to the virtual network resource associated with the virtual network peering."
      },
      "VirtualNetwork2": {
        "type": "string",
        "description": "The reference to the virtual network resource associated with the virtual network peering."
      },
      "VirtualNetworkGateway1": {
        "type": "string",
        "description": "The reference to virtual network gateway resource."
      },
      "VirtualNetworkGateway2": {
        "type": "string",
        "description": "The reference to virtual network gateway resource."
      },
      "VirtualSubnetwork": {
        "type": "string",
        "description": "Virtual subnetwork associated with virtual network gateway."
      },
      "VlanId": {
        "type": "int",
        "description": "The VLAN Id of the peering."
      },
      "VmssName": {
        "type": "string",
        "description": "The virtual machine scale set name."
      },
      "VnetEncryptionSupported": {
        "type": "bool",
        "description": "Indicates whether the virtual machine this nic is attached to supports encryption."
      },
      "VpnClientAddressPrefixes": {
        "type": "string",
        "description": "The reference to the address prefix resource which represents address prefix for P2S"
      },
      "Weight": {
        "type": "int",
        "description": "Route weight of the express route circuit route."
      },
      "Zones": {
        "type": "string",
        "description": "The virtual machine zones information."
      }
    }
  },
  "NWConnectionMonitorDNSResult": {
    "tableName": "NWConnectionMonitorDNSResult",
    "description": "Connection Monitor DNS result records.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ChecksFailed": {
        "type": "int",
        "description": "The total number of checks failed under the test"
      },
      "ChecksTotal": {
        "type": "int",
        "description": "The total number of checks done under the test"
      },
      "ConnectionMonitorResourceId": {
        "type": "string",
        "description": "The connection monitor resource id of the test"
      },
      "DestinationAddress": {
        "type": "string",
        "description": "The address of the destination configured for the test"
      },
      "DestinationAgentId": {
        "type": "string",
        "description": "The destination agent id"
      },
      "DestinationIP": {
        "type": "string",
        "description": "The IP address of the destination"
      },
      "DestinationName": {
        "type": "string",
        "description": "The destination end point name"
      },
      "DestinationPort": {
        "type": "int",
        "description": "The destination port configured for the test"
      },
      "DestinationResourceId": {
        "type": "string",
        "description": "The resource id of the Destination machine"
      },
      "DestinationSubnet": {
        "type": "string",
        "description": "If applicable, the subnet of the destination"
      },
      "DestinationType": {
        "type": "string",
        "description": "The type of the destination machine configured for the test"
      },
      "DomainName": {
        "type": "string",
        "description": "The domain name of DNS Test"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "Protocol": {
        "type": "string",
        "description": "The protocol of the test"
      },
      "RecordId": {
        "type": "string",
        "description": "The record id for unique identification of test result record"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "ResponseRecordCount": {
        "type": "int",
        "description": "The total count of DNS response records"
      },
      "ResponseRecords": {
        "type": "string",
        "description": "The DNS Response records"
      },
      "ResponseRecordType": {
        "type": "string",
        "description": "The type of DNS response record"
      },
      "SourceAddress": {
        "type": "string",
        "description": "The address of the source configured for the test"
      },
      "SourceAgentId": {
        "type": "string",
        "description": "The source agent id"
      },
      "SourceIP": {
        "type": "string",
        "description": "The IP address of the source"
      },
      "SourceName": {
        "type": "string",
        "description": "The source end point name"
      },
      "SourceResourceId": {
        "type": "string",
        "description": "The resource id of the source machine"
      },
      "SourceSubnet": {
        "type": "string",
        "description": "The subnet of the source"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "SourceType": {
        "type": "string",
        "description": "The type of the source machine configured for the test"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TestConfigurationName": {
        "type": "string",
        "description": "The test configuration name to which the test belongs to"
      },
      "TestGroupName": {
        "type": "string",
        "description": "The test group name to which the test belongs to"
      },
      "TestResult": {
        "type": "string",
        "description": "The result of the test"
      },
      "TestResultCriterion": {
        "type": "string",
        "description": "The result criterion of the test"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "ValidationChecks": {
        "type": "string",
        "description": "The validation checks of DNS Result"
      },
      "ValidationIssues": {
        "type": "string",
        "description": "The issues identified as part of DNS Test"
      }
    }
  },
  "Result": {
    "tableName": "Result",
    "description": "Connection Monitor destination listener result records.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ConnectionMonitorResourceId": {
        "type": "string",
        "description": "The connection monitor resource id of the test"
      },
      "DestinationAddress": {
        "type": "string",
        "description": "The address of the destination configured for the test"
      },
      "DestinationAgentId": {
        "type": "string",
        "description": "The destination agent id"
      },
      "DestinationIP": {
        "type": "string",
        "description": "The IP address of the destination"
      },
      "DestinationName": {
        "type": "string",
        "description": "The destination end point name"
      },
      "DestinationPort": {
        "type": "int",
        "description": "The Destination port configured for the test"
      },
      "DestinationResourceId": {
        "type": "string",
        "description": "The resource id of the Destination machine"
      },
      "DestinationSubnet": {
        "type": "string",
        "description": "If applicable, the subnet of the destination configured for the"
      },
      "DestinationType": {
        "type": "string",
        "description": "The type of the destination machine configured for the test"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "Issues": {
        "type": "string",
        "description": "The issues identfied by Destination Listener"
      },
      "ListeningOutcome": {
        "type": "string",
        "description": "The listening outcome result"
      },
      "Protocol": {
        "type": "string",
        "description": "The protocol of the test"
      },
      "RecordId": {
        "type": "string",
        "description": "The record id for unique identification of test result record"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TestConfigurationName": {
        "type": "string",
        "description": "The test configuration name to which the test belongs to"
      },
      "TestGroupName": {
        "type": "string",
        "description": "The test group name to which the test belongs to"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "NWConnectionMonitorPathResult": {
    "tableName": "NWConnectionMonitorPathResult",
    "description": "Connection Monitor path result records.",
    "columns": {
      "AdditionalData": {
        "type": "string",
        "description": "The additional data for the test"
      },
      "AvgRoundTripTimeMs": {
        "type": "real",
        "description": "The average round trip time for the test"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ChecksFailed": {
        "type": "int",
        "description": "The total number of checks failed under the test"
      },
      "ChecksFailedPercentThreshold": {
        "type": "int",
        "description": "The checks failed percent threshold set for the test"
      },
      "ChecksTotal": {
        "type": "int",
        "description": "The total number of checks done under the test"
      },
      "ConnectionMonitorResourceId": {
        "type": "string",
        "description": "The connection monitor resource id of the test"
      },
      "DestinationAddress": {
        "type": "string",
        "description": "The address of the destination configured for the test"
      },
      "DestinationAgentId": {
        "type": "string",
        "description": "The destination agent id"
      },
      "DestinationIP": {
        "type": "string",
        "description": "The IP address of the destination"
      },
      "DestinationName": {
        "type": "string",
        "description": "The destination end point name"
      },
      "DestinationPort": {
        "type": "int",
        "description": "The destination port configured for the test"
      },
      "DestinationResourceId": {
        "type": "string",
        "description": "The resource id of the Destination machine"
      },
      "DestinationSubnet": {
        "type": "string",
        "description": "If applicable, the subnet of the destination"
      },
      "DestinationType": {
        "type": "string",
        "description": "The type of the destination machine configured for the test"
      },
      "HopAddresses": {
        "type": "string",
        "description": "The hop addresses identified for the test"
      },
      "HopLinkTypes": {
        "type": "string",
        "description": "The hop link types identified for the test"
      },
      "HopResourceIds": {
        "type": "string",
        "description": "The hop resource ids identified for the test"
      },
      "Hops": {
        "type": "string",
        "description": "The hops identified for the test"
      },
      "HopTypes": {
        "type": "string",
        "description": "The hop types identified for the test"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "Issues": {
        "type": "string",
        "description": "The issues identified for the test"
      },
      "JitterMs": {
        "type": "real",
        "description": "The mean deviation round trip time for the test"
      },
      "MaxRoundTripTimeMs": {
        "type": "real",
        "description": "The maximum round trip time for the test"
      },
      "MinRoundTripTimeMs": {
        "type": "real",
        "description": "The minimum round trip time (ms) for the test"
      },
      "PathTestResult": {
        "type": "string",
        "description": "The result of the test"
      },
      "PathTestResultCriterion": {
        "type": "string",
        "description": "The result criterion of the test"
      },
      "Protocol": {
        "type": "string",
        "description": "The protocol of the test"
      },
      "RecordId": {
        "type": "string",
        "description": "The record id for unique identification of test result record"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "RoundTripTimeMsThreshold": {
        "type": "real",
        "description": "The round trip threshold (ms) set for the test"
      },
      "SourceAddress": {
        "type": "string",
        "description": "The address of the source configured for the test"
      },
      "SourceAgentId": {
        "type": "string",
        "description": "The source agent id"
      },
      "SourceIP": {
        "type": "string",
        "description": "The IP address of the source"
      },
      "SourceName": {
        "type": "string",
        "description": "The source end point name"
      },
      "SourceResourceId": {
        "type": "string",
        "description": "The resource id of the source machine"
      },
      "SourceSubnet": {
        "type": "string",
        "description": "The subnet of the source"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "SourceType": {
        "type": "string",
        "description": "The type of the source machine configured for the test"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TestConfigurationName": {
        "type": "string",
        "description": "The test configuration name to which the test belongs to"
      },
      "TestGroupName": {
        "type": "string",
        "description": "The test group name to which the test belongs to"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "TopologyId": {
        "type": "string",
        "description": "The topology id of the path record"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "NWConnectionMonitorTestResult": {
    "tableName": "NWConnectionMonitorTestResult",
    "description": "Connection Monitor test result records.",
    "columns": {
      "AdditionalData": {
        "type": "string",
        "description": "The additional data for the test"
      },
      "AvgRoundTripTimeMs": {
        "type": "real",
        "description": "The average round trip time for the test"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ChecksFailed": {
        "type": "int",
        "description": "The total number of checks failed under the test"
      },
      "ChecksFailedPercentThreshold": {
        "type": "int",
        "description": "The checks failed percent threshold set for the test"
      },
      "ChecksTotal": {
        "type": "int",
        "description": "The total number of checks done under the test"
      },
      "ConnectionMonitorResourceId": {
        "type": "string",
        "description": "The connection monitor resource id of the test"
      },
      "DestinationAddress": {
        "type": "string",
        "description": "The address of the destination configured for the test"
      },
      "DestinationAgentId": {
        "type": "string",
        "description": "The destination agent id"
      },
      "DestinationIP": {
        "type": "string",
        "description": "The IP address of the destination"
      },
      "DestinationName": {
        "type": "string",
        "description": "The destination end point name"
      },
      "DestinationPort": {
        "type": "int",
        "description": "The destination port configured for the test"
      },
      "DestinationResourceId": {
        "type": "string",
        "description": "The resource id of the Destination machine"
      },
      "DestinationSubnet": {
        "type": "string",
        "description": "If applicable, the subnet of the destination"
      },
      "DestinationType": {
        "type": "string",
        "description": "The type of the destination machine configured for the test"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "JitterMs": {
        "type": "real",
        "description": "The mean deviation round trip time for the test"
      },
      "MaxRoundTripTimeMs": {
        "type": "real",
        "description": "The maximum round trip time for the test"
      },
      "MinRoundTripTimeMs": {
        "type": "real",
        "description": "The minimum round trip time (ms) for the test"
      },
      "Protocol": {
        "type": "string",
        "description": "The protocol of the test"
      },
      "RecordId": {
        "type": "string",
        "description": "The record id for unique identification of test result record"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "RoundTripTimeMsThreshold": {
        "type": "real",
        "description": "The round trip threshold (ms) set for the test"
      },
      "SourceAddress": {
        "type": "string",
        "description": "The address of the source configured for the test"
      },
      "SourceAgentId": {
        "type": "string",
        "description": "The source agent id"
      },
      "SourceIP": {
        "type": "string",
        "description": "The IP address of the source"
      },
      "SourceName": {
        "type": "string",
        "description": "The source end point name"
      },
      "SourceResourceId": {
        "type": "string",
        "description": "The resource id of the source machine"
      },
      "SourceSubnet": {
        "type": "string",
        "description": "The subnet of the source"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "SourceType": {
        "type": "string",
        "description": "The type of the source machine configured for the test"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TestConfigurationName": {
        "type": "string",
        "description": "The test configuration name to which the test belongs to"
      },
      "TestGroupName": {
        "type": "string",
        "description": "The test group name to which the test belongs to"
      },
      "TestResult": {
        "type": "string",
        "description": "The result of the test"
      },
      "TestResultCriterion": {
        "type": "string",
        "description": "The result criterion of the test"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "NetworkAccessAlerts": {
    "tableName": "NetworkAccessAlerts",
    "description": "This table is part of Identity and Network Access, which contains Network Access Alerts. These Alerts can be leveraged for knowing the state of your network access.",
    "columns": {
      "AlertType": {
        "type": "string",
        "description": "The type name of the alert. Alerts of the same type should have the"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ComponentName": {
        "type": "string",
        "description": "The name of a component inside the product which generated the"
      },
      "CreationDateTime": {
        "type": "datetime",
        "description": "The date and time (UTC) that the event was generated."
      },
      "Description": {
        "type": "string",
        "description": "The number of bytes sent from the source to the destination for the"
      },
      "DetectionTechnology": {
        "type": "string",
        "description": "Optional field to hold the alert threat detection technology."
      },
      "DisplayName": {
        "type": "string",
        "description": "The display name of the alert, this value is displayed to users either as-"
      },
      "ExtendedProperties": {
        "type": "dynamic",
        "description": "A bag of fields which will be presented to the user. Providers can send"
      },
      "FirstActivityDateTime": {
        "type": "datetime",
        "description": "The impact start time of the alert (the time of the first event or activity"
      },
      "Id": {
        "type": "string",
        "description": "A unique identifier for each Network Access Alert."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "IsPreview": {
        "type": "bool",
        "description": "IsPreview will be defined as true where the alert is in public preview"
      },
      "LastActivityDateTime": {
        "type": "datetime",
        "description": "The impact end time of the alert (the time of the last event or activity"
      },
      "PolicyId": {
        "type": "string",
        "description": "The Policy Id associated with the network access traffic that generated"
      },
      "ProductName": {
        "type": "string",
        "description": "The name of the product which published this alert, i.e. Azure Security"
      },
      "RelatedResources": {
        "type": "dynamic",
        "description": "A list of entities related to the alert. This list can hold a mixture of"
      },
      "Severity": {
        "type": "string",
        "description": "The severity of the alert as it is reported by the provider. Possible"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "SubTechniques": {
        "type": "string",
        "description": "Optional field that specify the kill chain related sub-techniques behind"
      },
      "Techniques": {
        "type": "string",
        "description": "Optional field that specify the kill chain related techniques behind the"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The date and time (UTC) that the event was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "VendorName": {
        "type": "string",
        "description": "The name of the vendor that raised the alert, this value is displayed to"
      }
    }
  },
  "NetworkAccessConnectionEvents": {
    "tableName": "NetworkAccessConnectionEvents",
    "description": "This table is part of Identity and Network Access, which contains Network Traffic Connection Events. These logs can be leveraged for security, and traffic management, as well as to monitor users experience.",
    "columns": {
      "AgentVersion": {
        "type": "string",
        "description": "The version of the agent connecting."
      },
      "AppId": {
        "type": "string",
        "description": "Destination Application ID accessed in Azure AD during the"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ConnectionId": {
        "type": "string",
        "description": "Unique identifier representing the connection this traffic log"
      },
      "DestinationFqdn": {
        "type": "string",
        "description": "The destination device hostname, including domain"
      },
      "DestinationIp": {
        "type": "string",
        "description": "The IP address of the connection or session destination."
      },
      "DestinationPort": {
        "type": "int",
        "description": "The destination IP port."
      },
      "DeviceCategory": {
        "type": "string",
        "description": "Device type the transaction originated from. Client, Branch."
      },
      "DeviceId": {
        "type": "string",
        "description": "The ID of the source device as reported in the record."
      },
      "DeviceOperatingSystem": {
        "type": "string",
        "description": "The client connecting operating system type."
      },
      "DeviceOperatingSystemVersion": {
        "type": "string",
        "description": "The client connecting operating system version."
      },
      "EventType": {
        "type": "string",
        "description": "The type of generative AI event that occurred."
      },
      "InitiatingProcessName": {
        "type": "string",
        "description": "The process initiating the traffic transaction."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "NetworkProtocol": {
        "type": "string",
        "description": "The network protocol, IPv6 or IPv4."
      },
      "PopProcessingRegion": {
        "type": "string",
        "description": "Region where the request was processed by the backend"
      },
      "RemoteNetworkId": {
        "type": "string",
        "description": "The ID from which traffic was sent or received, providing"
      },
      "visibility": {
        "type": "int",
        "description": "o the origin of the traffic."
      },
      "RemoteNetworkSourceIp": {
        "type": "string",
        "description": "The Remote Network IP address from which the connection"
      },
      "SourceIp": {
        "type": "string",
        "description": "The IP address from which the connection or session"
      },
      "SourcePort": {
        "type": "int",
        "description": "The IP port from which the connection originated."
      },
      "SourcePrivateIp": {
        "type": "string",
        "description": "The private IP address from which the connection or session"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The date and time (UTC) that the event was generated."
      },
      "Token3PExpiry": {
        "type": "datetime",
        "description": "The expiry date of the access token used to access the"
      },
      "Token3PIssuedAt": {
        "type": "datetime",
        "description": "The issued date of the access token used to access the"
      },
      "Token3PUniqueId": {
        "type": "string",
        "description": "The unique token identifier of the access token used to"
      },
      "Token3PValidFrom": {
        "type": "datetime",
        "description": "The validity date of the access token used to access the"
      },
      "TrafficType": {
        "type": "string",
        "description": "The type of the target destination traffic."
      },
      "TransportProtocol": {
        "type": "string",
        "description": "The IP protocol used by the connection or session as listed"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserId": {
        "type": "string",
        "description": "A machine-readable, alphanumeric, unique representation"
      },
      "UserPrincipalName": {
        "type": "string",
        "description": "The UPN of the user who performed the activity."
      },
      "Activity": {
        "type": "string",
        "description": "The type of generative AI activity being performed."
      },
      "Content": {
        "type": "string",
        "description": "The content or query associated with the generative AI interaction."
      },
      "DestinationUrl": {
        "type": "string",
        "description": "The URL of the generative AI endpoint accessed."
      },
      "EventId": {
        "type": "string",
        "description": "Unique identifier for the generative AI event."
      },
      "SubActivity": {
        "type": "string",
        "description": "The specific type of operation within the activity."
      },
      "TransactionId": {
        "type": "string",
        "description": "Unique identifier for the transaction."
      }
    }
  },
  "NetworkAccessTraffic": {
    "tableName": "NetworkAccessTraffic",
    "description": "This table is part of Identity and Network Access, which contains Network Traffic Access logs. These logs can be leveraged for policy, risk, and traffic management, as well as to monitor users experience.",
    "columns": {
      "AccessType": {
        "type": "string",
        "description": "Type of accessed application. Access type options:"
      },
      "Action": {
        "type": "string",
        "description": "The action taken on the network session. Allowed, Denied."
      },
      "AgentVersion": {
        "type": "string",
        "description": "The version of the agent connecting."
      },
      "AppId": {
        "type": "string",
        "description": "Destination Application ID accessed in Azure AD during the"
      },
      "AppSegmentId": {
        "type": "string",
        "description": "Destination Application segment ID from Azure AD accessed"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CloudAppCatalogId": {
        "type": "string",
        "description": "The id of the application in the saas application catalog."
      },
      "CloudAppCategory": {
        "type": "string",
        "description": "The category of the cloud application (i.e social media,"
      },
      "CloudAppComplianceScore": {
        "type": "int",
        "description": "The compliance score of the application."
      },
      "CloudAppGeneralScore": {
        "type": "int",
        "description": "The general score of the application."
      },
      "CloudAppLegalScore": {
        "type": "int",
        "description": "The legal score of the application."
      },
      "CloudAppLoginUser": {
        "type": "string",
        "description": "The username that was used to log into the application."
      },
      "CloudAppName": {
        "type": "string",
        "description": "The name of the application (i.e chatGPT, SalesForce, Bing)."
      },
      "CloudAppRiskScore": {
        "type": "int",
        "description": "The risk score of the application."
      },
      "ConnectionId": {
        "type": "string",
        "description": "Unique identifier representing the connection this traffic log"
      },
      "ConnectionStatus": {
        "type": "string",
        "description": "Status of a connection. Status options: Open, Active, Closed."
      },
      "ConnectorId": {
        "type": "string",
        "description": "Private access connector ID."
      },
      "ConnectorIp": {
        "type": "string",
        "description": "Private access connector IP."
      },
      "ConnectorName": {
        "type": "string",
        "description": "Private access connector name."
      },
      "Description": {
        "type": "string",
        "description": "Additional details describing the traffic."
      },
      "DestinationFqdn": {
        "type": "string",
        "description": "The destination device hostname, including domain"
      },
      "DestinationIp": {
        "type": "string",
        "description": "The IP address of the connection or session destination."
      },
      "DestinationPort": {
        "type": "int",
        "description": "The destination IP port."
      },
      "DestinationUrl": {
        "type": "string",
        "description": "The Url link of the connection or session destination."
      },
      "DestinationWebCategories": {
        "type": "string",
        "description": "The destination FQDN's Web Categories."
      },
      "DeviceCategory": {
        "type": "string",
        "description": "Device type the transaction originated from. Client, Branch."
      },
      "DeviceId": {
        "type": "string",
        "description": "The ID of the source device as reported in the record."
      },
      "DeviceOperatingSystem": {
        "type": "string",
        "description": "The client connecting operating system type."
      },
      "DeviceOperatingSystemVersion": {
        "type": "string",
        "description": "The client connecting operating system version."
      },
      "FilteringProfileId": {
        "type": "string",
        "description": "The ID of the Filtering Profile associated with the action"
      },
      "FilteringProfileName": {
        "type": "string",
        "description": "The name of the Filtering Profile associated with the action"
      },
      "HttpMethod": {
        "type": "string",
        "description": "The http method used in the request."
      },
      "InitiatingProcessName": {
        "type": "string",
        "description": "The process initiating the traffic transaction."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "NetworkProtocol": {
        "type": "string",
        "description": "The network protocol, IPv6 or IPv4."
      },
      "OriginHeader": {
        "type": "string",
        "description": "The origin header value."
      },
      "PolicyId": {
        "type": "string",
        "description": "The ID of the policy for which the request was denied by its"
      },
      "PolicyName": {
        "type": "string",
        "description": "The name of the filtering policy associated with the action"
      },
      "PolicyRuleId": {
        "type": "string",
        "description": "The ID of the rule for which the request was denied by."
      },
      "ProcessingRegion": {
        "type": "string",
        "description": "Region where the request was processed by the backend"
      },
      "ReceivedBytes": {
        "type": "long",
        "description": "The number of bytes received."
      },
      "ReferrerHeader": {
        "type": "string",
        "description": "The Referer header value."
      },
      "RemoteNetworkId": {
        "type": "string",
        "description": "The ID from which traffic was sent or received, providing"
      },
      "visibility": {
        "type": "int",
        "description": "o the origin of the traffic."
      },
      "ResourceTenantId": {
        "type": "string",
        "description": "Tenant ID that owns the resource."
      },
      "ResponseCode": {
        "type": "int",
        "description": "The response code returned from the server."
      },
      "RuleName": {
        "type": "string",
        "description": "The name of the rule associated with the action performed"
      },
      "SentBytes": {
        "type": "long",
        "description": "The number of bytes sent."
      },
      "SessionId": {
        "type": "string",
        "description": "Unique identifier representing the session."
      },
      "SourceIp": {
        "type": "string",
        "description": "The IP address from which the connection or session"
      },
      "SourcePort": {
        "type": "int",
        "description": "The IP port from which the connection originated."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "ThreatType": {
        "type": "string",
        "description": "The identified threat type associated with the traffic."
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The date and time (UTC) that the event was generated."
      },
      "TlsAction": {
        "type": "string",
        "description": "The TLS action taken on the traffic."
      },
      "TlsPolicyId": {
        "type": "string",
        "description": "The unique token identifier of the TLS policy applied to the"
      },
      "TlsPolicyName": {
        "type": "string",
        "description": "The name for the TLS policy applied to the traffic."
      },
      "TlsStatus": {
        "type": "string",
        "description": "The status of the Tls option."
      },
      "Token3PExpiry": {
        "type": "datetime",
        "description": "The expiry date of the access token used to access the"
      },
      "Token3PIssuedAt": {
        "type": "datetime",
        "description": "The issued date of the access token used to access the"
      },
      "Token3PUniqueId": {
        "type": "string",
        "description": "The unique token identifier of the access token used to"
      },
      "Token3PValidFrom": {
        "type": "datetime",
        "description": "The validity date of the access token used to access the"
      },
      "TrafficType": {
        "type": "string",
        "description": "The type of the target destination traffic."
      },
      "TransactionId": {
        "type": "string",
        "description": "Unique identifier that representing a roundtrip of request"
      },
      "TransportProtocol": {
        "type": "string",
        "description": "The IP protocol used by the connection or session as listed"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UniqueTokenId": {
        "type": "string",
        "description": "The unique token identifier"
      },
      "UserId": {
        "type": "string",
        "description": "A machine-readable, alphanumeric, unique representation"
      },
      "UserPrincipalName": {
        "type": "string",
        "description": "The source username, including domain information when"
      },
      "VendorNames": {
        "type": "string",
        "description": "The name of the vendors who detected the threat."
      },
      "XForwardedFor": {
        "type": "string",
        "description": "X-Forwarded-For header of the HTTP request."
      }
    }
  },
  "NetworkSessions": {
    "tableName": "NetworkSessions",
    "description": "Network connections or sessions such as those logged by firewalls, Wire Data, NSG, Netflow, proxy systems and web security gateways.",
    "columns": {
      "AdditionalFields": {
        "type": "dynamic",
        "description": "When no respective column in the schema matches, additional"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CloudAppId": {
        "type": "string",
        "description": "The ID of the destination application for an HTTP application as"
      },
      "CloudAppName": {
        "type": "string",
        "description": "The name of the destination application for an HTTP"
      },
      "CloudAppOperation": {
        "type": "string",
        "description": "The operation the user performed in the context of the"
      },
      "CloudAppRiskLevel": {
        "type": "string",
        "description": "The risk level associated with an HTTP application as identified"
      },
      "DstBytes": {
        "type": "long",
        "description": "The number of bytes sent from the destination to the source"
      },
      "DstDomainHostname": {
        "type": "string",
        "description": "The domain of the destination host."
      },
      "DstDvcDomain": {
        "type": "string",
        "description": "The Domain of the destination device."
      },
      "DstDvcFqdn": {
        "type": "string",
        "description": "The fully qualified domain name of the host where the log was"
      },
      "DstDvcHostname": {
        "type": "string",
        "description": "The device name of the destination device."
      },
      "DstDvcIpAddr": {
        "type": "string",
        "description": "The destination IP address of a device that is not directly"
      },
      "DstDvcMacAddr": {
        "type": "string",
        "description": "The destination MAC address of a device that is not directly"
      },
      "DstGeoCity": {
        "type": "string",
        "description": "The city associated with the destination IP address."
      },
      "DstGeoCountry": {
        "type": "string",
        "description": "The country associated with the source IP address."
      },
      "DstGeoLatitude": {
        "type": "real",
        "description": "The latitude of the geographical coordinate associated with the"
      },
      "DstGeoLongitude": {
        "type": "real",
        "description": "The longitude of the geographical coordinate associated with"
      },
      "DstGeoRegion": {
        "type": "string",
        "description": "The region within a country associated with the destination IP"
      },
      "DstInterfaceGuid": {
        "type": "string",
        "description": "GUID of the network interface which was used for"
      },
      "DstInterfaceName": {
        "type": "string",
        "description": "The network interface used for the connection or session by"
      },
      "DstIpAddr": {
        "type": "string",
        "description": "The IP address of the connection or session destination."
      },
      "DstMacAddr": {
        "type": "string",
        "description": "The MAC address of the network interface at which the"
      },
      "DstNatIpAddr": {
        "type": "string",
        "description": "If reported by an intermediary NAT device such as a firewall,"
      },
      "DstNatPortNumber": {
        "type": "int",
        "description": "If reported by an intermediary NAT device such as a firewall,"
      },
      "DstPackets": {
        "type": "long",
        "description": "The number of packets sent from the destination to the source"
      },
      "DstPortNumber": {
        "type": "int",
        "description": "The destination IP port."
      },
      "DstResourceId": {
        "type": "string",
        "description": "The resource Id of the destination device."
      },
      "DstUserAadId": {
        "type": "string",
        "description": "The Azure AD account object ID of the user at the destination"
      },
      "DstUserDomain": {
        "type": "string",
        "description": "The domain or computer name of the account at the"
      },
      "DstUserName": {
        "type": "string",
        "description": "The username of the identity associated with the session's"
      },
      "DstUserSid": {
        "type": "string",
        "description": "The User ID of the identity associated with the session's"
      },
      "DstUserUpn": {
        "type": "string",
        "description": "The UPN of the identity associated with the session's"
      },
      "DstZone": {
        "type": "string",
        "description": "The network zone of the destination, as defined by the"
      },
      "DvcAction": {
        "type": "string",
        "description": "If reported by an intermediary device such as a firewall, the"
      },
      "DvcHostname": {
        "type": "string",
        "description": "The device name of the device generating the message."
      },
      "DvcInboundInterface": {
        "type": "string",
        "description": "If reported by an intermediary device such as a firewall, the"
      },
      "network": {
        "type": "int",
        "description": "erface used by it for the connection to the"
      },
      "DvcIpAddr": {
        "type": "string",
        "description": "The IP address of the device generating the record."
      },
      "DvcMacAddr": {
        "type": "string",
        "description": "The MAC address of the network interface of the reporting"
      },
      "DvcOutboundInterface": {
        "type": "string",
        "description": "If reported by an intermediary device such as a firewall, the"
      },
      "EventCount": {
        "type": "int",
        "description": "The number of events aggregated, if applicable."
      },
      "EventEndTime": {
        "type": "datetime",
        "description": "The time in which the event ended."
      },
      "EventMessage": {
        "type": "string",
        "description": "A general message or description, either included in, or"
      },
      "EventOriginalUid": {
        "type": "string",
        "description": "The record ID from the reporting device."
      },
      "EventProduct": {
        "type": "string",
        "description": "The product generating the event."
      },
      "EventProductVersion": {
        "type": "string",
        "description": "The version of the product generating the event."
      },
      "EventReportUrl": {
        "type": "string",
        "description": "A link to the full report created by the reporting device."
      },
      "EventResourceId": {
        "type": "string",
        "description": "The resource ID of the device generating the message."
      },
      "EventResult": {
        "type": "string",
        "description": "The result reported for the activity. Empty value when not"
      },
      "EventResultDetails": {
        "type": "string",
        "description": "Reason for the result reported in EventResult"
      },
      "EventSchemaVersion": {
        "type": "string",
        "description": "Azure Sentinel Schema Version."
      },
      "EventSeverity": {
        "type": "string",
        "description": "If the activity reported has a security impact, denotes the"
      },
      "EventStartTime": {
        "type": "datetime",
        "description": "The time in which the event stated."
      },
      "EventSubType": {
        "type": "string",
        "description": "Additional description of type if applicable."
      },
      "EventTimeIngested": {
        "type": "datetime",
        "description": "The time the event was ingested to Azure Sentinel. Will be"
      },
      "EventType": {
        "type": "string",
        "description": "Type of event being collected."
      },
      "EventUid": {
        "type": "string",
        "description": "Unique identifier used by Sentinel to mark a row."
      },
      "EventVendor": {
        "type": "string",
        "description": "The vendor of the product generating the event."
      },
      "FileExtension": {
        "type": "string",
        "description": "The type of the file transmitted over the network connections"
      },
      "FileHashMd5": {
        "type": "string",
        "description": "The MD5 hash value of the file transmitted over the network"
      },
      "FileHashSha1": {
        "type": "string",
        "description": "The SHA1 hash value of the file transmitted over the network"
      },
      "FileHashSha256": {
        "type": "string",
        "description": "The SHA256 hash value of the file transmitted over the network"
      },
      "FileHashSha512": {
        "type": "string",
        "description": "The SHA512 hash value of the file transmitted over the network"
      },
      "FileMimeType": {
        "type": "string",
        "description": "The MIME type of the file transmitted over the network"
      },
      "FileName": {
        "type": "string",
        "description": "The filename transmitted over the network connections for"
      },
      "FilePath": {
        "type": "string",
        "description": "The full path, including file name, of the file."
      },
      "FileSize": {
        "type": "int",
        "description": "The file size, in bytes, of the file transmitted over the network"
      },
      "HttpContentType": {
        "type": "string",
        "description": "The HTTP Response content type header for HTTP/HTTPS"
      },
      "HttpReferrerOriginal": {
        "type": "string",
        "description": "The HTTP referrer header for HTTP/HTTPS network sessions."
      },
      "HttpRequestMethod": {
        "type": "string",
        "description": "The HTTP Method for HTTP/HTTPS network sessions."
      },
      "HttpRequestTime": {
        "type": "int",
        "description": "The amount of time it took to send the request to the server, if"
      },
      "HttpRequestXff": {
        "type": "string",
        "description": "The HTTP X-Forwarded-For header for HTTP/HTTPS network"
      },
      "HttpResponseTime": {
        "type": "int",
        "description": "The amount of time it took to receive a response in the server,"
      },
      "HttpStatusCode": {
        "type": "string",
        "description": "The HTTP Status Code for HTTP/HTTPS network sessions."
      },
      "HttpUserAgentOriginal": {
        "type": "string",
        "description": "The HTTP user agent header for HTTP/HTTPS network sessions."
      },
      "HttpVersion": {
        "type": "string",
        "description": "The HTTP Request Version for HTTP/HTTPS network"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable"
      },
      "NetworkApplicationProtocol": {
        "type": "string",
        "description": "The application layer protocol used by the connection or"
      },
      "NetworkBytes": {
        "type": "long",
        "description": "Number of bytes sent in both directions. If both BytesReceived"
      },
      "NetworkDirection": {
        "type": "string",
        "description": "The direction the connection or session, into or out of the"
      },
      "NetworkDuration": {
        "type": "int",
        "description": "The amount of time, in millisecond, for the completion of the"
      },
      "NetworkIcmpCode": {
        "type": "int",
        "description": "For an ICMP message, ICMP message type numeric value (RFC"
      },
      "NetworkIcmpType": {
        "type": "string",
        "description": "For an ICMP message, ICMP message type text representation"
      },
      "NetworkPackets": {
        "type": "long",
        "description": "Number of packets sent in both directions. If both"
      },
      "NetworkProtocol": {
        "type": "string",
        "description": "The IP protocol used by the connection or session. Typically,"
      },
      "NetworkRuleName": {
        "type": "string",
        "description": "The name or ID of the rule by which DeviceAction was decided"
      },
      "NetworkRuleNumber": {
        "type": "int",
        "description": "Matched rule number."
      },
      "NetworkSessionId": {
        "type": "string",
        "description": "The session identifier as reported by the reporting device."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "SrcBytes": {
        "type": "long",
        "description": "The number of bytes sent from the source to the destination"
      },
      "SrcDvcDomain": {
        "type": "string",
        "description": "Domain of the device from which session was initiated."
      },
      "SrcDvcFqdn": {
        "type": "string",
        "description": "The fully qualified domain name of the host where the log was"
      },
      "SrcDvcHostname": {
        "type": "string",
        "description": "The device name of the source device."
      },
      "SrcDvcIpAddr": {
        "type": "string",
        "description": "The source IP address of a device not directly associated with"
      },
      "SrcDvcMacAddr": {
        "type": "string",
        "description": "The source MAC address of a device that is not directly"
      },
      "SrcDvcModelName": {
        "type": "string",
        "description": "The model of the source device."
      },
      "SrcDvcModelNumber": {
        "type": "string",
        "description": "The model number of the source device."
      },
      "SrcDvcOs": {
        "type": "string",
        "description": "The OS of the source device."
      },
      "SrcDvcType": {
        "type": "string",
        "description": "The type of the source device."
      },
      "SrcGeoCity": {
        "type": "string",
        "description": "The city associated with the source IP address."
      },
      "SrcGeoCountry": {
        "type": "string",
        "description": "The country associated with the source IP address."
      },
      "SrcGeoLatitude": {
        "type": "real",
        "description": "The latitude of the geographical coordinate associated with the"
      },
      "SrcGeoLongitude": {
        "type": "real",
        "description": "The longitude of the geographical coordinate associated with"
      },
      "SrcGeoRegion": {
        "type": "string",
        "description": "The region within a country associated with the source IP"
      },
      "SrcInterfaceGuid": {
        "type": "string",
        "description": "GUID of the network interface used."
      },
      "SrcInterfaceName": {
        "type": "string",
        "description": "The network interface used for the connection or session by"
      },
      "SrcIpAddr": {
        "type": "string",
        "description": "The IP address from which the connection or session"
      },
      "SrcMacAddr": {
        "type": "string",
        "description": "The MAC address of the network interface from which the"
      },
      "SrcNatIpAddr": {
        "type": "string",
        "description": "If reported by an intermediary NAT device such as a firewall,"
      },
      "SrcNatPortNumber": {
        "type": "int",
        "description": "If reported by an intermediary NAT device such as a firewall,"
      },
      "SrcPackets": {
        "type": "long",
        "description": "The number of packets sent from the source to the destination"
      },
      "SrcPortNumber": {
        "type": "int",
        "description": "The IP port from which the connection originated. May not be"
      },
      "SrcResourceId": {
        "type": "string",
        "description": "The resource ID of the device generating the message."
      },
      "SrcUserAadId": {
        "type": "string",
        "description": "The Azure AD account object ID of the user at the source end"
      },
      "SrcUserDomain": {
        "type": "string",
        "description": "The domain for the account initiating the session."
      },
      "SrcUserName": {
        "type": "string",
        "description": "The username of the identity associated with the sessions"
      },
      "SrcUserSid": {
        "type": "string",
        "description": "The user ID of the identity associated with the sessions source."
      },
      "SrcUserUpn": {
        "type": "string",
        "description": "UPN of the account initiating the session."
      },
      "SrcZone": {
        "type": "string",
        "description": "The network zone of the source, as defined by the reporting"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "ThreatCategory": {
        "type": "string",
        "description": "The category of a threat identified by a security system such as"
      },
      "ThreatId": {
        "type": "string",
        "description": "The ID of a threat identified by a security system such as Web"
      },
      "ThreatName": {
        "type": "string",
        "description": "The name of the threat or malware identified."
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The time the event occurred, as reported by reporting source."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UrlCategory": {
        "type": "string",
        "description": "The defined grouping of a URL (or could be just based on the"
      },
      "UrlHostname": {
        "type": "string",
        "description": "The domain part of an HTTP request URL for HTTP/HTTPS"
      },
      "UrlOriginal": {
        "type": "string",
        "description": "The HTTP request URL for HTTP/HTTPS network sessions."
      }
    }
  },
  "NginxUpstreamUpdateLogs": {
    "tableName": "NginxUpstreamUpdateLogs",
    "description": "NGINX upstream update logs captured by NGINXaaS.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Context": {
        "type": "string",
        "description": "Upstream's NGINX context: http or stream."
      },
      "Error": {
        "type": "string",
        "description": "Error message."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Level": {
        "type": "string",
        "description": "The log level of the log record."
      },
      "Location": {
        "type": "string",
        "description": "The location (region) the NGINX instance was accessed in."
      },
      "Message": {
        "type": "string",
        "description": "The message of the log record."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "Tag": {
        "type": "string",
        "description": "The tag of log records from syslog."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (UTC) when the log record was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UpstreamName": {
        "type": "string",
        "description": "Name of the upstream as shown in the config."
      }
    }
  },
  "OEPAirFlowTask": {
    "tableName": "OEPAirFlowTask",
    "description": "Diagnostic logs for AirFlow task execution having task name, task details.",
    "columns": {
      "AdditionalLogContent": {
        "type": "string",
        "description": "Additional log content, if there is any more info that needs to be"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "Logs generated as a result of operations executed using OAK APIs are"
      },
      "grouped": {
        "type": "int",
        "description": "o categories. Categories in OAK are logical groupings"
      },
      "CodePath": {
        "type": "string",
        "description": "The task inside the DAG run which generated the log"
      },
      "Content": {
        "type": "string",
        "description": "Log details as a result of operation performed."
      },
      "CorrelationId": {
        "type": "string",
        "description": "Unique identifier to be used to correlate logs, when available."
      },
      "DagName": {
        "type": "string",
        "description": "Name of the DAG run - as per Airflow's list of DAGs present"
      },
      "DagTaskName": {
        "type": "string",
        "description": "Name of Task executed in Airflow DAG."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Location": {
        "type": "string",
        "description": "The region of the resource emitting the event."
      },
      "LogLevel": {
        "type": "string",
        "description": "Log Level of the log - Info/Debug/Warning/Error"
      },
      "OperationName": {
        "type": "string",
        "description": "The operation name for which the log entry was created."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "RunId": {
        "type": "string",
        "description": "To identify the particular DAG run which generated the log"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (in UTC) when the log was created."
      },
      "TryNumber": {
        "type": "string",
        "description": "Still not available"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "OEPAuditLogs": {
    "tableName": "OEPAuditLogs",
    "description": "Audit Logs for Microsoft Energy Data Services.",
    "columns": {
      "Action": {
        "type": "string",
        "description": "Action performed,which can be"
      },
      "ActionId": {
        "type": "string",
        "description": "ID of the action performed."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "Logs generated as a result of operations executed using OAK APIs are"
      },
      "grouped": {
        "type": "int",
        "description": "o categories. Categories in OAK are logical groupings"
      },
      "DataPartitionId": {
        "type": "string",
        "description": "Represents the data partition ID."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Location": {
        "type": "string",
        "description": "The region of the resource emitting the event."
      },
      "Message": {
        "type": "string",
        "description": "The message about the operation."
      },
      "OperationDescription": {
        "type": "string",
        "description": "Description of operation that was performed."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation name for which the log entry was created."
      },
      "Puid": {
        "type": "string",
        "description": "The client ID."
      },
      "RequestId": {
        "type": "string",
        "description": "The request ID uniquely identify the request made to Microsoft"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultType": {
        "type": "string",
        "description": "Result of the REST API request."
      },
      "ServiceName": {
        "type": "string",
        "description": "The name of service which is emitting the event."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (UTC) when the log was created."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "OEPDataplaneLogs": {
    "tableName": "OEPDataplaneLogs",
    "description": "Contains logs for HTTP requests & responses for the Indexer Service API, in OSDU Data Platform, and Microsoft Energy Data Services. The Indexer service, indexes the metadata store to support search. The indexer service will automatically take items that are newly added to storage and index the attributes from the schema associated with the kind attribute.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "Logs generated as a result of operations executed using OAK APIs are"
      },
      "grouped": {
        "type": "int",
        "description": "o categories. Categories in OAK are logical groupings based on"
      },
      "CorrelationId": {
        "type": "string",
        "description": "Unique identifier to be used to correlate logs, when available."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Location": {
        "type": "string",
        "description": "The region of the resource emitting the event."
      },
      "LogLevel": {
        "type": "string",
        "description": "Log level of message (INFO, WARN, ERROR, etc.)."
      },
      "Message": {
        "type": "string",
        "description": "Log details as a result of operation performed."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation name for which the log entry was created."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (UTC) when the log was created."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "OEPElasticOperator": {
    "tableName": "OEPElasticOperator",
    "description": "Diagnostic logs for elastic operator. Elastic operator manages all the elasticsearch clusters in the oak instance. These logs can be helpful in identifing what operations are performed by the operator on the cluster. It could be upgrades, reconciliation, resource update etc.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "Logs generated as a result of operations executed using OAK APIs are"
      },
      "grouped": {
        "type": "int",
        "description": "o categories. Categories in OAK are logical groupings based on"
      },
      "Content": {
        "type": "string",
        "description": "Log details as a result of operation performed."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Location": {
        "type": "string",
        "description": "The region of the resource emitting the event."
      },
      "Namespace": {
        "type": "string",
        "description": "Namespace from which logs were generated, represents the data partition."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation name for which the log entry was created."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (in UTC) when the log was created."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "OEPElasticsearch": {
    "tableName": "OEPElasticsearch",
    "description": "Diagnostic logs for Elasticsearch cluster. It could be slow logs, server logs or deprecation logs.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "Logs generated as a result of operations executed using OAK APIs are"
      },
      "grouped": {
        "type": "int",
        "description": "o categories. Categories in OAK are logical groupings based on"
      },
      "Content": {
        "type": "string",
        "description": "Log details as a result of operation performed."
      },
      "Duration": {
        "type": "string",
        "description": "Time taken for performing the operation. Value is taken from 'took'"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Location": {
        "type": "string",
        "description": "The region of the resource emitting the event."
      },
      "Namespace": {
        "type": "string",
        "description": "Namespace from which logs were generated, represents the data partition."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation name for which the log entry was created."
      },
      "PodName": {
        "type": "string",
        "description": "Elasticsearch pod name."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Source": {
        "type": "string",
        "description": "Source responsible for the log. It could be a search query or a record to be"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (in UTC) when the log was created."
      },
      "TotalHits": {
        "type": "string",
        "description": "Total number of hits for a search operation. For example, value can be '3"
      },
      "Type": {
        "type": "string",
        "description": "Type of log. Can be index_search_slowlog, index_indexing_slowlog, server,"
      }
    }
  },
  "OEWAuditLogs": {
    "tableName": "OEWAuditLogs",
    "description": "Audit, activity and status for the Online Experiment Workspace.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CallerIpAddress": {
        "type": "string",
        "description": "The IP address of the caller."
      },
      "Category": {
        "type": "string",
        "description": "The event category."
      },
      "CorrelationId": {
        "type": "string",
        "description": "The correlation Id of the operation."
      },
      "DurationMs": {
        "type": "int",
        "description": "The duration of the operation in milliseconds."
      },
      "HttpStatusCode": {
        "type": "int",
        "description": "The HTTP status code of the operation."
      },
      "Identity": {
        "type": "dynamic",
        "description": "The identity triggering the operation."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Level": {
        "type": "string",
        "description": "The log level."
      },
      "Location": {
        "type": "string",
        "description": "The location of the resource."
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultDescription": {
        "type": "string",
        "description": "The description of the result of the operation."
      },
      "ResultType": {
        "type": "string",
        "description": "The result of the operation."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "URI": {
        "type": "string",
        "description": "The URI of the operation."
      },
      "WorkspaceId": {
        "type": "string",
        "description": "The workspace Id of the online experimentation resource."
      }
    }
  },
  "OEWExperimentAssignmentSummary": {
    "tableName": "OEWExperimentAssignmentSummary",
    "description": "Experiment variant assignment summary from feature evaluation events. Used to monitor experiment activities.",
    "columns": {
      "AllocationId": {
        "type": "string",
        "description": "The Id of the allocation used for the feature evaluation."
      },
      "AssignmentEventCount": {
        "type": "long",
        "description": "Total number of assignment events."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "BinSize": {
        "type": "long",
        "description": "The duration of assignment summary time range (in minutes)."
      },
      "BinStartTime": {
        "type": "datetime",
        "description": "The bin start time of assignment summary."
      },
      "FeatureFlagReference": {
        "type": "string",
        "description": "The fully qualified Id of the feature flag."
      },
      "FeatureName": {
        "type": "string",
        "description": "The name of the feature flag."
      },
      "FirstAssignmentTimestamp": {
        "type": "datetime",
        "description": "The timestamp of earliest assignment event in time range."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "IsControlVariant": {
        "type": "bool",
        "description": "Whether the feature variant assigned is the control for the"
      },
      "LastAssignmentTimestamp": {
        "type": "datetime",
        "description": "The timestamp of latest assignment event in time range."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp when the scorecard results were"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "Variant": {
        "type": "string",
        "description": "The Id of the feature variant assigned."
      },
      "VariantAssignmentPercentage": {
        "type": "real",
        "description": "The variant assignment percentage of the feature variant."
      },
      "ControlCount": {
        "type": "long",
        "description": "The sample count of the control variant."
      },
      "ControlMetricValue": {
        "type": "real",
        "description": "The metric value for the control variant."
      },
      "ControlMetricValueNormalized": {
        "type": "real",
        "description": "The normalized metric value for the control variant."
      },
      "ControlStandardErrorNormalized": {
        "type": "real",
        "description": "The standard error (StandardDeviation / sqrt(Count)) of"
      },
      "ControlVariant": {
        "type": "string",
        "description": "The Id of the control variant."
      },
      "DesiredDirection": {
        "type": "string",
        "description": "Desirable direction for the metric. Possible values:"
      },
      "Insights": {
        "type": "dynamic",
        "description": "Metric-level Insights derived from the analysis results in"
      },
      "MetricCategories": {
        "type": "dynamic",
        "description": "Metric categories in the form of string array."
      },
      "MetricDescription": {
        "type": "string",
        "description": "The description of the metric."
      },
      "MetricDisplayName": {
        "type": "string",
        "description": "The display name of the metric."
      },
      "MetricETag": {
        "type": "string",
        "description": "The ETag of the metric."
      },
      "MetricId": {
        "type": "string",
        "description": "The Id of the metric."
      },
      "MetricLifecycle": {
        "type": "string",
        "description": "The lifecycle stage of the metric. Possible values include"
      },
      "MetricType": {
        "type": "string",
        "description": "The metric type. Possible values include EventCount,"
      },
      "PValue": {
        "type": "real",
        "description": "The P-Value of the comparison. Used to indicate if the"
      },
      "RelativeDifference": {
        "type": "real",
        "description": "The relative difference of the comparison based on"
      },
      "ScorecardId": {
        "type": "string",
        "description": "The Id of the experiment scorecard."
      },
      "TreatmentCount": {
        "type": "long",
        "description": "The sample count of the treatment variant."
      },
      "TreatmentEffect": {
        "type": "string",
        "description": "The effect of the treatment variant on the metric."
      },
      "TreatmentMetricValue": {
        "type": "real",
        "description": "The metric value for the treatment variant."
      },
      "TreatmentMetricValueNormalized": {
        "type": "real",
        "description": "The normalized metric value for the treatment variant."
      },
      "TreatmentStandardErrorNormalized": {
        "type": "real",
        "description": "The standard error (StandardDeviation / sqrt(Count)) of"
      },
      "TreatmentVariant": {
        "type": "string",
        "description": "The Id of the treatment variant."
      }
    }
  },
  "OEWExperimentScorecards": {
    "tableName": "OEWExperimentScorecards",
    "description": "Experimet scorecard metadata and insights.",
    "columns": {
      "AllocationId": {
        "type": "string",
        "description": "The Id of the allocation used for the feature evaluation."
      },
      "AnalysisEndTime": {
        "type": "datetime",
        "description": "The end name of the scorecard analysis."
      },
      "AnalysisStartTime": {
        "type": "datetime",
        "description": "The start time of the scorecard analysis."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "FeatureFlagReference": {
        "type": "string",
        "description": "The fully qualified Id of the feature."
      },
      "FeatureName": {
        "type": "string",
        "description": "The name of the feature."
      },
      "Insights": {
        "type": "dynamic",
        "description": "Scorecard-level Insights derived from the analysis results in JSON"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Label": {
        "type": "string",
        "description": "The name of the label for the feature (if exists)."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ScorecardId": {
        "type": "string",
        "description": "The Id of the experiment scorecard."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp when the scorecard results were ingested."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "OGOAuditLogs": {
    "tableName": "OGOAuditLogs",
    "description": "Audit logs for Microsoft Planetary Computer Pro.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "Category of the audit log."
      },
      "CorrelationId": {
        "type": "string",
        "description": "Id of the request."
      },
      "Duration": {
        "type": "string",
        "description": "Azure Media Services operation duration in milli-seconds."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Location": {
        "type": "string",
        "description": "Location of the service sending the log."
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation that triggered the event."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "Status": {
        "type": "string",
        "description": "The status message."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the event was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "OLPSupplyChainEntityOperations": {
    "tableName": "OLPSupplyChainEntityOperations",
    "description": "The OLPSupplyChainEntityOperations table captures every data plane operation performed on a supplychain entity in the workspace. Data Plane requests are operations executed to create, update, delete or retrieve supplychain entities such as Warehouse, Item, DeliveryNode, Shipment etc. within a workspace.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClientApplicationId": {
        "type": "string",
        "description": "Application ID of the client making the API request."
      },
      "ClientName": {
        "type": "string",
        "description": "Name of the client making the API request."
      },
      "ClientObjectId": {
        "type": "string",
        "description": "Object ID of the client making the API request."
      },
      "ClientTenantId": {
        "type": "string",
        "description": "Tenant ID of the client making the API request."
      },
      "CorrelationId": {
        "type": "string",
        "description": "Unique identifier to be used to correlate logs."
      },
      "CustomRequestAttributes": {
        "type": "dynamic",
        "description": "Client defined arbitrary data in the API request."
      },
      "DurationMs": {
        "type": "real",
        "description": "Time it took to service the REST API request, in milliseconds."
      },
      "HttpStatusCode": {
        "type": "int",
        "description": "HTTP status code of the API response."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "OperationName": {
        "type": "string",
        "description": "The operation name for which the log entry was created."
      },
      "RequestBody": {
        "type": "dynamic",
        "description": "Request body of the API calls."
      },
      "RequestId": {
        "type": "string",
        "description": "Unique identifier to be used to correlate request logs."
      },
      "RequestMethod": {
        "type": "string",
        "description": "HTTP method of the API request."
      },
      "RequestUri": {
        "type": "string",
        "description": "URI of the API request."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "ResponseBody": {
        "type": "dynamic",
        "description": "Request body of the API calls."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (UTC) when the log was created."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "OLPSupplyChainEvents": {
    "tableName": "OLPSupplyChainEvents",
    "description": "The events table captures every event that was dispatched from the Open Logistics Platform workspace. Events can be a result of a data plane API call (e.g. Shipment Created, Item Deleted, Notification sent, etc.) or a long running job operation completion (e.g. Data ingestion results in NewDataAvailable event).",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CorrelationId": {
        "type": "string",
        "description": "Unique identifier to be used to correlate logs with"
      },
      "DurationMs": {
        "type": "real",
        "description": "Time it took to service the REST API request, in milliseconds."
      },
      "EventBody": {
        "type": "dynamic",
        "description": "The event body."
      },
      "EventId": {
        "type": "string",
        "description": "Unique identifier for each event."
      },
      "EventType": {
        "type": "string",
        "description": "The type of the event, can be"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "OperationName": {
        "type": "string",
        "description": "The operation name for which the log entry was created."
      },
      "RequestId": {
        "type": "string",
        "description": "Unique identifier to be used to correlate request logs."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "SupplyChainResourceType": {
        "type": "string",
        "description": "The type of supplychain resource for which the event is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (UTC) when the log was created."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "OfficeActivity": {
    "tableName": "OfficeActivity",
    "description": "Audit logs for Office 365 tenants collected by Azure Sentinel. Including Exchange, SharePoint and Teams logs.",
    "columns": {
      "AADGroupId": {
        "type": "string",
        "description": "Azure Active Directory group id"
      },
      "AADTarget": {
        "type": "string",
        "description": "The user that the action (identified by the Operation"
      },
      "Activity": {
        "type": "string",
        "description": "The activity that the user performed."
      },
      "Actor": {
        "type": "string",
        "description": "The user or service principal that performed the action"
      },
      "ActorContextId": {
        "type": "string",
        "description": "The GUID of the organization that the actor belongs"
      },
      "ActorIpAddress": {
        "type": "string",
        "description": "The actor's IP address in IPV4 or IPV6 address format"
      },
      "AddOnGuid": {
        "type": "string",
        "description": "The unique identifier of the add-on generated this"
      },
      "AddonName": {
        "type": "string",
        "description": "The name of the add-on that generated this event"
      },
      "AddOnType": {
        "type": "string",
        "description": "The type of add-on that generated this event"
      },
      "AffectedItems": {
        "type": "string",
        "description": "Information about each item in the group"
      },
      "AppAccessContext": {
        "type": "dynamic",
        "description": "The application context for the user or service"
      },
      "AppDistributionMode": {
        "type": "string",
        "description": "Application distribution mode"
      },
      "AppId": {
        "type": "string",
        "description": "Application ID"
      },
      "Application": {
        "type": "string",
        "description": "The application name"
      },
      "ApplicationId": {
        "type": "string",
        "description": "SharePoint application ID"
      },
      "AppPoolName": {
        "type": "string",
        "description": "The App pool name"
      },
      "ArtifactsShared": {
        "type": "dynamic",
        "description": "The artifacts shared in the meeting."
      },
      "Attendees": {
        "type": "dynamic",
        "description": "The list of attendees for the meeting."
      },
      "AzureActiveDirectory_EventType": {
        "type": "string",
        "description": "The type of Azure AD event"
      },
      "AzureADAppId": {
        "type": "string",
        "description": "Teams Application Azure AD ID"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ChannelGuid": {
        "type": "string",
        "description": "A unique identifier for the channel being audited"
      },
      "ChannelName": {
        "type": "string",
        "description": "The name of the channel being audited"
      },
      "ChannelType": {
        "type": "string",
        "description": "The type of channel being audited (Standard/Private)"
      },
      "ChatName": {
        "type": "string",
        "description": "The name of the chat"
      },
      "ChatThreadId": {
        "type": "string",
        "description": "The Id of the chat thread"
      },
      "Client": {
        "type": "string",
        "description": "Details about the client device, device OS, and device"
      },
      "Client_IPAddress": {
        "type": "string",
        "description": "The IP address of the device that was used when the"
      },
      "ClientAppId": {
        "type": "string",
        "description": "Client application ID"
      },
      "ClientInfoString": {
        "type": "string",
        "description": "Information about the email client that was used to"
      },
      "ClientIP": {
        "type": "string",
        "description": "The IP address of the device that was used when the"
      },
      "ClientMachineName": {
        "type": "string",
        "description": "The machine name that hosts the Outlook client"
      },
      "ClientProcessName": {
        "type": "string",
        "description": "The email client that was used to access the mailbox"
      },
      "ClientVersion": {
        "type": "string",
        "description": "The version of the email client"
      },
      "CommunicationType": {
        "type": "string",
        "description": "The type of communications that was conducted"
      },
      "CrossMailboxOperations": {
        "type": "bool",
        "description": "Indicates if the operation involved more than one"
      },
      "CustomEvent": {
        "type": "string",
        "description": "Optional string for custom events"
      },
      "DataCenterSecurityEventType": {
        "type": "int",
        "description": "The type of dmdlet event in lock box"
      },
      "DestFolder": {
        "type": "string",
        "description": "The destination folder"
      },
      "DestinationFileExtension": {
        "type": "string",
        "description": "The file extension of a file that is copied or moved"
      },
      "DestinationFileName": {
        "type": "string",
        "description": "The name of the file that is copied or moved"
      },
      "DestinationRelativeUrl": {
        "type": "string",
        "description": "The URL of the destination folder where a file is"
      },
      "DestMailboxId": {
        "type": "string",
        "description": "Set only if the CrossMailboxOperations parameter is"
      },
      "DestMailboxOwnerMasterAccountSid": {
        "type": "string",
        "description": "Set only if the CrossMailboxOperations parameter is"
      },
      "DestMailboxOwnerSid": {
        "type": "string",
        "description": "Set only if the CrossMailboxOperations parameter is"
      },
      "DestMailboxOwnerUPN": {
        "type": "string",
        "description": "Set only if the CrossMailboxOperations parameter is"
      },
      "DeviceInformation": {
        "type": "string",
        "description": "The user device information."
      },
      "EffectiveOrganization": {
        "type": "string",
        "description": "The name of the tenant that the elevation/cmdlet was"
      },
      "ElevationApprovedTime": {
        "type": "datetime",
        "description": "The timestamp for when the elevation was approved"
      },
      "ElevationApprover": {
        "type": "string",
        "description": "The name of a Microsoft manager"
      },
      "ElevationDuration": {
        "type": "int",
        "description": "The duration for which the elevation was active (in"
      },
      "ElevationRequestId": {
        "type": "string",
        "description": "A unique identifier for the elevation request"
      },
      "ElevationRole": {
        "type": "string",
        "description": "The role the elevation was requested for"
      },
      "ElevationTime": {
        "type": "datetime",
        "description": "The start time of the elevation"
      },
      "Event_Data": {
        "type": "string",
        "description": "Optional payload for custom events"
      },
      "EventSource": {
        "type": "string",
        "description": "Identifies that an event occurred in SharePoint."
      },
      "ExtendedProperties": {
        "type": "string",
        "description": "The extended properties of the Azure AD event"
      },
      "ExternalAccess": {
        "type": "string",
        "description": "Specifies whether the cmdlet was run by a user in your"
      },
      "ExtraProperties": {
        "type": "dynamic",
        "description": "A list of extra properties"
      },
      "Folder": {
        "type": "string",
        "description": "The folder where a group of items is located"
      },
      "Folders": {
        "type": "string",
        "description": "Information about the source folders involved in an"
      },
      "GenericInfo": {
        "type": "string",
        "description": "Used for comments and other generic information"
      },
      "InternalLogonType": {
        "type": "int",
        "description": "Reserved for internal use"
      },
      "InterSystemsId": {
        "type": "string",
        "description": "The GUID that track the actions across components"
      },
      "IntraSystemId": {
        "type": "string",
        "description": "The GUID that's generated by Azure Active Directory"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is"
      },
      "IsJoinedFromLobby": {
        "type": "bool",
        "description": "Indicates whether the user join from the lobby."
      },
      "IsManagedDevice": {
        "type": "bool",
        "description": "Indicates if operation was created by a device"
      },
      "Item": {
        "type": "string",
        "description": "Represents the item upon which the operation was"
      },
      "ItemName": {
        "type": "string",
        "description": "The string in the Subject field of the email message"
      },
      "ItemType": {
        "type": "string",
        "description": "The type of object that was accessed or modified. See"
      },
      "JoinTime": {
        "type": "datetime",
        "description": "The time the user joined the meeting."
      },
      "LeaveTime": {
        "type": "datetime",
        "description": "The time the user left the meeting."
      },
      "LoginStatus": {
        "type": "int",
        "description": "This property is from OrgIdLogon.LoginStatus directly."
      },
      "Logon_Type": {
        "type": "string",
        "description": "Indicates the type of user who accessed the mailbox"
      },
      "LogonUserDisplayName": {
        "type": "string",
        "description": "The user-friendly name of the user who performed the"
      },
      "LogonUserSid": {
        "type": "string",
        "description": "The SID of the user who performed the operation"
      },
      "MachineDomainInfo": {
        "type": "string",
        "description": "Information about device sync operations"
      },
      "MachineId": {
        "type": "string",
        "description": "Information about device sync operations"
      },
      "MailboxGuid": {
        "type": "string",
        "description": "The Exchange GUID of the mailbox that was accessed"
      },
      "MailboxOwnerMasterAccountSid": {
        "type": "string",
        "description": "Mailbox owner account's master account SID"
      },
      "MailboxOwnerSid": {
        "type": "string",
        "description": "The SID of the mailbox owner"
      },
      "MailboxOwnerUPN": {
        "type": "string",
        "description": "The email address of the person who owns the"
      },
      "MeetingDetailId": {
        "type": "string",
        "description": "The meeting detail ID."
      },
      "Members": {
        "type": "dynamic",
        "description": "A list of users within a Team"
      },
      "MessageId": {
        "type": "string",
        "description": "An identifier for a chat or channel message"
      },
      "ModifiedObjectResolvedName": {
        "type": "string",
        "description": "This is the user friendly name of the object that was"
      },
      "ModifiedProperties": {
        "type": "string",
        "description": "The property is included for admin events, such as"
      },
      "Name": {
        "type": "string",
        "description": "Only present for settings events. Name of the setting"
      },
      "NewValue": {
        "type": "string",
        "description": "Only present for settings events. New value of the"
      },
      "OfficeId": {
        "type": "string",
        "description": "Unique identifier of an audit record"
      },
      "OfficeObjectId": {
        "type": "string",
        "description": "For SharePoint and OneDrive for Business activity"
      },
      "OfficeTenantId": {
        "type": "string",
        "description": "The office tenant id"
      },
      "OfficeWorkload": {
        "type": "string",
        "description": "The Office 365 service where the activity occurred"
      },
      "OldValue": {
        "type": "string",
        "description": "Only present for settings events. Old value of the"
      },
      "Operation": {
        "type": "string",
        "description": "The name of the operation that the user is performing"
      },
      "OperationProperties": {
        "type": "dynamic",
        "description": "Additional operation properties"
      },
      "OperationScope": {
        "type": "string",
        "description": "The scope the operation was performed on"
      },
      "OrganizationId": {
        "type": "string",
        "description": "The GUID for your organization's Office 365 tenant."
      },
      "OrganizationName": {
        "type": "string",
        "description": "The name of the tenant"
      },
      "OriginatingServer": {
        "type": "string",
        "description": "The name of the server from which the cmdlet was"
      },
      "Parameters": {
        "type": "string",
        "description": "The name and value for all parameters that were used"
      },
      "RecordType": {
        "type": "string",
        "description": "The type of operation indicated by the record. See the"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "ResultReasonType": {
        "type": "string",
        "description": "Reason for the result reported in ResultType"
      },
      "ResultStatus": {
        "type": "string",
        "description": "Indicates whether the action (specified in the"
      },
      "SendAsUserMailboxGuid": {
        "type": "string",
        "description": "The Exchange GUID of the mailbox that was accessed"
      },
      "SendAsUserSmtp": {
        "type": "string",
        "description": "SMTP address of the user who is being impersonated"
      },
      "SendonBehalfOfUserMailboxGuid": {
        "type": "string",
        "description": "The Exchange GUID of the mailbox that was accessed"
      },
      "SendOnBehalfOfUserSmtp": {
        "type": "string",
        "description": "SMTP address of the user on whose behalf the email is"
      },
      "SharingType": {
        "type": "string",
        "description": "The type of sharing permissions that were assigned to"
      },
      "Site_": {
        "type": "string",
        "description": "The GUID of the site where the file or folder accessed"
      },
      "Site_Url": {
        "type": "string",
        "description": "The URL of the site where the file or folder accessed"
      },
      "Source_Name": {
        "type": "string",
        "description": "The entity that triggered the audited operation."
      },
      "SourceFileExtension": {
        "type": "string",
        "description": "The file extension of the file that was accessed by the"
      },
      "SourceFileName": {
        "type": "string",
        "description": "The name of the file or folder accessed by the user"
      },
      "SourceRecordId": {
        "type": "string",
        "description": "Unique identifier of an audit record"
      },
      "SourceRelativeUrl": {
        "type": "string",
        "description": "The URL of the folder that contains the file accessed"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by."
      },
      "SRPolicyId": {
        "type": "string",
        "description": "Policy ID"
      },
      "SRPolicyName": {
        "type": "string",
        "description": "Policy name"
      },
      "SRRuleMatchDetails": {
        "type": "dynamic",
        "description": "Rule details"
      },
      "Start_Time": {
        "type": "datetime",
        "description": "The date and time at which the cmdlet was executed"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record"
      },
      "SupportTicketId": {
        "type": "string",
        "description": "The customer support ticket ID for the action in 'act-"
      },
      "TabType": {
        "type": "string",
        "description": "The type of tab that generated this event"
      },
      "TargetContextId": {
        "type": "string",
        "description": "The GUID of the organization that the targeted user"
      },
      "TargetUserId": {
        "type": "string",
        "description": "Target user id"
      },
      "TargetUserOrGroupName": {
        "type": "string",
        "description": "Stores the UPN or name of the target user or group"
      },
      "TargetUserOrGroupType": {
        "type": "string",
        "description": "Identifies whether the target user or group is a"
      },
      "TeamGuid": {
        "type": "string",
        "description": "A unique identifier for the team being audited"
      },
      "TeamName": {
        "type": "string",
        "description": "The name of the team being audited"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The time the event was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The user agent"
      },
      "UserDomain": {
        "type": "string",
        "description": "The domain of the user"
      },
      "UserId": {
        "type": "string",
        "description": "The UPN (User Principal Name) of the user who"
      },
      "UserKey": {
        "type": "string",
        "description": "An alternative ID for the user identified in the UserId"
      },
      "UserSharedWith": {
        "type": "string",
        "description": "The user that a resource was shared with"
      },
      "UserType": {
        "type": "string",
        "description": "The type of user that performed the operation. See"
      },
      "ActingAppName": {
        "type": "string",
        "description": "The name of the application initiating the"
      },
      "ActingAppType": {
        "type": "string",
        "description": "The type of the application initiating the"
      },
      "ActorDetailEntry": {
        "type": "dynamic",
        "description": "Detailed information about the actor"
      },
      "ActorDisplayName": {
        "type": "string",
        "description": "The display name of the actor performing the"
      },
      "ActorSessionId": {
        "type": "string",
        "description": "The session ID associated with the actor"
      },
      "ActorUserId": {
        "type": "string",
        "description": "The user ID of the actor performing the"
      },
      "ActorUserIdType": {
        "type": "string",
        "description": "The type of user ID for the actor (e.g., OktaId)."
      },
      "ActorUsername": {
        "type": "string",
        "description": "The username of the actor performing the"
      },
      "ActorUsernameType": {
        "type": "string",
        "description": "The type of username for the actor (e.g.,"
      },
      "ActorUserType": {
        "type": "string",
        "description": "The type of the actor (e.g., Regular, System"
      },
      "AuthenticationContextAuthenticationProvider": {
        "type": "string",
        "description": "The authentication provider used in the"
      },
      "AuthenticationContextAuthenticationStep": {
        "type": "int",
        "description": "The step in the authentication process when"
      },
      "AuthenticationContextCredentialProvider": {
        "type": "string",
        "description": "The credential provider used during the"
      },
      "AuthenticationContextInterface": {
        "type": "string",
        "description": "The interface used during the authentication"
      },
      "AuthenticationContextIssuerId": {
        "type": "string",
        "description": "The ID of the issuer involved in the"
      },
      "AuthenticationContextIssuerType": {
        "type": "string",
        "description": "The type of the issuer involved in the"
      },
      "DebugData": {
        "type": "dynamic",
        "description": "Additional debugging data related to the"
      },
      "DvcAction": {
        "type": "string",
        "description": "The result of the device action (e.g., Allow,"
      },
      "EventMessage": {
        "type": "string",
        "description": "A descriptive message associated with the"
      },
      "EventOriginalResultDetails": {
        "type": "string",
        "description": "Details of the original result of the event"
      },
      "EventOriginalType": {
        "type": "string",
        "description": "The original type of the event before"
      },
      "EventOriginalUid": {
        "type": "string",
        "description": "The unique identifier for the original event."
      },
      "EventResult": {
        "type": "string",
        "description": "The high-level result of the event (e.g.,"
      },
      "EventSeverity": {
        "type": "string",
        "description": "The severity level of the event (e.g.,"
      },
      "HttpUserAgent": {
        "type": "string",
        "description": "The raw user-agent string of the client"
      },
      "LegacyEventType": {
        "type": "string",
        "description": "The legacy type identifier for the event, if"
      },
      "LogonMethod": {
        "type": "string",
        "description": "The method used for logging in (e.g.,"
      },
      "OriginalActorAlternateId": {
        "type": "string",
        "description": "The alternate ID of the actor in the original"
      },
      "OriginalClientDevice": {
        "type": "string",
        "description": "The type of client device initiating the event"
      },
      "OriginalOutcomeResult": {
        "type": "string",
        "description": "The raw outcome result of the original event."
      },
      "OriginalSeverity": {
        "type": "string",
        "description": "The raw severity level of the original event."
      },
      "OriginalTarget": {
        "type": "dynamic",
        "description": "The original target(s) involved in the event."
      },
      "OriginalUserId": {
        "type": "string",
        "description": "The original user ID in the event data."
      },
      "OriginalUserType": {
        "type": "string",
        "description": "The type of user in the original event data."
      },
      "Request": {
        "type": "dynamic",
        "description": "Details of the request associated with the"
      },
      "SecurityContextAsNumber": {
        "type": "int",
        "description": "The autonomous system (AS) number in the"
      },
      "SecurityContextAsOrg": {
        "type": "string",
        "description": "The organization associated with the AS"
      },
      "SecurityContextDomain": {
        "type": "string",
        "description": "The domain involved in the security context."
      },
      "SecurityContextIsProxy": {
        "type": "bool",
        "description": "Indicates whether a proxy is used in the"
      },
      "SrcDeviceType": {
        "type": "string",
        "description": "The type of the source device (e.g.,"
      },
      "SrcDvcId": {
        "type": "string",
        "description": "The unique identifier for the source device."
      },
      "SrcDvcIdType": {
        "type": "string",
        "description": "The type of source device ID (e.g., OktaId)."
      },
      "SrcDvcOs": {
        "type": "string",
        "description": "The operating system of the source device."
      },
      "SrcGeoCity": {
        "type": "string",
        "description": "The city of the source device's geographic"
      },
      "SrcGeoCountry": {
        "type": "string",
        "description": "The country of the source device's geographic"
      },
      "SrcGeoLatitude": {
        "type": "real",
        "description": "The latitude of the source device's geographic"
      },
      "SrcGeoLongtitude": {
        "type": "real",
        "description": "The longitude of the source device's"
      },
      "SrcGeoPostalCode": {
        "type": "string",
        "description": "The postal code of the source device's"
      },
      "SrcGeoRegion": {
        "type": "string",
        "description": "The region/state of the source device's"
      },
      "SrcIpAddr": {
        "type": "string",
        "description": "The IP address of the source device."
      },
      "SrcIsp": {
        "type": "string",
        "description": "The Internet Service Provider (ISP) of the"
      },
      "SrcZone": {
        "type": "string",
        "description": "The network zone of the source device."
      },
      "TransactionDetail": {
        "type": "dynamic",
        "description": "Details about the transaction associated with"
      },
      "TransactionId": {
        "type": "string",
        "description": "The unique identifier of the transaction."
      },
      "TransactionType": {
        "type": "string",
        "description": "The type of transaction associated with the"
      },
      "Version": {
        "type": "string",
        "description": "The version of the event format or schema."
      }
    }
  },
  "Operation": {
    "tableName": "Operation",
    "description": "Operational log of important activities affecting workspace. Includes both user-initiated activities and notifications from Log Analytics workspace services such as data-capping.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Computer": {
        "type": "string",
        "description": "Name of a physical or virtual machine having membership with"
      },
      "CorrelationId": {
        "type": "string",
        "description": "GUID that is shared with telemetry belonging to the same uber"
      },
      "Detail": {
        "type": "string",
        "description": "User friendly string that describes further details about the"
      },
      "ErrorId": {
        "type": "string",
        "description": "Deprecated."
      },
      "HelpLink": {
        "type": "string",
        "description": "Reference URL for additional contextual information."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "ManagementGroupName": {
        "type": "string",
        "description": "Name of the Operations Manager management group for System"
      },
      "OperationCategory": {
        "type": "string",
        "description": "Name of the area that produced the record."
      },
      "OperationKey": {
        "type": "string",
        "description": "Operation ID. Can be a GUID or string."
      },
      "OperationStatus": {
        "type": "string",
        "description": "Operation status description. Ccommon values include Warning"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Solution": {
        "type": "string",
        "description": "Name of the managed solution that produced the record. Can"
      },
      "SourceComputerId": {
        "type": "string",
        "description": "Unique GUID identifier for a computer."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Time Event Generated"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "LifeCycleState": {
        "type": "string",
        "description": "Current lifeCycleState of the resource generated event"
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation represented by this event"
      },
      "ResultDescription": {
        "type": "string",
        "description": "The static text description of this operation"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      }
    }
  },
  "PFTitleAuditLogs": {
    "tableName": "PFTitleAuditLogs",
    "description": "Provides audit logs for various types of action performed on Azure PlayFab Title.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Level": {
        "type": "string",
        "description": "The severity level of the log, will be one of Informational,"
      },
      "Location": {
        "type": "string",
        "description": "Location of Azure Database for PostgreSQL Flexible server."
      },
      "ModifiedPlayerId": {
        "type": "string",
        "description": "Player ID on which the action taken."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation name combined with operation type represents"
      },
      "OperationType": {
        "type": "string",
        "description": "The operation name combined with operation type represents"
      },
      "PlayFabPlayerAccountPoolId": {
        "type": "string",
        "description": "ID of Azure PlayFab PlayerAccountPool associated with the"
      },
      "PlayFabTitleId": {
        "type": "string",
        "description": "ID of Azure PlayFab Title for which the log was generated."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserId": {
        "type": "int",
        "description": "ID (OID) of the user that executed the statement. 0 indicates it is a"
      },
      "UserName": {
        "type": "string",
        "description": "Name or Email of the user who performed the action which"
      },
      "AnalyzeCount": {
        "type": "long",
        "description": "Number of times tables have been manually analyzed in"
      },
      "AutoanalyzeCount": {
        "type": "long",
        "description": "Number of times tables have been analyzed by the"
      },
      "AutovacuumCount": {
        "type": "long",
        "description": "Number of times tables have been vacuumed by the"
      },
      "DatabaseName": {
        "type": "string",
        "description": "Name of the database this backend is connected to."
      },
      "DeadRowsCount": {
        "type": "long",
        "description": "Estimated number of dead rows of all tables in this"
      },
      "IndexScansCount": {
        "type": "long",
        "description": "Number of index scans initiated on all tables in this"
      },
      "LiveRowsCount": {
        "type": "long",
        "description": "Estimated number of live rows of all tables in this schema."
      },
      "LogicalServerName": {
        "type": "string",
        "description": "Logical name of the instance."
      },
      "ModificationsSinceAnalyzeCount": {
        "type": "long",
        "description": "Estimated number of rows modified from all tables since"
      },
      "ReplicaRole": {
        "type": "string",
        "description": "Replica role example. Primary or secondary."
      },
      "RowsDeletedCount": {
        "type": "long",
        "description": "Number of rows deleted from all tables in this schema."
      },
      "RowsFromIndexScansCount": {
        "type": "long",
        "description": "Number of live rows fetched by index scans on all tables in"
      },
      "RowsFromSeqentialScansCount": {
        "type": "long",
        "description": "Number of live rows fetched by sequential scans on all"
      },
      "RowsHotUpdatedCount": {
        "type": "long",
        "description": "Number of rows HOT updated from all tables in this"
      },
      "RowsInsertedCount": {
        "type": "long",
        "description": "Number of rows inserted in all tables in this schema."
      },
      "RowsUpdatedCount": {
        "type": "long",
        "description": "Number of rows updated from all tables in this schema"
      },
      "SchemaName": {
        "type": "string",
        "description": "Name of the schema (if applicable)."
      },
      "SeqentialScansCount": {
        "type": "long",
        "description": "Number of sequential scans initiated on all tables in this"
      },
      "TablesAnalyzedCount": {
        "type": "long",
        "description": "Number of tables that were manually analyzed in this"
      },
      "TablesAutoanalyzedCount": {
        "type": "long",
        "description": "Number of tables that were analyzed by the autovacuum"
      },
      "TablesAutovacuumedCount": {
        "type": "long",
        "description": "Number of tables that were vacuumed by the autovacuum"
      },
      "TablesCount": {
        "type": "long",
        "description": "Number of tables in this schema."
      },
      "TablesVacuumedCount": {
        "type": "long",
        "description": "Number of tables that were manually vacuumed in this"
      },
      "VacuumCount": {
        "type": "long",
        "description": "Number of times tables have been manually vacuumed in"
      },
      "AutovacuumFreezeMaxAge": {
        "type": "int",
        "description": "Value of the parameter"
      },
      "AutovacuumMultixactFreezeMaxAge": {
        "type": "int",
        "description": "Value of the parameter"
      },
      "ConnectionsLimit": {
        "type": "int",
        "description": "Maximum number of concurrent connections that"
      },
      "MinMultixactId": {
        "type": "long",
        "description": "All multixact IDs before this one have been"
      },
      "MinMultixactIdAge": {
        "type": "long",
        "description": "Age in transactions of multixact ID in this"
      },
      "RemainingMultixactIds": {
        "type": "long",
        "description": "Remaining multixact IDs in this database."
      },
      "RemainingMultixactIdsTillEmergencyAV": {
        "type": "long",
        "description": "Remaining multixact IDs in this database till"
      },
      "RemainingMultixactIdsTillWraparound": {
        "type": "long",
        "description": "Remaining multixact IDs in this database till"
      },
      "RemainingTransactionIds": {
        "type": "long",
        "description": "Remaining transaction IDs in this database."
      },
      "RemainingTransactionIdsTillEmergencyAV": {
        "type": "long",
        "description": "Remaining transaction IDs in this database till"
      },
      "RemainingTransactionIdsTillWraparound": {
        "type": "long",
        "description": "Remaining transaction IDs in this database till"
      },
      "TransactionIdFrozen": {
        "type": "long",
        "description": "All transaction IDs before this one have been"
      },
      "TransactionIdFrozenAge": {
        "type": "long",
        "description": "Age in transactions of TransactionIdFrozen in this"
      },
      "VacuumFreezeMinAge": {
        "type": "int",
        "description": "Value of the parameter vacuum_freeze_min_age at"
      },
      "VacuumMultixactFreezeMinAge": {
        "type": "int",
        "description": "Value of the parameter"
      },
      "LogLevel": {
        "type": "string",
        "description": "Log level, Error or Informational."
      },
      "Message": {
        "type": "string",
        "description": "Primary log message."
      },
      "ApplicationName": {
        "type": "string",
        "description": "Name of the application that is connected to this backend."
      },
      "BackendStartTime": {
        "type": "datetime",
        "description": "Time when this process was started. For client backends, this is the"
      },
      "BackendType": {
        "type": "string",
        "description": "Type of current backend. Available for PostgreSQL 14 and later."
      },
      "ClientIpAddress": {
        "type": "string",
        "description": "IP address of the client connected to this backend. If this field is empty,"
      },
      "CollectionTime": {
        "type": "datetime",
        "description": "The collection time indicating the time when the information was"
      },
      "DatabaseId": {
        "type": "int",
        "description": "ID (OID) of database in which the statement was executed. 0 indicates it"
      },
      "OldestTransactionId": {
        "type": "long",
        "description": "The oldest transaction ID that a backend is currently seeing."
      },
      "ProcessId": {
        "type": "int",
        "description": "Process ID of the PostgreSQL backend."
      },
      "QueryStartTime": {
        "type": "datetime",
        "description": "Time when the currently active query was started, or if state is not"
      },
      "State": {
        "type": "string",
        "description": "State of this backend at the collection time."
      },
      "StateChangeTime": {
        "type": "datetime",
        "description": "Time when the state was last changed."
      },
      "TransactionId": {
        "type": "long",
        "description": "Top-level transaction identifier of this backend, if any."
      },
      "TransactionStartTime": {
        "type": "datetime",
        "description": "Time when this process' current transaction was started, or empty if no"
      },
      "WaitEvent": {
        "type": "string",
        "description": "Wait event name if backend is currently waiting, otherwise empty"
      },
      "WaitEventType": {
        "type": "string",
        "description": "The type of event for which the backend is waiting, if any, otherwise"
      },
      "empty": {
        "type": "string",
        "description": "."
      },
      "BlkReadTime": {
        "type": "real",
        "description": "Total time the statement spent reading blocks in milliseconds for"
      },
      "BlkWriteTime": {
        "type": "real",
        "description": "Total time the statement spent writing blocks in milliseconds for all"
      },
      "Calls": {
        "type": "long",
        "description": "Number of the same event captured for this entry. Entries are"
      },
      "EndTime": {
        "type": "datetime",
        "description": "The end time corresponding to the time bucket for this entry. Entries are"
      },
      "IsSystemQuery": {
        "type": "bool",
        "description": "Boolean value indicating if the query is run by Azure managed"
      },
      "LocalBlksDirtied": {
        "type": "long",
        "description": "Total number of local blocks dirtied by the statement for all calls in"
      },
      "LocalBlksHit": {
        "type": "long",
        "description": "Total number of local block cache hits by the statement for all calls"
      },
      "LocalBlksRead": {
        "type": "long",
        "description": "Total number of local blocks read by the statement for all calls in"
      },
      "LocalBlksWritten": {
        "type": "long",
        "description": "Total number of local blocks written by the statement for all calls"
      },
      "MaxExecDurationMs": {
        "type": "real",
        "description": "Maximum query execution duration in milliseconds in this time"
      },
      "MeanExecDurationMs": {
        "type": "real",
        "description": "Mean query execution duration in milliseconds in this time bucket."
      },
      "MinExecDurationMs": {
        "type": "real",
        "description": "Minimum query execution duration in milliseconds in this time"
      },
      "ParametersCaptureStatus": {
        "type": "string",
        "description": "Indicates the status of capturing parameters of a parameterized"
      },
      "PlanId": {
        "type": "long",
        "description": "ID of the plan corresponding to this query if plan store is enabled,"
      },
      "QueryId": {
        "type": "string",
        "description": "Unique query ID of the statement that is an internal hash code,"
      },
      "QueryType": {
        "type": "string",
        "description": "Indicates the query type of the statement. Possible values: select,"
      },
      "Rows": {
        "type": "long",
        "description": "Total number of rows retrieved or affected by the statement for all"
      },
      "RuntimeStatsEntryId": {
        "type": "long",
        "description": "ID of the runtime entry."
      },
      "SearchPath": {
        "type": "string",
        "description": "Value of search_path set at the time the query was captured."
      },
      "SearchPathCaptureStatus": {
        "type": "string",
        "description": "Indicates the status of capturing the search_path."
      },
      "SharedBlksDirtied": {
        "type": "long",
        "description": "Total number of shared blocks dirtied by the statement for all calls"
      },
      "SharedBlksHit": {
        "type": "long",
        "description": "Total number of shared block cache hits by the statement for all"
      },
      "SharedBlksRead": {
        "type": "long",
        "description": "Total number of shared blocks read by the statement for all calls in"
      },
      "SharedBlksWritten": {
        "type": "long",
        "description": "Total number of shared blocks written by the statement for all calls"
      },
      "StartTime": {
        "type": "datetime",
        "description": "The start time corresponding to the time bucket for this entry. Entries"
      },
      "StdDevExecDurationMs": {
        "type": "real",
        "description": "Standard deviation of the query execution duration time in"
      },
      "TempBlksRead": {
        "type": "long",
        "description": "Total number of temporary file blocks read by the statement for all"
      },
      "TempBlksWritten": {
        "type": "long",
        "description": "Total number of temporary file blocks written by the statement for"
      },
      "TotalExecDurationMs": {
        "type": "real",
        "description": "Total query execution duration in milliseconds for all calls in this"
      },
      "Event": {
        "type": "string",
        "description": "The PostgreSQL wait event name if backend is currently waiting."
      },
      "EventType": {
        "type": "string",
        "description": "The PostgreSQL type of event for which the backend is waiting."
      },
      "ColumnName": {
        "type": "string",
        "description": "Name of the column (if applicable)."
      },
      "ConstraintName": {
        "type": "string",
        "description": "Name of the constraint (if applicable)."
      },
      "Context": {
        "type": "string",
        "description": "Error context (if applicable)."
      },
      "DatatypeName": {
        "type": "string",
        "description": "Name of the datatype (if applicable)."
      },
      "Detail": {
        "type": "string",
        "description": "Detail log message (if applicable)."
      },
      "DetailLog": {
        "type": "string",
        "description": "Extended detail log message (if applicable)."
      },
      "ErrorLevel": {
        "type": "string",
        "description": "Logging level, example: LOG, ERROR, NOTICE."
      },
      "Hint": {
        "type": "string",
        "description": "Message hint (if applicable)."
      },
      "Query": {
        "type": "string",
        "description": "Internal query that led to the error (if applicable)."
      },
      "SqlErrorCode": {
        "type": "string",
        "description": "PostgreSQL Error code that follows the SQL standard's conventions for"
      },
      "Statement": {
        "type": "string",
        "description": "Query string (if applicable)."
      },
      "TableName": {
        "type": "string",
        "description": "Name of the table (if applicable)."
      }
    }
  },
  "Perf": {
    "tableName": "Perf",
    "description": "Performance counters from Windows and Linux agents that provide insight into the performance of hardware components operating systems and applications.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "BucketEndTime": {
        "type": "datetime",
        "description": ""
      },
      "BucketStartTime": {
        "type": "datetime",
        "description": ""
      },
      "Computer": {
        "type": "string",
        "description": "Computer that the event was collected from."
      },
      "CounterName": {
        "type": "string",
        "description": "Name of the performance counter."
      },
      "CounterPath": {
        "type": "string",
        "description": "Full path of the counter in the form \\"
      },
      "CounterValue": {
        "type": "real",
        "description": ""
      },
      "InstanceName": {
        "type": "string",
        "description": "Name of the event instance. Empty if no instance."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Max": {
        "type": "real",
        "description": ""
      },
      "Min": {
        "type": "real",
        "description": ""
      },
      "ObjectName": {
        "type": "string",
        "description": "Name of the performance object."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "SampleCount": {
        "type": "int",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "StandardDeviation": {
        "type": "real",
        "description": ""
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time (UTC) when the log was generated. This column"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "DataSetRunId": {
        "type": "string",
        "description": "The identifier of the Data Set run for which this data was"
      },
      "Finding": {
        "type": "string",
        "description": "The detailed description of the finding."
      },
      "FindingId": {
        "type": "string",
        "description": "Reference to the parent finding ID."
      },
      "FindingPartitionKey": {
        "type": "string",
        "description": "Partitionkey to access the finding."
      },
      "ImpactLevel": {
        "type": "string",
        "description": "Impact level of the finding (High, Medium, Low)."
      },
      "Recommendation": {
        "type": "string",
        "description": "Recommended action to address the finding."
      },
      "ReferenceLinks": {
        "type": "dynamic",
        "description": "List of reference URLs."
      },
      "ReportId": {
        "type": "string",
        "description": "Report Id."
      },
      "RuleCategory": {
        "type": "string",
        "description": "Category of the finding."
      },
      "RuleFriendlyName": {
        "type": "string",
        "description": "Name of the rule that generated the finding."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "Details": {
        "type": "dynamic",
        "description": "JSON string containing relevant details of the impacted resource."
      },
      "ImpactedResourceName": {
        "type": "string",
        "description": "Name of the impacted resource."
      },
      "ImpactedResourceValue": {
        "type": "string",
        "description": "Value of the impacted resource."
      },
      "CommandLine": {
        "type": "string",
        "description": "Command line used to run the performance analysis."
      },
      "EndTimeUtc": {
        "type": "datetime",
        "description": "End time of the performance analysis in UTC."
      },
      "HighImpactFindings": {
        "type": "int",
        "description": "Count of high impact findings."
      },
      "LowImpactFindings": {
        "type": "int",
        "description": "Count of low impact findings."
      },
      "MediumImpactFindings": {
        "type": "int",
        "description": "Count of medium impact findings."
      },
      "PerfInsightsExeFileVersion": {
        "type": "string",
        "description": "Version of the PerfInsights executable."
      },
      "PerfInsightsResourceId": {
        "type": "string",
        "description": "Resource URI in PerfInsights format."
      },
      "Scenario": {
        "type": "string",
        "description": "The scenario being analyzed."
      },
      "StartTimeUtc": {
        "type": "datetime",
        "description": "Start time of the performance analysis in UTC."
      }
    }
  },
  "PowerAppsActivity": {
    "tableName": "PowerAppsActivity",
    "description": "Contains Microsoft Power Apps activity logs that track events like creation, deletion, updates, permission changes, and app launches.",
    "columns": {
      "ActorName": {
        "type": "string",
        "description": "The UPN (User Principal Name) of the user who performed the action"
      },
      "ActorUserId": {
        "type": "string",
        "description": "An alternative ID for the user identified in the UserId property. For"
      },
      "ActorUserType": {
        "type": "string",
        "description": "The type of user that performed the operation. For example: Admin,"
      },
      "AdditionalInfo": {
        "type": "dynamic",
        "description": "Additional information if any (e.g. the environment name)"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "EventOriginalType": {
        "type": "string",
        "description": "The name of the user or admin activity that performed the activity. For a"
      },
      "EventOriginalUid": {
        "type": "string",
        "description": "Unique identifier of an audit record."
      },
      "EventResult": {
        "type": "string",
        "description": "Indicates whether the action (specified in the Operation property) was"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "ObjectId": {
        "type": "string",
        "description": "The full path name of the file or folder accessed by the user. For"
      },
      "OrganizationId": {
        "type": "string",
        "description": "The GUID for your organization's Office 365 tenant. This value will always"
      },
      "RecordType": {
        "type": "string",
        "description": "The type of operation indicated by the record. See the"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "SrcIpAddr": {
        "type": "string",
        "description": "The IP address of the device that was used when the activity was logged."
      },
      "calling": {
        "type": "int",
        "description": "o the service on behalf of a user and not the IP address of the"
      },
      "TargetAppName": {
        "type": "string",
        "description": "The name of the app where the event occurred."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The date and time in (UTC) when the user performed the activity."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "Workload": {
        "type": "string",
        "description": "The Office 365 service where the activity occurred."
      }
    }
  },
  "PowerAutomateActivity": {
    "tableName": "PowerAutomateActivity",
    "description": "Contains Microsoft Power Automate audit logs. It's typically used to track Power Automate activities.",
    "columns": {
      "ActorName": {
        "type": "string",
        "description": "The UPN (User Principal Name) of the user who performed the action"
      },
      "ActorUserId": {
        "type": "string",
        "description": "An alternative ID for the user identified in the UserId property. For"
      },
      "ActorUserType": {
        "type": "string",
        "description": "The type of user that performed the operation. Possible types are:"
      },
      "AdditionalInfo": {
        "type": "dynamic",
        "description": "More information, for example, the environment name."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "EventOriginalType": {
        "type": "string",
        "description": "The name of the user or admin activity that performed the activity."
      },
      "EventOriginalUid": {
        "type": "string",
        "description": "Unique identifier of an audit record."
      },
      "EventResult": {
        "type": "string",
        "description": "Indicates whether the action (specified in the Operation property) was"
      },
      "FlowConnectorNames": {
        "type": "string",
        "description": "Connector names listed in the flow."
      },
      "FlowDetailsUrl": {
        "type": "string",
        "description": "Link to the flow's details page."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "LicenseDisplayName": {
        "type": "string",
        "description": "Display name of the license."
      },
      "ObjectId": {
        "type": "string",
        "description": "The full path name of the file or folder accessed by the user. For"
      },
      "OrganizationId": {
        "type": "string",
        "description": "The GUID for your organization's Office 365 tenant. This value will"
      },
      "RecipientUpn": {
        "type": "string",
        "description": "If permission was updated, shows the UPN of the permission"
      },
      "RecordType": {
        "type": "string",
        "description": "The type of operation indicated by the record. See the"
      },
      "SharingPermission": {
        "type": "string",
        "description": "Type of permission shared with another user (3 = Owner/ReadWrite, 2"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "SrcIpAddr": {
        "type": "string",
        "description": "The IP address of the device that was used when the activity was"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The date and time in (UTC) when the user performed the activity."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserUpn": {
        "type": "string",
        "description": "Unique ID of the user. Always equivalent to UserKey."
      },
      "Workload": {
        "type": "string",
        "description": "The Office 365 service where the activity occurred."
      }
    }
  },
  "PowerBIActivity": {
    "tableName": "PowerBIActivity",
    "description": "Contains Microsoft PowerBI audit logs. It's typically used to track PowerBI activities.",
    "columns": {
      "Activity": {
        "type": "string",
        "description": "The name of the user or admin activity."
      },
      "ActivityId": {
        "type": "string",
        "description": "A unique identifier for the activity."
      },
      "ActorName": {
        "type": "string",
        "description": "The UPN (User Principal Name) of the user who performed the"
      },
      "ActorUserId": {
        "type": "string",
        "description": "An alternative ID for the user identified in the UserId property. For"
      },
      "ActorUserType": {
        "type": "string",
        "description": "The type of user that performed the operation. Possible types are:"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DashboardId": {
        "type": "string",
        "description": "The ID of the dashboard that the activity was performed on."
      },
      "DashboardName": {
        "type": "string",
        "description": "The name of the dashboard where the event occurred."
      },
      "DataClassification": {
        "type": "string",
        "description": "The data classification, if exists, for the dashboard where the event"
      },
      "DatasetName": {
        "type": "string",
        "description": "The name of the dataset where the event occurred."
      },
      "DistributionMethod": {
        "type": "string",
        "description": "Indicates the distribution method of the content."
      },
      "EventOriginalType": {
        "type": "string",
        "description": "The name of the user or admin activity that performed the activity."
      },
      "EventOriginalUid": {
        "type": "string",
        "description": "Unique identifier of an audit record."
      },
      "EventProduct": {
        "type": "string",
        "description": "The Microsoft product name (PowerBI)."
      },
      "EventResult": {
        "type": "string",
        "description": "Indicates whether the action (specified in the Operation property)"
      },
      "EventVendor": {
        "type": "string",
        "description": "Service vendor name."
      },
      "FolderAccessRequests": {
        "type": "dynamic",
        "description": "List of users that requested access to the folder."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "IsSuccess": {
        "type": "string",
        "description": "Indicates whether the action was successful or not."
      },
      "ItemName": {
        "type": "string",
        "description": "The name of the item that the activity was performed on."
      },
      "MembershipInformation": {
        "type": "string",
        "description": "Membership information about the group."
      },
      "ObjectId": {
        "type": "string",
        "description": "The full path name of the file or folder accessed by the user. For"
      },
      "OrganizationId": {
        "type": "string",
        "description": "The GUID for your organization's Office 365 tenant. This value will"
      },
      "OrgAppPermission": {
        "type": "string",
        "description": "Permissions list for an organizational app (entire organization,"
      },
      "PbiWorkspaceName": {
        "type": "string",
        "description": "The name of the PowerBI workspace where the event occurred."
      },
      "RecordType": {
        "type": "string",
        "description": "The type of operation indicated by the record. See the"
      },
      "ReportName": {
        "type": "string",
        "description": "The name of the report where the event occurred."
      },
      "RequestId": {
        "type": "string",
        "description": "A unique identifier for the request."
      },
      "Scope": {
        "type": "string",
        "description": "Event can be created by a hosted Office 365 service or an on-"
      },
      "SharingInformation": {
        "type": "string",
        "description": "Information about the person to whom a sharing invitation is sent."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "SrcIpAddr": {
        "type": "string",
        "description": "The IP address of the device that was used when the activity was"
      },
      "SwitchState": {
        "type": "string",
        "description": "Information about the state of various tenant level switches."
      },
      "TargetAppName": {
        "type": "string",
        "description": "The name of the app where the event occurred."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The date and time in (UTC) when the user performed the activity."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "Information about the user's browser. This information is provided"
      },
      "UserType": {
        "type": "string",
        "description": "The type of user that performed the operation. Possible types are:"
      },
      "Workload": {
        "type": "string",
        "description": "The Office 365 service where the activity occurred."
      },
      "WorkspaceId": {
        "type": "string",
        "description": "The ID of the PowerBI workspace."
      }
    }
  },
  "PowerBIDatasetsTenant": {
    "tableName": "PowerBIDatasetsTenant",
    "description": "Contains Analysis Services engine process events such as the start of a batch or transaction e.g. execute query, process partition. Typically used to monitor the performance, health and usage of Power BI's data engine. Contains information from the entire tenant.",
    "columns": {
      "ApplicationContext": {
        "type": "dynamic",
        "description": "Unique identifiers providing details about the context of the"
      },
      "ApplicationName": {
        "type": "string",
        "description": "Contains the name of the client application that created the"
      },
      "ArtifactId": {
        "type": "string",
        "description": "Unique ID of the resource logging the data."
      },
      "ArtifactKind": {
        "type": "string",
        "description": "Type of artifact logging the operation e.g. Dataset."
      },
      "ArtifactName": {
        "type": "string",
        "description": "The name of the Power BI artifact logging this operation."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CorrelationId": {
        "type": "string",
        "description": "An event ID that can be used to correlated events between"
      },
      "CpuTimeMs": {
        "type": "long",
        "description": "Amount of CPU time (in milliseconds) used by the operation."
      },
      "CustomerTenantId": {
        "type": "string",
        "description": "Unique identifier of the Power BI tenant."
      },
      "DatasetMode": {
        "type": "string",
        "description": "The mode of the dataset. Import, DirectQuery or Composite."
      },
      "DurationMs": {
        "type": "long",
        "description": "Amount of time (in milliseconds) taken by the operation."
      },
      "EventText": {
        "type": "string",
        "description": "Contains verbose information associated with operation e.g. DAX"
      },
      "ExecutingUser": {
        "type": "string",
        "description": "The user executing the operation."
      },
      "Identity": {
        "type": "dynamic",
        "description": "Information about user and claims."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Level": {
        "type": "string",
        "description": "Contains the severity level of the operation being logged. Success,"
      },
      "LogAnalyticsCategory": {
        "type": "string",
        "description": "Unique category of the events like Audit/Security/Request."
      },
      "OperationDetailName": {
        "type": "string",
        "description": "Provides subcategories of OperationName."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with the log record."
      },
      "PowerBIWorkspaceId": {
        "type": "string",
        "description": "Unique identifier of the Power BI workspace that contains the"
      },
      "PowerBIWorkspaceName": {
        "type": "string",
        "description": "Name of the Power BI workspace containing the artifact."
      },
      "PremiumCapacityId": {
        "type": "string",
        "description": "Unique identifier of the Premium capacity hosting the artifact"
      },
      "ProgressCounter": {
        "type": "long",
        "description": "Progress Counter."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "Status": {
        "type": "string",
        "description": "Status of the operation."
      },
      "StatusCode": {
        "type": "int",
        "description": "Status code of the operation. It covers success and failure."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp(UTC) of when the log entry was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "User": {
        "type": "string",
        "description": "The user on whose behalf the operation is running. Used when an"
      },
      "XmlaObjectPath": {
        "type": "string",
        "description": "A comma-separated list of parents, starting with the object's"
      },
      "XmlaProperties": {
        "type": "string",
        "description": "Properties of the XMLA request."
      },
      "XmlaRequestId": {
        "type": "string",
        "description": "Unique Identifier of request."
      },
      "XmlaSessionId": {
        "type": "string",
        "description": "Analysis services session identifier."
      }
    }
  },
  "PowerBIDatasetsWorkspace": {
    "tableName": "PowerBIDatasetsWorkspace",
    "description": "Contains Analysis Services engine process events such as the start of a batch or transaction e.g. execute query, process partition. Typically used to monitor the performance, health and usage of Power BI's data engine. Contains information from the entire tenant.",
    "columns": {
      "ApplicationContext": {
        "type": "dynamic",
        "description": "Unique identifiers providing details about the context of the"
      },
      "ApplicationName": {
        "type": "string",
        "description": "Contains the name of the client application that created the"
      },
      "ArtifactId": {
        "type": "string",
        "description": "Unique ID of the resource logging the data."
      },
      "ArtifactKind": {
        "type": "string",
        "description": "Type of artifact logging the operation e.g. Dataset."
      },
      "ArtifactName": {
        "type": "string",
        "description": "The name of the Power BI artifact logging this operation."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CorrelationId": {
        "type": "string",
        "description": "An event ID that can be used to correlated events between"
      },
      "CpuTimeMs": {
        "type": "long",
        "description": "Amount of CPU time (in milliseconds) used by the operation."
      },
      "CustomerTenantId": {
        "type": "string",
        "description": "Unique identifier of the Power BI tenant."
      },
      "DatasetMode": {
        "type": "string",
        "description": "The mode of the dataset. Import, DirectQuery or Composite."
      },
      "DurationMs": {
        "type": "long",
        "description": "Amount of time (in milliseconds) taken by the operation."
      },
      "EventText": {
        "type": "string",
        "description": "Contains verbose information associated with operation e.g. DAX"
      },
      "ExecutingUser": {
        "type": "string",
        "description": "The user executing the operation."
      },
      "Identity": {
        "type": "dynamic",
        "description": "Information about user and claims."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Level": {
        "type": "string",
        "description": "Contains the severity level of the operation being logged. Success,"
      },
      "LogAnalyticsCategory": {
        "type": "string",
        "description": "Unique category of the events like Audit/Security/Request."
      },
      "OperationDetailName": {
        "type": "string",
        "description": "Provides subcategories of OperationName."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with the log record."
      },
      "PowerBIWorkspaceId": {
        "type": "string",
        "description": "Unique identifier of the Power BI workspace that contains the"
      },
      "PowerBIWorkspaceName": {
        "type": "string",
        "description": "Name of the Power BI workspace containing the artifact."
      },
      "PremiumCapacityId": {
        "type": "string",
        "description": "Unique identifier of the Premium capacity hosting the artifact"
      },
      "ProgressCounter": {
        "type": "long",
        "description": "Progress Counter."
      },
      "ReplicaId": {
        "type": "string",
        "description": "Replica identifier."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "Status": {
        "type": "string",
        "description": "Status of the operation."
      },
      "StatusCode": {
        "type": "int",
        "description": "Status code of the operation. It covers success and failure."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp(UTC) of when the log entry was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "User": {
        "type": "string",
        "description": "The user on whose behalf the operation is running. Used when an"
      },
      "XmlaObjectPath": {
        "type": "string",
        "description": "A comma-separated list of parents, starting with the object's"
      },
      "XmlaProperties": {
        "type": "string",
        "description": "Properties of the XMLA request."
      },
      "XmlaRequestId": {
        "type": "string",
        "description": "Unique Identifier of request."
      },
      "XmlaSessionId": {
        "type": "string",
        "description": "Analysis services session identifier."
      }
    }
  },
  "PowerPlatformAdminActivity": {
    "tableName": "PowerPlatformAdminActivity",
    "description": "Contains Microsoft Power Platform administrative activity logs that track events like creation, deletion, updates, to the Microsoft Power Platform environment.",
    "columns": {
      "ActorName": {
        "type": "string",
        "description": "The UPN (User Principal Name) of the user who performed"
      },
      "ActorUserId": {
        "type": "string",
        "description": "An alternative ID for the user identified in the UserId"
      },
      "ActorUserType": {
        "type": "string",
        "description": "The type of user that performed the operation. For"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "EnvironmentId": {
        "type": "string",
        "description": "The unique identifier of the environment."
      },
      "EventOriginalType": {
        "type": "string",
        "description": "The name of the user or admin activity that performed the"
      },
      "EventOriginalUid": {
        "type": "string",
        "description": "Unique identifier of an audit record."
      },
      "EventResult": {
        "type": "string",
        "description": "Indicates whether the action (specified in the Operation"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "OrganizationId": {
        "type": "string",
        "description": "The GUID for your organization's Office 365 tenant. This"
      },
      "Properties": {
        "type": "dynamic",
        "description": "Additional information properties with KQL friendly"
      },
      "PropertyCollection": {
        "type": "dynamic",
        "description": "Additional information property bag for the event."
      },
      "RecordType": {
        "type": "string",
        "description": "The type of operation indicated by the record. See the"
      },
      "RequiresCustomerKeyEncryption": {
        "type": "bool",
        "description": "Status of the Customer Key Encryption requirement for the"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The date and time in (UTC) when the user performed the"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "Workload": {
        "type": "string",
        "description": "The Office 365 service where the activity occurred."
      }
    }
  },
  "PowerPlatformConnectorActivity": {
    "tableName": "PowerPlatformConnectorActivity",
    "description": "Contains Microsoft Power Platform Connector audit logs. It's typically used to track Power Platform Connector activities.",
    "columns": {
      "ActorName": {
        "type": "string",
        "description": "The UPN (User Principal Name) of the user who performed the action"
      },
      "ActorUserId": {
        "type": "string",
        "description": "An alternative ID for the user identified in the UserId property. For"
      },
      "ActorUserType": {
        "type": "string",
        "description": "The type of user that performed the operation. Possible types are: Admin,"
      },
      "AdditionalInfo": {
        "type": "dynamic",
        "description": "More information, for example, the environment name."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ConnectorId": {
        "type": "string",
        "description": "The unique ID of the resource. Examples: custom api, and connection or"
      },
      "EventOriginalType": {
        "type": "string",
        "description": "The name of the user or admin activity that performed the activity. For a"
      },
      "EventOriginalUid": {
        "type": "string",
        "description": "Unique identifier of an audit record."
      },
      "EventResult": {
        "type": "string",
        "description": "Indicates whether the action (specified in the Operation property) was"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "ObjectId": {
        "type": "string",
        "description": "The full path name of the file or folder accessed by the user. For"
      },
      "OrganizationId": {
        "type": "string",
        "description": "The GUID for your organization's Office 365 tenant. This value will always"
      },
      "RecordType": {
        "type": "string",
        "description": "The type of operation indicated by the record. See the"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "SrcIpAddr": {
        "type": "string",
        "description": "The IP address of the device that was used when the activity was logged."
      },
      "calling": {
        "type": "int",
        "description": "o the service on behalf of a user and not the IP address of the"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The date and time in (UTC) when the user performed the activity."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "Workload": {
        "type": "string",
        "description": "The Office 365 service where the activity occurred."
      }
    }
  },
  "PowerPlatformDlpActivity": {
    "tableName": "PowerPlatformDlpActivity",
    "description": "Contains Microsoft Power Platform Data Loss Prevention (DLP) audit logs. It's typically used to track Power Platform DLP admin activities.",
    "columns": {
      "ActorName": {
        "type": "string",
        "description": "The UPN (User Principal Name) of the user who performed the action"
      },
      "ActorUserId": {
        "type": "string",
        "description": "An alternative ID for the user identified in the UserId property. For"
      },
      "ActorUserType": {
        "type": "string",
        "description": "The type of user that performed the operation. Possible types are: Admin,"
      },
      "AdditionalInfo": {
        "type": "dynamic",
        "description": "More information, for example, the environment name."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "EventOriginalType": {
        "type": "string",
        "description": "The name of the user or admin activity that performed the activity. For a"
      },
      "EventOriginalUid": {
        "type": "string",
        "description": "Unique identifier of an audit record."
      },
      "EventResult": {
        "type": "string",
        "description": "Indicates whether the action (specified in the Operation property) was"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "ObjectId": {
        "type": "string",
        "description": "The full path name of the file or folder accessed by the user. For"
      },
      "OrganizationId": {
        "type": "string",
        "description": "The GUID for your organization's Office 365 tenant. This value will always"
      },
      "PolicyName": {
        "type": "string",
        "description": "Name of the DLP policy."
      },
      "RecordType": {
        "type": "string",
        "description": "The type of operation indicated by the record. See the"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "SrcIpAddr": {
        "type": "string",
        "description": "The IP address of the device that was used when the activity was logged."
      },
      "calling": {
        "type": "int",
        "description": "o the service on behalf of a user and not the IP address of the"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The date and time in (UTC) when the user performed the activity."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "Workload": {
        "type": "string",
        "description": "The Office 365 service where the activity occurred."
      }
    }
  },
  "ProjectActivity": {
    "tableName": "ProjectActivity",
    "description": "Contains your Microsoft Project audit logs in order to track your Project activities.",
    "columns": {
      "ActorName": {
        "type": "string",
        "description": "The UPN (User Principal Name) of the user who performed the action"
      },
      "ActorUserId": {
        "type": "string",
        "description": "An alternative ID for the user identified in the UserId property. For"
      },
      "ActorUserType": {
        "type": "string",
        "description": "The type of user that performed the operation. Possible types are: Admin,"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "EventOriginalType": {
        "type": "string",
        "description": "The name of the user or admin activity that performed the activity. For a"
      },
      "EventOriginalUid": {
        "type": "string",
        "description": "Unique identifier of an audit record."
      },
      "EventProduct": {
        "type": "string",
        "description": "The Microsoft service name."
      },
      "EventResult": {
        "type": "string",
        "description": "Indicates whether the action (specified in the Operation property) was"
      },
      "EventVendor": {
        "type": "string",
        "description": "The vendor service name."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "ObjectId": {
        "type": "string",
        "description": "For SharePoint and OneDrive for business activity, the full path name of"
      },
      "OnBehalfOfResId": {
        "type": "string",
        "description": "The resource ID the action was taken on behalf of."
      },
      "OrganizationId": {
        "type": "string",
        "description": "The GUID for your organization's Office 365 tenant. This value will always"
      },
      "ProjectAction": {
        "type": "string",
        "description": "The project action that was taken."
      },
      "ProjectEntity": {
        "type": "string",
        "description": "The project entity the audit was for."
      },
      "RecordType": {
        "type": "string",
        "description": "The type of operation indicated by the record. See the"
      },
      "Scope": {
        "type": "string",
        "description": "Event can be created by a hosted Office 365 service or an on-premises"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "SrcIpAddr": {
        "type": "string",
        "description": "The IP address of the device that was used when the activity was logged."
      },
      "calling": {
        "type": "int",
        "description": "o the service on behalf of a user and not the IP address of the"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The date and time in UTC when the user performed the activity."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserType": {
        "type": "string",
        "description": "The type of user that performed the operation."
      },
      "Workload": {
        "type": "string",
        "description": "The Office 365 service where the activity occurred."
      }
    }
  },
  "ProtectionStatus": {
    "tableName": "ProtectionStatus",
    "description": "Antimalware installation info and security health status of the machine:",
    "columns": {
      "AMProductVersion": {
        "type": "string",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Computer": {
        "type": "string",
        "description": ""
      },
      "ComputerEnvironment": {
        "type": "string",
        "description": ""
      },
      "ComputerIP_Hidden": {
        "type": "string",
        "description": ""
      },
      "DetectionId": {
        "type": "string",
        "description": ""
      },
      "DeviceName": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "ManagementGroupName": {
        "type": "string",
        "description": ""
      },
      "OSName": {
        "type": "string",
        "description": ""
      },
      "ProtectionStatus": {
        "type": "string",
        "description": ""
      },
      "ProtectionStatusDetails": {
        "type": "string",
        "description": ""
      },
      "ProtectionStatusRank": {
        "type": "int",
        "description": ""
      },
      "Resource": {
        "type": "string",
        "description": ""
      },
      "ResourceGroup": {
        "type": "string",
        "description": ""
      },
      "ResourceId": {
        "type": "string",
        "description": ""
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "ResourceProvider": {
        "type": "string",
        "description": ""
      },
      "ResourceType": {
        "type": "string",
        "description": ""
      },
      "ScanDate": {
        "type": "datetime",
        "description": ""
      },
      "SignatureVersion": {
        "type": "string",
        "description": ""
      },
      "SourceComputerId": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "SubscriptionId": {
        "type": "string",
        "description": ""
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "Threat": {
        "type": "string",
        "description": ""
      },
      "ThreatStatus": {
        "type": "string",
        "description": ""
      },
      "ThreatStatusDetails": {
        "type": "string",
        "description": ""
      },
      "ThreatStatusRank": {
        "type": "int",
        "description": ""
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "TypeofProtection": {
        "type": "string",
        "description": ""
      },
      "VMUUID": {
        "type": "string",
        "description": ""
      }
    }
  },
  "PurviewDataSensitivityLogs": {
    "tableName": "PurviewDataSensitivityLogs",
    "description": "Data Sensitivity information for assets scanned using Purview.",
    "columns": {
      "ActivityType": {
        "type": "string",
        "description": "The type of data sensitivity event: classification, labeling."
      },
      "AssetCreationTime": {
        "type": "datetime",
        "description": "Time (UTC) at which the asset was created."
      },
      "AssetLastScanTime": {
        "type": "datetime",
        "description": "Time (UTC) at which the asset was last scanned."
      },
      "AssetModifiedTime": {
        "type": "datetime",
        "description": "Time (UTC) at which the asset was last modified."
      },
      "AssetName": {
        "type": "string",
        "description": "Name of the asset scanned."
      },
      "AssetPath": {
        "type": "string",
        "description": "Path of the asset scanned in a source."
      },
      "AssetType": {
        "type": "string",
        "description": "Type of asset that was scanned: file, column, table, generic."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Classification": {
        "type": "dynamic",
        "description": "Names of the classifications found."
      },
      "ClassificationDetails": {
        "type": "dynamic",
        "description": "List of classification details: ID, name, count, uniquecount,"
      },
      "ClassificationTrigger": {
        "type": "string",
        "description": "The trigger for the classification event."
      },
      "FileExtension": {
        "type": "string",
        "description": "File extension of the asset scanned. Only populated when asset type"
      },
      "FileSize": {
        "type": "long",
        "description": "File size of the asset scanned in bytes. Only populated when asset"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "PurviewAccountName": {
        "type": "string",
        "description": "Name of the Purview account."
      },
      "PurviewRegion": {
        "type": "string",
        "description": "Region of the Purview account."
      },
      "PurviewTenantId": {
        "type": "string",
        "description": "Tenant ID associated with the Purview account."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SensitivityLabel": {
        "type": "dynamic",
        "description": "Names for the labels found."
      },
      "SensitivityLabelDetails": {
        "type": "dynamic",
        "description": "List of label details: ID, name, order."
      },
      "SensitivityLabelTrigger": {
        "type": "string",
        "description": "The trigger for the sensitivity label event."
      },
      "SourceCollectionName": {
        "type": "string",
        "description": "Name of the data source collection name in Purview."
      },
      "SourceName": {
        "type": "string",
        "description": "Name of the data source scanned as registered in Purview."
      },
      "SourcePath": {
        "type": "string",
        "description": "Resource Path of the data source. Ex: ARM path for Azure resources"
      },
      "SourceRegion": {
        "type": "string",
        "description": "The location of the data source that was scanned."
      },
      "SourceScanId": {
        "type": "string",
        "description": "The associated Purview scan ID for the source."
      },
      "SourceSubscriptionId": {
        "type": "string",
        "description": "Subscription ID associated with the data source. Account ID for AWS"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "SourceType": {
        "type": "string",
        "description": "Type of data source scanned: azuredatalakegen1, azureblob,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Time (UTC) when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "PurviewScanStatusLogs": {
    "tableName": "PurviewScanStatusLogs",
    "description": "Status of the scan on the data sources.",
    "columns": {
      "AssetsClassified": {
        "type": "long",
        "description": "Number of assets classified from the scan."
      },
      "AssetsDiscovered": {
        "type": "long",
        "description": "Number of assets discovered from the scan."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "Log type category."
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID for correlated events. Can be used to identify correlated"
      },
      "DataSourceName": {
        "type": "string",
        "description": "Name of the data source where the scan is run."
      },
      "DataSourceType": {
        "type": "string",
        "description": "Type of data source where the scan is run. For example:"
      },
      "ErrorDetails": {
        "type": "string",
        "description": "Error detail while running the scan."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "LogLevel": {
        "type": "string",
        "description": "Log level of message (INFO, WARN, ERROR, etc.)."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "ResultType": {
        "type": "string",
        "description": "Result of the scan at the current state. For example: Throttled,"
      },
      "RunType": {
        "type": "string",
        "description": "Run Type of the scan. For example: Manual, Scheduled etc."
      },
      "ScanName": {
        "type": "string",
        "description": "Name of the scan associated with the scan status log event."
      },
      "ScanQueueTimeInSeconds": {
        "type": "long",
        "description": "Time spent by this scan waiting in the queue."
      },
      "ScanResultId": {
        "type": "string",
        "description": "Guid of the Scan Result."
      },
      "ScanTotalRunTimeInSeconds": {
        "type": "long",
        "description": "Total time to complete the scan."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "PurviewSecurityLogs": {
    "tableName": "PurviewSecurityLogs",
    "description": "Table containing audit events for the Purview account, such as role assignments to a collection or creation or deletion of a collection.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CallerIdentities": {
        "type": "dynamic",
        "description": "Contains information about the identity that performed the operation."
      },
      "EntityName": {
        "type": "string",
        "description": "Name of the entity for which the operation was performed."
      },
      "EntityType": {
        "type": "string",
        "description": "Type of the entity for which the operation was performed."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Location": {
        "type": "string",
        "description": "Location of the Purview account."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "Properties": {
        "type": "dynamic",
        "description": "Additional properties of the operation."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultDescription": {
        "type": "string",
        "description": "Description of the result of the operation. May also contain the error"
      },
      "ResultType": {
        "type": "string",
        "description": "Result of the operation."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "REDConnectionEvents": {
    "tableName": "REDConnectionEvents",
    "description": "Logs the connection events when client connects to redis enterprise database.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClientIp": {
        "type": "string",
        "description": "The Redis client IP address."
      },
      "ConnectionId": {
        "type": "long",
        "description": "Unique connection ID assigned by Redis."
      },
      "EventEpochTime": {
        "type": "long",
        "description": "The unix timestamp (number of seconds since January 1, 1970) when the"
      },
      "EventStatus": {
        "type": "int",
        "description": "Results of an authentication request as a status code (only applicable for"
      },
      "EventType": {
        "type": "string",
        "description": "Type of connection event(new_conn/auth/close_conn)."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Location": {
        "type": "string",
        "description": "The location (i.e. region) of the Azure Cache for Redis Enterprise instance"
      },
      "OperationName": {
        "type": "string",
        "description": "The Redis operation associated with the log record."
      },
      "PrivateLinkIPv6": {
        "type": "string",
        "description": "The Redis client private link IPv6 address (if applicable)."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) when event audit log was captured."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "RemoteNetworkHealthLogs": {
    "tableName": "RemoteNetworkHealthLogs",
    "description": "This table is part of Identity and Network Access, which contains Remote Network Health logs. These logs can be leveraged for knowing the state of your remote networks health state.",
    "columns": {
      "BgpRoutesAdvertisedCount": {
        "type": "int",
        "description": "Count of BGP routes advertised through tunnel."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CreatedDateTime": {
        "type": "datetime",
        "description": "The date and time (UTC) that the event was generated."
      },
      "Description": {
        "type": "string",
        "description": "Description and summary of the event."
      },
      "DestinationIp": {
        "type": "string",
        "description": "The IP address of the destination."
      },
      "Id": {
        "type": "string",
        "description": "A unique identifier for each remoteNetworkHealthEvent."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable"
      },
      "ReceivedBytes": {
        "type": "long",
        "description": "The number of bytes sent from the destination to the source."
      },
      "RemoteNetworkId": {
        "type": "string",
        "description": "A unique identifier for each remoteNetwork site."
      },
      "SentBytes": {
        "type": "long",
        "description": "The number of bytes sent from the source to the destination for"
      },
      "SourceIp": {
        "type": "string",
        "description": "The public IP address."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "Status": {
        "type": "string",
        "description": "Remote network status. Possible values are: tunnelDisconnected,"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The date and time (UTC) that the event was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "ResourceManagementPublicAccessLogs": {
    "tableName": "ResourceManagementPublicAccessLogs",
    "description": "Contains Resource management private link analysis events such as the operations that are already blocked due to private link present at the scope or operations that would be blocked. Contains information from the entire tenant.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CallerIpAddress": {
        "type": "string",
        "description": "Client IP address."
      },
      "Category": {
        "type": "string",
        "description": "A category type associated with the operation."
      },
      "CorrelationId": {
        "type": "string",
        "description": "An event ID that can be used to correlated events between"
      },
      "DurationMs": {
        "type": "long",
        "description": "Amount of time (in milliseconds) taken by the operation."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "ObjectIdentifier": {
        "type": "string",
        "description": "Object ID for the caller of the operation."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with the log record."
      },
      "OperationType": {
        "type": "string",
        "description": "The resource type and operation associated with the log record."
      },
      "OperationVersion": {
        "type": "string",
        "description": "An API version associated with the operation."
      },
      "PrivateLinkAssociationIds": {
        "type": "dynamic",
        "description": "List of private link association resource IDs present at the scope."
      },
      "ProviderName": {
        "type": "string",
        "description": "The resource provider name associated with the log record."
      },
      "ResultSignature": {
        "type": "int",
        "description": "Status code of the operation. It covers success and failure."
      },
      "ResultType": {
        "type": "string",
        "description": "Status of the operation."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log entry was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "Uri": {
        "type": "string",
        "description": "The resource URI for the operation."
      }
    }
  },
  "RetinaNetworkFlowLogs": {
    "tableName": "RetinaNetworkFlowLogs",
    "description": "Network flow logs for Azure Container Networking Services.",
    "columns": {
      "AdditionalFlowData": {
        "type": "dynamic",
        "description": "Additional flow data."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DestinationClusterName": {
        "type": "string",
        "description": "The name of the destination cluster (flow.destination.cluster_name)"
      },
      "DestinationIdentity": {
        "type": "int",
        "description": "Security identity number for the destination"
      },
      "DestinationNamespace": {
        "type": "string",
        "description": "The namespace of the destination (flow.destination.namespace)"
      },
      "DestinationPodName": {
        "type": "string",
        "description": "The name of the destination pod (flow.destination.pod_name)"
      },
      "DestinationWorkloads": {
        "type": "dynamic",
        "description": "Array of workloads associated with the destination, including name"
      },
      "DropReason": {
        "type": "string",
        "description": "The description of the drop reason if the verdict is DROPPED."
      },
      "EventType": {
        "type": "dynamic",
        "description": "Event type details (flow.event_type)."
      },
      "FlowType": {
        "type": "string",
        "description": "Type of the flow (e.g., L3_L4, L7 SOCK) (flow.Type)"
      },
      "IP": {
        "type": "dynamic",
        "description": "The IP values of the flow. Including ip source, ip destination, ip is"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Layer4": {
        "type": "dynamic",
        "description": "The layer 4 information of the flow such as the protocol, source"
      },
      "Layer7": {
        "type": "dynamic",
        "description": "L7 flow type if Flow_Type is L7 (e.g., DNS, HTTP, Kafka) (flow.l7.type)"
      },
      "NodeName": {
        "type": "string",
        "description": "Name of the node where the flow was captured (flow.node_name)"
      },
      "PacketsReceived": {
        "type": "int",
        "description": "Number of packets sent from the destination to the source since"
      },
      "PacketsSent": {
        "type": "int",
        "description": "Number of packets sent from the source to the destination since"
      },
      "Policies": {
        "type": "dynamic",
        "description": "Combined entry for all policies that allowed or denied"
      },
      "Reply": {
        "type": "bool",
        "description": "Indicates if the flow is a reply (flow.is_reply.value)"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "Service": {
        "type": "dynamic",
        "description": "Service details of the flow."
      },
      "SourceClusterName": {
        "type": "string",
        "description": "The name of the source cluster (flow.source.cluster_name)"
      },
      "SourceIdentity": {
        "type": "int",
        "description": "The security identity number for the source (flow.source.identity)"
      },
      "SourceNamespace": {
        "type": "string",
        "description": "The namespace of the source (flow.source.namespace)"
      },
      "SourcePodName": {
        "type": "string",
        "description": "The name of the source pod (flow.source.pod_name)"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "SourceWorkloads": {
        "type": "dynamic",
        "description": "Array of workloads associated with the source, including name and"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The date and time the flow was recorded (flow.time)"
      },
      "TraceObservationPoint": {
        "type": "string",
        "description": "Point of observation in the trace (e.g., TO_ENDPOINT)"
      },
      "TrafficDirection": {
        "type": "string",
        "description": "Direction of the traffic (e.g., INGRESS, EGRESS)"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UUID": {
        "type": "string",
        "description": "The UUID of the flow (flow.uuid)"
      },
      "Verdict": {
        "type": "string",
        "description": "The verdict of the flow (e.g., FORWARDED, DROPPED) (flow.verdict)"
      }
    }
  },
  "SCCMAssessmentRecommendation": {
    "tableName": "SCCMAssessmentRecommendation",
    "description": "Recommendations generated by SCCM assessments that are started through a scheduled task. When you schedule the assessment it runs by default every 7 days and upload the data into Azure Log Analytics",
    "columns": {
      "ActionArea": {
        "type": "string",
        "description": ""
      },
      "ActionAreaId": {
        "type": "string",
        "description": ""
      },
      "AffectedObjectName": {
        "type": "string",
        "description": ""
      },
      "AffectedObjectType": {
        "type": "string",
        "description": ""
      },
      "AssessmentId": {
        "type": "string",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Computer": {
        "type": "string",
        "description": ""
      },
      "CustomData": {
        "type": "string",
        "description": ""
      },
      "Description": {
        "type": "string",
        "description": ""
      },
      "FocusArea": {
        "type": "string",
        "description": ""
      },
      "FocusAreaId": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Recommendation": {
        "type": "string",
        "description": ""
      },
      "RecommendationId": {
        "type": "string",
        "description": ""
      },
      "RecommendationResult": {
        "type": "string",
        "description": ""
      },
      "RecommendationWeight": {
        "type": "real",
        "description": ""
      },
      "SiteCode": {
        "type": "string",
        "description": ""
      },
      "SiteServer": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "Technology": {
        "type": "string",
        "description": ""
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "SCGPoolExecutionLog": {
    "tableName": "SCGPoolExecutionLog",
    "description": "Contains Execution Logs for a StandbyContainerGroupPool, which can be used for audit and troubleshooting.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ErrorMessage": {
        "type": "string",
        "description": "The message associated with an error that occurred during the operation."
      },
      "EventName": {
        "type": "string",
        "description": "The event that occurred during the operation."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Location": {
        "type": "string",
        "description": "The region where the event occurred during the operation."
      },
      "Message": {
        "type": "string",
        "description": "A non-Error message associated with an event that occurred during the"
      },
      "OperationName": {
        "type": "string",
        "description": "The resource operation name for the log."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Time (UTC) when the log was created."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "SCGPoolRequestLog": {
    "tableName": "SCGPoolRequestLog",
    "description": "Contains Request Logs for a StandbyContainerGroupPool, which can be used for audit and troubleshooting.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "EventName": {
        "type": "string",
        "description": "The event that occurred during the operation."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Location": {
        "type": "string",
        "description": "The region where the event occurred during the operation."
      },
      "NewMaxCapacity": {
        "type": "int",
        "description": "The new maximum number of containers for the standbypool as set by"
      },
      "NewMinCapacity": {
        "type": "int",
        "description": "The new minimum number of containers for the standbypool as set by"
      },
      "NewResourceState": {
        "type": "string",
        "description": "The new resource state for the containers in the standbypool as set by"
      },
      "OperationName": {
        "type": "string",
        "description": "The resource operation name for the log."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Time (UTC) when the log was created."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "SCOMAssessmentRecommendation": {
    "tableName": "SCOMAssessmentRecommendation",
    "description": "Recommendations generated by SCOM assessments that are started through a scheduled task. When you schedule the assessment it runs by default every 7 days and upload the data into Azure Log Analytics",
    "columns": {
      "ActionArea": {
        "type": "string",
        "description": ""
      },
      "ActionAreaId": {
        "type": "string",
        "description": ""
      },
      "AffectedObjectName": {
        "type": "string",
        "description": ""
      },
      "AffectedObjectType": {
        "type": "string",
        "description": ""
      },
      "AssessmentId": {
        "type": "string",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Computer": {
        "type": "string",
        "description": ""
      },
      "CustomData": {
        "type": "string",
        "description": ""
      },
      "DatabaseName": {
        "type": "string",
        "description": ""
      },
      "Description": {
        "type": "string",
        "description": ""
      },
      "FocusArea": {
        "type": "string",
        "description": ""
      },
      "FocusAreaId": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "ManagementGroupName": {
        "type": "string",
        "description": ""
      },
      "Recommendation": {
        "type": "string",
        "description": ""
      },
      "RecommendationId": {
        "type": "string",
        "description": ""
      },
      "RecommendationResult": {
        "type": "string",
        "description": ""
      },
      "RecommendationWeight": {
        "type": "real",
        "description": ""
      },
      "Server": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "SqlInstanceName": {
        "type": "string",
        "description": ""
      },
      "Technology": {
        "type": "string",
        "description": ""
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "SPAssessmentRecommendation": {
    "tableName": "SPAssessmentRecommendation",
    "description": "Recommendations generated by SP assessments that are started through a scheduled task. When you schedule the assessment it runs by default every 7 days and upload the data into Azure Log Analytics",
    "columns": {
      "ActionArea": {
        "type": "string",
        "description": ""
      },
      "ActionAreaId": {
        "type": "string",
        "description": ""
      },
      "AffectedObjectName": {
        "type": "string",
        "description": ""
      },
      "AffectedObjectType": {
        "type": "string",
        "description": ""
      },
      "AssessmentId": {
        "type": "string",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Computer": {
        "type": "string",
        "description": ""
      },
      "CustomData": {
        "type": "string",
        "description": ""
      },
      "DatabaseName": {
        "type": "string",
        "description": ""
      },
      "Description": {
        "type": "string",
        "description": ""
      },
      "Farm": {
        "type": "string",
        "description": ""
      },
      "FocusArea": {
        "type": "string",
        "description": ""
      },
      "FocusAreaId": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Recommendation": {
        "type": "string",
        "description": ""
      },
      "RecommendationId": {
        "type": "string",
        "description": ""
      },
      "RecommendationResult": {
        "type": "string",
        "description": ""
      },
      "RecommendationWeight": {
        "type": "real",
        "description": ""
      },
      "Server": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "Technology": {
        "type": "string",
        "description": ""
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "WebApplication": {
        "type": "string",
        "description": ""
      }
    }
  },
  "SQLAssessmentRecommendation": {
    "tableName": "SQLAssessmentRecommendation",
    "description": "Recommendations generated by SQL assessments that are started through a scheduled task. When you schedule the assessment it runs by default every 7 days and upload the data into Azure Log Analytics",
    "columns": {
      "ActionArea": {
        "type": "string",
        "description": ""
      },
      "ActionAreaId": {
        "type": "string",
        "description": ""
      },
      "AffectedObjectName": {
        "type": "string",
        "description": ""
      },
      "AffectedObjectResult": {
        "type": "string",
        "description": ""
      },
      "AffectedObjectType": {
        "type": "string",
        "description": ""
      },
      "AssessmentId": {
        "type": "string",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Computer": {
        "type": "string",
        "description": ""
      },
      "CustomData": {
        "type": "string",
        "description": ""
      },
      "DatabaseName": {
        "type": "string",
        "description": ""
      },
      "Description": {
        "type": "string",
        "description": ""
      },
      "FocusArea": {
        "type": "string",
        "description": ""
      },
      "FocusAreaId": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Recommendation": {
        "type": "string",
        "description": ""
      },
      "RecommendationId": {
        "type": "string",
        "description": ""
      },
      "RecommendationResult": {
        "type": "string",
        "description": ""
      },
      "RecommendationWeight": {
        "type": "real",
        "description": ""
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "SqlInstanceName": {
        "type": "string",
        "description": ""
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "Technology": {
        "type": "string",
        "description": ""
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "SQLSecurityAuditEvents": {
    "tableName": "SQLSecurityAuditEvents",
    "description": "Azure Synapse SQL Audit Log.",
    "columns": {
      "ActionId": {
        "type": "string",
        "description": "ID of the audit action."
      },
      "ActionName": {
        "type": "string",
        "description": "The name of the audit action."
      },
      "AdditionalInformation": {
        "type": "string",
        "description": "Unique information that only applies to a single event is"
      },
      "AffectedRows": {
        "type": "long",
        "description": "Number of rows affected by the executed statement."
      },
      "ApplicationName": {
        "type": "string",
        "description": "Name of client application which executed the statement that"
      },
      "AuditSchemaVersion": {
        "type": "int",
        "description": "The audit logs schema version."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The category of the log."
      },
      "ClassType": {
        "type": "string",
        "description": "The type of auditable entity that the audit occurs on."
      },
      "ClassTypeDescription": {
        "type": "string",
        "description": "The description of the class type."
      },
      "ClientIp": {
        "type": "string",
        "description": "Source IP of the client application"
      },
      "ClientTlsVersion": {
        "type": "int",
        "description": "Client TLS version"
      },
      "ConnectionId": {
        "type": "string",
        "description": "ID of the connection in the server."
      },
      "DatabaseName": {
        "type": "string",
        "description": "The database context in which the action occurred."
      },
      "DatabasePrincipalId": {
        "type": "int",
        "description": "ID of the database user context that the action is performed"
      },
      "DatabasePrincipalName": {
        "type": "string",
        "description": "Current user."
      },
      "DataSensitivityInformation": {
        "type": "string",
        "description": "Information types and sensitivity labels returned by the"
      },
      "DurationMs": {
        "type": "long",
        "description": "Query execution duration in milliseconds."
      },
      "EventId": {
        "type": "string",
        "description": "unique Guid identifying each audit event."
      },
      "EventTime": {
        "type": "datetime",
        "description": "The time (UTC) the event was fired at."
      },
      "HostName": {
        "type": "string",
        "description": "The host name."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "IsColumnPermission": {
        "type": "bool",
        "description": "Flag indicating if this is a column level permission."
      },
      "IsServerLevelAudit": {
        "type": "bool",
        "description": "Boolean indicating whether this was generated from a server"
      },
      "LogicalServerName": {
        "type": "string",
        "description": "Logical server name."
      },
      "ObjectId": {
        "type": "int",
        "description": "The ID of the entity on which the audit occurred."
      },
      "ObjectName": {
        "type": "string",
        "description": "The name of the entity on which the audit occurred."
      },
      "PermissionBitmask": {
        "type": "string",
        "description": "In some actions, this is the permissions that were grant,"
      },
      "ResourceGroup": {
        "type": "string",
        "description": "Resource group of the SQL resoruce."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "ResponseRows": {
        "type": "long",
        "description": "Number of rows returned in the result set."
      },
      "SchemaName": {
        "type": "string",
        "description": "The schema context in which the action occurred."
      },
      "SecurableClassType": {
        "type": "string",
        "description": "The type of auditable entity that the audit occurs on."
      },
      "SequenceGroupId": {
        "type": "string",
        "description": "Unique identifier."
      },
      "SequenceNumber": {
        "type": "int",
        "description": "Tracks the sequence of records within a single audit record"
      },
      "ServerPrincipalId": {
        "type": "int",
        "description": "ID of the login context that the action is performed in."
      },
      "ServerPrincipalName": {
        "type": "string",
        "description": "Current login. Is nullable."
      },
      "ServerPrincipalSid": {
        "type": "string",
        "description": "Current login SID."
      },
      "SessionContext": {
        "type": "string",
        "description": "The Session context key value content. provided as an XML."
      },
      "SessionId": {
        "type": "int",
        "description": "ID of the session on which the event occurred."
      },
      "SessionServerPrincipalName": {
        "type": "string",
        "description": "Server principal for session. Is nullable. Returns the identity of"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "Statement": {
        "type": "string",
        "description": "TSQL statement if it exists."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "Succeeded": {
        "type": "bool",
        "description": "Indicates whether the action that triggered the event"
      },
      "TargetDatabasePrincipalId": {
        "type": "int",
        "description": "The database principal the GRANT/DENY/REVOKE operation"
      },
      "TargetDatabasePrincipalName": {
        "type": "string",
        "description": "Target user of action."
      },
      "TargetServerPrincipalId": {
        "type": "int",
        "description": "Server principal that the GRANT/DENY/REVOKE operation is"
      },
      "TargetServerPrincipalName": {
        "type": "string",
        "description": "Target login of action."
      },
      "TargetServerPrincipalSid": {
        "type": "string",
        "description": "SID of target login."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "TransactionId": {
        "type": "long",
        "description": "Unique identifier to identify multiple audit events in one"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserDefinedEventId": {
        "type": "int",
        "description": "User defined event id passed as an argument to"
      },
      "UserDefinedInformation": {
        "type": "string",
        "description": "Used to record any extra information the user wants to record"
      }
    }
  },
  "SVMPoolExecutionLog": {
    "tableName": "SVMPoolExecutionLog",
    "description": "Contains Execution Logs for a StandbyVirtualMachinePool, which can be used for audit and troubleshooting.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ErrorMessage": {
        "type": "string",
        "description": "The message associated with an error that occurred during the operation."
      },
      "EventName": {
        "type": "string",
        "description": "The event that occurred during the operation."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Location": {
        "type": "string",
        "description": "The region where the event occurred during the operation."
      },
      "Message": {
        "type": "string",
        "description": "A non-Error message associated with an event that occurred during the"
      },
      "OperationName": {
        "type": "string",
        "description": "The resource operation name for the log."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Time (UTC) when the log was created."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "SVMPoolRequestLog": {
    "tableName": "SVMPoolRequestLog",
    "description": "Contains Request Logs for a StandbyVirtualMachinePool, which can be used for audit and troubleshooting.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "EventName": {
        "type": "string",
        "description": "The event that occurred during the operation."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Location": {
        "type": "string",
        "description": "The region where the event occurred during the operation."
      },
      "NewMaxCapacity": {
        "type": "int",
        "description": "The new maximum number of vms for the standbypool as set by the"
      },
      "NewMinCapacity": {
        "type": "int",
        "description": "The new minimum number of vms for the standbypool as set by the user."
      },
      "NewResourceState": {
        "type": "string",
        "description": "The new resource state for the vms in the standbypool as set by the user."
      },
      "OperationName": {
        "type": "string",
        "description": "The resource operation name for the log."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Time (UTC) when the log was created."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "SecureScoreControls": {
    "tableName": "SecureScoreControls",
    "description": "Azure Security Center Secure Score per control. A control is a logical group of related security recommendations, its secure score reflects the security posture per the control.",
    "columns": {
      "AssessedResourceId": {
        "type": "string",
        "description": "The ID of the assessed resource"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ControlId": {
        "type": "string",
        "description": "The ID of the assessed control"
      },
      "ControlName": {
        "type": "string",
        "description": "The display name of the control"
      },
      "ControlType": {
        "type": "string",
        "description": "The type of security control (for example, BuiltIn)"
      },
      "CurrentScore": {
        "type": "real",
        "description": "The current secure score per control"
      },
      "Description": {
        "type": "string",
        "description": "The description of the control"
      },
      "Environment": {
        "type": "string",
        "description": "Data source environment."
      },
      "HealthyResources": {
        "type": "int",
        "description": "The number of healthy resources"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "IsSnapshot": {
        "type": "bool",
        "description": "Indicates whether the data was exported as part of a snapshot"
      },
      "MaxScore": {
        "type": "int",
        "description": "The maximum control score"
      },
      "NotApplicableResources": {
        "type": "int",
        "description": "The number of not applicable resources"
      },
      "PercentageScore": {
        "type": "real",
        "description": "The percentage of the score (current score divided by max"
      },
      "Properties": {
        "type": "dynamic",
        "description": "The complete set of metadata."
      },
      "RecommendationResourceIds": {
        "type": "dynamic",
        "description": "The recommendation resource IDs for the recommendations"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "ResourceProviderType": {
        "type": "string",
        "description": "Resource provider type of the assessed resource"
      },
      "SecureScoresSubscriptionId": {
        "type": "string",
        "description": "The ID of the subscription"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The (UTC) date and time the control score was generated"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UnhealthyResources": {
        "type": "int",
        "description": "The number of unhealthy resources"
      },
      "Weight": {
        "type": "long",
        "description": "The weight for calculation of an aggregated score for several"
      }
    }
  },
  "SecureScores": {
    "tableName": "SecureScores",
    "description": "Azure Security Center overall Secure Scores per subscription.",
    "columns": {
      "AssessedResourceId": {
        "type": "string",
        "description": "The ID of the assessed resource"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CurrentScore": {
        "type": "real",
        "description": "The current secure score per control"
      },
      "DisplayName": {
        "type": "string",
        "description": "The initiative s name"
      },
      "Environment": {
        "type": "string",
        "description": "Data source environment."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable"
      },
      "IsSnapshot": {
        "type": "bool",
        "description": "Indicates whether the data was exported as part of a snapshot"
      },
      "MaxScore": {
        "type": "int",
        "description": "The maximum control score"
      },
      "PercentageScore": {
        "type": "real",
        "description": "The percentage of the score (current score divided by max"
      },
      "Properties": {
        "type": "dynamic",
        "description": "The complete set of metadata."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "ResourceProviderType": {
        "type": "string",
        "description": "Resource provider type of the assessed resource"
      },
      "SecureScoresSubscriptionId": {
        "type": "string",
        "description": "The ID of the subscription"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The (UTC) date and time the control score was generated"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "Weight": {
        "type": "long",
        "description": "The weight for calculation of an aggregated score for several"
      }
    }
  },
  "SecurityAttackPathData": {
    "tableName": "SecurityAttackPathData",
    "description": "This tables contains attack paths that are being generated by Microsoft Defender for Cloud in order to detect potential breach paths of attackers to your cloud environment.",
    "columns": {
      "AdditionalRemediationSteps": {
        "type": "string",
        "description": "The manual remediation steps of the attack path."
      },
      "Assessments": {
        "type": "dynamic",
        "description": "The assessments mapped to the attack path."
      },
      "AttackPathId": {
        "type": "string",
        "description": "The ID of the attack path."
      },
      "AttackStory": {
        "type": "string",
        "description": "The attack story."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Description": {
        "type": "string",
        "description": "The description of the attack path."
      },
      "DisplayName": {
        "type": "string",
        "description": "The display name of the attack path."
      },
      "EntrypointId": {
        "type": "string",
        "description": "The ID of the attack path enry point."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable"
      },
      "Mitre": {
        "type": "string",
        "description": "MITRE mapping of the path."
      },
      "Path": {
        "type": "dynamic",
        "description": "The nodes, edges & insights that create the path."
      },
      "PotentialImpact": {
        "type": "string",
        "description": "The potenrial impact of the attack path."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "RiskFactors": {
        "type": "dynamic",
        "description": "The risk factors of the attack path."
      },
      "RiskLevel": {
        "type": "string",
        "description": "The risk level of the attack path."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TargetId": {
        "type": "string",
        "description": "The ID of the attack path target."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The date and time the attack path was exported."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "SecurityBaseline": {
    "tableName": "SecurityBaseline",
    "description": "",
    "columns": {
      "ActualResult": {
        "type": "string",
        "description": ""
      },
      "AnalyzeOperation": {
        "type": "string",
        "description": ""
      },
      "AnalyzeResult": {
        "type": "string",
        "description": ""
      },
      "AssessmentId": {
        "type": "string",
        "description": ""
      },
      "AzId": {
        "type": "string",
        "description": ""
      },
      "BaselineRuleType": {
        "type": "string",
        "description": ""
      },
      "BaselineType": {
        "type": "string",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CceId": {
        "type": "string",
        "description": ""
      },
      "Computer": {
        "type": "string",
        "description": ""
      },
      "ComputerEnvironment": {
        "type": "string",
        "description": ""
      },
      "Description": {
        "type": "string",
        "description": ""
      },
      "ExpectedResult": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "ManagementGroupName": {
        "type": "string",
        "description": ""
      },
      "OSName": {
        "type": "string",
        "description": ""
      },
      "Resource": {
        "type": "string",
        "description": ""
      },
      "ResourceGroup": {
        "type": "string",
        "description": ""
      },
      "ResourceId": {
        "type": "string",
        "description": ""
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "ResourceProvider": {
        "type": "string",
        "description": ""
      },
      "ResourceType": {
        "type": "string",
        "description": ""
      },
      "RuleSetting": {
        "type": "string",
        "description": ""
      },
      "RuleSeverity": {
        "type": "string",
        "description": ""
      },
      "SitePath": {
        "type": "string",
        "description": ""
      },
      "SourceComputerId": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "SubscriptionId": {
        "type": "string",
        "description": ""
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "SecurityBaselineSummary": {
    "tableName": "SecurityBaselineSummary",
    "description": "",
    "columns": {
      "AssessmentId": {
        "type": "string",
        "description": ""
      },
      "BaselineType": {
        "type": "string",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Computer": {
        "type": "string",
        "description": ""
      },
      "ComputerEnvironment": {
        "type": "string",
        "description": ""
      },
      "CriticalFailedRules": {
        "type": "int",
        "description": ""
      },
      "InformationalFailedRules": {
        "type": "int",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "ManagementGroupName": {
        "type": "string",
        "description": ""
      },
      "OSName": {
        "type": "string",
        "description": ""
      },
      "PercentageOfPassedRules": {
        "type": "int",
        "description": ""
      },
      "Resource": {
        "type": "string",
        "description": ""
      },
      "ResourceGroup": {
        "type": "string",
        "description": ""
      },
      "ResourceId": {
        "type": "string",
        "description": ""
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "ResourceProvider": {
        "type": "string",
        "description": ""
      },
      "ResourceType": {
        "type": "string",
        "description": ""
      },
      "SourceComputerId": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "SubscriptionId": {
        "type": "string",
        "description": ""
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "TotalAssessedRules": {
        "type": "int",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "WarningFailedRules": {
        "type": "int",
        "description": ""
      }
    }
  },
  "SecurityDetection": {
    "tableName": "SecurityDetection",
    "description": "",
    "columns": {
      "AccountsSeen": {
        "type": "int",
        "description": ""
      },
      "AlertSeverity": {
        "type": "string",
        "description": ""
      },
      "AlertTitle": {
        "type": "string",
        "description": ""
      },
      "AssociatedResource": {
        "type": "string",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ChildProcess": {
        "type": "string",
        "description": ""
      },
      "CommandLine": {
        "type": "string",
        "description": ""
      },
      "Computer": {
        "type": "string",
        "description": ""
      },
      "Description": {
        "type": "string",
        "description": ""
      },
      "DetectionID": {
        "type": "string",
        "description": ""
      },
      "Duration": {
        "type": "string",
        "description": ""
      },
      "ExtendedProperties": {
        "type": "string",
        "description": ""
      },
      "FailedAttempts": {
        "type": "int",
        "description": ""
      },
      "FullPath": {
        "type": "string",
        "description": ""
      },
      "InvalidAccountsSeen": {
        "type": "int",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "IsFirstParty": {
        "type": "bool",
        "description": ""
      },
      "LogChannel": {
        "type": "string",
        "description": ""
      },
      "OccuringDatacenter": {
        "type": "string",
        "description": ""
      },
      "OriginalSeverity": {
        "type": "string",
        "description": ""
      },
      "ParentProcess": {
        "type": "string",
        "description": ""
      },
      "ProcessName": {
        "type": "string",
        "description": ""
      },
      "Provider": {
        "type": "string",
        "description": ""
      },
      "RemediationSteps": {
        "type": "string",
        "description": ""
      },
      "ReportingSystem": {
        "type": "string",
        "description": ""
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ServiceId": {
        "type": "string",
        "description": ""
      },
      "SubjectDomainName": {
        "type": "string",
        "description": ""
      },
      "SubjectUserName": {
        "type": "string",
        "description": ""
      },
      "SubscriptionId": {
        "type": "string",
        "description": ""
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "SuccessfulLogins": {
        "type": "int",
        "description": ""
      },
      "SuspiciousProcess": {
        "type": "string",
        "description": ""
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "ValidAccountsSeen": {
        "type": "int",
        "description": ""
      }
    }
  },
  "SecurityEvent": {
    "tableName": "SecurityEvent",
    "description": "Security events collected from windows machines by Azure Security Center or Azure Sentinel.",
    "columns": {
      "AccessMask": {
        "type": "string",
        "description": "Hexadecimal mask for the requested or performed"
      },
      "Account": {
        "type": "string",
        "description": "The Security context for services or users."
      },
      "AccountDomain": {
        "type": "string",
        "description": "Subject's domain or computer name."
      },
      "AccountExpires": {
        "type": "string",
        "description": "The date when the account expires."
      },
      "AccountName": {
        "type": "string",
        "description": "The name of the account that requested the \"remove"
      },
      "AccountSessionIdentifier": {
        "type": "string",
        "description": "A unique identifier that is generated by the machine"
      },
      "AccountType": {
        "type": "string",
        "description": "Identifies whether the account is a computer account"
      },
      "Activity": {
        "type": "string",
        "description": "The descriptive title of the event occurred."
      },
      "AdditionalInfo": {
        "type": "string",
        "description": "Additional information that is provided by the source,"
      },
      "AdditionalInfo2": {
        "type": "string",
        "description": "Additional information that is provided by the source,"
      },
      "AllowedToDelegateTo": {
        "type": "string",
        "description": "The list of SPNs to which this account can present"
      },
      "Attributes": {
        "type": "string",
        "description": "Additional information about the event."
      },
      "AuditPolicyChanges": {
        "type": "string",
        "description": "Events that are generated when changes are made to"
      },
      "AuditsDiscarded": {
        "type": "int",
        "description": "Number of audit messages that were discarded."
      },
      "AuthenticationLevel": {
        "type": "int",
        "description": "Number of audit messages that were discarded."
      },
      "AuthenticationPackageName": {
        "type": "string",
        "description": "the name of loaded Authentication Package. The format"
      },
      "AuthenticationProvider": {
        "type": "string",
        "description": "The identity of the provider responsible for the"
      },
      "AuthenticationServer": {
        "type": "string",
        "description": "The server in which located the authentication provider."
      },
      "AuthenticationService": {
        "type": "int",
        "description": "The service in which located the authentication"
      },
      "AuthenticationType": {
        "type": "string",
        "description": "the type of authentication that was used for the event"
      },
      "AzureDeploymentID": {
        "type": "string",
        "description": "Azure deployment ID of the cloud service the log"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CACertificateHash": {
        "type": "string",
        "description": "The hash value of the certificate authority's (CA)"
      },
      "CalledStationID": {
        "type": "string",
        "description": "Information about the ID of the station that initiated the"
      },
      "CallerProcessId": {
        "type": "string",
        "description": "Hexadecimal Process ID of the process that attempted"
      },
      "CallerProcessName": {
        "type": "string",
        "description": "Full path and the name of the executable for the"
      },
      "CallingStationID": {
        "type": "string",
        "description": "Information about the ID of the station that initiated the"
      },
      "CAPublicKeyHash": {
        "type": "string",
        "description": "Hash value that identifies the public key of a"
      },
      "CategoryId": {
        "type": "string",
        "description": "The category of the security event that occurred (login"
      },
      "CertificateDatabaseHash": {
        "type": "string",
        "description": "Hash value that identifies the database that issued a"
      },
      "Channel": {
        "type": "string",
        "description": "The channel to which the event was logged."
      },
      "ClassId": {
        "type": "string",
        "description": "'Class Guid' attribute of device."
      },
      "ClassName": {
        "type": "string",
        "description": "'Class' attribute of device."
      },
      "ClientAddress": {
        "type": "string",
        "description": "IP address of the computer from which the TGT request"
      },
      "ClientIPAddress": {
        "type": "string",
        "description": "IP address of the computer that initiated the action that"
      },
      "ClientName": {
        "type": "string",
        "description": "computer name from which the user was reconnected."
      },
      "CommandLine": {
        "type": "string",
        "description": "The command line arguments that were passed to an"
      },
      "CompatibleIds": {
        "type": "string",
        "description": "'Compatible Ids' attribute of device. To see device"
      },
      "Computer": {
        "type": "string",
        "description": "The name of the computer on which the event occurred."
      },
      "Correlation": {
        "type": "string",
        "description": "The activity identifiers that consumers can use to group"
      },
      "DCDNSName": {
        "type": "string",
        "description": "The DNS name of the domain controller that was"
      },
      "DeviceDescription": {
        "type": "string",
        "description": "the description of the device that was involved in the"
      },
      "DeviceId": {
        "type": "string",
        "description": "The unique identifier of the device that was involved in"
      },
      "DisplayName": {
        "type": "string",
        "description": "It is a name, displayed in the address book for a"
      },
      "Disposition": {
        "type": "string",
        "description": "The event outcome/ resolution, such as whether the"
      },
      "DomainBehaviorVersion": {
        "type": "string",
        "description": "msDS-Behavior-Version domain attribute was modified."
      },
      "DomainName": {
        "type": "string",
        "description": "The name of removed trusted domain."
      },
      "DomainPolicyChanged": {
        "type": "string",
        "description": "Indicates whether any domain policies have been"
      },
      "DomainSid": {
        "type": "string",
        "description": "SID of the trust partner. This parameter might not be"
      },
      "EAPType": {
        "type": "string",
        "description": "The type of Extensible Authentication Protocol (EAP)"
      },
      "ElevatedToken": {
        "type": "string",
        "description": "A 'Yes' or 'No' flag. If 'Yes', then the session this event"
      },
      "ErrorCode": {
        "type": "int",
        "description": "Contains error code for Failure events. For Success"
      },
      "EventData": {
        "type": "string",
        "description": "Event specific data associated with the event."
      },
      "EventID": {
        "type": "int",
        "description": "The identifier that the provider used to identify the"
      },
      "EventLevelName": {
        "type": "string",
        "description": "The rendered message string of the level specified in"
      },
      "EventRecordId": {
        "type": "string",
        "description": "The record number assigned to the event when it was"
      },
      "EventSourceName": {
        "type": "string",
        "description": "The name of the software that logs the event"
      },
      "ExtendedQuarantineState": {
        "type": "string",
        "description": "The state of the network quarantine process, if"
      },
      "FailureReason": {
        "type": "string",
        "description": "textual explanation of Status field value. For this event, it"
      },
      "FileHash": {
        "type": "string",
        "description": "The hash value for any files that are were accessed or"
      },
      "FilePath": {
        "type": "string",
        "description": "Full path and filename of the key file on which the"
      },
      "FilePathNoUser": {
        "type": "string",
        "description": "The path of any files that are related to the event,"
      },
      "Filter": {
        "type": "string",
        "description": "Filters that are used in the performed event."
      },
      "ForceLogoff": {
        "type": "string",
        "description": "'\\Security Settings\\Local Policies\\Security"
      },
      "Fqbn": {
        "type": "string",
        "description": "The fully qualified binary name (FQBN) for any files that"
      },
      "FullyQualifiedSubjectMachineName": {
        "type": "string",
        "description": "The fully qualified domain name (FQDN) of the machine"
      },
      "FullyQualifiedSubjectUserName": {
        "type": "string",
        "description": "The username of the user or service that initiated the"
      },
      "GroupMembership": {
        "type": "string",
        "description": "The list of group SIDs which logged account belongs to"
      },
      "HandleId": {
        "type": "string",
        "description": "Hexadecimal value of a handle to Object Name. This"
      },
      "HardwareIds": {
        "type": "string",
        "description": "'Hardware Ids' attribute of device. To see device"
      },
      "HomeDirectory": {
        "type": "string",
        "description": "User's home directory. If homeDrive attribute is set and"
      },
      "HomePath": {
        "type": "string",
        "description": "User's home path. The path must be a network UNC of"
      },
      "InterfaceUuid": {
        "type": "string",
        "description": "The unique identifier (UUID) for the network interface"
      },
      "IpAddress": {
        "type": "string",
        "description": "the network address (usually IPv4 or IPv6) associated"
      },
      "IpPort": {
        "type": "string",
        "description": "The network port number associated with the event."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "KeyLength": {
        "type": "int",
        "description": "The length of NTLM Session Security key. Typically it has"
      },
      "Keywords": {
        "type": "string",
        "description": "A bitmask of the keywords defined in the event."
      },
      "Level": {
        "type": "string",
        "description": "Windows categorizes every event with a severity level."
      },
      "LmPackageName": {
        "type": "string",
        "description": "The name of the package or software component that is"
      },
      "LocationInformation": {
        "type": "string",
        "description": "'Location information' attribute of device. To see device"
      },
      "LockoutDuration": {
        "type": "string",
        "description": "'\\Security Settings\\Account Policies\\Account Lockout"
      },
      "LockoutObservationWindow": {
        "type": "string",
        "description": "'\\Security Settings\\Account Policies\\Account Lockout"
      },
      "LockoutThreshold": {
        "type": "string",
        "description": "'\\Security Settings\\Account Policies\\Account Lockout"
      },
      "LoggingResult": {
        "type": "string",
        "description": "The result of the logon process."
      },
      "LogonGuid": {
        "type": "string",
        "description": "A GUID that can help you correlate this event with"
      },
      "LogonHours": {
        "type": "string",
        "description": "Hours that the account is allowed to logon to the"
      },
      "LogonID": {
        "type": "string",
        "description": "Hexadecimal value that can help you correlate this"
      },
      "LogonProcessName": {
        "type": "string",
        "description": "The name of registered logon process."
      },
      "LogonType": {
        "type": "int",
        "description": "The type of logon which was performed."
      },
      "LogonTypeName": {
        "type": "string",
        "description": "The type of logon or authentication event that is being"
      },
      "MachineAccountQuota": {
        "type": "string",
        "description": "ms-DS-MachineAccountQuota domain attribute was"
      },
      "MachineInventory": {
        "type": "string",
        "description": "Information about the hardware configuration and"
      },
      "MachineLogon": {
        "type": "string",
        "description": "Information about a successful logon event in the"
      },
      "ManagementGroupName": {
        "type": "string",
        "description": "Additional information based on the resource type."
      },
      "MandatoryLabel": {
        "type": "string",
        "description": "ID of integrity label which was assigned to the new"
      },
      "MaxPasswordAge": {
        "type": "string",
        "description": "The period of time (in days) that a password can be"
      },
      "MemberName": {
        "type": "string",
        "description": "The user account that was involved in the event."
      },
      "MemberSid": {
        "type": "string",
        "description": "The security identifier (SID) associated with the user"
      },
      "MinPasswordAge": {
        "type": "string",
        "description": "The period of time (in days) that a password must be"
      },
      "MinPasswordLength": {
        "type": "string",
        "description": "The least number of characters that can make up a"
      },
      "MixedDomainMode": {
        "type": "string",
        "description": "The domain mode of a system or domain controller."
      },
      "NASIdentifier": {
        "type": "string",
        "description": "The identifier of the network access server (NAS) that"
      },
      "NASIPv4Address": {
        "type": "string",
        "description": "The IPv4Address of the network access server (NAS) that"
      },
      "NASIPv6Address": {
        "type": "string",
        "description": "The IPv6Address of the network access server (NAS) that"
      },
      "NASPort": {
        "type": "string",
        "description": "the port on the network access server that was used in"
      },
      "NASPortType": {
        "type": "string",
        "description": "the type of network access server (NAS) used in the"
      },
      "NetworkPolicyName": {
        "type": "string",
        "description": "The name of the network policy associated with the"
      },
      "NewDate": {
        "type": "string",
        "description": "New date in UTC time zone. The format is YYYY-MM-"
      },
      "NewMaxUsers": {
        "type": "string",
        "description": "The new maximum number of users allowed for a"
      },
      "NewProcessId": {
        "type": "string",
        "description": "Hexadecimal Process ID of the new process. Process ID"
      },
      "NewProcessName": {
        "type": "string",
        "description": "Full path and the name of the executable for the new"
      },
      "NewRemark": {
        "type": "string",
        "description": "The new value of network share 'Comments:' field. Has"
      },
      "NewShareFlags": {
        "type": "string",
        "description": "The share flags associated with a resource in the event,"
      },
      "NewTime": {
        "type": "string",
        "description": "New time that was set in UTC time zone. The format is"
      },
      "NewUacValue": {
        "type": "string",
        "description": "Specifies flags that control password, lockout,"
      },
      "NewValue": {
        "type": "string",
        "description": "New value for changed registry key value."
      },
      "NewValueType": {
        "type": "string",
        "description": "New type of changed registry key value."
      },
      "ObjectName": {
        "type": "string",
        "description": "Name and other identifying information for the object"
      },
      "ObjectServer": {
        "type": "string",
        "description": "Contains the name of the Windows subsystem calling"
      },
      "ObjectType": {
        "type": "string",
        "description": "The type of an object that was accessed during the"
      },
      "ObjectValueName": {
        "type": "string",
        "description": "The name of modified registry key value."
      },
      "OemInformation": {
        "type": "string",
        "description": "The original equipment manufacturer (OEM) associated"
      },
      "OldMaxUsers": {
        "type": "string",
        "description": "The previous maximum number of users allowed for a"
      },
      "OldRemark": {
        "type": "string",
        "description": "the old value of network share 'Comments:' field. Has"
      },
      "OldShareFlags": {
        "type": "string",
        "description": "The previous share flags associated with a resource in"
      },
      "OldUacValue": {
        "type": "string",
        "description": "Specifies flags that control password, lockout,"
      },
      "OldValue": {
        "type": "string",
        "description": "Old value for changed registry key value."
      },
      "OldValueType": {
        "type": "string",
        "description": "Old type of changed registry key value."
      },
      "Opcode": {
        "type": "string",
        "description": "The opcode element is defined by the"
      },
      "OperationType": {
        "type": "string",
        "description": "The type of operation which was performed on an"
      },
      "PackageName": {
        "type": "string",
        "description": "The name of the LAN Manager sub-package (NTLM-"
      },
      "ParentProcessName": {
        "type": "string",
        "description": "The name of the parent process associated with the"
      },
      "PasswordHistoryLength": {
        "type": "string",
        "description": "\\Security Settings\\Account Policies\\Password"
      },
      "PasswordLastSet": {
        "type": "string",
        "description": "Last time the account's password was modified."
      },
      "PasswordProperties": {
        "type": "string",
        "description": "The password policies or properties associated with the"
      },
      "PreviousDate": {
        "type": "string",
        "description": "The previous date associated with the event."
      },
      "PreviousTime": {
        "type": "string",
        "description": "Previous time in UTC time zone. The format is YYYY-"
      },
      "PrimaryGroupId": {
        "type": "string",
        "description": "Relative Identifier (RID) of user's object primary group."
      },
      "PrivateKeyUsageCount": {
        "type": "string",
        "description": "The number of times a private key has been used."
      },
      "PrivilegeList": {
        "type": "string",
        "description": "The privileges, including user, group, or system"
      },
      "Process": {
        "type": "string",
        "description": "The name of the process that generates the event."
      },
      "ProcessId": {
        "type": "string",
        "description": "Identifies the process that generated the event."
      },
      "ProcessName": {
        "type": "string",
        "description": "Full path and the name of the executable for the"
      },
      "ProfilePath": {
        "type": "string",
        "description": "Specifies a path to the account's profile. This value can"
      },
      "Properties": {
        "type": "string",
        "description": "Depends on Object Type. This field can be empty or"
      },
      "ProtocolSequence": {
        "type": "string",
        "description": "Information about the protocol used for an"
      },
      "ProxyPolicyName": {
        "type": "string",
        "description": "Name of the policy that was used to configure the proxy"
      },
      "QuarantineHelpURL": {
        "type": "string",
        "description": "URL that provides help with troubleshooting a network"
      },
      "QuarantineSessionID": {
        "type": "string",
        "description": "Identifier of the session where the file was assessed for"
      },
      "QuarantineSessionIdentifier": {
        "type": "string",
        "description": "Identifier of the session where the file was assessed for"
      },
      "QuarantineState": {
        "type": "string",
        "description": "It shows whether the file is quarantined."
      },
      "QuarantineSystemHealthResult": {
        "type": "string",
        "description": "Report that shows the status of the files that have been"
      },
      "RelativeTargetName": {
        "type": "string",
        "description": "Relative name of the accessed target file or folder. This"
      },
      "RemoteIpAddress": {
        "type": "string",
        "description": "The IP address of the computer that initiated a remote"
      },
      "RemotePort": {
        "type": "string",
        "description": "The port number of the remote computer that initiated"
      },
      "Requester": {
        "type": "string",
        "description": "The event requester identifier."
      },
      "RequestId": {
        "type": "string",
        "description": "A unique identifier that's associated with particular"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "RestrictedAdminMode": {
        "type": "string",
        "description": "Only populated for RemoteInteractive logon type"
      },
      "RowsDeleted": {
        "type": "string",
        "description": "The number of rows that were deleted as a part of a"
      },
      "SamAccountName": {
        "type": "string",
        "description": "logon name for account used to support clients and"
      },
      "ScriptPath": {
        "type": "string",
        "description": "Specifies the path of the account's logon script."
      },
      "SecurityDescriptor": {
        "type": "string",
        "description": "Information about the security settings and permissions"
      },
      "ServiceAccount": {
        "type": "string",
        "description": "The security context that the service will run as when"
      },
      "ServiceFileName": {
        "type": "string",
        "description": "Indicates the type of service that was registered with the"
      },
      "ServiceName": {
        "type": "string",
        "description": "The name of installed service."
      },
      "ServiceStartType": {
        "type": "int",
        "description": "Contains information about how a particular service"
      },
      "ServiceType": {
        "type": "string",
        "description": "Indicates the type of service that was registered with the"
      },
      "SessionName": {
        "type": "string",
        "description": "The name of the session to which the user was"
      },
      "ShareLocalPath": {
        "type": "string",
        "description": "The local path of accessed network share."
      },
      "ShareName": {
        "type": "string",
        "description": "The name of accessed network share. The format is:"
      },
      "SidHistory": {
        "type": "string",
        "description": "Contains previous SIDs used for the object if the object"
      },
      "SourceComputerId": {
        "type": "string",
        "description": "Unique identifier assigned to each computer in a"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For"
      },
      "Status": {
        "type": "string",
        "description": "The reason why logon failed. For this event, it typically"
      },
      "StorageAccount": {
        "type": "string",
        "description": "Sets the storage account access key."
      },
      "SubcategoryGuid": {
        "type": "string",
        "description": "The unique GUID of changed subcategory."
      },
      "SubcategoryId": {
        "type": "string",
        "description": "A unique identifier for a specific type of the event."
      },
      "Subject": {
        "type": "string",
        "description": "Information about the security principal (for instance:"
      },
      "SubjectAccount": {
        "type": "string",
        "description": "Information about the account that is initiating the"
      },
      "SubjectDomainName": {
        "type": "string",
        "description": "Information about the domain or workgroup to which"
      },
      "SubjectKeyIdentifier": {
        "type": "string",
        "description": "A unique identifier for a particular certificate subject."
      },
      "SubjectLogonId": {
        "type": "string",
        "description": "A unique identifier for the logon session associated with"
      },
      "SubjectMachineName": {
        "type": "string",
        "description": "Information about the machine or system from which"
      },
      "SubjectMachineSID": {
        "type": "string",
        "description": "The security identifier (SID) for the machine that"
      },
      "SubjectUserName": {
        "type": "string",
        "description": "The name of the user account that generated the event."
      },
      "SubjectUserSid": {
        "type": "string",
        "description": "The security identifier (SID) for the user account that"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "SubStatus": {
        "type": "string",
        "description": "Additional information about logon failure. The most"
      },
      "SystemProcessId": {
        "type": "int",
        "description": "Identifies the process that generated the event."
      },
      "SystemThreadId": {
        "type": "int",
        "description": "Identifies the thread that generated the event."
      },
      "SystemUserId": {
        "type": "string",
        "description": "The ID of the user who is responsible for the event."
      },
      "TableId": {
        "type": "string",
        "description": "The specific data table identifier the event data is stored"
      },
      "TargetAccount": {
        "type": "string",
        "description": "The account targeted by the event (user name,"
      },
      "TargetDomainName": {
        "type": "string",
        "description": "The name of the domain that the target account"
      },
      "TargetInfo": {
        "type": "string",
        "description": "Additional information about the event target (for"
      },
      "TargetLinkedLogonId": {
        "type": "string",
        "description": "Information that helps to link related events together by"
      },
      "TargetLogonGuid": {
        "type": "string",
        "description": "A globally unique identifier (GUID) associated with the"
      },
      "TargetLogonId": {
        "type": "string",
        "description": "A unique identifier associated with the logon session"
      },
      "TargetOutboundDomainName": {
        "type": "string",
        "description": "The domain that the account specified in the"
      },
      "TargetOutboundUserName": {
        "type": "string",
        "description": "The name of the user account that was authenticated"
      },
      "TargetServerName": {
        "type": "string",
        "description": "The name of the server on which the new process was"
      },
      "TargetSid": {
        "type": "string",
        "description": "The security identifier (SID) of the server on which the"
      },
      "TargetUser": {
        "type": "string",
        "description": "The user account identifier that generated the new"
      },
      "TargetUserName": {
        "type": "string",
        "description": "The name of the user account that generated the new"
      },
      "TargetUserSid": {
        "type": "string",
        "description": "The security identifier (SID) associated with the user or"
      },
      "Task": {
        "type": "int",
        "description": "The task defined in the event."
      },
      "TemplateContent": {
        "type": "string",
        "description": "The content of the event message or notification in a"
      },
      "TemplateDSObjectFQDN": {
        "type": "string",
        "description": "FQDN of the DS object that represents the GPO"
      },
      "TemplateInternalName": {
        "type": "string",
        "description": "The internal name of the GPO template."
      },
      "TemplateOID": {
        "type": "string",
        "description": "the unique identifier for the template that was used to"
      },
      "TemplateSchemaVersion": {
        "type": "string",
        "description": "Version of the template schema that defines the data to"
      },
      "TemplateVersion": {
        "type": "string",
        "description": "Version of the template that defines the data to include"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The time stamp when the event was generated on the"
      },
      "TokenElevationType": {
        "type": "string",
        "description": "Type of token that was assigned to a new process in"
      },
      "TransmittedServices": {
        "type": "string",
        "description": "The list of transmitted services. Transmitted services are"
      },
      "an": {
        "type": "int",
        "description": "ernal resource on behalf of a user. For more"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAccountControl": {
        "type": "string",
        "description": "Shows the list of changes in userAccountControl"
      },
      "UserParameters": {
        "type": "string",
        "description": "If you change any setting using Active Directory Users"
      },
      "UserPrincipalName": {
        "type": "string",
        "description": "Internet-style login name for the account, based on the"
      },
      "UserWorkstations": {
        "type": "string",
        "description": "Contains the list of NetBIOS or DNS names of the"
      },
      "VendorIds": {
        "type": "string",
        "description": "'Hardware Ids' attribute of device. To see device"
      },
      "Version": {
        "type": "int",
        "description": "Contains the version number of the event's definition."
      },
      "VirtualAccount": {
        "type": "string",
        "description": "A 'Yes' or 'No' flag, which indicates if the account is a"
      },
      "was": {
        "type": "int",
        "description": "roduced in Windows 7 and Windows Server 2008"
      },
      "Workstation": {
        "type": "string",
        "description": "The name of the machine that was used to perform the"
      },
      "WorkstationName": {
        "type": "string",
        "description": "Machine name from which a logon attempt was"
      }
    }
  },
  "SecurityIncident": {
    "tableName": "SecurityIncident",
    "description": "Incidents generated by security products.",
    "columns": {
      "AdditionalData": {
        "type": "dynamic",
        "description": "Additional data on the incident"
      },
      "AlertIds": {
        "type": "dynamic",
        "description": "The IDs of the alerts related to the incident"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "BookmarkIds": {
        "type": "dynamic",
        "description": "The IDs of the bookmarks related to the incident"
      },
      "Classification": {
        "type": "string",
        "description": "The classification the incident was given when closed"
      },
      "ClassificationComment": {
        "type": "string",
        "description": "Description of the reason the incident was closed"
      },
      "ClassificationReason": {
        "type": "string",
        "description": "The classification reason the incident was given when closed"
      },
      "ClosedTime": {
        "type": "datetime",
        "description": "Timestamp (UTC) of when the incident was last closed"
      },
      "Comments": {
        "type": "dynamic",
        "description": "The comments added to the incident"
      },
      "CreatedTime": {
        "type": "datetime",
        "description": "Timestamp (UTC) of when the incident was created"
      },
      "Description": {
        "type": "string",
        "description": "The description of the incident"
      },
      "FirstActivityTime": {
        "type": "datetime",
        "description": "Timestamp (UTC) of when the first activity in the incident occured"
      },
      "FirstModifiedTime": {
        "type": "datetime",
        "description": "Timestamp (UTC) of when the incident was first modified"
      },
      "IncidentName": {
        "type": "string",
        "description": "The resource name of the incident"
      },
      "IncidentNumber": {
        "type": "int",
        "description": "The sequential number of the incident"
      },
      "IncidentUrl": {
        "type": "string",
        "description": "The URI to open the incident in Azure Sentinel portal"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Labels": {
        "type": "dynamic",
        "description": "The labels added to the incident"
      },
      "LastActivityTime": {
        "type": "datetime",
        "description": "Timestamp (UTC) of when the last activity in the incident occured"
      },
      "LastModifiedTime": {
        "type": "datetime",
        "description": "Timestamp (UTC) of when the incident was last modified"
      },
      "ModifiedBy": {
        "type": "string",
        "description": "The source of the change in the incident"
      },
      "Owner": {
        "type": "dynamic",
        "description": "The user the incident is assigned to"
      },
      "ProviderIncidentId": {
        "type": "string",
        "description": "The incident ID assigned by the incident provider"
      },
      "ProviderName": {
        "type": "string",
        "description": "The name of the source provider that generated the incident"
      },
      "RelatedAnalyticRuleIds": {
        "type": "dynamic",
        "description": "The IDs of the Analytic rules associated with the incident"
      },
      "Severity": {
        "type": "string",
        "description": "The severity of the incident"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "Status": {
        "type": "string",
        "description": "The status of the incident"
      },
      "Tasks": {
        "type": "dynamic",
        "description": "The tasks added to the incident"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (UTC) of when the incident was ingested"
      },
      "Title": {
        "type": "string",
        "description": "The title of the incident"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "SecurityIoTRawEvent": {
    "tableName": "SecurityIoTRawEvent",
    "description": "Table is part of Microsoft Defender for IoT. It contains IoT raw security event properties. These logs can be used to monitor your operational, diagnostic and security raw events.",
    "columns": {
      "AgentVersion": {
        "type": "string",
        "description": "The version of the agent."
      },
      "AssociatedResourceId": {
        "type": "string",
        "description": "The associated Azure resource ID."
      },
      "AzureSubscriptionId": {
        "type": "string",
        "description": "The Azure subscription ID."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DeviceId": {
        "type": "string",
        "description": "The device ID."
      },
      "EventDetails": {
        "type": "string",
        "description": "Additional raw event details."
      },
      "IoTRawEventId": {
        "type": "string",
        "description": "The internal raw event ID."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "IsEmpty": {
        "type": "bool",
        "description": "Property identifying if the raw event contains data."
      },
      "RawEventCategory": {
        "type": "string",
        "description": "The category of the raw event - periodic or triggered."
      },
      "RawEventName": {
        "type": "string",
        "description": "The name of the raw event."
      },
      "RawEventType": {
        "type": "string",
        "description": "The type of the raw event - security, operational or diagnostic."
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The date and time the raw event was generated."
      },
      "TimeStamp": {
        "type": "datetime",
        "description": "The date and time the raw event was first detected."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "SecurityNestedRecommendation": {
    "tableName": "SecurityNestedRecommendation",
    "description": "Nested recommendations can be thought of as 'sub' recommendations grouped into a 'parent' recommendation. To view nested recommendations, open the 'parent' from the recommendations page in Security Center. For example, if a vulnerability scan of your SQL databases returns 100 findings, each finding will be available as a nested recommendation within the parent recommendation 'Vulnerabilities on your SQL databases should be remediated'.",
    "columns": {
      "AdditionalData": {
        "type": "dynamic",
        "description": "Additional details of the sub-assessment"
      },
      "AssessedResourceId": {
        "type": "string",
        "description": "Id of the assessed resource"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "Category of the sub-assessment"
      },
      "Cause": {
        "type": "string",
        "description": "Cause of the assessment status"
      },
      "Description": {
        "type": "string",
        "description": "Description of the assessment status"
      },
      "Id": {
        "type": "string",
        "description": "Id of the assessed recommendation"
      },
      "Impact": {
        "type": "string",
        "description": "Description of the impact of this sub-assessment"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "IsSnapshot": {
        "type": "bool",
        "description": "Indicates whether the data was exported as part of a"
      },
      "NestedRecommendationId": {
        "type": "string",
        "description": "Id of the nested-recommendation"
      },
      "ParentRecommendationId": {
        "type": "string",
        "description": "Id of the parent recommendation"
      },
      "RecommendationLink": {
        "type": "string",
        "description": "Recommendation link URL"
      },
      "RecommendationName": {
        "type": "string",
        "description": "Display name of the sub-assessment"
      },
      "RecommendationSeverity": {
        "type": "string",
        "description": "The sub-assessment severity level"
      },
      "RecommendationState": {
        "type": "string",
        "description": "The sub-assessment state"
      },
      "RecommendationSubscriptionId": {
        "type": "string",
        "description": "Recommendation's subscription Id"
      },
      "RemediationDescription": {
        "type": "string",
        "description": "Information on how to remediate this sub-assessment"
      },
      "RemidiationDescription": {
        "type": "string",
        "description": "Information on how to remediate this sub-assessment"
      },
      "ResourceDetails": {
        "type": "dynamic",
        "description": "Details of the resource that was assessed"
      },
      "ResourceGroup": {
        "type": "string",
        "description": "Resource group name"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "ResourceProviderType": {
        "type": "string",
        "description": "Resource provider type of the assessed resource"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "SubAssessmentTimeGeneration": {
        "type": "datetime",
        "description": "The date and time the sub-assessment was generated"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The date and time the sub-assessment was exported"
      },
      "Type": {
        "type": "string",
        "description": "Resource type"
      },
      "VulnerabilityId": {
        "type": "string",
        "description": "Vulnerability Id"
      }
    }
  },
  "SecurityRecommendation": {
    "tableName": "SecurityRecommendation",
    "description": "",
    "columns": {
      "AssessedResourceId": {
        "type": "string",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Description": {
        "type": "string",
        "description": ""
      },
      "DeviceId": {
        "type": "string",
        "description": ""
      },
      "DiscoveredTimeUTC": {
        "type": "datetime",
        "description": ""
      },
      "Environment": {
        "type": "string",
        "description": ""
      },
      "FirstEvaluationDate": {
        "type": "datetime",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "IsSnapshot": {
        "type": "bool",
        "description": ""
      },
      "PolicyDefinitionId": {
        "type": "string",
        "description": ""
      },
      "Properties": {
        "type": "dynamic",
        "description": ""
      },
      "ProviderName": {
        "type": "string",
        "description": ""
      },
      "RecommendationAdditionalData": {
        "type": "dynamic",
        "description": ""
      },
      "RecommendationDisplayName": {
        "type": "string",
        "description": ""
      },
      "RecommendationId": {
        "type": "string",
        "description": ""
      },
      "RecommendationName": {
        "type": "string",
        "description": ""
      },
      "RecommendationSeverity": {
        "type": "string",
        "description": ""
      },
      "RecommendationState": {
        "type": "string",
        "description": ""
      },
      "ResolvedTimeUTC": {
        "type": "datetime",
        "description": ""
      },
      "ResourceRegion": {
        "type": "string",
        "description": ""
      },
      "StatusChangeDate": {
        "type": "datetime",
        "description": ""
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "SecurityRegulatoryCompliance": {
    "tableName": "SecurityRegulatoryCompliance",
    "description": "Azure Security Center regulatory compliance assessments state.",
    "columns": {
      "AssessedResourceId": {
        "type": "string",
        "description": "The ID of the assessed resource"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ComplianceControl": {
        "type": "string",
        "description": "The name of regulatory compliance control"
      },
      "ComplianceStandard": {
        "type": "string",
        "description": "The name of compliance standard"
      },
      "FailedResources": {
        "type": "int",
        "description": "The number of resources that failed this assessment"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "IsSnapshot": {
        "type": "bool",
        "description": "Indicates whether the data was exported as part of a"
      },
      "PassedResources": {
        "type": "int",
        "description": "The number of resources that passed this assessment"
      },
      "Properties": {
        "type": "dynamic",
        "description": "The complete set of metadata."
      },
      "RecommendationId": {
        "type": "string",
        "description": "The ID of the assessed recommendation"
      },
      "RecommendationLink": {
        "type": "string",
        "description": "A link for more details on the assessment result"
      },
      "RecommendationName": {
        "type": "string",
        "description": "Recommendation display name"
      },
      "RegulatoryComplianceSubscriptionId": {
        "type": "string",
        "description": "The subscription ID of the assessed resource"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "ResourceProviderType": {
        "type": "string",
        "description": "Resource provider type of the assessed resource"
      },
      "SkippedResources": {
        "type": "int",
        "description": "The number of resources that passed this assessment"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For"
      },
      "State": {
        "type": "string",
        "description": "The assessment state"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The (UTC) date and time the assessment was"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "SentinelAudit": {
    "tableName": "SentinelAudit",
    "description": "Audit logs for operations performed on Azure Sentinel resources, such as Data Connectors, Analytic Rules and more. These logs can be used to audit operations on your Sentinel resources.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CorrelationId": {
        "type": "string",
        "description": "A unique record identifier."
      },
      "Description": {
        "type": "string",
        "description": "Description of the behavior."
      },
      "ExtendedProperties": {
        "type": "dynamic",
        "description": "Additional information based on the resource type."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation that triggered the event."
      },
      "SentinelResourceId": {
        "type": "string",
        "description": "The Sentinel resource ID."
      },
      "SentinelResourceKind": {
        "type": "string",
        "description": "The resource kind, for example: connector kind (such as Office365,"
      },
      "SentinelResourceName": {
        "type": "string",
        "description": "The Sentinel resource name."
      },
      "SentinelResourceType": {
        "type": "string",
        "description": "The resource type, for example: DataConnector, AlertRule, etc."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "Status": {
        "type": "string",
        "description": "Status of the operation, for example: Success, Failure, Warning,"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time when the record was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "WorkspaceId": {
        "type": "string",
        "description": "The workspace ID."
      },
      "AccountDomain": {
        "type": "string",
        "description": "Domain of the account."
      },
      "AccountName": {
        "type": "string",
        "description": "User name of the account."
      },
      "AccountObjectId": {
        "type": "string",
        "description": "Unique identifier for the account in Microsoft Entra ID."
      },
      "AccountSid": {
        "type": "string",
        "description": "Security Identifier (SID) of the account."
      },
      "AccountUpn": {
        "type": "string",
        "description": "User principal name (UPN) of the account."
      },
      "ActionType": {
        "type": "string",
        "description": "Type of behavior."
      },
      "AdditionalFields": {
        "type": "string",
        "description": "Additional information about the entity or event."
      },
      "Application": {
        "type": "string",
        "description": "Application that performed the recorded action."
      },
      "ApplicationId": {
        "type": "string",
        "description": "Unique identifier for the application."
      },
      "BehaviorId": {
        "type": "string",
        "description": "Unique identifier for the behavior."
      },
      "Categories": {
        "type": "string",
        "description": "Types of threat indicator or breach activity identified by the behavior."
      },
      "CloudPlatform": {
        "type": "string",
        "description": "The cloud platform that the resource belongs to, can be Azure,"
      },
      "CloudResource": {
        "type": "string",
        "description": "Cloud resource name."
      },
      "CloudResourceId": {
        "type": "string",
        "description": "Unique identifier of the cloud resource accessed."
      },
      "CloudResourceType": {
        "type": "string",
        "description": "Type of cloud resource."
      },
      "CloudSubscriptionId": {
        "type": "string",
        "description": "Unique identifier of the cloud service subscription."
      },
      "DataSources": {
        "type": "string",
        "description": "Products or services that provided information for the behavior."
      },
      "DetailedEntityRole": {
        "type": "string",
        "description": "The role of the entity in the behavior."
      },
      "DetectionSource": {
        "type": "string",
        "description": "Detection technology or sensor that identified the notable component or"
      },
      "DeviceId": {
        "type": "string",
        "description": "Unique identifier for the device in the service."
      },
      "DeviceName": {
        "type": "string",
        "description": "Fully qualified domain name (FQDN) of the device."
      },
      "EmailClusterId": {
        "type": "string",
        "description": "Identifier for the group of similar emails clustered based on heuristic"
      },
      "EmailSubject": {
        "type": "string",
        "description": "Subject of the email."
      },
      "EntityRole": {
        "type": "string",
        "description": "Indicates whether the entity is impacted or merely related."
      },
      "EntityType": {
        "type": "string",
        "description": "Type of object, such as a file, a process, a device, or a user."
      },
      "FileName": {
        "type": "string",
        "description": "Name of the file that the behavior applies to."
      },
      "FileSize": {
        "type": "long",
        "description": "Size, in bytes, of the file that the behavior applies to."
      },
      "FolderPath": {
        "type": "string",
        "description": "Folder containing the file that the behavior applies to."
      },
      "LocalIP": {
        "type": "string",
        "description": "IP address assigned to the local machine used during communication."
      },
      "NetworkMessageId": {
        "type": "string",
        "description": "Unique identifier for the email in UUID format, generated by Office"
      },
      "OAuthApplicationId": {
        "type": "string",
        "description": "Unique identifier of the third-party OAuth application in UUID format."
      },
      "ProcessCommandLine": {
        "type": "string",
        "description": "Command line used to create the new process."
      },
      "RegistryKey": {
        "type": "string",
        "description": "Registry key that the recorded action was applied to."
      },
      "RegistryValueData": {
        "type": "string",
        "description": "Data of the registry value that the recorded action was applied to."
      },
      "RegistryValueName": {
        "type": "string",
        "description": "Name of the registry value that the recorded action was applied to."
      },
      "RemoteIP": {
        "type": "string",
        "description": "IP address that was being connected to."
      },
      "RemoteUrl": {
        "type": "string",
        "description": "URL or fully qualified domain name (FQDN) that was being connected"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ServiceSource": {
        "type": "string",
        "description": "Product or service that provided the behavior."
      },
      "SHA1": {
        "type": "string",
        "description": "SHA-256 of the file that the behavior applies to."
      },
      "SHA256": {
        "type": "string",
        "description": "SHA-256 of the file. Empty unless EntityType is \"File\" or \"Process\"."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "ThreatFamily": {
        "type": "string",
        "description": "Malware family that the suspicious or malicious file or process has"
      },
      "AttackTechniques": {
        "type": "string",
        "description": "MITRE ATT&CK techniques associated with the activity that triggered the"
      },
      "EndTime": {
        "type": "datetime",
        "description": "Date and time of the last activity related to the behavior."
      },
      "StartTime": {
        "type": "datetime",
        "description": "Date and time of the first activity related to the behavior."
      }
    }
  },
  "SentinelHealth": {
    "tableName": "SentinelHealth",
    "description": "Health logs for operations performed by Microsoft Sentinel resources such as Data Connectors, Analytic Rules and more. These logs can be used to monitor the health of your Microsoft Sentinel resources.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Description": {
        "type": "string",
        "description": "The operation description."
      },
      "ExtendedProperties": {
        "type": "dynamic",
        "description": "Additional information based on the resource type."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation that triggered the event."
      },
      "Reason": {
        "type": "string",
        "description": "The operation reason."
      },
      "RecordId": {
        "type": "string",
        "description": "A unique record identifier."
      },
      "SentinelResourceId": {
        "type": "string",
        "description": "The Sentinel resource ID."
      },
      "SentinelResourceKind": {
        "type": "string",
        "description": "The resource kind, for example: connector kind (such as Office365,"
      },
      "SentinelResourceName": {
        "type": "string",
        "description": "The Sentinel resource name."
      },
      "SentinelResourceType": {
        "type": "string",
        "description": "The resource type, for example: DataConnector, AlertRule, etc."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "Status": {
        "type": "string",
        "description": "Status of the operation, for example: Success, Failure, Warning,"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the event was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "WorkspaceId": {
        "type": "string",
        "description": "The workspace ID."
      }
    }
  },
  "ServiceFabricOperationalEvent": {
    "tableName": "ServiceFabricOperationalEvent",
    "description": "",
    "columns": {
      "ApplicationName": {
        "type": "string",
        "description": ""
      },
      "ApplicationTypeName": {
        "type": "string",
        "description": ""
      },
      "ApplicationTypeVersion": {
        "type": "string",
        "description": ""
      },
      "AzureDeploymentID": {
        "type": "string",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ChannelName": {
        "type": "string",
        "description": ""
      },
      "Computer": {
        "type": "string",
        "description": ""
      },
      "EventId": {
        "type": "int",
        "description": ""
      },
      "EventMessage": {
        "type": "string",
        "description": ""
      },
      "EventSourceName": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "KeywordName": {
        "type": "string",
        "description": ""
      },
      "Level": {
        "type": "string",
        "description": ""
      },
      "OpcodeName": {
        "type": "string",
        "description": ""
      },
      "PartitionId": {
        "type": "string",
        "description": ""
      },
      "Pid": {
        "type": "int",
        "description": ""
      },
      "ProviderGuid": {
        "type": "string",
        "description": ""
      },
      "Role": {
        "type": "string",
        "description": ""
      },
      "ServiceName": {
        "type": "string",
        "description": ""
      },
      "ServiceTypeName": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "TaskName": {
        "type": "string",
        "description": ""
      },
      "Tid": {
        "type": "int",
        "description": ""
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UpgradeDomains": {
        "type": "string",
        "description": ""
      }
    }
  },
  "ServiceFabricReliableActorEvent": {
    "tableName": "ServiceFabricReliableActorEvent",
    "description": "",
    "columns": {
      "ActorId": {
        "type": "string",
        "description": ""
      },
      "ActorIdKind": {
        "type": "int",
        "description": ""
      },
      "ActorType": {
        "type": "string",
        "description": ""
      },
      "ApplicationName": {
        "type": "string",
        "description": ""
      },
      "ApplicationTypeName": {
        "type": "string",
        "description": ""
      },
      "AzureDeploymentID": {
        "type": "string",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ChannelName": {
        "type": "string",
        "description": ""
      },
      "Computer": {
        "type": "string",
        "description": ""
      },
      "CountOfWaitingMethodCalls": {
        "type": "long",
        "description": ""
      },
      "EventId": {
        "type": "int",
        "description": ""
      },
      "EventMessage": {
        "type": "string",
        "description": ""
      },
      "EventSourceName": {
        "type": "string",
        "description": ""
      },
      "Exception": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "IsStateful": {
        "type": "bool",
        "description": ""
      },
      "KeywordName": {
        "type": "string",
        "description": ""
      },
      "Level": {
        "type": "string",
        "description": ""
      },
      "MethodExecutionTimeTicks": {
        "type": "long",
        "description": ""
      },
      "MethodName": {
        "type": "string",
        "description": ""
      },
      "MethodSignature": {
        "type": "string",
        "description": ""
      },
      "NodeId": {
        "type": "string",
        "description": ""
      },
      "NodeName": {
        "type": "string",
        "description": ""
      },
      "OpcodeName": {
        "type": "string",
        "description": ""
      },
      "PartitionId": {
        "type": "string",
        "description": ""
      },
      "Pid": {
        "type": "int",
        "description": ""
      },
      "ProviderGuid": {
        "type": "string",
        "description": ""
      },
      "ReplicaId": {
        "type": "long",
        "description": ""
      },
      "ReplicaOrInstanceId": {
        "type": "long",
        "description": ""
      },
      "Role": {
        "type": "string",
        "description": ""
      },
      "SaveStateExecutionTimeTicks": {
        "type": "long",
        "description": ""
      },
      "ServiceName": {
        "type": "string",
        "description": ""
      },
      "ServiceTypeName": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "TaskName": {
        "type": "string",
        "description": ""
      },
      "Tid": {
        "type": "int",
        "description": ""
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "ServiceFabricReliableServiceEvent": {
    "tableName": "ServiceFabricReliableServiceEvent",
    "description": "",
    "columns": {
      "ActualCancellationTimeMillis": {
        "type": "real",
        "description": ""
      },
      "ApplicationName": {
        "type": "string",
        "description": ""
      },
      "ApplicationTypeName": {
        "type": "string",
        "description": ""
      },
      "AzureDeploymentID": {
        "type": "string",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ChannelName": {
        "type": "string",
        "description": ""
      },
      "Computer": {
        "type": "string",
        "description": ""
      },
      "EventId": {
        "type": "int",
        "description": ""
      },
      "EventMessage": {
        "type": "string",
        "description": ""
      },
      "EventSourceName": {
        "type": "string",
        "description": ""
      },
      "Exception": {
        "type": "string",
        "description": ""
      },
      "InstanceId": {
        "type": "long",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "KeywordName": {
        "type": "string",
        "description": ""
      },
      "Level": {
        "type": "string",
        "description": ""
      },
      "OpcodeName": {
        "type": "string",
        "description": ""
      },
      "PartitionId": {
        "type": "string",
        "description": ""
      },
      "Pid": {
        "type": "int",
        "description": ""
      },
      "ProviderGuid": {
        "type": "string",
        "description": ""
      },
      "ReplicaId": {
        "type": "long",
        "description": ""
      },
      "Role": {
        "type": "string",
        "description": ""
      },
      "ServiceName": {
        "type": "string",
        "description": ""
      },
      "ServiceTypeName": {
        "type": "string",
        "description": ""
      },
      "SlowCancellationTimeMillis": {
        "type": "real",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "TaskName": {
        "type": "string",
        "description": ""
      },
      "Tid": {
        "type": "int",
        "description": ""
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "WasCanceled": {
        "type": "bool",
        "description": ""
      }
    }
  },
  "SfBAssessmentRecommendation": {
    "tableName": "SfBAssessmentRecommendation",
    "description": "Recommendations generated by Skype for Business assessments that are started through a scheduled task. When you schedule the assessment it runs by default every 7 days and upload the data into Azure Log Analytics",
    "columns": {
      "ActionArea": {
        "type": "string",
        "description": ""
      },
      "ActionAreaId": {
        "type": "string",
        "description": ""
      },
      "AffectedObjectName": {
        "type": "string",
        "description": ""
      },
      "AffectedObjectType": {
        "type": "string",
        "description": ""
      },
      "AssessmentId": {
        "type": "string",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Computer": {
        "type": "string",
        "description": ""
      },
      "CustomData": {
        "type": "string",
        "description": ""
      },
      "Description": {
        "type": "string",
        "description": ""
      },
      "Domain": {
        "type": "string",
        "description": ""
      },
      "FocusArea": {
        "type": "string",
        "description": ""
      },
      "FocusAreaId": {
        "type": "string",
        "description": ""
      },
      "Forest": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "LyncCentralMgmtStoreDatabase": {
        "type": "string",
        "description": ""
      },
      "LyncFEPool": {
        "type": "string",
        "description": ""
      },
      "LyncFrontEnd": {
        "type": "string",
        "description": ""
      },
      "LyncInternalDomain": {
        "type": "string",
        "description": ""
      },
      "LyncOrganization": {
        "type": "string",
        "description": ""
      },
      "LyncSimpleURLDomain": {
        "type": "string",
        "description": ""
      },
      "LyncSite": {
        "type": "string",
        "description": ""
      },
      "LyncUserStoreDatabase": {
        "type": "string",
        "description": ""
      },
      "Recommendation": {
        "type": "string",
        "description": ""
      },
      "RecommendationId": {
        "type": "string",
        "description": ""
      },
      "RecommendationResult": {
        "type": "string",
        "description": ""
      },
      "RecommendationWeight": {
        "type": "real",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "Technology": {
        "type": "string",
        "description": ""
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "SfBOnlineAssessmentRecommendation": {
    "tableName": "SfBOnlineAssessmentRecommendation",
    "description": "Recommendations generated by Skype and Teams assessments that are started through a scheduled task. When you schedule the assessment it runs by default every 7 days and upload the data into Azure Log Analytics",
    "columns": {
      "ActionArea": {
        "type": "string",
        "description": ""
      },
      "ActionAreaId": {
        "type": "string",
        "description": ""
      },
      "AffectedObjectName": {
        "type": "string",
        "description": ""
      },
      "AffectedObjectType": {
        "type": "string",
        "description": ""
      },
      "AssessmentId": {
        "type": "string",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Computer": {
        "type": "string",
        "description": ""
      },
      "CustomData": {
        "type": "string",
        "description": ""
      },
      "Description": {
        "type": "string",
        "description": ""
      },
      "Domain": {
        "type": "string",
        "description": ""
      },
      "FocusArea": {
        "type": "string",
        "description": ""
      },
      "FocusAreaId": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "O365TenantId": {
        "type": "string",
        "description": ""
      },
      "Recommendation": {
        "type": "string",
        "description": ""
      },
      "RecommendationId": {
        "type": "string",
        "description": ""
      },
      "RecommendationResult": {
        "type": "string",
        "description": ""
      },
      "RecommendationWeight": {
        "type": "real",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "Technology": {
        "type": "string",
        "description": ""
      },
      "TenantName": {
        "type": "string",
        "description": ""
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "SignalRServiceDiagnosticLogs": {
    "tableName": "SignalRServiceDiagnosticLogs",
    "description": "Azure SignalR service diagnostic logs.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CallerIpAddress": {
        "type": "string",
        "description": "The IP of the client or server connects to SignalR service."
      },
      "Collection": {
        "type": "string",
        "description": "The collection of the log event. Can be 'Connection', 'Authorization',"
      },
      "ConnectionId": {
        "type": "string",
        "description": "The connection ID of the connection connected to SignalR service."
      },
      "ConnectionType": {
        "type": "string",
        "description": "The connection type. Can be 'Server' and 'Client'. 'Server' means the"
      },
      "GroupName": {
        "type": "string",
        "description": "A group can have any number of clients, and a client can be a member of"
      },
      "HubName": {
        "type": "string",
        "description": "The SignalR Hubs API enables you to call methods on connected clients"
      },
      "InvocationId": {
        "type": "string",
        "description": "The invocation ID of the message. It's only available in ASP.NET SignalR."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Level": {
        "type": "string",
        "description": "The level of the log. Can be 'Informational', 'Warning', 'Error' or 'Critical'."
      },
      "Location": {
        "type": "string",
        "description": "The location of Azure SignalR service."
      },
      "Message": {
        "type": "string",
        "description": "The message of the log event. It describes the log event in detail."
      },
      "MessageTracingId": {
        "type": "long",
        "description": "The tracing ID of the message. It's used for tracing messages."
      },
      "MessageType": {
        "type": "string",
        "description": "The type of the messsage. Can be 'BroadcastDataMessage',"
      },
      "OperationName": {
        "type": "string",
        "description": "The operation name of the log event. it can be used to filter the log based"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of the log."
      },
      "TransportType": {
        "type": "string",
        "description": "The transport type of the connection. Can be 'WebSockets',"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserId": {
        "type": "string",
        "description": "The user ID of the connection. It is defined by the client or app server."
      }
    }
  },
  "SigninLogs": {
    "tableName": "SigninLogs",
    "description": "",
    "columns": {
      "AADTenantId": {
        "type": "string",
        "description": ""
      },
      "AlternateSignInName": {
        "type": "string",
        "description": "The identification that the user provided to sign"
      },
      "AppDisplayName": {
        "type": "string",
        "description": "The application name displayed in the Azure"
      },
      "AppId": {
        "type": "string",
        "description": "The application identifier in Azure Active"
      },
      "AppliedConditionalAccessPolicies": {
        "type": "string",
        "description": ""
      },
      "AppliedEventListeners": {
        "type": "dynamic",
        "description": "Detailed information about the listeners, such as"
      },
      "AuthenticationAppDeviceDetails": {
        "type": "string",
        "description": "Details of the app and device state used during"
      },
      "AuthenticationAppPolicyEvaluationDetails": {
        "type": "string",
        "description": "The details of the policies applied and enforced"
      },
      "AuthenticationContextClassReferences": {
        "type": "string",
        "description": "Contains a collection of values that represent the"
      },
      "AuthenticationDetails": {
        "type": "string",
        "description": "The result of the authentication attempt and"
      },
      "AuthenticationMethodsUsed": {
        "type": "string",
        "description": "The authentication methods used. Possible values:"
      },
      "AuthenticationProcessingDetails": {
        "type": "string",
        "description": "Additional authentication processing details, such"
      },
      "AuthenticationProtocol": {
        "type": "string",
        "description": "Lists the protocol type or grant type used in the"
      },
      "AuthenticationRequirement": {
        "type": "string",
        "description": "This holds the highest level of authentication"
      },
      "AuthenticationRequirementPolicies": {
        "type": "string",
        "description": "Sources of authentication requirement, such as"
      },
      "AutonomousSystemNumber": {
        "type": "string",
        "description": "The Autonomous System Number (ASN) of the"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": ""
      },
      "ClientAppUsed": {
        "type": "string",
        "description": "The legacy client used for sign-in activity. For"
      },
      "ClientCredentialType": {
        "type": "string",
        "description": "The type of client credential used. Examples"
      },
      "ConditionalAccessPolicies": {
        "type": "dynamic",
        "description": "A list of conditional access policies that are"
      },
      "ConditionalAccessStatus": {
        "type": "string",
        "description": "The status of the conditional access policy"
      },
      "CorrelationId": {
        "type": "string",
        "description": "The identifier that's sent from the client when"
      },
      "CreatedDateTime": {
        "type": "datetime",
        "description": "The date and time the sign-in was initiated. The"
      },
      "CrossTenantAccessType": {
        "type": "string",
        "description": "Describes the type of cross-tenant access used by"
      },
      "DeviceDetail": {
        "type": "dynamic",
        "description": "The device information from where the sign-in"
      },
      "DurationMs": {
        "type": "long",
        "description": ""
      },
      "FederatedCredentialId": {
        "type": "string",
        "description": "Federated Credential Id."
      },
      "FlaggedForReview": {
        "type": "bool",
        "description": "During a failed sign in, a user may click a button"
      },
      "GlobalSecureAccessIpAddress": {
        "type": "string",
        "description": "Global secure IP address that user signed in from."
      },
      "HomeTenantId": {
        "type": "string",
        "description": "The tenant identifier of the user initiating the sign"
      },
      "HomeTenantName": {
        "type": "string",
        "description": "The tenant name of the external tenant who"
      },
      "Id": {
        "type": "string",
        "description": "The identifier representing the sign-in activity."
      },
      "Identity": {
        "type": "string",
        "description": "The display name of the actor identified in the"
      },
      "IncomingTokenType": {
        "type": "string",
        "description": "The type of token utilized to signIn (examples:"
      },
      "IPAddress": {
        "type": "string",
        "description": "The IP address of the client from where the sign-"
      },
      "IPAddressFromResourceProvider": {
        "type": "string",
        "description": "The IP address a user used to reach a resource"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable."
      },
      "IsInteractive": {
        "type": "bool",
        "description": "Indicates whether a user sign in is interactive. In"
      },
      "IsRisky": {
        "type": "bool",
        "description": ""
      },
      "IsTenantRestricted": {
        "type": "bool",
        "description": "Indicates if a signIn is under a tenant restrictions"
      },
      "IsThroughGlobalSecureAccess": {
        "type": "bool",
        "description": "Displays whether or not a user came through"
      },
      "Level": {
        "type": "string",
        "description": ""
      },
      "Location": {
        "type": "string",
        "description": "The 2 letter country code from where the sign-in"
      },
      "LocationDetails": {
        "type": "dynamic",
        "description": "Provides the city, state, country/region and"
      },
      "MfaDetail": {
        "type": "dynamic",
        "description": "This property is deprecated."
      },
      "NetworkLocationDetails": {
        "type": "string",
        "description": "The network location details including the type of"
      },
      "OperationName": {
        "type": "string",
        "description": ""
      },
      "OperationVersion": {
        "type": "string",
        "description": ""
      },
      "OriginalRequestId": {
        "type": "string",
        "description": "The request identifier of the first request in the"
      },
      "OriginalTransferMethod": {
        "type": "string",
        "description": "Transfer method used to initiate a session"
      },
      "ProcessingTimeInMilliseconds": {
        "type": "string",
        "description": ""
      },
      "Resource": {
        "type": "string",
        "description": ""
      },
      "ResourceDisplayName": {
        "type": "string",
        "description": "The name of the resource that the user signed in"
      },
      "ResourceGroup": {
        "type": "string",
        "description": ""
      },
      "ResourceId": {
        "type": "string",
        "description": "The identifier of the resource that the user signed"
      },
      "ResourceIdentity": {
        "type": "string",
        "description": "The resource that the user signed in to."
      },
      "ResourceProvider": {
        "type": "string",
        "description": ""
      },
      "ResourceServicePrincipalId": {
        "type": "string",
        "description": "The identifier of the service principal representing"
      },
      "ResourceTenantId": {
        "type": "string",
        "description": "The tenant identifier of the resource referenced in"
      },
      "ResultDescription": {
        "type": "string",
        "description": "Provides the error message or the reason for"
      },
      "ResultSignature": {
        "type": "string",
        "description": ""
      },
      "ResultType": {
        "type": "string",
        "description": "Provides the 5-6 digit error code that's generated"
      },
      "RiskDetail": {
        "type": "string",
        "description": "The reason behind a specific state of a risky user,"
      },
      "RiskEventTypes": {
        "type": "string",
        "description": "This property is deprecated."
      },
      "RiskEventTypes_V2": {
        "type": "string",
        "description": "The list of risk event types associated with the"
      },
      "RiskLevel": {
        "type": "string",
        "description": ""
      },
      "RiskLevelAggregated": {
        "type": "string",
        "description": "The aggregated risk level. Possible values: none,"
      },
      "RiskLevelDuringSignIn": {
        "type": "string",
        "description": "The risk level during sign-in. Possible values:"
      },
      "RiskState": {
        "type": "string",
        "description": "The risk state of a risky user, sign-in, or a risk"
      },
      "ServicePrincipalId": {
        "type": "string",
        "description": "The application identifier used for sign-in. This"
      },
      "ServicePrincipalName": {
        "type": "string",
        "description": "The application name used for sign-in. This field is"
      },
      "SessionId": {
        "type": "string",
        "description": "Id of the session that was generated during the"
      },
      "SessionLifetimePolicies": {
        "type": "string",
        "description": "Any conditional access session management"
      },
      "SignInIdentifier": {
        "type": "string",
        "description": "The identification that the user provided to sign"
      },
      "SignInIdentifierType": {
        "type": "string",
        "description": "The type of sign in identifier. Possible values are:"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For"
      },
      "Status": {
        "type": "dynamic",
        "description": "The sign-in status. Includes the error code and"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "TokenIssuerName": {
        "type": "string",
        "description": "The name of the identity provider. For example,"
      },
      "TokenIssuerType": {
        "type": "string",
        "description": "The type of identity provider. The possible values"
      },
      "TokenProtectionStatusDetails": {
        "type": "dynamic",
        "description": "Token protection creates a cryptographically"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UniqueTokenIdentifier": {
        "type": "string",
        "description": "A unique base64 encoded request identifier used"
      },
      "UserAgent": {
        "type": "string",
        "description": "The user agent information related to sign-in."
      },
      "UserDisplayName": {
        "type": "string",
        "description": "The display name of the user."
      },
      "UserId": {
        "type": "string",
        "description": "The identifier of the user."
      },
      "UserPrincipalName": {
        "type": "string",
        "description": "The UPN of the user."
      },
      "UserType": {
        "type": "string",
        "description": "Identifies whether the user is a member or guest"
      }
    }
  },
  "SqlAtpStatus": {
    "tableName": "SqlAtpStatus",
    "description": "SQL Advanced Threat Protection status log. The logs allows identifying machines connected to the workspace with SQL ATP and the protection status on each instance on those machines.",
    "columns": {
      "AgentId": {
        "type": "string",
        "description": "ID of the source monitoring agent"
      },
      "AgentStartTime": {
        "type": "datetime",
        "description": "The start time of the Microsoft Monitoring Agent process running"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClientIP": {
        "type": "string",
        "description": "Client IP address of the source computer"
      },
      "Computer": {
        "type": "string",
        "description": "Name of the computer that hosts the SQL Server"
      },
      "HostResourceId": {
        "type": "string",
        "description": "Resource ID of the machine hosting the SQL Instance, if exists"
      },
      "IntelligencePackVersion": {
        "type": "string",
        "description": "The IP version of SQL Advanced Threat Protection running on the"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "LastError": {
        "type": "string",
        "description": "The last error from SQL Advanced Threat Protection (if exists). The"
      },
      "MachineUUID": {
        "type": "string",
        "description": "The unique identifier of the machine running the Microsoft"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "SqlInstanceName": {
        "type": "string",
        "description": "SQL Server instance name"
      },
      "SqlInstanceStartTime": {
        "type": "datetime",
        "description": "The start time of the SQL Server instance"
      },
      "SqlInstanceVersion": {
        "type": "string",
        "description": "SQL Server instance version"
      },
      "Status": {
        "type": "string",
        "description": "SQL Advanced Threat Protection status for the SQL instance"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "SqlVulnerabilityAssessmentResult": {
    "tableName": "SqlVulnerabilityAssessmentResult",
    "description": "",
    "columns": {
      "ActualResult": {
        "type": "string",
        "description": ""
      },
      "AgentId": {
        "type": "string",
        "description": ""
      },
      "BenchmarkReferences": {
        "type": "string",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": ""
      },
      "CheckId": {
        "type": "string",
        "description": ""
      },
      "Computer": {
        "type": "string",
        "description": ""
      },
      "DatabaseName": {
        "type": "string",
        "description": ""
      },
      "Description": {
        "type": "string",
        "description": ""
      },
      "Impact": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "ManagementGroupName": {
        "type": "string",
        "description": ""
      },
      "Query": {
        "type": "string",
        "description": ""
      },
      "Remediation": {
        "type": "string",
        "description": ""
      },
      "RemediationScripts": {
        "type": "string",
        "description": ""
      },
      "ResourceGroup": {
        "type": "string",
        "description": ""
      },
      "ResourceId": {
        "type": "string",
        "description": ""
      },
      "ResourceProvider": {
        "type": "string",
        "description": ""
      },
      "ResourceType": {
        "type": "string",
        "description": ""
      },
      "Risk": {
        "type": "string",
        "description": ""
      },
      "ScanId": {
        "type": "string",
        "description": ""
      },
      "ServerInstanceName": {
        "type": "string",
        "description": ""
      },
      "ServerInstanceType": {
        "type": "string",
        "description": ""
      },
      "ServerVersion": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "Status": {
        "type": "string",
        "description": ""
      },
      "SubscriptionId": {
        "type": "string",
        "description": ""
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Title": {
        "type": "string",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "SqlVulnerabilityAssessmentScanStatus": {
    "tableName": "SqlVulnerabilityAssessmentScanStatus",
    "description": "SQL Vulnerability Assesment Heartbeat Log.",
    "columns": {
      "AgentId": {
        "type": "string",
        "description": "ID of the source monitoring agent"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Computer": {
        "type": "string",
        "description": "Name of the computer that hosts the assessed SQL Server"
      },
      "DatabaseName": {
        "type": "string",
        "description": "Database name"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ScanId": {
        "type": "string",
        "description": "Vulnerability Assessment scan ID"
      },
      "ServerInstanceName": {
        "type": "string",
        "description": "SQL Server instance name"
      },
      "ServerVersion": {
        "type": "string",
        "description": "SQL Server version"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "Status": {
        "type": "string",
        "description": "Vulnerability assessment scan status i.e. Finding, NonFinding,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "StorageBlobLogs": {
    "tableName": "StorageBlobLogs",
    "description": "Storage Blob Service Logs Schema",
    "columns": {
      "AccessTier": {
        "type": "string",
        "description": "The access tier of the storage account."
      },
      "AccountName": {
        "type": "string",
        "description": "The name of the storage account."
      },
      "AuthenticationHash": {
        "type": "string",
        "description": "The hash of authentication token."
      },
      "AuthenticationType": {
        "type": "string",
        "description": "The type of authentication that was used to make the request."
      },
      "AuthorizationDetails": {
        "type": "dynamic",
        "description": "Detailed policy information used to authorize the request."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CallerIpAddress": {
        "type": "string",
        "description": "The IP address of the requester, including the port number."
      },
      "Category": {
        "type": "string",
        "description": "The category of requested operation."
      },
      "ClientRequestId": {
        "type": "string",
        "description": "The x-ms-client-request-id header value of the request."
      },
      "ConditionsUsed": {
        "type": "string",
        "description": "A semicolon-separated list of key-value pairs that represent a"
      },
      "ContentLengthHeader": {
        "type": "long",
        "description": "The value of the Content-Length header for the request sent to the"
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID that is used to correlate logs across resources."
      },
      "DestinationUri": {
        "type": "string",
        "description": "Records the destination URI for operations."
      },
      "DurationMs": {
        "type": "real",
        "description": "The total time, expressed in milliseconds, to perform the requested"
      },
      "Etag": {
        "type": "string",
        "description": "The ETag identifier for the returned object, in quotes."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "LastModifiedTime": {
        "type": "datetime",
        "description": "The Last Modified Time (LMT) for the returned object. This field is"
      },
      "Location": {
        "type": "string",
        "description": "The location of storage account."
      },
      "MetricResponseType": {
        "type": "string",
        "description": "Records the metric response for correlation between metrics and"
      },
      "ObjectKey": {
        "type": "string",
        "description": "The key of the requested object, in quotes."
      },
      "OperationCount": {
        "type": "int",
        "description": "The number of each logged operation that is involved in the request."
      },
      "OperationName": {
        "type": "string",
        "description": "The type of REST operation that was performed."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The storage service version that was specified when the request was"
      },
      "Protocol": {
        "type": "string",
        "description": "The protocol that is used in the operation."
      },
      "ReferrerHeader": {
        "type": "string",
        "description": "The Referer header value."
      },
      "RehydratePriority": {
        "type": "string",
        "description": "The priority used to rehydrate an archived blob."
      },
      "RequestBodySize": {
        "type": "long",
        "description": "The size of the request packets, expressed in bytes, that are read by"
      },
      "RequesterAppId": {
        "type": "string",
        "description": "The Open Authorization (OAuth) application ID that is used as the"
      },
      "RequesterAudience": {
        "type": "string",
        "description": "The OAuth audience of the request."
      },
      "RequesterObjectId": {
        "type": "string",
        "description": "The OAuth object ID of the requester."
      },
      "RequesterTenantId": {
        "type": "string",
        "description": "The OAuth tenant ID of identity."
      },
      "RequesterTokenIssuer": {
        "type": "string",
        "description": "The OAuth token issuer."
      },
      "RequesterUpn": {
        "type": "string",
        "description": "The User Principal Names of requestor."
      },
      "RequestHeaderSize": {
        "type": "long",
        "description": "The size of the request header expressed in bytes. If a request is"
      },
      "RequestMd5": {
        "type": "string",
        "description": "The value of either the Content-MD5 header or the x-ms-content-"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResponseBodySize": {
        "type": "long",
        "description": "The size of the response packets written by the storage service, in"
      },
      "ResponseHeaderSize": {
        "type": "long",
        "description": "The size of the response header expressed in bytes. If a request is"
      },
      "ResponseMd5": {
        "type": "string",
        "description": "The value of the MD5 hash calculated by the storage service."
      },
      "SasExpiryStatus": {
        "type": "string",
        "description": "Records any violations in the request SAS token as per the SAS policy"
      },
      "SchemaVersion": {
        "type": "string",
        "description": "The schema version of the log."
      },
      "ServerLatencyMs": {
        "type": "real",
        "description": "The total time expressed in milliseconds to perform the requested"
      },
      "ServiceType": {
        "type": "string",
        "description": "The service associated with this request."
      },
      "SourceAccessTier": {
        "type": "string",
        "description": "The source tier of the storage account."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "SourceUri": {
        "type": "string",
        "description": "Records the source URI for operations."
      },
      "StatusCode": {
        "type": "string",
        "description": "The HTTP status code for the request. If the request is interrupted,"
      },
      "StatusText": {
        "type": "string",
        "description": "The status of the requested operation."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The Universal Time Coordinated (UTC) time when the request was"
      },
      "TlsVersion": {
        "type": "string",
        "description": "The TLS version used in the connection of request."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "Uri": {
        "type": "string",
        "description": "Uniform resource identifier that is requested."
      },
      "UserAgentHeader": {
        "type": "string",
        "description": "The User-Agent header value, in quotes."
      }
    }
  },
  "StorageCacheOperationEvents": {
    "tableName": "StorageCacheOperationEvents",
    "description": "Logs for Azure HPC Cache API requests.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CorrelationId": {
        "type": "string",
        "description": "Unique identifier to be used to correlate logs, if available."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Location": {
        "type": "string",
        "description": "The region of the resource associated with the event."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation name for which the log entry was created."
      },
      "PrimingJobName": {
        "type": "string",
        "description": "Name of the priming job associated with the operation, if available."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResponseCode": {
        "type": "int",
        "description": "HTTP status of API request."
      },
      "ResultDescription": {
        "type": "string",
        "description": "Details about the result, if available."
      },
      "ResultType": {
        "type": "string",
        "description": "Result of the REST API request."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "StorageTargetName": {
        "type": "string",
        "description": "Name of the storage target associated with the operation, if available."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (UTC) when the log was created."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "StorageCacheUpgradeEvents": {
    "tableName": "StorageCacheUpgradeEvents",
    "description": "Logs for Azure HPC Cache firmware upgrade events.",
    "columns": {
      "AvailableFirmwareVersion": {
        "type": "string",
        "description": "The firmware version for upgrade, if available."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CorrelationId": {
        "type": "string",
        "description": "Unique identifier to be used to correlate logs, if available."
      },
      "CurrentFirmwareVersion": {
        "type": "string",
        "description": "The firmware version currently running."
      },
      "Description": {
        "type": "string",
        "description": "The description of the upgrade event."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Location": {
        "type": "string",
        "description": "The region of the resource associated with the event."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (UTC) when the log was created."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "StorageCacheWarningEvents": {
    "tableName": "StorageCacheWarningEvents",
    "description": "Logs for Azure HPC Cache warning events.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CorrelationId": {
        "type": "string",
        "description": "Unique identifier to be used to correlate logs, if available."
      },
      "Description": {
        "type": "string",
        "description": "The description of the warning event."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Level": {
        "type": "string",
        "description": "The severity level of the event: Informational, Warning, Error, or Critical."
      },
      "Location": {
        "type": "string",
        "description": "The region of the resource associated with the event."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "State": {
        "type": "string",
        "description": "The state of the warning: Active or Cleared."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (UTC) when the log was created."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "StorageFileLogs": {
    "tableName": "StorageFileLogs",
    "description": "Storage File Service Logs Schema",
    "columns": {
      "AccountName": {
        "type": "string",
        "description": "The name of the storage account."
      },
      "AuthenticationHash": {
        "type": "string",
        "description": "The hash of authentication token."
      },
      "AuthenticationType": {
        "type": "string",
        "description": "The type of authentication that was used to make the request."
      },
      "AuthorizationDetails": {
        "type": "dynamic",
        "description": "Detailed policy information used to authorize the request."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CallerIpAddress": {
        "type": "string",
        "description": "The IP address of the requester, including the port number."
      },
      "Category": {
        "type": "string",
        "description": "The category of requested operation."
      },
      "ClientRequestId": {
        "type": "string",
        "description": "The x-ms-client-request-id header value of the request."
      },
      "ConditionsUsed": {
        "type": "string",
        "description": "A semicolon-separated list of key-value pairs that represent a"
      },
      "ContentLengthHeader": {
        "type": "long",
        "description": "The value of the Content-Length header for the request sent to the"
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID of a specific scan."
      },
      "DurationMs": {
        "type": "real",
        "description": "The total time, expressed in milliseconds, to perform the requested"
      },
      "Etag": {
        "type": "string",
        "description": "The ETag identifier for the returned object, in quotes."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "LastModifiedTime": {
        "type": "datetime",
        "description": "The Last Modified Time (LMT) for the returned object. This field is"
      },
      "Location": {
        "type": "string",
        "description": "The location of storage account."
      },
      "MetricResponseType": {
        "type": "string",
        "description": "Records the metric response for correlation between metrics and"
      },
      "ObjectKey": {
        "type": "string",
        "description": "The key of the requested object, in quotes."
      },
      "OperationCount": {
        "type": "int",
        "description": "The number of each logged operation that is involved in the"
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The storage service version that was specified when the request was"
      },
      "Protocol": {
        "type": "string",
        "description": "The protocol that is used in the operation."
      },
      "ReferrerHeader": {
        "type": "string",
        "description": "The Referer header value."
      },
      "RequestBodySize": {
        "type": "long",
        "description": "The size of the request packets, expressed in bytes, that are read by"
      },
      "RequesterAppId": {
        "type": "string",
        "description": "The Open Authorization (OAuth) application ID that is used as the"
      },
      "RequesterAudience": {
        "type": "string",
        "description": "The OAuth audience of the request."
      },
      "RequesterObjectId": {
        "type": "string",
        "description": "The OAuth object ID of the requester."
      },
      "RequesterTenantId": {
        "type": "string",
        "description": "The OAuth tenant ID of identity."
      },
      "RequesterTokenIssuer": {
        "type": "string",
        "description": "The OAuth token issuer."
      },
      "RequesterUpn": {
        "type": "string",
        "description": "The User Principal Names of requester."
      },
      "RequesterUserName": {
        "type": "string",
        "description": "The user name of requester for SMB."
      },
      "RequestHeaderSize": {
        "type": "long",
        "description": "The size of the request header expressed in bytes. If a request is"
      },
      "RequestMd5": {
        "type": "string",
        "description": "The value of either the Content-MD5 header or the x-ms-content-"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "ResponseBodySize": {
        "type": "long",
        "description": "The size of the response packets written by the storage service, in"
      },
      "ResponseHeaderSize": {
        "type": "long",
        "description": "The size of the response header expressed in bytes. If a request is"
      },
      "ResponseMd5": {
        "type": "string",
        "description": "The value of the MD5 hash calculated by the storage service."
      },
      "SasExpiryStatus": {
        "type": "string",
        "description": "Records any violations in the request SAS token as per the SAS"
      },
      "SchemaVersion": {
        "type": "string",
        "description": "The schema version of the log."
      },
      "ServerLatencyMs": {
        "type": "real",
        "description": "The total time expressed in milliseconds to perform the requested"
      },
      "ServiceType": {
        "type": "string",
        "description": "The service associated with this request."
      },
      "SmbCommandDetail": {
        "type": "string",
        "description": "More information about this specific request rather than the general"
      },
      "SmbCommandMajor": {
        "type": "int",
        "description": "Value in SMB2_HEADER.Command, and is currently a number"
      },
      "SmbCommandMinor": {
        "type": "string",
        "description": "The subclass of SmbCommandMajor, where appropriate."
      },
      "SmbCreditsConsumed": {
        "type": "int",
        "description": "The ingress or egress consumed by the request, in units of 64k."
      },
      "SmbFileId": {
        "type": "string",
        "description": "The FileId associated with file or directory. Roughly analogous to an"
      },
      "SmbMessageID": {
        "type": "string",
        "description": "The connection relative MessageId."
      },
      "SmbPersistentHandleID": {
        "type": "string",
        "description": "Persistent HandleID from an SMB2 Create request that survives"
      },
      "SmbPrimarySID": {
        "type": "string",
        "description": "Security Identifier of Kerberos Authenticated request"
      },
      "SmbSessionID": {
        "type": "string",
        "description": "The SMB2 SessionId established at SessionSetup time."
      },
      "SmbStatusCode": {
        "type": "string",
        "description": "Status code for SMB in a hex format."
      },
      "SmbTreeConnectID": {
        "type": "string",
        "description": "The SMB TreeConnectID established at TreeConnect time."
      },
      "SmbVolatileHandleID": {
        "type": "string",
        "description": "Volatile HandleID from an SMB2 Create request that is recycled on"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "StatusCode": {
        "type": "string",
        "description": "The HTTP status code for the request. If the request is interrupted,"
      },
      "StatusText": {
        "type": "string",
        "description": "The status of the requested operation."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) when the log was generated."
      },
      "TlsVersion": {
        "type": "string",
        "description": "The TLS version used in the connection of request."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "Uri": {
        "type": "string",
        "description": "Uniform resource identifier that is requested."
      },
      "UserAgentHeader": {
        "type": "string",
        "description": "The User-Agent header value, in quotes."
      },
      "BlobEtag": {
        "type": "string",
        "description": "The Etag of the scanned blob."
      },
      "BlobUri": {
        "type": "string",
        "description": "The URI of the scanned blob."
      },
      "ScanFinishedTimeUtc": {
        "type": "datetime",
        "description": "Scan finished time in UTC."
      },
      "ScanResultDetails": {
        "type": "dynamic",
        "description": "Information regarding the scan results."
      },
      "ScanResultType": {
        "type": "string",
        "description": "Type of the scan result (Malicious, Error, No Threat Found, Not"
      },
      "StorageAccountLocation": {
        "type": "string",
        "description": "The location of the storage account."
      },
      "StorageAccountName": {
        "type": "string",
        "description": "The name of the storage account."
      }
    }
  },
  "StorageMoverCopyLogsFailed": {
    "tableName": "StorageMoverCopyLogsFailed",
    "description": "The result logs generated during the execution of Storage Mover job runs where the transfer result is 'Failed'. The logs include the details of the scanned items and their transfer result.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Details": {
        "type": "string",
        "description": "The error description and any additional details if available."
      },
      "FileSize": {
        "type": "long",
        "description": "The file size in bytes (if available). Only applicable when item type is File."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "ItemPath": {
        "type": "string",
        "description": "Relative path of the item from the migration source, and target root"
      },
      "ItemType": {
        "type": "string",
        "description": "Type of the item, either 'F' for file, or 'D' for directory."
      },
      "JobRunName": {
        "type": "string",
        "description": "Unique name of the job run which generated this log."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "StatusCode": {
        "type": "string",
        "description": "The storage mover status code."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Time in UTC when the log was generated on the Storage Mover agent."
      },
      "TransferResult": {
        "type": "string",
        "description": "The final transfer result of the item. One of: Excluded, Failed, Transferred,"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "StorageMoverCopyLogsTransferred": {
    "tableName": "StorageMoverCopyLogsTransferred",
    "description": "The result logs generated during the execution of Storage Mover job runs where the transfer result is 'Transferred'. The logs include the details of the scanned items and their transfer result.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Details": {
        "type": "string",
        "description": "The error description and any additional details if available."
      },
      "FileSize": {
        "type": "long",
        "description": "The file size in bytes (if available). Only applicable when item type is File."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "ItemPath": {
        "type": "string",
        "description": "Relative path of the item from the migration source, and target root"
      },
      "ItemType": {
        "type": "string",
        "description": "Type of the item, either 'F' for file, or 'D' for directory."
      },
      "JobRunName": {
        "type": "string",
        "description": "Unique name of the job run which generated this log."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "StatusCode": {
        "type": "string",
        "description": "The storage mover status code."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Time in UTC when the log was generated on the Storage Mover agent."
      },
      "TransferResult": {
        "type": "string",
        "description": "The final transfer result of the item. One of: Excluded, Failed, Transferred,"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "StorageMoverJobRunLogs": {
    "tableName": "StorageMoverJobRunLogs",
    "description": "Logs associated with Storage Mover job runs.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "JobRunName": {
        "type": "string",
        "description": "JobRunName"
      },
      "Level": {
        "type": "string",
        "description": "The log level. Can be Informational, Warning or Error."
      },
      "Message": {
        "type": "string",
        "description": "Log message."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "StatusCode": {
        "type": "string",
        "description": "Status code associated with the log message."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Time in UTC when the log was generated on the Storage Mover agent."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "StorageQueueLogs": {
    "tableName": "StorageQueueLogs",
    "description": "Storage Queue Service Logs Schema",
    "columns": {
      "AccountName": {
        "type": "string",
        "description": "The name of the storage account."
      },
      "AuthenticationHash": {
        "type": "string",
        "description": "The hash of authentication token."
      },
      "AuthenticationType": {
        "type": "string",
        "description": "The type of authentication that was used to make the request."
      },
      "AuthorizationDetails": {
        "type": "dynamic",
        "description": "Detailed policy information used to authorize the request."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CallerIpAddress": {
        "type": "string",
        "description": "The IP address of the requester, including the port number."
      },
      "Category": {
        "type": "string",
        "description": "The category of requested operation."
      },
      "ClientRequestId": {
        "type": "string",
        "description": "The x-ms-client-request-id header value of the request."
      },
      "ConditionsUsed": {
        "type": "string",
        "description": "A semicolon-separated list of key-value pairs that represent a"
      },
      "ContentLengthHeader": {
        "type": "long",
        "description": "The value of the Content-Length header for the request sent to the"
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID that is used to correlate logs across resources."
      },
      "DurationMs": {
        "type": "real",
        "description": "The total time, expressed in milliseconds, to perform the requested"
      },
      "Etag": {
        "type": "string",
        "description": "The ETag identifier for the returned object, in quotes."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "LastModifiedTime": {
        "type": "datetime",
        "description": "The Last Modified Time (LMT) for the returned object. This field is"
      },
      "Location": {
        "type": "string",
        "description": "The location of storage account."
      },
      "MetricResponseType": {
        "type": "string",
        "description": "Records the metric response for correlation between metrics and"
      },
      "ObjectKey": {
        "type": "string",
        "description": "The key of the requested object, in quotes."
      },
      "OperationCount": {
        "type": "int",
        "description": "The number of each logged operation that is involved in the request."
      },
      "OperationName": {
        "type": "string",
        "description": "The type of REST operation that was performed."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The storage service version that was specified when the request was"
      },
      "Protocol": {
        "type": "string",
        "description": "The protocol that is used in the operation."
      },
      "ReferrerHeader": {
        "type": "string",
        "description": "The Referer header value."
      },
      "RequestBodySize": {
        "type": "long",
        "description": "The size of the request packets, expressed in bytes, that are read by"
      },
      "RequesterAppId": {
        "type": "string",
        "description": "The Open Authorization (OAuth) application ID that is used as the"
      },
      "RequesterAudience": {
        "type": "string",
        "description": "The OAuth audience of the request."
      },
      "RequesterObjectId": {
        "type": "string",
        "description": "The OAuth object ID of the requester."
      },
      "RequesterTenantId": {
        "type": "string",
        "description": "The OAuth tenant ID of identity."
      },
      "RequesterTokenIssuer": {
        "type": "string",
        "description": "The OAuth token issuer."
      },
      "RequesterUpn": {
        "type": "string",
        "description": "The User Principal Names of requestor."
      },
      "RequestHeaderSize": {
        "type": "long",
        "description": "The size of the request header expressed in bytes. If a request is"
      },
      "RequestMd5": {
        "type": "string",
        "description": "The value of either the Content-MD5 header or the x-ms-content-"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResponseBodySize": {
        "type": "long",
        "description": "The size of the response packets written by the storage service, in"
      },
      "ResponseHeaderSize": {
        "type": "long",
        "description": "The size of the response header expressed in bytes. If a request is"
      },
      "ResponseMd5": {
        "type": "string",
        "description": "The value of the MD5 hash calculated by the storage service."
      },
      "SasExpiryStatus": {
        "type": "string",
        "description": "Records any violations in the request SAS token as per the SAS policy"
      },
      "SchemaVersion": {
        "type": "string",
        "description": "The schema version of the log."
      },
      "ServerLatencyMs": {
        "type": "real",
        "description": "The total time expressed in milliseconds to perform the requested"
      },
      "ServiceType": {
        "type": "string",
        "description": "The service associated with this request."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "StatusCode": {
        "type": "string",
        "description": "The HTTP status code for the request. If the request is interrupted,"
      },
      "StatusText": {
        "type": "string",
        "description": "The status of the requested operation."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The Universal Time Coordinated (UTC) time when the request was"
      },
      "TlsVersion": {
        "type": "string",
        "description": "The TLS version used in the connection of request."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "Uri": {
        "type": "string",
        "description": "Uniform resource identifier that is requested."
      },
      "UserAgentHeader": {
        "type": "string",
        "description": "The User-Agent header value, in quotes."
      }
    }
  },
  "StorageTableLogs": {
    "tableName": "StorageTableLogs",
    "description": "Storage Table Service Logs Schema",
    "columns": {
      "AccountName": {
        "type": "string",
        "description": "The name of the storage account."
      },
      "AuthenticationHash": {
        "type": "string",
        "description": "The hash of authentication token."
      },
      "AuthenticationType": {
        "type": "string",
        "description": "The type of authentication that was used to make the request."
      },
      "AuthorizationDetails": {
        "type": "dynamic",
        "description": "Detailed policy information used to authorize the request."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CallerIpAddress": {
        "type": "string",
        "description": "The IP address of the requester, including the port number."
      },
      "Category": {
        "type": "string",
        "description": "The category of requested operation."
      },
      "ClientRequestId": {
        "type": "string",
        "description": "The x-ms-client-request-id header value of the request."
      },
      "ConditionsUsed": {
        "type": "string",
        "description": "A semicolon-separated list of key-value pairs that represent a"
      },
      "ContentLengthHeader": {
        "type": "long",
        "description": "The value of the Content-Length header for the request sent to the"
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID that is used to correlate logs across resources."
      },
      "DurationMs": {
        "type": "real",
        "description": "The total time, expressed in milliseconds, to perform the requested"
      },
      "Etag": {
        "type": "string",
        "description": "The ETag identifier for the returned object, in quotes."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "LastModifiedTime": {
        "type": "datetime",
        "description": "The Last Modified Time (LMT) for the returned object. This field is"
      },
      "Location": {
        "type": "string",
        "description": "The location of storage account."
      },
      "MetricResponseType": {
        "type": "string",
        "description": "Records the metric response for correlation between metrics and"
      },
      "ObjectKey": {
        "type": "string",
        "description": "The key of the requested object, in quotes."
      },
      "OperationCount": {
        "type": "int",
        "description": "The number of each logged operation that is involved in the request."
      },
      "OperationName": {
        "type": "string",
        "description": "The type of REST operation that was performed."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The storage service version that was specified when the request was"
      },
      "Protocol": {
        "type": "string",
        "description": "The protocol that is used in the operation."
      },
      "ReferrerHeader": {
        "type": "string",
        "description": "The Referer header value."
      },
      "RequestBodySize": {
        "type": "long",
        "description": "The size of the request packets, expressed in bytes, that are read by"
      },
      "RequesterAppId": {
        "type": "string",
        "description": "The Open Authorization (OAuth) application ID that is used as the"
      },
      "RequesterAudience": {
        "type": "string",
        "description": "The OAuth audience of the request."
      },
      "RequesterObjectId": {
        "type": "string",
        "description": "The OAuth object ID of the requester."
      },
      "RequesterTenantId": {
        "type": "string",
        "description": "The OAuth tenant ID of identity."
      },
      "RequesterTokenIssuer": {
        "type": "string",
        "description": "The OAuth token issuer."
      },
      "RequesterUpn": {
        "type": "string",
        "description": "The User Principal Names of requestor."
      },
      "RequestHeaderSize": {
        "type": "long",
        "description": "The size of the request header expressed in bytes. If a request is"
      },
      "RequestMd5": {
        "type": "string",
        "description": "The value of either the Content-MD5 header or the x-ms-content-"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResponseBodySize": {
        "type": "long",
        "description": "The size of the response packets written by the storage service, in"
      },
      "ResponseHeaderSize": {
        "type": "long",
        "description": "The size of the response header expressed in bytes. If a request is"
      },
      "ResponseMd5": {
        "type": "string",
        "description": "The value of the MD5 hash calculated by the storage service."
      },
      "SasExpiryStatus": {
        "type": "string",
        "description": "Records any violations in the request SAS token as per the SAS policy"
      },
      "SchemaVersion": {
        "type": "string",
        "description": "The schema version of the log."
      },
      "ServerLatencyMs": {
        "type": "real",
        "description": "The total time expressed in milliseconds to perform the requested"
      },
      "ServiceType": {
        "type": "string",
        "description": "The service associated with this request."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "StatusCode": {
        "type": "string",
        "description": "The HTTP status code for the request. If the request is interrupted,"
      },
      "StatusText": {
        "type": "string",
        "description": "The status of the requested operation."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The Universal Time Coordinated (UTC) time when the request was"
      },
      "TlsVersion": {
        "type": "string",
        "description": "The TLS version used in the connection of request."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "Uri": {
        "type": "string",
        "description": "Uniform resource identifier that is requested."
      },
      "UserAgentHeader": {
        "type": "string",
        "description": "The User-Agent header value, in quotes."
      }
    }
  },
  "SucceededIngestion": {
    "tableName": "SucceededIngestion",
    "description": "Succeeded ingestion operations logs provide information about successfully completed ingest operations. Logs include data source details that together with Failed ingestion operations logs can be used for tracking the process of ingestion of each data source. Ingestion logs are supported for queued ingestion to the ingestion endpoint using SDKs, data connections, and connectors.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Database": {
        "type": "string",
        "description": "The name of the database holding the target table"
      },
      "IngestionSourceId": {
        "type": "string",
        "description": "A unique identifier representing the ingested source"
      },
      "IngestionSourcePath": {
        "type": "string",
        "description": "The path of the ingestion data sources or the Azure blob storage URI"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "OperationId": {
        "type": "string",
        "description": "The ingestion's operation ID"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultType": {
        "type": "string",
        "description": "The final state of this data ingestion operation"
      },
      "RootActivityId": {
        "type": "string",
        "description": "The ingestion's activity ID"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "SucceededOn": {
        "type": "datetime",
        "description": "Time at which this ingest operation successfully ended"
      },
      "Table": {
        "type": "string",
        "description": "The name of the target table into which the data is ingested"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "SynapseBigDataPoolApplicationsEnded": {
    "tableName": "SynapseBigDataPoolApplicationsEnded",
    "description": "Information about ended Apache Spark applications.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The category of the log."
      },
      "CorrelationId": {
        "type": "string",
        "description": "A GUID used to group together a set of related events."
      },
      "Identity": {
        "type": "dynamic",
        "description": "A JSON blob that describes the identity of the user or application that"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "Properties": {
        "type": "dynamic",
        "description": "extended properties related to this event."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "SynapseBuiltinSqlPoolRequestsEnded": {
    "tableName": "SynapseBuiltinSqlPoolRequestsEnded",
    "description": "Ended Azure Synapse built-in serverless SQL requests.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The category of the log."
      },
      "CorrelationId": {
        "type": "string",
        "description": "A GUID used to group together a set of related events."
      },
      "DurationMs": {
        "type": "int",
        "description": "The total elapsed time in milliseconds."
      },
      "ErrorCode": {
        "type": "int",
        "description": "The error/success code"
      },
      "Identity": {
        "type": "dynamic",
        "description": "A JSON blob that describes the identity of the user or application that"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "Properties": {
        "type": "dynamic",
        "description": "extended properties related to this event."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultType": {
        "type": "string",
        "description": "The status of the request."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "SynapseDXCommand": {
    "tableName": "SynapseDXCommand",
    "description": "Azure data explorer synapse command execution summary. Logs include DatabaseName, State, Duration that can be used for monitoring the commands which were invoked on the cluster",
    "columns": {
      "ApplicationName": {
        "type": "string",
        "description": "The name of the application that invoked the command"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The log category for these events will be 'Command'"
      },
      "CommandType": {
        "type": "string",
        "description": "Command type. like 'DatabasesShow'"
      },
      "CorrelationId": {
        "type": "string",
        "description": "The client request ID"
      },
      "DatabaseName": {
        "type": "string",
        "description": "The name of the database the command ran on"
      },
      "Duration": {
        "type": "string",
        "description": "Command duration as a string like '00:00:00.0156250'"
      },
      "FailureReason": {
        "type": "string",
        "description": "The reason for the failure"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LastUpdatedOn": {
        "type": "datetime",
        "description": "The last time this command was updated"
      },
      "Principal": {
        "type": "string",
        "description": "Principal that invoked the query like 'aaduser=USER_ID;TENANT'"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResourceUtilization": {
        "type": "dynamic",
        "description": "Resurce consumption for the exuected command"
      },
      "RootActivityId": {
        "type": "string",
        "description": "The root activity ID"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "StartedOn": {
        "type": "datetime",
        "description": "The time (UTC) when this command started"
      },
      "State": {
        "type": "string",
        "description": "The state the command ended with, like 'Completed'"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "Text": {
        "type": "string",
        "description": "Text of the invoked command"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The time (UTC) when this event was generated"
      },
      "TotalCPU": {
        "type": "string",
        "description": "Total CPU runtime across cluster nodes"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "User": {
        "type": "string",
        "description": "User that invoked the query"
      },
      "WorkloadGroup": {
        "type": "string",
        "description": "Workload are a means of resource governance for incoming requests to"
      }
    }
  },
  "SynapseDXFailedIngestion": {
    "tableName": "SynapseDXFailedIngestion",
    "description": "Failed ingestion operations logs provide detailed information about failed ingest operations. Logs include data source details, as well as error code and failure status (transient or permanent), that can be used for tracking the process of data source ingestion. Users can identify usage errors (permanent bad requests) and handle retries of transient failures. Ingestion logs are supported for queued ingestion to the ingestion endpoint using SDKs, data connections, and connectors",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Database": {
        "type": "string",
        "description": "The name of the database holding the target table"
      },
      "Details": {
        "type": "string",
        "description": "Details of the failure"
      },
      "ErrorCode": {
        "type": "string",
        "description": "Failure's error code like 'BadRequest_EmptyBlob'"
      },
      "FailedOn": {
        "type": "datetime",
        "description": "The time this ingest operation failed"
      },
      "FailureStatus": {
        "type": "string",
        "description": "Failure's status like 'Permanent'"
      },
      "IngestionSourceId": {
        "type": "string",
        "description": "The ID of the ingestion source"
      },
      "IngestionSourcePath": {
        "type": "string",
        "description": "Azure blob storage URI"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "OperationId": {
        "type": "string",
        "description": "The ingestion's operation ID"
      },
      "OriginatesFromUpdatePolicy": {
        "type": "bool",
        "description": "Indicates if the failure originates from an Update Policy"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "ResultType": {
        "type": "string",
        "description": "Final state of this data ingestion operation like 'Failed'"
      },
      "RootActivityId": {
        "type": "string",
        "description": "The ingestion's activity ID Used for debugging issues"
      },
      "ShouldRetry": {
        "type": "bool",
        "description": "Indicates if the failure is temporary and the operation should"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "Table": {
        "type": "string",
        "description": "The name of the target table the data is ingested into"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The time (UTC) when this event was generated"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "SynapseDXIngestionBatching": {
    "tableName": "SynapseDXIngestionBatching",
    "description": "Azure data explore synapse ingestion batching operations. These logs have detailed statistics of batches ready for ingestion (duration, batch size and blobs count)",
    "columns": {
      "BatchingType": {
        "type": "string",
        "description": "Batching type: Whether the batch reached the limit of batching time,"
      },
      "BatchSizeBytes": {
        "type": "long",
        "description": "Total uncompressed size of data in this batch (bytes)"
      },
      "BatchTimeSeconds": {
        "type": "real",
        "description": "Total batching time of this batch (seconds)"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Database": {
        "type": "string",
        "description": "The name of the database holding the target table"
      },
      "DataSourcesInBatch": {
        "type": "int",
        "description": "Number of data sources in this batch"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "RootActivityId": {
        "type": "string",
        "description": "The operation's activity ID"
      },
      "SourceCreationTime": {
        "type": "datetime",
        "description": "When the first blobs in this batch were created (UTC time)"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "Table": {
        "type": "string",
        "description": "The name of the target table the data is ingested into"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The time (UTC) this event was generated"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "SynapseDXQuery": {
    "tableName": "SynapseDXQuery",
    "description": "Azure data explorer synpase query execution summary. Logs include DatabaseName, State, Duration that can be used for monitoring the queries which were invoked on the cluster",
    "columns": {
      "ApplicationName": {
        "type": "string",
        "description": "The name of the application that invoked the query"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CacheDiskHits": {
        "type": "long",
        "description": "Disk cache hits"
      },
      "CacheDiskMisses": {
        "type": "long",
        "description": "Disk cache misses"
      },
      "CacheMemoryHits": {
        "type": "long",
        "description": "Memory cache hits"
      },
      "CacheMemoryMisses": {
        "type": "long",
        "description": "Memory cache misses"
      },
      "CacheShardsBypassBytes": {
        "type": "long",
        "description": "Shards cache bypass bytes"
      },
      "CacheShardsColdHits": {
        "type": "long",
        "description": "Shards cold cache hits"
      },
      "CacheShardsColdMisses": {
        "type": "long",
        "description": "Shards cold cache misses"
      },
      "CacheShardsHotHits": {
        "type": "long",
        "description": "Shards hot cache hits"
      },
      "CacheShardsHotMisses": {
        "type": "long",
        "description": "Shards hot cache misses"
      },
      "Category": {
        "type": "string",
        "description": "The log category for these events will be 'Query'"
      },
      "CorrelationId": {
        "type": "string",
        "description": "The client request ID"
      },
      "DatabaseName": {
        "type": "string",
        "description": "The name of the database the command ran on"
      },
      "Duration": {
        "type": "string",
        "description": "Query duration as a string like '00:00:00.0156250'"
      },
      "ExtentsMaxDataScannedTime": {
        "type": "datetime",
        "description": "Maximum data scan time"
      },
      "ExtentsMinDataScannedTime": {
        "type": "datetime",
        "description": "Minimum data scan time"
      },
      "FailureReason": {
        "type": "string",
        "description": "The reason for the failure"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "LastUpdatedOn": {
        "type": "datetime",
        "description": "The time (UTC) this command ended"
      },
      "MemoryPeak": {
        "type": "long",
        "description": "Memory peak"
      },
      "Principal": {
        "type": "string",
        "description": "The principal that invoked the query like"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "RootActivityId": {
        "type": "string",
        "description": "The root activity ID"
      },
      "ScannedExtentsCount": {
        "type": "long",
        "description": "Scanned extents count"
      },
      "ScannedRowsCount": {
        "type": "long",
        "description": "Scanned rows count"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "StartedOn": {
        "type": "datetime",
        "description": "The time (UTC) this command started"
      },
      "State": {
        "type": "string",
        "description": "The state the command ended with like 'Completed'"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TableCount": {
        "type": "int",
        "description": "Table count"
      },
      "TablesStatistics": {
        "type": "dynamic",
        "description": "Tables statistics"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "Text": {
        "type": "string",
        "description": "Text of the invoked query"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The time (UTC) this event was generated"
      },
      "TotalCPU": {
        "type": "string",
        "description": "Total CPU runtime across cluster nodes"
      },
      "TotalExtentsCount": {
        "type": "long",
        "description": "Total extents count"
      },
      "TotalRowsCount": {
        "type": "long",
        "description": "Total rows count"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "User": {
        "type": "string",
        "description": "User that invoked the query"
      },
      "WorkloadGroup": {
        "type": "string",
        "description": "Workload are a means of resource governance for incoming"
      }
    }
  },
  "SynapseDXSucceededIngestion": {
    "tableName": "SynapseDXSucceededIngestion",
    "description": "Succeeded ingestion operations logs provide information about successfully completed ingest operations. Logs include data source details that together with Failed ingestion operations logs can be used for tracking the process of ingestion of each data source. Ingestion logs are supported for queued ingestion to the ingestion endpoint using SDKs, data connections, and connectors",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Database": {
        "type": "string",
        "description": "The name of the database holding the target table"
      },
      "IngestionSourceId": {
        "type": "string",
        "description": "The ingestion source ID"
      },
      "IngestionSourcePath": {
        "type": "string",
        "description": "Azure blob storage URI"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "OperationId": {
        "type": "string",
        "description": "The ingestion's operation ID"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultType": {
        "type": "string",
        "description": "Final state of this data ingestion operation like 'Succeeded'"
      },
      "RootActivityId": {
        "type": "string",
        "description": "The ingestion's activity ID"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "SucceededOn": {
        "type": "datetime",
        "description": "The time this ingest operation ended successfully"
      },
      "Table": {
        "type": "string",
        "description": "The name of the target table the data is ingested into"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The time (UTC) when this event was generated"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "SynapseDXTableDetails": {
    "tableName": "SynapseDXTableDetails",
    "description": "Azure Data Explorer Synpase table details",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CachingPolicy": {
        "type": "dynamic",
        "description": "Table's effective entity caching policy, serialized as JSON"
      },
      "CachingPolicyOrigin": {
        "type": "string",
        "description": "Caching policy origin entity (Table/Database/Cluster)"
      },
      "CorrelationId": {
        "type": "string",
        "description": "The client request ID"
      },
      "DatabaseName": {
        "type": "string",
        "description": "Name of the database"
      },
      "HotExtentCount": {
        "type": "long",
        "description": "Total number of extents in the table, stored in the hot cache"
      },
      "HotExtentSize": {
        "type": "real",
        "description": "Total size of extents (compressed size + index size) in the table,"
      },
      "HotOriginalSize": {
        "type": "long",
        "description": "Total original size of data in the table, stored in the hot cache (in"
      },
      "HotRowCount": {
        "type": "long",
        "description": "Total number of rows in the table, stored in the hot cache"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "MaxExtentsCreationTime": {
        "type": "datetime",
        "description": "Maximum creation time of an extent in the table (or null, if there"
      },
      "MinExtentsCreationTime": {
        "type": "datetime",
        "description": "Minimum creation time of an extent in the table (or null, if there"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "RetentionPolicy": {
        "type": "dynamic",
        "description": "Table's effective entity retention policy, serialized as JSON"
      },
      "RetentionPolicyOrigin": {
        "type": "string",
        "description": "Retention policy origin entity (Table/Database/Cluster)"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TableName": {
        "type": "string",
        "description": "Name of the table"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The time (UTC) this event was generated"
      },
      "TotalExtentCount": {
        "type": "long",
        "description": "Total number of extents in the table"
      },
      "TotalExtentSize": {
        "type": "real",
        "description": "Total size of extents (compressed size + index size) in the table (in"
      },
      "TotalOriginalSize": {
        "type": "real",
        "description": "The total original data size in the table (in bytes)"
      },
      "TotalRowCount": {
        "type": "long",
        "description": "Total number of rows in the table"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "SynapseDXTableUsageStatistics": {
    "tableName": "SynapseDXTableUsageStatistics",
    "description": "Azure date explorer synapse table usage statistics. Logs include DatabaseName, TableName, User that can be used for monitoring cluster's table usage",
    "columns": {
      "ApplicationName": {
        "type": "string",
        "description": "The name of the application that invoked the command"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CorrelationId": {
        "type": "string",
        "description": "The client request ID"
      },
      "DatabaseName": {
        "type": "string",
        "description": "Name of the database"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "MaxCreatedOn": {
        "type": "datetime",
        "description": "Lastest extent time of the table"
      },
      "MinCreatedOn": {
        "type": "datetime",
        "description": "Earliest extent time of the table"
      },
      "Principal": {
        "type": "string",
        "description": "Principal that invoked the query like 'aaduser=USER_ID;TENANT'"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "RootActivityId": {
        "type": "string",
        "description": "The root activity ID"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "StartedOn": {
        "type": "datetime",
        "description": "The time (UTC) the table usage statistics operation started"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TableName": {
        "type": "string",
        "description": "Name of the table"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The time (UTC) this event was generated"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "User": {
        "type": "string",
        "description": "User that invoked the query"
      }
    }
  },
  "SynapseGatewayApiRequests": {
    "tableName": "SynapseGatewayApiRequests",
    "description": "Azure Synapse gateway API requests.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The category of the log."
      },
      "ClientCorrelationId": {
        "type": "string",
        "description": "The client correlation id of this query."
      },
      "CorrelationId": {
        "type": "string",
        "description": "A GUID used to group together a set of related events."
      },
      "Identity": {
        "type": "dynamic",
        "description": "A JSON blob that describes the identity of the user or application that"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Location": {
        "type": "string",
        "description": "The region of the resource emitting the event."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The API Version of the operation."
      },
      "RequestUri": {
        "type": "string",
        "description": "The request URI for this query."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultDescription": {
        "type": "string",
        "description": "The static text description of this operation."
      },
      "ResultSignature": {
        "type": "string",
        "description": "The sub status of the event"
      },
      "ResultType": {
        "type": "string",
        "description": "Status of the event."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "SynapseIntegrationActivityRuns": {
    "tableName": "SynapseIntegrationActivityRuns",
    "description": "Logs for Synapse integration activity runs.",
    "columns": {
      "ActivityName": {
        "type": "string",
        "description": "The name of the activity run."
      },
      "ActivityRunId": {
        "type": "string",
        "description": "The run id of the activity run."
      },
      "ActivityType": {
        "type": "string",
        "description": "The type of the activity run."
      },
      "Annotations": {
        "type": "dynamic",
        "description": "The annotation details of the log record."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The category of the log."
      },
      "CorrelationId": {
        "type": "string",
        "description": "The correlationId for the log record."
      },
      "EffectiveIntegrationRuntime": {
        "type": "string",
        "description": "The effective integration runtime the activity run job."
      },
      "End": {
        "type": "datetime",
        "description": "The end time (UTC) for the activity run."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable"
      },
      "Level": {
        "type": "string",
        "description": "The log type info level of the record."
      },
      "Location": {
        "type": "string",
        "description": "The location of the resource in the cloud where this log is"
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "PipelineName": {
        "type": "string",
        "description": "The pipeline name of the activity flow."
      },
      "PipelineRunId": {
        "type": "string",
        "description": "The pipeline runId of the activity flow."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "Start": {
        "type": "datetime",
        "description": "The start time (UTC) of the activity run."
      },
      "Status": {
        "type": "string",
        "description": "The Status of the sql requests."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "Tags": {
        "type": "dynamic",
        "description": "The associated tags of the log record."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserProperties": {
        "type": "dynamic",
        "description": "The user properties of the log record."
      }
    }
  },
  "SynapseIntegrationPipelineRuns": {
    "tableName": "SynapseIntegrationPipelineRuns",
    "description": "Logs for Synapse integration pipeline runs.",
    "columns": {
      "Annotations": {
        "type": "dynamic",
        "description": "The annotation details of the log record."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The category of the log."
      },
      "CorrelationId": {
        "type": "string",
        "description": "The correlationId for the log record."
      },
      "End": {
        "type": "datetime",
        "description": "The end time (UTC) for the pipelien run."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Level": {
        "type": "string",
        "description": "The log type info level of the record."
      },
      "Location": {
        "type": "string",
        "description": "The location of the resource in the cloud where this log is originated."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "Parameters": {
        "type": "dynamic",
        "description": "The parameter details of the pipeline run."
      },
      "PipelineName": {
        "type": "string",
        "description": "The name of the pipeline flow."
      },
      "PipelineTenantId": {
        "type": "string",
        "description": "The tenantId details of the pipeline run."
      },
      "Predecessors": {
        "type": "dynamic",
        "description": "The predecessors information of the pipeline log."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "RunId": {
        "type": "string",
        "description": "The run id of the pipeline job."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "Start": {
        "type": "datetime",
        "description": "The start time (UTC) of the pipeline run."
      },
      "Status": {
        "type": "string",
        "description": "The Status of the SQL requests."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "SystemParameters": {
        "type": "dynamic",
        "description": "The system parameter details of the pipeline run."
      },
      "Tags": {
        "type": "dynamic",
        "description": "The associated tags of the log record."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The type of the pipeline run."
      },
      "UserProperties": {
        "type": "dynamic",
        "description": "The user properties of the log record."
      }
    }
  },
  "SynapseIntegrationTriggerRuns": {
    "tableName": "SynapseIntegrationTriggerRuns",
    "description": "Logs for Synapse integration trigger runs.",
    "columns": {
      "Annotations": {
        "type": "dynamic",
        "description": "The annotation details of the log record."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The category of the log."
      },
      "CorrelationId": {
        "type": "string",
        "description": "The correlationId for the log record."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Level": {
        "type": "string",
        "description": "The log type info level of the record."
      },
      "Location": {
        "type": "string",
        "description": "The location of the resource in the cloud where this log is originated."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "Parameters": {
        "type": "dynamic",
        "description": "The parameter details of the pipeline run."
      },
      "PipelineTenantId": {
        "type": "string",
        "description": "The tenantId details of the pipeline run."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "Start": {
        "type": "datetime",
        "description": "The start time (UTC) of the trigger run."
      },
      "Status": {
        "type": "string",
        "description": "The Status of the SQL requests."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "SystemParameters": {
        "type": "dynamic",
        "description": "The system parameter details of the pipeline run."
      },
      "Tags": {
        "type": "dynamic",
        "description": "The associated tags of the log record."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "TriggerEvent": {
        "type": "string",
        "description": "The trigger id of the log record."
      },
      "TriggerId": {
        "type": "string",
        "description": "The trigger id of the log record."
      },
      "TriggerName": {
        "type": "string",
        "description": "The trigger name of the log record."
      },
      "TriggerType": {
        "type": "string",
        "description": "The trigger type of the log record."
      },
      "Type": {
        "type": "string",
        "description": "The type of the pipeline run."
      },
      "UserProperties": {
        "type": "dynamic",
        "description": "The user properties of the log record."
      }
    }
  },
  "SynapseLinkEvent": {
    "tableName": "SynapseLinkEvent",
    "description": "Information about Synapse Link, including Link status and Link table status.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Level": {
        "type": "int",
        "description": "The log type info level of the record."
      },
      "LinkConnectionName": {
        "type": "string",
        "description": "The Synapse Link connection name."
      },
      "Location": {
        "type": "string",
        "description": "The location of the resource in the cloud where this log is originated."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "Properties": {
        "type": "dynamic",
        "description": "The properties associated with Synapse Link operation."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "SynapseRbacOperations": {
    "tableName": "SynapseRbacOperations",
    "description": "Azure Synapse role-based access control (SRBAC) operations.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The category of the log."
      },
      "CorrelationId": {
        "type": "string",
        "description": "A GUID used to group together a set of related events."
      },
      "Identity": {
        "type": "dynamic",
        "description": "A JSON blob that describes the identity of the user or application that"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Location": {
        "type": "string",
        "description": "The region of the resource emitting the event."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The API version of the operation."
      },
      "Properties": {
        "type": "dynamic",
        "description": "extended properties related to this event."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultDescription": {
        "type": "string",
        "description": "The static text description of this operation."
      },
      "ResultSignature": {
        "type": "string",
        "description": "The sub status of the event."
      },
      "ResultType": {
        "type": "string",
        "description": "Status of the event."
      },
      "RoleAssignmentId": {
        "type": "string",
        "description": "The Role Assignment Id for this event."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "SynapseScopePoolScopeJobsEnded": {
    "tableName": "SynapseScopePoolScopeJobsEnded",
    "description": "SCOPE ended event including SCOPE job result and Information about the job.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CorrelationId": {
        "type": "string",
        "description": "A GUID used to group together a set of related events."
      },
      "Identity": {
        "type": "dynamic",
        "description": "A JSON blob that describes the identity of the user or application that"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "Properties": {
        "type": "dynamic",
        "description": "Extended properties related to this event."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "SynapseScopePoolScopeJobsStateChange": {
    "tableName": "SynapseScopePoolScopeJobsStateChange",
    "description": "SCOPE job state change event.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CorrelationId": {
        "type": "string",
        "description": "A GUID used to group together a set of related events."
      },
      "Identity": {
        "type": "dynamic",
        "description": "A JSON blob that describes the identity of the user or application that"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "Properties": {
        "type": "dynamic",
        "description": "Extended properties related to this event."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "SynapseSqlPoolDmsWorkers": {
    "tableName": "SynapseSqlPoolDmsWorkers",
    "description": "Information about workers completing DMS steps in an Azure Synapse dedicated SQL pool.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "BytesProcessed": {
        "type": "int",
        "description": "The bytes processed of the DMS workers."
      },
      "Category": {
        "type": "string",
        "description": "The category of the log."
      },
      "CpuTime": {
        "type": "int",
        "description": "The cpu time for the DMS workers."
      },
      "DestinationInfo": {
        "type": "string",
        "description": "The row count of the DMS workers."
      },
      "DistributionId": {
        "type": "int",
        "description": "The distribution id of the DMS workers."
      },
      "DmsCpuId": {
        "type": "int",
        "description": "The DMS cpu Id for the DMS workers."
      },
      "DmsStepIndex": {
        "type": "int",
        "description": "The DMS step index of the DMS workers."
      },
      "EndTime": {
        "type": "datetime",
        "description": "The end time (UTC) for the DMS workers."
      },
      "ErrorId": {
        "type": "string",
        "description": "The errorId of the DMS workers."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogicalServerName": {
        "type": "string",
        "description": "The logical server name of the SQL DW."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "PdwNodeId": {
        "type": "int",
        "description": "The pdw node id of the DMS workers."
      },
      "RequestId": {
        "type": "string",
        "description": "The requestId of the DMS workers."
      },
      "ResourceGroup": {
        "type": "string",
        "description": "The azure resourceGroup of the SQL DW."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "RowsProcessed": {
        "type": "int",
        "description": "The rows processed of the DMS workers."
      },
      "SourceInfo": {
        "type": "string",
        "description": "The row count of the DMS workers."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "SqlSpId": {
        "type": "int",
        "description": "The SQL Sp Id for the DMS workers."
      },
      "StartTime": {
        "type": "datetime",
        "description": "The startTime (UTC) of the DMS workers."
      },
      "Status": {
        "type": "string",
        "description": "The status of the DMS workers."
      },
      "StepIndex": {
        "type": "int",
        "description": "The step index of the DMS workers."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The type of the DMS workers."
      }
    }
  },
  "SynapseSqlPoolExecRequests": {
    "tableName": "SynapseSqlPoolExecRequests",
    "description": "Information about SQL requests or queries in an Azure Synapse dedicated SQL pool.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The category of the log."
      },
      "ClassifierName": {
        "type": "string",
        "description": "The classifier name of the execution requests."
      },
      "ClientCorrelationId": {
        "type": "string",
        "description": "The correlation set by client/user."
      },
      "Command": {
        "type": "string",
        "description": "The SQL command of the execution requests."
      },
      "DatabaseId": {
        "type": "string",
        "description": "The databaseId of the execution requests."
      },
      "EndCompileTime": {
        "type": "datetime",
        "description": "The end compile time (UTC) of the execution requests."
      },
      "EndTime": {
        "type": "datetime",
        "description": "The end time (UTC) for the execution requests."
      },
      "ErrorId": {
        "type": "string",
        "description": "The errorId of the execution requests."
      },
      "ExplainOutput": {
        "type": "string",
        "description": "The output explain of the execution requests."
      },
      "Importance": {
        "type": "string",
        "description": "The importance of the execution requests."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable"
      },
      "Label": {
        "type": "string",
        "description": "The label of the execution requests."
      },
      "LogicalServerName": {
        "type": "string",
        "description": "The logical server name of the SQL DW."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "RequestId": {
        "type": "string",
        "description": "The requestId of the execution requests."
      },
      "ResourceAllocationPercent": {
        "type": "string",
        "description": "The resource allocation percent of the execution requests."
      },
      "ResourceClass": {
        "type": "string",
        "description": "The resource class of the execution requests."
      },
      "ResourceGroup": {
        "type": "string",
        "description": "The azure resourceGroup of the SQL DW."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "ResultCacheHit": {
        "type": "string",
        "description": "The result cache hit of the execution requests."
      },
      "RootQueryId": {
        "type": "string",
        "description": "The rootQueryId of the execution requests."
      },
      "ScopeDepth": {
        "type": "int",
        "description": "The scope depth of the execution requests."
      },
      "SessionId": {
        "type": "string",
        "description": "The Session ID of the SQL pool instance."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "StartTime": {
        "type": "datetime",
        "description": "The startTime (UTC) of the execution requests."
      },
      "StatementType": {
        "type": "string",
        "description": "The statement type of the execution requests."
      },
      "Status": {
        "type": "string",
        "description": "The status of the execution requests."
      },
      "SubmitTime": {
        "type": "datetime",
        "description": "The submitTime (UTC) of the execution requests."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "SynapseSqlPoolRequestSteps": {
    "tableName": "SynapseSqlPoolRequestSteps",
    "description": "Information about request steps that compose a given SQL request or query in an Azure Synapse dedicated SQL pool.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The category of the log."
      },
      "Command": {
        "type": "string",
        "description": "The SQL command of the execution requests."
      },
      "DistributionType": {
        "type": "string",
        "description": "The distribution type of the execution requests."
      },
      "EndCompileTime": {
        "type": "datetime",
        "description": "The end compile time (UTC) of the execution requests."
      },
      "EndTime": {
        "type": "datetime",
        "description": "The end time (UTC) for the execution requests."
      },
      "ErrorId": {
        "type": "string",
        "description": "The errorId of the execution requests."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LocationType": {
        "type": "string",
        "description": "The location type of the execution requests."
      },
      "LogicalServerName": {
        "type": "string",
        "description": "The logical server name of the SQL DW."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "OperationType": {
        "type": "string",
        "description": "The operation type of the execution requests."
      },
      "RequestId": {
        "type": "string",
        "description": "The requestId of the execution requests."
      },
      "ResourceGroup": {
        "type": "string",
        "description": "The azure resourceGroup of the SQL DW."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "RowCount": {
        "type": "int",
        "description": "The row count of the execution requests."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "StartTime": {
        "type": "datetime",
        "description": "The startTime (UTC) of the execution requests."
      },
      "Status": {
        "type": "string",
        "description": "The status of the execution requests."
      },
      "StepIndex": {
        "type": "int",
        "description": "The step index of the execution requests."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "SynapseSqlPoolSqlRequests": {
    "tableName": "SynapseSqlPoolSqlRequests",
    "description": "Information about query distributions of the steps of SQL requests/queries in an Azure Synapse dedicated SQL pool.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The category of the log."
      },
      "Command": {
        "type": "string",
        "description": "The command of the SQL requests."
      },
      "DistributionId": {
        "type": "int",
        "description": "The distribution id of the SQL requests."
      },
      "EndTime": {
        "type": "datetime",
        "description": "The end time (UTC) for the SQL requests."
      },
      "ErrorId": {
        "type": "string",
        "description": "The error id of the SQL requests."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LogicalServerName": {
        "type": "string",
        "description": "The logical server name of the SQL DW."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "PdwNodeId": {
        "type": "int",
        "description": "The PdwNodeId of the SQL requests."
      },
      "RequestId": {
        "type": "string",
        "description": "The request Id of the SQL requests."
      },
      "ResourceGroup": {
        "type": "string",
        "description": "The azure resourceGroup of the SQL DW."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "RowCount": {
        "type": "int",
        "description": "The row count of the SQL requests."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "SpId": {
        "type": "int",
        "description": "The sp id of the SQL requests."
      },
      "StartTime": {
        "type": "datetime",
        "description": "The startTime (UTC) of the SQL requests."
      },
      "Status": {
        "type": "string",
        "description": "The Status of the SQL requests."
      },
      "StepIndex": {
        "type": "int",
        "description": "The step index of the SQL requests."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "SynapseSqlPoolWaits": {
    "tableName": "SynapseSqlPoolWaits",
    "description": "Information about the wait states encountered during execution of a SQL request/query in an Azure Synapse dedicated SQL pool, including locks and waits on transmission queues.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The category of the log."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "LockType": {
        "type": "string",
        "description": "The lock type of the SQL instance."
      },
      "LogicalServerName": {
        "type": "string",
        "description": "The logical server name of the SQL DW."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation associated with log record."
      },
      "Priority": {
        "type": "int",
        "description": "The priority of the waits."
      },
      "RequestId": {
        "type": "string",
        "description": "The request ID of the waits."
      },
      "ResourceGroup": {
        "type": "string",
        "description": "The azure resourceGroup of the SQL DW."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SessionId": {
        "type": "string",
        "description": "The session ID of the SQL request."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "State": {
        "type": "string",
        "description": "The State of the waits."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time the record was created."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "CollectorHostName": {
        "type": "string",
        "description": "Name of the system on which the collector agent is installed."
      },
      "Computer": {
        "type": "string",
        "description": "Computer from which the event originated."
      },
      "EventTime": {
        "type": "datetime",
        "description": "Date and time that the event was generated."
      },
      "Facility": {
        "type": "string",
        "description": "The part of the system that generated the message."
      },
      "HostIP": {
        "type": "string",
        "description": "IP address of the system from which the message originated."
      },
      "HostName": {
        "type": "string",
        "description": "Name of the system from which the message originated."
      },
      "ProcessID": {
        "type": "int",
        "description": "ID of the process that generated the message."
      },
      "ProcessName": {
        "type": "string",
        "description": "Name of the process that generated the message."
      },
      "SeverityLevel": {
        "type": "string",
        "description": "Severity level of the event."
      },
      "SyslogMessage": {
        "type": "string",
        "description": "Text of the message."
      }
    }
  },
  "TOUserAudits": {
    "tableName": "TOUserAudits",
    "description": "Contains all Toolchain orchestrator API Server audit logs including the events generated as a result of interactions with any external system or toolchain. These events are useful for monitoring all the interactions with the Toolchain orchestrator API server and between Toolchain orchestrator and external orchestrated targets, e.g. Kubernetes. Requires Diagnostic Settings to use the Resource Specific destination table.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "Category of the event."
      },
      "CorrelationId": {
        "type": "string",
        "description": "Correlation ID of the operation."
      },
      "EdgeLocation": {
        "type": "string",
        "description": "The Azure Edge custom location resource Id on which the"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Location": {
        "type": "string",
        "description": "Azure region in which the Toolchain orchestrator diagnostic"
      },
      "Message": {
        "type": "string",
        "description": "The audit message."
      },
      "OperatingResourceId": {
        "type": "string",
        "description": "The operating resource id refers to the specific operational"
      },
      "OperatingResourceK8SId": {
        "type": "string",
        "description": "The operating resource K8s id refers to K8s resource id"
      },
      "OperationName": {
        "type": "string",
        "description": "Operation name of the event."
      },
      "Properties": {
        "type": "dynamic",
        "description": "Properties of the event."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Event generation time."
      },
      "TOServiceInstance": {
        "type": "string",
        "description": "Toolchain orchestrator service pod name."
      },
      "TOServiceName": {
        "type": "string",
        "description": "Toolchain orchestrator service name."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "User": {
        "type": "string",
        "description": "The Microsoft Entra ID object Id of the requester."
      }
    }
  },
  "TOUserDiagnostics": {
    "tableName": "TOUserDiagnostics",
    "description": "Contains all Toolchain orchestrator API Server user diagnostics logs. These events are useful for diagnose failed requests on Toolchain orchestrator. Requires Diagnostic Settings to use the Resource Specific destination table.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "Category of the event."
      },
      "CorrelationId": {
        "type": "string",
        "description": "Correlation ID of the operation."
      },
      "EdgeLocation": {
        "type": "string",
        "description": "The Azure Edge custom location resource Id on which the"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Location": {
        "type": "string",
        "description": "Azure region in which the Toolchain orchestrator diagnostic"
      },
      "Message": {
        "type": "string",
        "description": "The diagnose message."
      },
      "OperatingResourceId": {
        "type": "string",
        "description": "The operating resource id refers to the specific operational"
      },
      "OperatingResourceK8SId": {
        "type": "string",
        "description": "The operating resource K8s id refers to K8s resource id"
      },
      "OperationName": {
        "type": "string",
        "description": "Operation name of the event."
      },
      "Properties": {
        "type": "dynamic",
        "description": "Properties of the event."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Event generation time."
      },
      "TOServiceInstance": {
        "type": "string",
        "description": "Toolchain orchestrator service pod name."
      },
      "TOServiceName": {
        "type": "string",
        "description": "Toolchain orchestrator service name."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "User": {
        "type": "string",
        "description": "The Microsoft Entra ID object Id of the requester."
      }
    }
  },
  "TSIIngress": {
    "tableName": "TSIIngress",
    "description": "The Ingress category tracks errors that occur in the ingress pipeline. This category includes errors that occur when receiving events (such as failures to connect to an Event Source) and processing events (such as errors when parsing an event payload).",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "Category of the log event."
      },
      "CorrelationId": {
        "type": "string",
        "description": "The correlation ID of the request."
      },
      "ErrorCode": {
        "type": "string",
        "description": "The code associated with the error"
      },
      "EventSourceProperties": {
        "type": "dynamic",
        "description": "A collection of properties specific to your event source. Contains"
      },
      "EventSourceType": {
        "type": "string",
        "description": "The type of event source. It could either be Event hub or IoT hub."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Level": {
        "type": "string",
        "description": "The severity level of the event."
      },
      "Location": {
        "type": "string",
        "description": "The location of the resource."
      },
      "Message": {
        "type": "string",
        "description": "The message associated with the error. Includes details on what went"
      },
      "OperationName": {
        "type": "string",
        "description": "Operation name of the event."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResultDescription": {
        "type": "string",
        "description": "Description of the result of the operation, such as 'Received"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Time (UTC) at which this event is generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "ThreatIntelExportOperation": {
    "tableName": "ThreatIntelExportOperation",
    "description": "Threat Intelligence Export Operation Logs.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DestinationInfo": {
        "type": "dynamic",
        "description": "Additional information about the export destination depending on"
      },
      "ErrorDetails": {
        "type": "string",
        "description": "Additional information when Status is 'Failure' / 'Timeout'."
      },
      "ExportDuration": {
        "type": "int",
        "description": "The total time, in seconds, taken to complete the export operation."
      },
      "ExportedBy": {
        "type": "string",
        "description": "The user who initiated the export operation (email address)."
      },
      "ExportId": {
        "type": "string",
        "description": "A value that uniquely identifies the Export operation."
      },
      "ExportType": {
        "type": "string",
        "description": "Represents the export destination type. e.g. TAXII"
      },
      "Id": {
        "type": "string",
        "description": "A value that uniquely identifies the indicator STIX object. This value is usable"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "Status": {
        "type": "string",
        "description": "Status of the export operation, possible values: 'Success', 'Failure', 'Timeout'."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeExported": {
        "type": "datetime",
        "description": "The time of export to destination (UTC)."
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp of when the log entry was generated (UTC)."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "ThreatIntelIndicators": {
    "tableName": "ThreatIntelIndicators",
    "description": "Threat Intelligence table that contains STIX indicators.",
    "columns": {
      "AdditionalFields": {
        "type": "dynamic",
        "description": "The type specifc fields that Sentinel adds. Contains the TLPLevel: white,"
      },
      "AzureTenantId": {
        "type": "string",
        "description": "The tenant that submitted the indicator."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Confidence": {
        "type": "int",
        "description": "The confidence that the creator has in the correctness of their data. The"
      },
      "Created": {
        "type": "datetime",
        "description": "The date when the indicator was created."
      },
      "Data": {
        "type": "dynamic",
        "description": "All object properties, formatted according to the STIX specification"
      },
      "Id": {
        "type": "string",
        "description": "A value that uniquely identifies the indicator STIX object. This value is"
      },
      "IsActive": {
        "type": "bool",
        "description": "A value that specifies if an indicator is active and valid for detections."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "IsDeleted": {
        "type": "bool",
        "description": "A value that indicates whether the data was deleted from Sentinel or"
      },
      "LastUpdateMethod": {
        "type": "string",
        "description": "The component that last updated the indicator."
      },
      "Modified": {
        "type": "datetime",
        "description": "The date when the indicator was modified."
      },
      "ObservableKey": {
        "type": "string",
        "description": "The entire left-hand side of an equality comparison from the pattern."
      },
      "ObservableValue": {
        "type": "string",
        "description": "The entire right-hand side of an equality comparison from the pattern."
      },
      "Pattern": {
        "type": "string",
        "description": "The detection pattern for this indicator MAY be expressed as a STIX"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Revoked": {
        "type": "bool",
        "description": "A value that specifies whether the indicator was revoked."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "Tags": {
        "type": "string",
        "description": "Sentinel defined tags for the indicator."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The time of indicator ingestion."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "ValidFrom": {
        "type": "datetime",
        "description": "The time from which this indicator is considered a valid indicator of the"
      },
      "ValidUntil": {
        "type": "datetime",
        "description": "The time at which this indicator should no longer be considered a valid"
      },
      "WorkspaceId": {
        "type": "string",
        "description": "The workspace that submitted the indicator."
      }
    }
  },
  "ThreatIntelObjects": {
    "tableName": "ThreatIntelObjects",
    "description": "Threat Intelligence Generic STIX Object Table.",
    "columns": {
      "AdditionalFields": {
        "type": "dynamic",
        "description": "The type specifc fields that Sentinel adds. Contains the TLPLevel: white,"
      },
      "AzureTenantId": {
        "type": "string",
        "description": "The tenant that submitted the STIX object."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Data": {
        "type": "dynamic",
        "description": "All object properties, formatted according to STIX specification"
      },
      "Id": {
        "type": "string",
        "description": "A value that uniquely identifies the STIX object. This value is usable with"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "IsDeleted": {
        "type": "bool",
        "description": "A value that indicates whether the data was deleted from Sentinel or"
      },
      "LastUpdateMethod": {
        "type": "string",
        "description": "The component that last updated the record."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "StixType": {
        "type": "string",
        "description": "The name of this STIX Object."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The time of STIX object ingestion."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "WorkspaceId": {
        "type": "string",
        "description": "The workspace that submitted the STIX object."
      }
    }
  },
  "ThreatIntelligenceIndicator": {
    "tableName": "ThreatIntelligenceIndicator",
    "description": "Threat Intelligence Indicator",
    "columns": {
      "Action": {
        "type": "string",
        "description": "Action to take on indicator match."
      },
      "Active": {
        "type": "bool",
        "description": "Indicates whether indicator is active."
      },
      "ActivityGroupNames": {
        "type": "string",
        "description": "Activity groups associated with indicator."
      },
      "AdditionalInformation": {
        "type": "string",
        "description": "Free text additional information for indicator."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ConfidenceScore": {
        "type": "real",
        "description": "Confidence rating of the indicator, from 0 to 100."
      },
      "Description": {
        "type": "string",
        "description": "Description of the indicator."
      },
      "DiamondModel": {
        "type": "string",
        "description": "Diamond model value for the indicator, one of adversary,"
      },
      "DomainName": {
        "type": "string",
        "description": "The domain name observable."
      },
      "EmailEncoding": {
        "type": "string",
        "description": "The email encoding observable."
      },
      "EmailLanguage": {
        "type": "string",
        "description": "The email language observable."
      },
      "EmailRecipient": {
        "type": "string",
        "description": "The email recipient observable."
      },
      "EmailSenderAddress": {
        "type": "string",
        "description": "The email sender address observable."
      },
      "EmailSenderName": {
        "type": "string",
        "description": "The email sender name observable."
      },
      "EmailSourceDomain": {
        "type": "string",
        "description": "The email source domain observable."
      },
      "EmailSourceIpAddress": {
        "type": "string",
        "description": "The email source IP address observable."
      },
      "EmailSubject": {
        "type": "string",
        "description": "The email subject observable."
      },
      "EmailXMailer": {
        "type": "string",
        "description": "The email X-Mailer observable."
      },
      "ExpirationDateTime": {
        "type": "datetime",
        "description": "Time of indicator expiration."
      },
      "ExternalIndicatorId": {
        "type": "string",
        "description": "Identifier for indicator from submitting system."
      },
      "FileCompileDateTime": {
        "type": "datetime",
        "description": "The file compilation time observable."
      },
      "FileCreatedDateTime": {
        "type": "datetime",
        "description": "The file creation time observable."
      },
      "FileHashType": {
        "type": "string",
        "description": "The file hash type observable."
      },
      "FileHashValue": {
        "type": "string",
        "description": "The file hash value observable."
      },
      "FileMutexName": {
        "type": "string",
        "description": "The file mutex name observable."
      },
      "FileName": {
        "type": "string",
        "description": "The file name observable."
      },
      "FilePacker": {
        "type": "string",
        "description": "The file packer observable."
      },
      "FilePath": {
        "type": "string",
        "description": "The file path observable."
      },
      "FileSize": {
        "type": "int",
        "description": "The file size observable."
      },
      "FileType": {
        "type": "string",
        "description": "The file type observable."
      },
      "IndicatorId": {
        "type": "string",
        "description": "Unique identifier for indicator, calculated by receiving system."
      },
      "IndicatorProvider": {
        "type": "string",
        "description": "The name of the entity that provided the indicator."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "KillChainActions": {
        "type": "bool",
        "description": "Indicates whether kill chain value 'actions' is set."
      },
      "KillChainC2": {
        "type": "bool",
        "description": "Indicates whether kill chain value 'C2' is set."
      },
      "KillChainDelivery": {
        "type": "bool",
        "description": "Indicates whether kill chain value 'delivery' is set."
      },
      "KillChainExploitation": {
        "type": "bool",
        "description": "Indicates whether kill chain value 'exploitation' is set."
      },
      "KillChainReconnaissance": {
        "type": "bool",
        "description": "Indicates whether kill chain value 'reconniassance' is set."
      },
      "KillChainWeaponization": {
        "type": "bool",
        "description": "Indicates whether kill chain value 'weaponization' is set."
      },
      "KnownFalsePositives": {
        "type": "string",
        "description": "Text describing situations where indicator may cause false"
      },
      "MalwareNames": {
        "type": "string",
        "description": "List of malware names associated with indicator"
      },
      "NetworkCidrBlock": {
        "type": "string",
        "description": "The network CIDR block observable."
      },
      "NetworkDestinationAsn": {
        "type": "int",
        "description": "The network destination autonomous system number"
      },
      "NetworkDestinationCidrBlock": {
        "type": "string",
        "description": "The network destination CIDR block observable."
      },
      "NetworkDestinationIP": {
        "type": "string",
        "description": "The network destination IP address."
      },
      "NetworkDestinationPort": {
        "type": "int",
        "description": "The network destination port observable."
      },
      "NetworkIP": {
        "type": "string",
        "description": "The network IP address observable."
      },
      "NetworkPort": {
        "type": "int",
        "description": "The network port observable."
      },
      "NetworkProtocol": {
        "type": "int",
        "description": "The network protocol observable."
      },
      "NetworkSourceAsn": {
        "type": "int",
        "description": "The network source autonomous system number observable."
      },
      "NetworkSourceCidrBlock": {
        "type": "string",
        "description": "The network source CIDR block observable."
      },
      "NetworkSourceIP": {
        "type": "string",
        "description": "The network source IP address observable."
      },
      "NetworkSourcePort": {
        "type": "int",
        "description": "The network source port observable."
      },
      "PassiveOnly": {
        "type": "bool",
        "description": "Indicates whether the indicator should trigger an event that is"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "Tags": {
        "type": "string",
        "description": "Free form tags."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "ThreatSeverity": {
        "type": "int",
        "description": "Indicator severity rating from 0 to 5. Higher value indicates"
      },
      "ThreatType": {
        "type": "string",
        "description": "Threat type of indicator."
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Time of indicator ingestion."
      },
      "TrafficLightProtocolLevel": {
        "type": "string",
        "description": "Industry standard traffic light protocol level, one of white,"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "Url": {
        "type": "string",
        "description": "The url observable."
      },
      "UserAgent": {
        "type": "string",
        "description": "The user agent observable."
      }
    }
  },
  "UAApp": {
    "tableName": "UAApp",
    "description": "",
    "columns": {
      "AppCategory": {
        "type": "string",
        "description": ""
      },
      "AppLanguage": {
        "type": "string",
        "description": ""
      },
      "AppName": {
        "type": "string",
        "description": ""
      },
      "AppOwner": {
        "type": "string",
        "description": ""
      },
      "AppType": {
        "type": "string",
        "description": ""
      },
      "AppVendor": {
        "type": "string",
        "description": ""
      },
      "AppVersion": {
        "type": "string",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Computer": {
        "type": "string",
        "description": ""
      },
      "ComputerID": {
        "type": "string",
        "description": ""
      },
      "ComputersWithIssues": {
        "type": "int",
        "description": ""
      },
      "Guidance": {
        "type": "string",
        "description": ""
      },
      "Importance": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "IsRollup": {
        "type": "bool",
        "description": ""
      },
      "Issue": {
        "type": "string",
        "description": ""
      },
      "MonthlyActiveComputers": {
        "type": "int",
        "description": ""
      },
      "PercentActiveComputers": {
        "type": "string",
        "description": ""
      },
      "ReadyForWindows": {
        "type": "string",
        "description": ""
      },
      "RollupLevel": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "TestPlan": {
        "type": "string",
        "description": ""
      },
      "TestResult": {
        "type": "string",
        "description": ""
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "TotalInstalls": {
        "type": "int",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UpgradeAssessment": {
        "type": "string",
        "description": ""
      },
      "UpgradeDecision": {
        "type": "string",
        "description": ""
      }
    }
  },
  "UAComputer": {
    "tableName": "UAComputer",
    "description": "",
    "columns": {
      "AppIssues": {
        "type": "int",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Computer": {
        "type": "string",
        "description": ""
      },
      "ComputerID": {
        "type": "string",
        "description": ""
      },
      "ConfigMgrClientID": {
        "type": "string",
        "description": ""
      },
      "DeploymentError": {
        "type": "string",
        "description": ""
      },
      "DeploymentErrorDetails": {
        "type": "string",
        "description": ""
      },
      "DeploymentStatus": {
        "type": "string",
        "description": ""
      },
      "DriverIssues": {
        "type": "int",
        "description": ""
      },
      "HoursToUninstall": {
        "type": "int",
        "description": ""
      },
      "InventoryVersion": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "ItemRank": {
        "type": "int",
        "description": ""
      },
      "LastScan": {
        "type": "datetime",
        "description": ""
      },
      "Manufacturer": {
        "type": "string",
        "description": ""
      },
      "Model": {
        "type": "string",
        "description": ""
      },
      "OriginBuild": {
        "type": "string",
        "description": ""
      },
      "OriginOSVersion": {
        "type": "string",
        "description": ""
      },
      "OSArchitecture": {
        "type": "string",
        "description": ""
      },
      "OSBuild": {
        "type": "string",
        "description": ""
      },
      "OSEdition": {
        "type": "string",
        "description": ""
      },
      "OSVersion": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "SysReqIssues": {
        "type": "int",
        "description": ""
      },
      "TargetBuild": {
        "type": "string",
        "description": ""
      },
      "TargetOSVersion": {
        "type": "string",
        "description": ""
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "TotalIssues": {
        "type": "int",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UninstallComment": {
        "type": "string",
        "description": ""
      },
      "UninstallReason": {
        "type": "string",
        "description": ""
      },
      "UpgradeAssessment": {
        "type": "string",
        "description": ""
      },
      "UpgradeDecision": {
        "type": "string",
        "description": ""
      },
      "UserAction": {
        "type": "string",
        "description": ""
      }
    }
  },
  "UAComputerRank": {
    "tableName": "UAComputerRank",
    "description": "",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ComputerID": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "ItemRank": {
        "type": "int",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "UADriver": {
    "tableName": "UADriver",
    "description": "",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Computer": {
        "type": "string",
        "description": ""
      },
      "ComputerID": {
        "type": "string",
        "description": ""
      },
      "DriverAvailability": {
        "type": "string",
        "description": ""
      },
      "DriverDate": {
        "type": "string",
        "description": ""
      },
      "DriverName": {
        "type": "string",
        "description": ""
      },
      "DriverVendor": {
        "type": "string",
        "description": ""
      },
      "DriverVersion": {
        "type": "string",
        "description": ""
      },
      "Guidance": {
        "type": "string",
        "description": ""
      },
      "HardwareID": {
        "type": "string",
        "description": ""
      },
      "HardwareName": {
        "type": "string",
        "description": ""
      },
      "HardwareType": {
        "type": "string",
        "description": ""
      },
      "Importance": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "IsRollup": {
        "type": "bool",
        "description": ""
      },
      "Issue": {
        "type": "string",
        "description": ""
      },
      "RollupLevel": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "TotalComputers": {
        "type": "int",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UpgradeAssessment": {
        "type": "string",
        "description": ""
      },
      "UpgradeDecision": {
        "type": "string",
        "description": ""
      }
    }
  },
  "UADriverProblemCodes": {
    "tableName": "UADriverProblemCodes",
    "description": "",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Computer": {
        "type": "string",
        "description": ""
      },
      "ComputerID": {
        "type": "string",
        "description": ""
      },
      "DriverAvailability": {
        "type": "string",
        "description": ""
      },
      "DriverDate": {
        "type": "string",
        "description": ""
      },
      "DriverName": {
        "type": "string",
        "description": ""
      },
      "DriverVendor": {
        "type": "string",
        "description": ""
      },
      "DriverVersion": {
        "type": "string",
        "description": ""
      },
      "Guidance": {
        "type": "string",
        "description": ""
      },
      "HardwareID": {
        "type": "string",
        "description": ""
      },
      "HardwareName": {
        "type": "string",
        "description": ""
      },
      "HardwareType": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "ProblemCode": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "UAFeedback": {
    "tableName": "UAFeedback",
    "description": "",
    "columns": {
      "AppName": {
        "type": "string",
        "description": ""
      },
      "AppVersion": {
        "type": "string",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": ""
      },
      "Computer": {
        "type": "string",
        "description": ""
      },
      "ComputerID": {
        "type": "string",
        "description": ""
      },
      "Feedback": {
        "type": "string",
        "description": ""
      },
      "FeedbackSubmittedDate": {
        "type": "datetime",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "MicrosoftResponse": {
        "type": "string",
        "description": ""
      },
      "Sentiment": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Title": {
        "type": "string",
        "description": ""
      },
      "TotalUpvotes": {
        "type": "int",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "UAIESiteDiscovery": {
    "tableName": "UAIESiteDiscovery",
    "description": "",
    "columns": {
      "ActiveXGuid": {
        "type": "string",
        "description": ""
      },
      "ActiveXName": {
        "type": "string",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "BrowserStateReason": {
        "type": "string",
        "description": ""
      },
      "Computer": {
        "type": "string",
        "description": ""
      },
      "ComputerID": {
        "type": "string",
        "description": ""
      },
      "DocMode": {
        "type": "string",
        "description": ""
      },
      "DocModeReason": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "IsRollup": {
        "type": "bool",
        "description": ""
      },
      "NumberOfVisits": {
        "type": "int",
        "description": ""
      },
      "SiteName": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "URL": {
        "type": "string",
        "description": ""
      },
      "Zone": {
        "type": "string",
        "description": ""
      }
    }
  },
  "UAOfficeAddIn": {
    "tableName": "UAOfficeAddIn",
    "description": "",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Computer": {
        "type": "string",
        "description": ""
      },
      "ComputerID": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "OfficeAddInDescription": {
        "type": "string",
        "description": ""
      },
      "OfficeAddInID": {
        "type": "string",
        "description": ""
      },
      "OfficeAddInName": {
        "type": "string",
        "description": ""
      },
      "OfficeProduct": {
        "type": "string",
        "description": ""
      },
      "OfficeProductVersion": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "UAProposedActionPlan": {
    "tableName": "UAProposedActionPlan",
    "description": "",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ComputersUnblocked": {
        "type": "int",
        "description": ""
      },
      "CumulativeUnblocked": {
        "type": "int",
        "description": ""
      },
      "CumulativeUnblockedPct": {
        "type": "real",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "ItemHardwareID": {
        "type": "string",
        "description": ""
      },
      "ItemLanguage": {
        "type": "string",
        "description": ""
      },
      "ItemName": {
        "type": "string",
        "description": ""
      },
      "ItemRank": {
        "type": "int",
        "description": ""
      },
      "ItemType": {
        "type": "string",
        "description": ""
      },
      "ItemVendor": {
        "type": "string",
        "description": ""
      },
      "ItemVersion": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UpgradeDecision": {
        "type": "string",
        "description": ""
      }
    }
  },
  "UASysReqIssue": {
    "tableName": "UASysReqIssue",
    "description": "",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Computer": {
        "type": "string",
        "description": ""
      },
      "ComputerID": {
        "type": "string",
        "description": ""
      },
      "Guidance": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Issue": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "SysReqType": {
        "type": "string",
        "description": ""
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UpgradeAssessment": {
        "type": "string",
        "description": ""
      }
    }
  },
  "UAUpgradedComputer": {
    "tableName": "UAUpgradedComputer",
    "description": "",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Computer": {
        "type": "string",
        "description": ""
      },
      "ComputerID": {
        "type": "string",
        "description": ""
      },
      "ConfigMgrClientID": {
        "type": "string",
        "description": ""
      },
      "DeploymentError": {
        "type": "string",
        "description": ""
      },
      "DeploymentErrorDetails": {
        "type": "string",
        "description": ""
      },
      "DeploymentStatus": {
        "type": "string",
        "description": ""
      },
      "HoursToUninstall": {
        "type": "int",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "LastScan": {
        "type": "datetime",
        "description": ""
      },
      "Manufacturer": {
        "type": "string",
        "description": ""
      },
      "Model": {
        "type": "string",
        "description": ""
      },
      "OriginBuild": {
        "type": "string",
        "description": ""
      },
      "OriginOSVersion": {
        "type": "string",
        "description": ""
      },
      "OSArchitecture": {
        "type": "string",
        "description": ""
      },
      "OSBuild": {
        "type": "string",
        "description": ""
      },
      "OSEdition": {
        "type": "string",
        "description": ""
      },
      "OSVersion": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "TargetBuild": {
        "type": "string",
        "description": ""
      },
      "TargetOSVersion": {
        "type": "string",
        "description": ""
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UninstallComment": {
        "type": "string",
        "description": ""
      },
      "UninstallReason": {
        "type": "string",
        "description": ""
      },
      "UserAction": {
        "type": "string",
        "description": ""
      }
    }
  },
  "UCClient": {
    "tableName": "UCClient",
    "description": "Update Compliance - This event acts as an individual device's record, containing data like the current build installed, device's name, the OS Edition, active hours (quantitative), and so on.",
    "columns": {
      "AzureADDeviceId": {
        "type": "string",
        "description": "A GUID corresponding to the AAD Tenant to which the"
      },
      "AzureADTenantId": {
        "type": "string",
        "description": "A GUID corresponding to this device's AAD Device ID."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "City": {
        "type": "string",
        "description": "The last-reported location of device (city), based on IP"
      },
      "Country": {
        "type": "string",
        "description": "The last-reported location of device (country), based on"
      },
      "DeviceFamily": {
        "type": "string",
        "description": "The device family e.g. PC, Phone."
      },
      "DeviceFormFactor": {
        "type": "string",
        "description": "The device form factor e.g. Notebook, Desktop, Phone."
      },
      "DeviceManufacturer": {
        "type": "string",
        "description": "The device OEM Manufacturer e.g. Hewlett-Packard."
      },
      "DeviceModel": {
        "type": "string",
        "description": "The device's OEM model e.g. HP7420 Workstation."
      },
      "DeviceName": {
        "type": "string",
        "description": "The Device given name."
      },
      "GlobalDeviceId": {
        "type": "string",
        "description": "Microsoft internal Global Device Identifier."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "IsDeviceHotpatchEligible": {
        "type": "bool",
        "description": "Specifies whether a device meets the necessary criteria"
      },
      "IsDeviceHotpatchEnrolled": {
        "type": "bool",
        "description": "Indicates whether the device has been enrolled to"
      },
      "IsDeviceVBSEnabled": {
        "type": "bool",
        "description": "Whether Virtual Based Security (VBS) is enabled on the"
      },
      "IsVirtual": {
        "type": "bool",
        "description": "Whether device is a Virtual Device."
      },
      "LastCensusScanTime": {
        "type": "datetime",
        "description": "The last time this device performed a successful Census"
      },
      "LastHotpatchEnrolledTime": {
        "type": "datetime",
        "description": "The last time when device was enrolled to receive"
      },
      "LastWUScanTime": {
        "type": "datetime",
        "description": "The last time this device performed a successful WU"
      },
      "OSArchitecture": {
        "type": "string",
        "description": "The architecture of the Operating System e.g. x86."
      },
      "OSBuild": {
        "type": "string",
        "description": "The currently-installed Windows 10 Build in the format"
      },
      "OSBuildNumber": {
        "type": "int",
        "description": "An integer value for the revision number of the"
      },
      "OSEdition": {
        "type": "string",
        "description": "The Windows 10 Edition or SKU."
      },
      "OSFeatureUpdateComplianceStatus": {
        "type": "string",
        "description": "Whether or not the device is on the latest Feature"
      },
      "OSFeatureUpdateEOSTime": {
        "type": "datetime",
        "description": "The end of service date of the Feature Update currently"
      },
      "OSFeatureUpdateReleaseTime": {
        "type": "datetime",
        "description": "The release date of the Feature Update currently"
      },
      "OSFeatureUpdateStatus": {
        "type": "string",
        "description": "Whether or not the device is on the latest available"
      },
      "OSQualityUpdateComplianceStatus": {
        "type": "string",
        "description": "Whether or not the device is on the latest Quality"
      },
      "OSQualityUpdateReleaseTime": {
        "type": "datetime",
        "description": "The release date of the Quality Update currently"
      },
      "OSQualityUpdateStatus": {
        "type": "string",
        "description": "Whether or not the device is on the latest available"
      },
      "OSRevisionNumber": {
        "type": "int",
        "description": "An integer value for the revision number of the"
      },
      "OSSecurityUpdateComplianceStatus": {
        "type": "string",
        "description": "Whether or not the device is on the latest Security"
      },
      "OSSecurityUpdateStatus": {
        "type": "string",
        "description": "Whether or not the device is on the latest available"
      },
      "OSServicingChannel": {
        "type": "string",
        "description": "The elected Windows 10 Servicing Channel of the"
      },
      "OSVersion": {
        "type": "string",
        "description": "The version of Windows 10 as is organized on"
      },
      "PrimaryDiskFreeCapacityMb": {
        "type": "int",
        "description": "Free disk capacity of the primary disk in Megabytes."
      },
      "SCCMClientId": {
        "type": "string",
        "description": "A GUID corresponding to the SCCM Client ID on the"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The time the snapshot generated this specific record."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UpdateConnectivityLevel": {
        "type": "string",
        "description": "Whether or not this device is maintaining a sufficiently"
      },
      "WUAutomaticUpdates": {
        "type": "int",
        "description": "CSP: AllowAutoUpdate &'AuOptions' Enables the IT"
      },
      "WUDeadlineNoAutoRestart": {
        "type": "int",
        "description": "CSP:ConfigureDeadlineNoAutoReboot. Devices will not"
      },
      "WUDODownloadMode": {
        "type": "string",
        "description": "The WU DO DownloadMode configuration, brought"
      },
      "WUFeatureDeadlineDays": {
        "type": "int",
        "description": "CSP: ConfigureDeadlineForFeatureUpdatesThe WU"
      },
      "WUFeatureDeferralDays": {
        "type": "int",
        "description": "CSP: DeferFeatureUpdates. The WU Feature Update"
      },
      "WUFeatureGracePeriodDays": {
        "type": "int",
        "description": "The WU grace period for feature update in days. -1"
      },
      "WUFeaturePauseEndTime": {
        "type": "datetime",
        "description": "CSP:PauseFEatureUpdatesEndTime The time WU"
      },
      "WUFeaturePauseStartTime": {
        "type": "datetime",
        "description": "CSP: PauseFeatureUpdatesStartTime. The time WU"
      },
      "WUFeaturePauseState": {
        "type": "string",
        "description": "Indicates pause status of device for FU, possible values"
      },
      "WUNotificationLevel": {
        "type": "int",
        "description": "CSP: UpdateNotificationLevel. This policy allows you to"
      },
      "WUPauseUXDisabled": {
        "type": "int",
        "description": "CSP: SetDisablePauseUXAccess. This policy allows the IT"
      },
      "WUQualityDeadlineDays": {
        "type": "int",
        "description": "CSP: ConfigureDeadlineForQualityUpdates The WU"
      },
      "WUQualityDeferralDays": {
        "type": "int",
        "description": "CSP: DeferQualityUpdatesThe WU Quality Update"
      },
      "WUQualityGracePeriodDays": {
        "type": "int",
        "description": "The WU grace period for quality update in days. -1"
      },
      "WUQualityPauseEndTime": {
        "type": "datetime",
        "description": "CSP:PauseQualityUpdatesEndTimeThe time WU Quality"
      },
      "WUQualityPauseStartTime": {
        "type": "datetime",
        "description": "CSP:PauseQualityUpdatesStartTime The time WU"
      },
      "WUQualityPauseState": {
        "type": "string",
        "description": "Indicates pause status of device for QU, possible values"
      },
      "WURestartNotification": {
        "type": "int",
        "description": "CSP: AutoRestartRequiredNotificationDismissal. Allows"
      },
      "WUServiceURLConfigured": {
        "type": "string",
        "description": "CSP:UpdateServiceUrl. The following list shows the"
      },
      "WUUXDisabled": {
        "type": "int",
        "description": "CSP:SetDisableUXWUAccess.This policy allows the IT"
      }
    }
  },
  "UCClientReadinessStatus": {
    "tableName": "UCClientReadinessStatus",
    "description": "Update Compliance - Status message for an UC client device, which indicates update readiness of the given device for a specific target version.",
    "columns": {
      "AzureADDeviceId": {
        "type": "string",
        "description": "A GUID corresponding to the AAD tenant to which the device"
      },
      "AzureADTenantId": {
        "type": "string",
        "description": "A GUID corresponding to this device's AAD device ID."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DeviceName": {
        "type": "string",
        "description": "The Device given name."
      },
      "GlobalDeviceId": {
        "type": "string",
        "description": "Microsoft internal global device identifier."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable"
      },
      "OSBuild": {
        "type": "string",
        "description": "The currently-installed Windows 10 Build in the format"
      },
      "OSName": {
        "type": "string",
        "description": "The version of Windows 10 as is organized on"
      },
      "OSVersion": {
        "type": "string",
        "description": "The version of Windows 10 as is organized on"
      },
      "ReadinessExpiryTime": {
        "type": "datetime",
        "description": "The time the readiness report expires."
      },
      "ReadinessReason": {
        "type": "string",
        "description": "Reason why the device is not capable of taking target OS and"
      },
      "ReadinessScanTime": {
        "type": "datetime",
        "description": "The time the readiness generated this specific record."
      },
      "ReadinessStatus": {
        "type": "string",
        "description": "Whether or not the device is capable of taking target OS and"
      },
      "SCCMClientId": {
        "type": "string",
        "description": "A GUID corresponding to the SCCM client ID on the device."
      },
      "SetupReadinessExpiryTime": {
        "type": "datetime",
        "description": "The time the readiness report expires."
      },
      "SetupReadinessReason": {
        "type": "string",
        "description": "Reason why the device is not capable of taking target OS and"
      },
      "SetupReadinessStatus": {
        "type": "string",
        "description": "Whether or not the device is capable of taking target OS and"
      },
      "SetupReadinessTime": {
        "type": "datetime",
        "description": "The time the readiness generated this specific record when setup"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "TargetOSBuild": {
        "type": "string",
        "description": "The currently-installed Windows 10 Build in the format"
      },
      "TargetOSName": {
        "type": "string",
        "description": "The version of Windows 10 as is organized on"
      },
      "TargetOSVersion": {
        "type": "string",
        "description": "The version of Windows 10 as is organized on"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Time at which this event is generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "UCClientUpdateStatus": {
    "tableName": "UCClientUpdateStatus",
    "description": "Update Compliance - Update Event that combines the latest client-based data with the latest service-based data to create a complete picture for one device (client) and one update.",
    "columns": {
      "AzureADDeviceId": {
        "type": "string",
        "description": "A GUID corresponding to the AAD Tenant to which the device"
      },
      "AzureADTenantId": {
        "type": "string",
        "description": "A GUID corresponding to this device's AAD Device ID."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CatalogId": {
        "type": "string",
        "description": "The update catalog ID."
      },
      "ClientState": {
        "type": "string",
        "description": "Higher-level bucketization of ClientSubstate."
      },
      "ClientSubstate": {
        "type": "string",
        "description": "Last-known state of this update relative to the device, from the"
      },
      "ClientSubstateRank": {
        "type": "int",
        "description": "Ranking of Client Substates for sequential ordering in funnel-"
      },
      "ClientSubstateTime": {
        "type": "datetime",
        "description": "DateTime of last Client Substate transition."
      },
      "DeploymentId": {
        "type": "string",
        "description": "The identifier of the Deployment that is targeting this update to"
      },
      "DeviceName": {
        "type": "string",
        "description": "Device's given name."
      },
      "EventData": {
        "type": "string",
        "description": "Json to fill with arbitrary K/V pairs. Used to populate contextual"
      },
      "FurthestClientSubstate": {
        "type": "string",
        "description": "Furthest clientSubstate."
      },
      "FurthestClientSubstateRank": {
        "type": "int",
        "description": "Ranking of furthest clientSubstate."
      },
      "GlobalDeviceId": {
        "type": "string",
        "description": "Microsoft internal Global Device Identifier"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable"
      },
      "IsHotpatchUpdate": {
        "type": "bool",
        "description": "Status of whether a device is taking a windows security update"
      },
      "IsUpdateHealthy": {
        "type": "bool",
        "description": "True: No issues preventing this device from updating to this"
      },
      "OfferReceivedTime": {
        "type": "datetime",
        "description": "DateTime when device last reported entering OfferReceived,"
      },
      "RestartRequiredTime": {
        "type": "datetime",
        "description": "DateTime when device first reported entering RebootRequired"
      },
      "SCCMClientId": {
        "type": "string",
        "description": "A GUID corresponding to the SCCM Client ID on the device."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "TargetBuild": {
        "type": "string",
        "description": "The full build of the content this DeviceUpdateEvent is tracking."
      },
      "TargetBuildNumber": {
        "type": "int",
        "description": "Integer of the Major portion of Build."
      },
      "TargetKBNumber": {
        "type": "string",
        "description": "KB Article."
      },
      "TargetRevisionNumber": {
        "type": "int",
        "description": "Integer or the Minor (or Revision) portion of Build."
      },
      "TargetVersion": {
        "type": "string",
        "description": "The target OS Version - eg, 1909."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The time the snapshot generated this specific record."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UpdateCategory": {
        "type": "string",
        "description": "The type of content this DeviceUpdateEvent is tracking."
      },
      "UpdateClassification": {
        "type": "string",
        "description": "Whether this content is an Upgrade (FU), Security (QU),"
      },
      "UpdateConnectivityLevel": {
        "type": "string",
        "description": "Whether or not this device is maintaining a sufficiently"
      },
      "UpdateDisplayName": {
        "type": "string",
        "description": "The long-form display name for the given update. Varies on"
      },
      "UpdateHealthGroupL1": {
        "type": "string",
        "description": "Grouping design to describe the current update installation's"
      },
      "UpdateHealthGroupL2": {
        "type": "string",
        "description": "Second grouping, subset of L1, more detailed."
      },
      "UpdateHealthGroupL3": {
        "type": "string",
        "description": "Third grouping, subset of L3, more detailed."
      },
      "UpdateHealthGroupRankL1": {
        "type": "int",
        "description": "Integer for ranking the L1 UpdateHealthGroup."
      },
      "UpdateHealthGroupRankL2": {
        "type": "int",
        "description": "Integer for ranking the L2 UpdateHealthGroup."
      },
      "UpdateHealthGroupRankL3": {
        "type": "int",
        "description": "Integer for ranking the L3 UpdateHealthGroup."
      },
      "UpdateId": {
        "type": "string",
        "description": "Update ID of the targeted update."
      },
      "UpdateInstalledTime": {
        "type": "datetime",
        "description": "DateTime when event transitioned to UpdateInstalled, else"
      },
      "UpdateManufacturer": {
        "type": "string",
        "description": "Manufacturer of update. Microsoft for WU FU/QU, for D&F"
      },
      "UpdateReleaseTime": {
        "type": "datetime",
        "description": "The release date of the update."
      },
      "UpdateSource": {
        "type": "string",
        "description": "The source of the update - UUP, MUv6, Media."
      }
    }
  },
  "UCDOAggregatedStatus": {
    "tableName": "UCDOAggregatedStatus",
    "description": "Update Compliance - aggregates all individual UCDOStatus records across the tenant and summarizes bandwidth savings across all devices enrolled to delivery.",
    "columns": {
      "AzureADDeviceId": {
        "type": "string",
        "description": "A GUID corresponding to the AAD tenant to which the device"
      },
      "AzureADTenantId": {
        "type": "string",
        "description": "A GUID corresponding to this device's AAD device ID."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "BWOptPercent28Days": {
        "type": "real",
        "description": "Bandwidth optimization (as a percentage of savings of total"
      },
      "BytesFromCache": {
        "type": "long",
        "description": "Total number of bytes downloaded from cache."
      },
      "BytesFromCDN": {
        "type": "long",
        "description": "Total number of bytes downloaded from a CDN versus a peer. This"
      },
      "BytesFromGroupPeers": {
        "type": "long",
        "description": "Total number of bytes downloaded from group peers."
      },
      "BytesFromIntPeers": {
        "type": "long",
        "description": "Total number of bytes downloaded from internet peers."
      },
      "BytesFromPeers": {
        "type": "long",
        "description": "Total number of bytes downloaded from peers."
      },
      "ContentType": {
        "type": "string",
        "description": "The type of content being downloaded."
      },
      "DeviceCount": {
        "type": "long",
        "description": "Total count of devices."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Time at which this event was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "UCDOStatus": {
    "tableName": "UCDOStatus",
    "description": "Update Compliance - provides information, for a single device, on their bandwidth utilization across content types in the event they use delivery optimization.",
    "columns": {
      "AzureADDeviceId": {
        "type": "string",
        "description": "A GUID corresponding to the AAD tenant to which the device"
      },
      "AzureADTenantId": {
        "type": "string",
        "description": "A GUID corresponding to this device's AAD device ID."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "BWOptPercent28Days": {
        "type": "real",
        "description": "Bandwidth optimization (as a percentage of savings of total"
      },
      "BWOptPercent7Days": {
        "type": "real",
        "description": "Bandwidth optimization (as a percentage of savings of total"
      },
      "BytesFromCache": {
        "type": "long",
        "description": "Total number of bytes downloaded from cache."
      },
      "BytesFromCDN": {
        "type": "long",
        "description": "Total number of bytes downloaded from a CDN versus a peer."
      },
      "BytesFromGroupPeers": {
        "type": "long",
        "description": "Total number of bytes downloaded from group peers."
      },
      "BytesFromIntPeers": {
        "type": "long",
        "description": "Total number of bytes downloaded from internet peers."
      },
      "BytesFromPeers": {
        "type": "long",
        "description": "Total number of bytes downloaded from peers."
      },
      "City": {
        "type": "string",
        "description": "Approximate city device was in while downloading content,"
      },
      "ContentDownloadMode": {
        "type": "int",
        "description": "Device's delivery optimization download mode that was used for"
      },
      "ContentType": {
        "type": "string",
        "description": "The type of content being downloaded."
      },
      "Country": {
        "type": "string",
        "description": "Approximate country device was in while downloading content,"
      },
      "DeviceName": {
        "type": "string",
        "description": "User or organization-provided device name. If this appears as '#',"
      },
      "DOStatusDescription": {
        "type": "string",
        "description": "A short description of DO's status, if any."
      },
      "DownloadMode": {
        "type": "string",
        "description": "Device's delivery optimization download mode as configured on"
      },
      "DownloadModeSrc": {
        "type": "string",
        "description": "The source of the download mode configuration."
      },
      "GlobalDeviceId": {
        "type": "string",
        "description": "Microsoft global device identifier. This is a identifier used by"
      },
      "Microsoft": {
        "type": "int",
        "description": "ernally."
      },
      "GroupID": {
        "type": "string",
        "description": "The delivery optimization group ID."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable"
      },
      "ISP": {
        "type": "string",
        "description": "The internet service provider estimation."
      },
      "LastCensusSeenTime": {
        "type": "datetime",
        "description": "A DateTime corresponding to the last time the device sent data"
      },
      "NoPeersCount": {
        "type": "long",
        "description": "The count of peers this device interacted with."
      },
      "OSVersion": {
        "type": "string",
        "description": "The version of Windows 10. This typically is of the format of the"
      },
      "PeerEligibleTransfers": {
        "type": "long",
        "description": "Total count of eligible transfers by peers."
      },
      "PeeringStatus": {
        "type": "string",
        "description": "The DO peering status."
      },
      "PeersCannotConnectCount": {
        "type": "long",
        "description": "The count of peers this device was unable to connect to."
      },
      "PeersSuccessCount": {
        "type": "long",
        "description": "The count of peers this device successfully connected to."
      },
      "PeersUnknownCount": {
        "type": "long",
        "description": "The count of peers for which there is an unknown relation."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Time at which this event was generated."
      },
      "TotalTimeForDownload": {
        "type": "string",
        "description": "The total time it took to download the content."
      },
      "TotalTransfers": {
        "type": "long",
        "description": "The total count of data transfers to download this content."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "UCDeviceAlert": {
    "tableName": "UCDeviceAlert",
    "description": "Update Compliance - These alerts are activated as a result of an issue that is device-specific, and is not specific to a specific update and a specific device. Like UpdateAlerts, the AlertType indicates where the Alert comes from (ServiceDeviceAlert, ClientDeviceAlert). For example, an EndOfService alert is a ClientDeviceAlert, as the fact it is on a build no longer being serviced (EOS) is a client-wide state. Meanwhile, DeviceRegistrationIssues in WUfB DS will be a ServiceDeviceAlert, as it is a device-wide state in the service to not be correctly registered.",
    "columns": {
      "AlertClassification": {
        "type": "string",
        "description": "Whether this Alert is an Error, a Warning, or Informational."
      },
      "AlertData": {
        "type": "string",
        "description": "An optional string formatted as a json payload containing metadata for"
      },
      "AlertId": {
        "type": "string",
        "description": "The unique identifier of this Alert."
      },
      "AlertRank": {
        "type": "int",
        "description": "Integer ranking of Alert for prioritization during troubleshooting."
      },
      "AlertStatus": {
        "type": "string",
        "description": "Whether this Alert is Active, Resolved, or Deleted."
      },
      "AlertSubtype": {
        "type": "string",
        "description": "The Subtype of Alert."
      },
      "AlertType": {
        "type": "string",
        "description": "The type of Alert this is, ClientUpdateAlert, ServiceUpdateAlert. Indicates"
      },
      "AzureADDeviceId": {
        "type": "string",
        "description": "A GUID corresponding to the AAD Tenant to which the device belongs."
      },
      "AzureADTenantId": {
        "type": "string",
        "description": "A GUID corresponding to this device's AAD Device ID."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Description": {
        "type": "string",
        "description": "A localized string translated from a combination of other Alert fields +"
      },
      "DeviceName": {
        "type": "string",
        "description": "Device's given name."
      },
      "ErrorCode": {
        "type": "string",
        "description": "The Error Code, if any, that triggered this Alert. In the case of Client-based"
      },
      "ErrorSymName": {
        "type": "string",
        "description": "The symbolic name that maps to the Error Code, if any. Otherwise empty."
      },
      "GlobalDeviceId": {
        "type": "string",
        "description": "Microsoft internal Global Device Identifier."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Recommendation": {
        "type": "string",
        "description": "A localized string translated from RecommendedAction, Message, and"
      },
      "ResolvedTime": {
        "type": "datetime",
        "description": "The time this alert was resolved, else empty."
      },
      "SCCMClientId": {
        "type": "string",
        "description": "A GUID corresponding to the SCCM Client ID on the device."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "StartTime": {
        "type": "datetime",
        "description": "The time this alert was activated."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Time at which this event is generated and logged."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "URL": {
        "type": "string",
        "description": "An optional URL to get more in-depth information related to this alert."
      }
    }
  },
  "UCServiceUpdateStatus": {
    "tableName": "UCServiceUpdateStatus",
    "description": "Update Compliance - Update Event that comes directly from the service-side, and only tells the \"service-side\" of the story, for one device (client), and one update, in one deployment. As such, this event is stripped of certain fields in favor of being able to show data in near real-time.",
    "columns": {
      "AzureADDeviceId": {
        "type": "string",
        "description": "A GUID corresponding to the AAD Tenant to which the device"
      },
      "AzureADTenantId": {
        "type": "string",
        "description": "A GUID corresponding to this device's AAD Device ID"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CatalogId": {
        "type": "string",
        "description": "Catalog ID for update."
      },
      "DeploymentApprovedTime": {
        "type": "datetime",
        "description": "The datetime of when the update deployment was approved."
      },
      "DeploymentId": {
        "type": "string",
        "description": "The identifier of the Deployment that is targeting this update to"
      },
      "DeploymentIsExpedited": {
        "type": "bool",
        "description": "Whether this content is being expedited by WUfB DS."
      },
      "DeploymentName": {
        "type": "string",
        "description": "Friendly name of the created deployment."
      },
      "DeploymentRevokeTime": {
        "type": "datetime",
        "description": "The datetime of when the update deployment was Revoked."
      },
      "GlobalDeviceId": {
        "type": "string",
        "description": "Microsoft internal Global Device Identifier"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable"
      },
      "OfferReadyTime": {
        "type": "datetime",
        "description": "DateTime of OfferReady transition. If empty, not yet been"
      },
      "PolicyCreatedTime": {
        "type": "datetime",
        "description": "The datetime of when the policy was created."
      },
      "PolicyId": {
        "type": "string",
        "description": "The policy identifier targeting the update to this device."
      },
      "PolicyName": {
        "type": "string",
        "description": "Friendly name of the created update policy."
      },
      "ProjectedOfferReadyTime": {
        "type": "datetime",
        "description": "Projected time update will be Offered to device. If empty,"
      },
      "ServiceState": {
        "type": "string",
        "description": "High-level state of update's status relative to device, service-"
      },
      "ServiceSubstate": {
        "type": "string",
        "description": "Last-known state of this update relative to the device, from the"
      },
      "ServiceSubstateRank": {
        "type": "int",
        "description": "Ranking of Substates for sequential ordering in funnel-type"
      },
      "ServiceSubstateTime": {
        "type": "datetime",
        "description": "DateTime of last ServiceSubstate transition."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "TargetBuild": {
        "type": "string",
        "description": "The full build of the content this DeviceUpdateEvent is tracking."
      },
      "TargetVersion": {
        "type": "string",
        "description": "The target OS Version - eg, 1909."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Time at which this event is generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UdpateIsSystemManifest": {
        "type": "bool",
        "description": "Signifies if update is a system manifest."
      },
      "UpdateCategory": {
        "type": "string",
        "description": "The type of content this DeviceUpdateEvent is tracking."
      },
      "UpdateClassification": {
        "type": "string",
        "description": "Whether this content is an Upgrade (FU), Security (QU),"
      },
      "UpdateDisplayName": {
        "type": "string",
        "description": "The long-form display name for the given update. Varies on"
      },
      "UpdateId": {
        "type": "string",
        "description": "Update ID of the targeted update."
      },
      "UpdateManufacturer": {
        "type": "string",
        "description": "Manufacturer of update. Microsoft for WU FU/QU, for D&F"
      },
      "UpdateProvider": {
        "type": "string",
        "description": "Update provider of drivers and firmware, eg. Microsoft."
      },
      "UpdateRecommendedTime": {
        "type": "datetime",
        "description": "The datetime of when the update was recomemnded to the"
      },
      "UpdateReleaseTime": {
        "type": "datetime",
        "description": "DateTime of update's release date."
      },
      "UpdateVersion": {
        "type": "string",
        "description": "Update version of drivers and firmware."
      },
      "UpdateVersionTime": {
        "type": "datetime",
        "description": "Update version time of drivers and firmware."
      }
    }
  },
  "UCUpdateAlert": {
    "tableName": "UCUpdateAlert",
    "description": "Update Compliance - Alert for both Client and Service Update, will contain information that needs attention, relative to one device (client), one update, and one deployment (if relevant). Certain fields may be blank depending on the UpdateAlert's AlertType field; for example, ServiceUpdateAlert will not necessarily contain client-side statuses.",
    "columns": {
      "AlertClassification": {
        "type": "string",
        "description": "Whether this Alert is an Error, a Warning, or Informational."
      },
      "AlertData": {
        "type": "string",
        "description": "An optional string formatted as a json payload containing metadata for"
      },
      "AlertId": {
        "type": "string",
        "description": "The unique identifier of this Alert."
      },
      "AlertRank": {
        "type": "int",
        "description": "Integer ranking of Alert for prioritization during troubleshooting."
      },
      "AlertStatus": {
        "type": "string",
        "description": "Whether this Alert is Active, Resolved, or Deleted."
      },
      "AlertSubtype": {
        "type": "string",
        "description": "The Subtype of Alert."
      },
      "AlertType": {
        "type": "string",
        "description": "The type of Alert this is, ClientUpdateAlert, ServiceUpdateAlert."
      },
      "AzureADDeviceId": {
        "type": "string",
        "description": "A GUID corresponding to the AAD Tenant to which the device belongs."
      },
      "AzureADTenantId": {
        "type": "string",
        "description": "A GUID corresponding to this device's AAD Device ID."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CatalogId": {
        "type": "string",
        "description": "The update catalog ID."
      },
      "ClientSubstate": {
        "type": "string",
        "description": "If the Alert is from the Client, the ClientSubstate at the time thie Alert"
      },
      "ClientSubstateRank": {
        "type": "int",
        "description": "Rank of ClientSubstate."
      },
      "DeploymentId": {
        "type": "string",
        "description": "The identifier of the Deployment that is targeting this update to this"
      },
      "Description": {
        "type": "string",
        "description": "A localized string translated from a combination of other Alert fields +"
      },
      "DeviceName": {
        "type": "string",
        "description": "Device's given name."
      },
      "ErrorCode": {
        "type": "string",
        "description": "The Error Code, if any, that triggered this Alert. In the case of Client-"
      },
      "ErrorSymName": {
        "type": "string",
        "description": "The symbolic name that maps to the Error Code, if any. Otherwise"
      },
      "GlobalDeviceId": {
        "type": "string",
        "description": "Microsoft internal Global Device Identifier."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Recommendation": {
        "type": "string",
        "description": "A localized string translated from RecommendedAction, Message, and"
      },
      "ResolvedTime": {
        "type": "datetime",
        "description": "The time this alert was resolved, else empty."
      },
      "SCCMClientId": {
        "type": "string",
        "description": "A GUID corresponding to the SCCM Client ID on the device."
      },
      "ServiceSubstate": {
        "type": "string",
        "description": "Ranking of Client Substates for sequential ordering in funnel-type"
      },
      "ServiceSubstateRank": {
        "type": "int",
        "description": "Rank of ServiceSubstate"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "StartTime": {
        "type": "datetime",
        "description": "The time this alert was activated."
      },
      "TargetBuild": {
        "type": "string",
        "description": "The full build of the content this DeviceUpdateEvent is tracking. For"
      },
      "TargetVersion": {
        "type": "string",
        "description": "The target OS Version - eg, 1909."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Time at which this event is generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UpdateCategory": {
        "type": "string",
        "description": "The type of content this DeviceUpdateEvent is tracking."
      },
      "UpdateClassification": {
        "type": "string",
        "description": "Whether this content is an Upgrade (FU), Security (QU), NonSecurity"
      },
      "UpdateId": {
        "type": "string",
        "description": "Update ID of the targeted update."
      },
      "URL": {
        "type": "string",
        "description": "An optional URL to get more in-depth information related to this alert."
      }
    }
  },
  "Update": {
    "tableName": "Update",
    "description": "Details for update schedule run. Includes information such as which updates where available and which were installed.",
    "columns": {
      "ApprovalSource": {
        "type": "string",
        "description": ""
      },
      "Approved": {
        "type": "bool",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "BulletinID": {
        "type": "string",
        "description": ""
      },
      "BulletinUrl": {
        "type": "string",
        "description": ""
      },
      "Classification": {
        "type": "string",
        "description": ""
      },
      "Computer": {
        "type": "string",
        "description": ""
      },
      "ComputerEnvironment": {
        "type": "string",
        "description": ""
      },
      "CVENumbers": {
        "type": "string",
        "description": ""
      },
      "InstallTimeAvailable": {
        "type": "bool",
        "description": ""
      },
      "InstallTimeDeviationRangeSeconds": {
        "type": "real",
        "description": ""
      },
      "InstallTimePredictionSeconds": {
        "type": "real",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "KBID": {
        "type": "string",
        "description": ""
      },
      "ManagementGroupName": {
        "type": "string",
        "description": ""
      },
      "MSRCBulletinID": {
        "type": "string",
        "description": ""
      },
      "MSRCSeverity": {
        "type": "string",
        "description": ""
      },
      "Optional": {
        "type": "bool",
        "description": ""
      },
      "OSFullName": {
        "type": "string",
        "description": ""
      },
      "OSName": {
        "type": "string",
        "description": ""
      },
      "OSType": {
        "type": "string",
        "description": ""
      },
      "OSVersion": {
        "type": "string",
        "description": ""
      },
      "PackageRepository": {
        "type": "string",
        "description": ""
      },
      "PackageSeverity": {
        "type": "string",
        "description": ""
      },
      "Product": {
        "type": "string",
        "description": ""
      },
      "ProductArch": {
        "type": "string",
        "description": ""
      },
      "ProductVersion": {
        "type": "string",
        "description": ""
      },
      "PublishedDate": {
        "type": "datetime",
        "description": ""
      },
      "RebootBehavior": {
        "type": "string",
        "description": ""
      },
      "Resource": {
        "type": "string",
        "description": ""
      },
      "ResourceGroup": {
        "type": "string",
        "description": ""
      },
      "ResourceId": {
        "type": "string",
        "description": ""
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "ResourceProvider": {
        "type": "string",
        "description": ""
      },
      "ResourceType": {
        "type": "string",
        "description": ""
      },
      "RevisionNumber": {
        "type": "string",
        "description": ""
      },
      "SourceComputerId": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For"
      },
      "SubscriptionId": {
        "type": "string",
        "description": ""
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Title": {
        "type": "string",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UpdateID": {
        "type": "string",
        "description": ""
      },
      "UpdateState": {
        "type": "string",
        "description": ""
      },
      "VMUUID": {
        "type": "string",
        "description": ""
      }
    }
  },
  "UpdateRunProgress": {
    "tableName": "UpdateRunProgress",
    "description": "Breaks down each run of your update schedule by the patches available at the time with details on the installation status of each patch.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Computer": {
        "type": "string",
        "description": ""
      },
      "ComputerEnvironment": {
        "type": "string",
        "description": ""
      },
      "CorrelationId": {
        "type": "string",
        "description": ""
      },
      "EndTime": {
        "type": "datetime",
        "description": ""
      },
      "ErrorResult": {
        "type": "string",
        "description": ""
      },
      "InstallationStatus": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "KBID": {
        "type": "string",
        "description": ""
      },
      "ManagementGroupName": {
        "type": "string",
        "description": ""
      },
      "OSType": {
        "type": "string",
        "description": ""
      },
      "Product": {
        "type": "string",
        "description": ""
      },
      "Resource": {
        "type": "string",
        "description": ""
      },
      "ResourceGroup": {
        "type": "string",
        "description": ""
      },
      "ResourceId": {
        "type": "string",
        "description": ""
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "ResourceProvider": {
        "type": "string",
        "description": ""
      },
      "ResourceType": {
        "type": "string",
        "description": ""
      },
      "SourceComputerId": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "StartTime": {
        "type": "datetime",
        "description": ""
      },
      "SubscriptionId": {
        "type": "string",
        "description": ""
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "SucceededOnRetry": {
        "type": "bool",
        "description": ""
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Title": {
        "type": "string",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UpdateId": {
        "type": "string",
        "description": ""
      },
      "UpdateRunName": {
        "type": "string",
        "description": ""
      },
      "VMUUID": {
        "type": "string",
        "description": ""
      }
    }
  },
  "UpdateSummary": {
    "tableName": "UpdateSummary",
    "description": "Summary for each update schedule run. Includes information such as how many updates were not installed.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Computer": {
        "type": "string",
        "description": ""
      },
      "ComputerEnvironment": {
        "type": "string",
        "description": ""
      },
      "CriticalUpdatesMissing": {
        "type": "int",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "ManagementGroupName": {
        "type": "string",
        "description": ""
      },
      "NETRuntimeVersion": {
        "type": "string",
        "description": ""
      },
      "OldestMissingSecurityUpdateBucket": {
        "type": "string",
        "description": ""
      },
      "OldestMissingSecurityUpdateInDays": {
        "type": "int",
        "description": ""
      },
      "OsVersion": {
        "type": "string",
        "description": ""
      },
      "OtherUpdatesMissing": {
        "type": "int",
        "description": ""
      },
      "Resource": {
        "type": "string",
        "description": ""
      },
      "ResourceGroup": {
        "type": "string",
        "description": ""
      },
      "ResourceId": {
        "type": "string",
        "description": ""
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "ResourceProvider": {
        "type": "string",
        "description": ""
      },
      "ResourceType": {
        "type": "string",
        "description": ""
      },
      "RestartPending": {
        "type": "bool",
        "description": ""
      },
      "SecurityUpdatesMissing": {
        "type": "int",
        "description": ""
      },
      "SourceComputerId": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For"
      },
      "SubscriptionId": {
        "type": "string",
        "description": ""
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "TotalUpdatesMissing": {
        "type": "int",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "VMUUID": {
        "type": "string",
        "description": ""
      },
      "WindowsUpdateAgentVersion": {
        "type": "string",
        "description": ""
      },
      "WindowsUpdateSetting": {
        "type": "string",
        "description": ""
      },
      "WSUSServer": {
        "type": "string",
        "description": ""
      }
    }
  },
  "UrlClickEvents": {
    "tableName": "UrlClickEvents",
    "description": "Events involving URLs clicked, selected, or requested on Microsoft Defender for Office 365.",
    "columns": {
      "AccountUpn": {
        "type": "string",
        "description": "User Principal Name of the account that clicked on the link."
      },
      "ActionType": {
        "type": "string",
        "description": "Indicates whether the click was allowed or blocked by 'safe links' or"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "DetectionMethods": {
        "type": "string",
        "description": "Detection technology which was used to identify the threat at the time"
      },
      "IPAddress": {
        "type": "string",
        "description": "Public IP address of the device from which the user clicked on the link."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "IsClickedThrough": {
        "type": "bool",
        "description": "Indicates whether the user was able to click through to the original URL"
      },
      "NetworkMessageId": {
        "type": "string",
        "description": "The unique identifier for the email that contains the clicked link,"
      },
      "ReportId": {
        "type": "string",
        "description": "This is the unique identifier for a click event. Note that for clickthrough"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "ThreatTypes": {
        "type": "string",
        "description": "Verdict at the time of click, which tells whether the URL led to malware,"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The date and time when the user clicked on the link. The value is"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "Url": {
        "type": "string",
        "description": "The full URL that was clicked on by the user."
      },
      "UrlChain": {
        "type": "string",
        "description": "For scenarios involving redirections, it includes URLs present in the"
      },
      "Workload": {
        "type": "string",
        "description": "The application from which the user clicked on the link, with the values"
      }
    }
  },
  "Usage": {
    "tableName": "Usage",
    "description": "Hourly usage data for each table in the workspace.",
    "columns": {
      "AvgLatencyInSeconds": {
        "type": "real",
        "description": "Deprecated"
      },
      "BatchesCapped": {
        "type": "long",
        "description": "Deprecated"
      },
      "BatchesOutsideSla": {
        "type": "long",
        "description": "Deprecated"
      },
      "BatchesWithinSla": {
        "type": "long",
        "description": "Deprecated"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Computer": {
        "type": "string",
        "description": "Deprecated"
      },
      "DataType": {
        "type": "string",
        "description": "Table that usage is being reported about."
      },
      "EndTime": {
        "type": "datetime",
        "description": "End time of the one hour aggregation window."
      },
      "IsBillable": {
        "type": "bool",
        "description": "Logical flag to indicate whether we bill for this data record."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "LinkedMeterId": {
        "type": "string",
        "description": "Deprecated"
      },
      "LinkedResourceUri": {
        "type": "string",
        "description": "Deprecated"
      },
      "MeterId": {
        "type": "string",
        "description": "GUID of the meter used for billing."
      },
      "Quantity": {
        "type": "real",
        "description": "Size of data in Mbytes."
      },
      "QuantityUnit": {
        "type": "string",
        "description": "Value is alwais Mbytes."
      },
      "ResourceUri": {
        "type": "string",
        "description": "The URI of the workspace. This will be same for all records in this table"
      },
      "Solution": {
        "type": "string",
        "description": "Solution about which usage is being reported."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "StartTime": {
        "type": "datetime",
        "description": "Start time of the 1 hour aggregation window (same as"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time the record was created."
      },
      "TotalBatches": {
        "type": "long",
        "description": "Deprecated"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "UserAccessAnalytics": {
    "tableName": "UserAccessAnalytics",
    "description": "This analytics table, for a given user, provides the direct or transitive access to Azure resources. For example, if the user under investigation is Jane Smith, Access Analytics calculates all the Azure subscriptions that she either can access directly, via groups or serviceprincipals.",
    "columns": {
      "AADTenantId": {
        "type": "string",
        "description": "Unique identifier of the Azure Tenant"
      },
      "AccessEndReason": {
        "type": "string",
        "description": "Reason why the source entity's access to the target entity was revoked"
      },
      "AccessEndTime": {
        "type": "datetime",
        "description": "Timestamp when the source entity's access to the target entity was"
      },
      "AccessId": {
        "type": "string",
        "description": "Unique identifier for the access between source and target entity"
      },
      "AccessLevel": {
        "type": "string",
        "description": "The level of access that the source entity has to the target entity"
      },
      "AccessStartTime": {
        "type": "datetime",
        "description": "Timestamp when the source entity was provided access to the target"
      },
      "AccessType": {
        "type": "string",
        "description": "The type of access that the source entity has to the target entity"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceEntityId": {
        "type": "string",
        "description": "Unique identifier of entity which has access to the target entity"
      },
      "SourceEntityName": {
        "type": "string",
        "description": "Display name of entity which has access to the target entity"
      },
      "SourceEntityType": {
        "type": "string",
        "description": "Type of entity which has access to the target entity"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TargetEntityId": {
        "type": "string",
        "description": "Unique identifier of the entity which the source entity can access"
      },
      "TargetEntityName": {
        "type": "string",
        "description": "Display name of the entity which the source entity can access"
      },
      "TargetEntityType": {
        "type": "string",
        "description": "Type of the entity which the source entity can access"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp when the access analytics is calculated"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "UserPeerAnalytics": {
    "tableName": "UserPeerAnalytics",
    "description": "This analytics table, for a given user, provides a ranked list of peers. For example, if the user is Jane Smith, Peer Analytics calculates all of Jane's peers based on her mailing list, security groups, etc and provides the top 20 of her peers.",
    "columns": {
      "AADTenantId": {
        "type": "string",
        "description": "Unique identifier of the Azure Tenant"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "PeerUserId": {
        "type": "string",
        "description": "Unique identifier of the peer of the primary user"
      },
      "PeerUserName": {
        "type": "string",
        "description": "User name of the peer of the primary user"
      },
      "PeerUserPrincipalName": {
        "type": "string",
        "description": "User principal name of the peer of the primary user"
      },
      "Rank": {
        "type": "int",
        "description": "Rank of the peer with respect to the primary user"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp when the peer analytics is calculated"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserId": {
        "type": "string",
        "description": "Unique identifier of the primary user"
      },
      "UserName": {
        "type": "string",
        "description": "User name of the primary user"
      },
      "UserPrincipalName": {
        "type": "string",
        "description": "User principal name of the primary user"
      }
    }
  },
  "VCoreMongoRequests": {
    "tableName": "VCoreMongoRequests",
    "description": "This table details data plane requests for MongoDB (vCore).",
    "columns": {
      "ActivityId": {
        "type": "string",
        "description": "The unique identifier (GUID) for this Mongo (vCore) request."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClientIp": {
        "type": "string",
        "description": "The IP address of the client VM which issued the request."
      },
      "ClusterName": {
        "type": "string",
        "description": "Cluster name."
      },
      "CollectionName": {
        "type": "string",
        "description": "The name of the Cosmos DB container against which this request was"
      },
      "DatabaseName": {
        "type": "string",
        "description": "The name of the Cosmos DB database against which this request was"
      },
      "DurationMs": {
        "type": "real",
        "description": "The server-side execution time (in ms) for this request."
      },
      "ErrorCode": {
        "type": "int",
        "description": "The error code (if applicable) for this request."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "OperationName": {
        "type": "string",
        "description": "The Mongo (vCore) operation that was executed."
      },
      "PiiCommandText": {
        "type": "string",
        "description": "Full text query for this Mongo (vCore) request."
      },
      "RegionName": {
        "type": "string",
        "description": "The region against which this request was issued."
      },
      "RequestLength": {
        "type": "real",
        "description": "The payload size (in bytes) of the request."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ResponseLength": {
        "type": "real",
        "description": "The payload size (in bytes) of the server response."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Timestamp (in UTC) of the Mongo (vCore) data plane request."
      },
      "TransportProtocol": {
        "type": "string",
        "description": "The transport protocol of the request."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserAgent": {
        "type": "string",
        "description": "The user agent suffix associated with the client issuing the request."
      },
      "UserId": {
        "type": "string",
        "description": "The user id associated with the client issuing the request."
      }
    }
  },
  "VIAudit": {
    "tableName": "VIAudit",
    "description": "Audit logs from Video Indexer.",
    "columns": {
      "AccountId": {
        "type": "string",
        "description": "The Video Indexer account ID."
      },
      "AccountName": {
        "type": "string",
        "description": "The Video Indexer account name."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CallerIpAddress": {
        "type": "string",
        "description": "The caller IP address."
      },
      "Claims": {
        "type": "dynamic",
        "description": "Caller claims details."
      },
      "CorrelationId": {
        "type": "string",
        "description": "A unique record identifier."
      },
      "Description": {
        "type": "string",
        "description": "The operation description."
      },
      "DurationMs": {
        "type": "int",
        "description": "The operation duration in milliseconds."
      },
      "ExternalUserId": {
        "type": "string",
        "description": "Caller external user Id."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Location": {
        "type": "string",
        "description": "The Video Indexer resource location."
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation that triggered the event."
      },
      "OperationVersion": {
        "type": "string",
        "description": "The Video Indexer operations API version."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "Signature": {
        "type": "int",
        "description": "Http response signature of the operation, for example: 200, 401."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "Status": {
        "type": "string",
        "description": "Status of the operation, for example: Success, Failure, Warning,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the event was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "Upn": {
        "type": "string",
        "description": "Caller email."
      },
      "VideoId": {
        "type": "string",
        "description": "The Video Indexer video ID."
      },
      "VideoIndexerResourceId": {
        "type": "string",
        "description": "The Video Indexer resource ID."
      }
    }
  },
  "VIIndexing": {
    "tableName": "VIIndexing",
    "description": "Indexing logs from Video Indexer.",
    "columns": {
      "AccountId": {
        "type": "string",
        "description": "Video Indexer account ID."
      },
      "AccountName": {
        "type": "string",
        "description": "Video Indexer account name."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CorrelationId": {
        "type": "string",
        "description": "A unique record identifier."
      },
      "DurationMs": {
        "type": "int",
        "description": "The operation duration in milliseconds."
      },
      "ErrorCode": {
        "type": "string",
        "description": "The error code if the operation failed"
      },
      "ErrorDescription": {
        "type": "string",
        "description": "The description of the error code ."
      },
      "ExternalUserId": {
        "type": "string",
        "description": "Caller external user Id."
      },
      "IndexingProperties": {
        "type": "dynamic",
        "description": "Properties of the indexing operation request."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Location": {
        "type": "string",
        "description": "Video Indexer resource location."
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation that triggered the event."
      },
      "OperationVersion": {
        "type": "string",
        "description": "Video Indexer operations API version."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "Status": {
        "type": "string",
        "description": "Status of the operation, for example: Success, Failure, Warning,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the event was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "Upn": {
        "type": "string",
        "description": "Caller email."
      },
      "VideoId": {
        "type": "string",
        "description": "Video Indexer video ID."
      },
      "VideoIndexerResourceId": {
        "type": "string",
        "description": "Video Indexer resource ID."
      }
    }
  },
  "VMBoundPort": {
    "tableName": "VMBoundPort",
    "description": "Traffic for open server ports on the monitored machine.",
    "columns": {
      "AgentId": {
        "type": "string",
        "description": "Unique agent GUID for the agent reporting data on the server."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "BytesReceived": {
        "type": "long",
        "description": "Bytes received on the port"
      },
      "BytesSent": {
        "type": "long",
        "description": "Bytes sent on the port"
      },
      "Computer": {
        "type": "string",
        "description": "Name of the server"
      },
      "Ip": {
        "type": "string",
        "description": "Port IP address. Can be wildcard IP 0.0.0.0."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "IsWildcardBind": {
        "type": "bool",
        "description": "Specifies whether connection made as a wildcard bind request."
      },
      "LinksEstablished": {
        "type": "long",
        "description": "Count of links established on the port."
      },
      "LinksLive": {
        "type": "long",
        "description": "Count of live links at the end of the time period recorded."
      },
      "LinksTerminated": {
        "type": "long",
        "description": "Count of terminated links over the time periof recorded."
      },
      "Machine": {
        "type": "string",
        "description": "Unique identifier to the machine in the ServiceMapComputer_CL table."
      },
      "Port": {
        "type": "int",
        "description": "Port number."
      },
      "PortId": {
        "type": "string",
        "description": "Port ID."
      },
      "Process": {
        "type": "string",
        "description": "Identity of the process or group of processes that the port is associated"
      },
      "ProcessName": {
        "type": "string",
        "description": "Unique identifier for the process in the ServiceMapProcess_CL table."
      },
      "Protocol": {
        "type": "string",
        "description": "The protocol. Example tcp or udp (only tcp is currently supported)."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Responses": {
        "type": "long",
        "description": "Count of responses in the time period recorded."
      },
      "ResponseTimeMax": {
        "type": "long",
        "description": "Measurement of the maximum time between first and last byte received."
      },
      "ResponseTimeMin": {
        "type": "long",
        "description": "Measurement of the minimum time between first and last byte received."
      },
      "ResponseTimeSum": {
        "type": "long",
        "description": "Measurement of the total time between first and last byte received"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time the record was created."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "VMComputer": {
    "tableName": "VMComputer",
    "description": "Inventory data for servers collected by the Service Map and VM Insights solutions using the Dependency agent and Log analytics agent.",
    "columns": {
      "AgentId": {
        "type": "string",
        "description": "Unique ID for the microsoft monitoring agent installed on"
      },
      "AzureCloudServiceDeployment": {
        "type": "string",
        "description": "For cloud services the deployment id of the server."
      },
      "AzureCloudServiceInstanceId": {
        "type": "string",
        "description": "For cloud services the instance name of the server."
      },
      "AzureCloudServiceName": {
        "type": "string",
        "description": "For cloud services the service name of the server."
      },
      "AzureCloudServiceRoleName": {
        "type": "string",
        "description": "For cloud services the role name of the server."
      },
      "AzureCloudServiceRoleType": {
        "type": "string",
        "description": "For cloud services the role type of the server."
      },
      "AzureFaultDomain": {
        "type": "string",
        "description": "The fault domain for the server. Only available for Azure"
      },
      "AzureImageOffering": {
        "type": "string",
        "description": "The description of the image used on the server. Only"
      },
      "AzureImagePublisher": {
        "type": "string",
        "description": "The publisher of the VM image used on the server. Only"
      },
      "AzureImageSku": {
        "type": "string",
        "description": "The sku for the VM image used on the server. Only available"
      },
      "AzureImageVersion": {
        "type": "string",
        "description": "The image version used on the server. Only available for"
      },
      "AzureLocation": {
        "type": "string",
        "description": "The location of the server. Only available for Azure VMs and"
      },
      "AzureResourceGroup": {
        "type": "string",
        "description": "The resource group for the server. Only available for Azure"
      },
      "AzureResourceName": {
        "type": "string",
        "description": "The Azure name for the resource."
      },
      "AzureServiceFabricClusterId": {
        "type": "string",
        "description": "For service fabric clusters the cluster id of the server."
      },
      "AzureServiceFabricClusterName": {
        "type": "string",
        "description": "For service fabric clusters the cluster name."
      },
      "AzureSize": {
        "type": "string",
        "description": "The size of the Azure VM. Only available for Azure VMs and"
      },
      "AzureSubscriptionId": {
        "type": "string",
        "description": "The subscription ID of the server. Only available for Azure"
      },
      "AzureUpdateDomain": {
        "type": "string",
        "description": "The update domain of the server. Only available for Azure"
      },
      "AzureVmId": {
        "type": "string",
        "description": "The Azure ID of the server. Only available for Azure VMs"
      },
      "AzureVmScaleSetDeployment": {
        "type": "string",
        "description": "For scale sets the deployment id of the server."
      },
      "AzureVmScaleSetInstanceId": {
        "type": "string",
        "description": "For scale sets the instance id of the server."
      },
      "AzureVmScaleSetName": {
        "type": "string",
        "description": "For scale sets the name of the scale set."
      },
      "AzureVmScaleSetResourceId": {
        "type": "string",
        "description": "For scale sets the resource id of the scale set."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "BootTime": {
        "type": "datetime",
        "description": "The boot time in UTC"
      },
      "Computer": {
        "type": "string",
        "description": "The name of the computer."
      },
      "Cpus": {
        "type": "int",
        "description": "The number of CPUs"
      },
      "CpuSpeed": {
        "type": "int",
        "description": "The CPU speed in MHz"
      },
      "DependencyAgentVersion": {
        "type": "string",
        "description": "The version number of the dependency agent on the server."
      },
      "DisplayName": {
        "type": "string",
        "description": "The display name of the server."
      },
      "DnsNames": {
        "type": "dynamic",
        "description": "An array of DNS names"
      },
      "FullDisplayName": {
        "type": "string",
        "description": "The full display name of the server."
      },
      "HostingProvider": {
        "type": "string",
        "description": "The hosting provider for the server"
      },
      "HostName": {
        "type": "string",
        "description": "The host name of the server without domain."
      },
      "HypervisorId": {
        "type": "string",
        "description": "The hypervisor id of the server."
      },
      "HypervisorType": {
        "type": "string",
        "description": "The hypervisor type of the server."
      },
      "Ipv4Addresses": {
        "type": "dynamic",
        "description": "A list of the server's IPv4 addresses"
      },
      "Ipv4DefaultGateways": {
        "type": "dynamic",
        "description": "A list of the server's IPv4 default gateways."
      },
      "Ipv4SubnetMasks": {
        "type": "dynamic",
        "description": "A list of the server's IPv4 subnet masks."
      },
      "Ipv6Addresses": {
        "type": "dynamic",
        "description": "A list of the server's IPv6 addresses"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "MacAddresses": {
        "type": "dynamic",
        "description": "A list of the server's MAC addresses"
      },
      "Machine": {
        "type": "string",
        "description": "AgentId with m- prepended."
      },
      "OperatingSystemFamily": {
        "type": "string",
        "description": "Value will be windows or linux"
      },
      "OperatingSystemFullName": {
        "type": "string",
        "description": "The full name of the operating system"
      },
      "PhysicalMemoryMB": {
        "type": "long",
        "description": "The physical memory in MB"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time the record was created."
      },
      "TimeZone": {
        "type": "string",
        "description": "The UTC timezone offset of the server."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "VirtualizationState": {
        "type": "string",
        "description": "Values will be Unknown Physical Virtual or Hypervisor"
      },
      "VirtualMachineHypervisorId": {
        "type": "string",
        "description": "The hypervisor id of the server."
      },
      "VirtualMachineNativeId": {
        "type": "string",
        "description": "The native id of the server."
      },
      "VirtualMachineNativeName": {
        "type": "string",
        "description": "The name of the VM"
      },
      "VirtualMachineType": {
        "type": "string",
        "description": "hyperv vmware xen and so on"
      }
    }
  },
  "VMConnection": {
    "tableName": "VMConnection",
    "description": "Traffic for inbound and outbound connections to and from monitored computers.",
    "columns": {
      "AgentId": {
        "type": "string",
        "description": "Unique agent GUID for the agent reporting data on the server."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "BytesReceived": {
        "type": "long",
        "description": "Total number of bytes that have been received during the"
      },
      "BytesSent": {
        "type": "long",
        "description": "Total number of bytes that have been sent during the reporting"
      },
      "Computer": {
        "type": "string",
        "description": "Name of the server from the ServiceMapComputer_CL table."
      },
      "Confidence": {
        "type": "string",
        "description": "Values are 0 - 100."
      },
      "ConnectionId": {
        "type": "string",
        "description": "Unique Id for the connection record."
      },
      "Description": {
        "type": "string",
        "description": "Description of the observed threat."
      },
      "DestinationIp": {
        "type": "string",
        "description": "IP address of the destination."
      },
      "DestinationPort": {
        "type": "int",
        "description": "Port number of the destination."
      },
      "Direction": {
        "type": "string",
        "description": "Direction of the connection value is inbound or outbound"
      },
      "FirstReportedDateTime": {
        "type": "string",
        "description": "The first time the provider reported the indicator."
      },
      "IndicatorThreatType": {
        "type": "string",
        "description": "Threat indicator detected. Possible values are Botnet C2"
      },
      "IsActive": {
        "type": "string",
        "description": "The last time the indicator was seen by Interflow."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable"
      },
      "LastReportedDateTime": {
        "type": "string",
        "description": "Indicates indicators are deactivated with True or False value."
      },
      "LinksEstablished": {
        "type": "long",
        "description": "Number of physical network connections that have been"
      },
      "LinksFailed": {
        "type": "long",
        "description": "Number of physical network connections that have failed"
      },
      "LinksLive": {
        "type": "long",
        "description": "Number of physical network connections that were open at the"
      },
      "LinksTerminated": {
        "type": "long",
        "description": "Number of physical network connections that have been"
      },
      "Machine": {
        "type": "string",
        "description": "FQDN of the computer."
      },
      "MaliciousIp": {
        "type": "string",
        "description": "Remote IP address."
      },
      "Process": {
        "type": "string",
        "description": "Identity of process or groups of processes initiating or"
      },
      "ProcessName": {
        "type": "string",
        "description": "Unique identifier for the process in the ServiceMapProcess_CL"
      },
      "Protocol": {
        "type": "string",
        "description": "Protocol used for the connection. Only possible value is tcp."
      },
      "RemoteClassification": {
        "type": "string",
        "description": "A classification of the remote endpoint based on its ip and dns"
      },
      "RemoteCountry": {
        "type": "string",
        "description": "Name of the country or region hosting RemoteIp."
      },
      "RemoteDnsCanonicalNames": {
        "type": "string",
        "description": "A JSON array of canonical names that came back from the DNS"
      },
      "RemoteDnsQuestions": {
        "type": "string",
        "description": "A JSON array of DNS questions (lookups) that were performed"
      },
      "RemoteIp": {
        "type": "string",
        "description": "The IP address of the remote end of a connection is included in"
      },
      "RemoteLatitude": {
        "type": "real",
        "description": "Geolocation latitude. An example would be 47.68."
      },
      "RemoteLongitude": {
        "type": "real",
        "description": "Geolocation longitude. An example would be -122.12."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "Responses": {
        "type": "long",
        "description": "Number of responses observed during the reporting time"
      },
      "ResponseTimeMax": {
        "type": "long",
        "description": "Largest response time observed during the reporting time"
      },
      "ResponseTimeMin": {
        "type": "long",
        "description": "Smallest response time observed during the reporting time"
      },
      "ResponseTimeSum": {
        "type": "long",
        "description": "Sum of all response times observed during the reporting time"
      },
      "Severity": {
        "type": "int",
        "description": "Possible values are 0 - 5 where 5 is the most severe and 0 is not"
      },
      "SourceIp": {
        "type": "string",
        "description": "IP address of the source."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time the record was created."
      },
      "TLPLevel": {
        "type": "string",
        "description": "Traffic Light Protocol (TLP) Level. Possible values are White"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "VMProcess": {
    "tableName": "VMProcess",
    "description": "Process data for servers collected by the Service Map and VM Insights solutions using the Dependency agent and Log analytics agent.",
    "columns": {
      "AgentId": {
        "type": "string",
        "description": "Unique ID for the dependency agent installed on the server."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CommandLine": {
        "type": "string",
        "description": "The command line"
      },
      "CompanyName": {
        "type": "string",
        "description": "The name of the company"
      },
      "Computer": {
        "type": "string",
        "description": "The name of the computer."
      },
      "Description": {
        "type": "string",
        "description": "The process description"
      },
      "DisplayName": {
        "type": "string",
        "description": "The friendly display name of the process"
      },
      "ExecutableName": {
        "type": "string",
        "description": "The name of the process executable"
      },
      "ExecutablePath": {
        "type": "string",
        "description": "The path to the executable file"
      },
      "FileVersion": {
        "type": "string",
        "description": "The file version"
      },
      "FirstPid": {
        "type": "int",
        "description": "The first PID in the process pool"
      },
      "Group": {
        "type": "string",
        "description": "The process group name for the process"
      },
      "InternalName": {
        "type": "string",
        "description": "The internal name"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Machine": {
        "type": "string",
        "description": "The machine name of the server."
      },
      "Process": {
        "type": "string",
        "description": "The name of the process."
      },
      "ProductName": {
        "type": "string",
        "description": "The name of the product"
      },
      "ProductVersion": {
        "type": "string",
        "description": "The product version"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Role": {
        "type": "string",
        "description": "The role of the process."
      },
      "Services": {
        "type": "dynamic",
        "description": "A list of services associated with the process."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "StartTime": {
        "type": "datetime",
        "description": "The process pool start time"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time the record was created."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserDomain": {
        "type": "string",
        "description": "The domain under which the process is executing"
      },
      "UserName": {
        "type": "string",
        "description": "The account under which the process is executing"
      },
      "WorkingDirectory": {
        "type": "string",
        "description": "The working directory"
      }
    }
  },
  "W3CIISLog": {
    "tableName": "W3CIISLog",
    "description": "Internet Information Server (IIS) log on Windows computers using the Log Analytics agent.",
    "columns": {
      "AzureDeploymentID": {
        "type": "string",
        "description": "Azure deployment ID of the cloud service the log belongs to. Only"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "cIP": {
        "type": "string",
        "description": "IP address of the client that accessed the web server."
      },
      "Computer": {
        "type": "string",
        "description": "Name of the computer that the event was collected from."
      },
      "Confidence": {
        "type": "string",
        "description": "Only populated for IIS logs collected from Azure Cloud Services"
      },
      "csBytes": {
        "type": "long",
        "description": "Number of bytes that the server received."
      },
      "csCookie": {
        "type": "string",
        "description": "Content of the cookie sent or received if any."
      },
      "csHost": {
        "type": "string",
        "description": "Host header name if any."
      },
      "csMethod": {
        "type": "string",
        "description": "Method of the request such as GET or POST."
      },
      "csReferer": {
        "type": "string",
        "description": "Site that the user last visited. This site provided a link to the"
      },
      "csUriQuery": {
        "type": "string",
        "description": "The query if any that the client was trying to perform. A Universal"
      },
      "csUriStem": {
        "type": "string",
        "description": "Target of the action such as a web page for example Default.htm."
      },
      "csUserAgent": {
        "type": "string",
        "description": "Browser type of the client."
      },
      "csUserName": {
        "type": "string",
        "description": "Name of the authenticated user that accessed the server."
      },
      "csVersion": {
        "type": "string",
        "description": "Protocol version that the client used."
      },
      "Description": {
        "type": "string",
        "description": "Only populated for IIS logs collected from Azure Cloud Services"
      },
      "FirstReportedDateTime": {
        "type": "string",
        "description": "Only populated for IIS logs collected from Azure Cloud Services"
      },
      "IndicatorThreatType": {
        "type": "string",
        "description": "Only populated for IIS logs collected from Azure Cloud Services"
      },
      "IsActive": {
        "type": "string",
        "description": "Only populated for IIS logs collected from Azure Cloud Services"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "LastReportedDateTime": {
        "type": "string",
        "description": "Only populated for IIS logs collected from Azure Cloud Services"
      },
      "MaliciousIP": {
        "type": "string",
        "description": "Only populated for IIS logs collected from Azure Cloud Services"
      },
      "ManagementGroupName": {
        "type": "string",
        "description": "Name of the management group for Operations Manager agents."
      },
      "RemoteIPCountry": {
        "type": "string",
        "description": "Country/region of the IP address of the client."
      },
      "RemoteIPLatitude": {
        "type": "real",
        "description": "Latitude of the client IP address."
      },
      "RemoteIPLongitude": {
        "type": "real",
        "description": "Longitude of the client IP address."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "Role": {
        "type": "string",
        "description": "Role instance of the cloud service the log belongs to. Only"
      },
      "RoleInstance": {
        "type": "string",
        "description": "Role of the cloud service the log belongs to. Only populated when"
      },
      "scBytes": {
        "type": "long",
        "description": "Number of bytes that the server sent."
      },
      "scStatus": {
        "type": "string",
        "description": "HTTP status code."
      },
      "scSubStatus": {
        "type": "string",
        "description": "Substatus error code."
      },
      "scWin32Status": {
        "type": "string",
        "description": "Windows status code."
      },
      "Severity": {
        "type": "int",
        "description": "Only populated for IIS logs collected from Azure Cloud Services"
      },
      "sIP": {
        "type": "string",
        "description": "IP address of the server on which the log file entry was generated."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "sPort": {
        "type": "int",
        "description": "Server port number that is configured for the service."
      },
      "sSiteName": {
        "type": "string",
        "description": "Name of the IIS site."
      },
      "StorageAccount": {
        "type": "string",
        "description": "Only populated for IIS logs collected from Azure Cloud Services"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time the record was created."
      },
      "TimeTaken": {
        "type": "long",
        "description": "Length of time to process the request in milliseconds."
      },
      "TLPLevel": {
        "type": "string",
        "description": "Only populated for IIS logs collected from Azure Cloud Services"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "WDAVStatus": {
    "tableName": "WDAVStatus",
    "description": "",
    "columns": {
      "ApplicationVersion": {
        "type": "string",
        "description": ""
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CloudBlockLevel": {
        "type": "string",
        "description": ""
      },
      "Computer": {
        "type": "string",
        "description": ""
      },
      "ComputerID": {
        "type": "string",
        "description": ""
      },
      "DefinitionVersion": {
        "type": "string",
        "description": ""
      },
      "DetailedStatus": {
        "type": "string",
        "description": ""
      },
      "EngineVersion": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "LastDefinitionUpdateTime": {
        "type": "datetime",
        "description": ""
      },
      "LastScan": {
        "type": "datetime",
        "description": ""
      },
      "MoreInformation": {
        "type": "string",
        "description": ""
      },
      "OSName": {
        "type": "string",
        "description": ""
      },
      "ProtectionState": {
        "type": "string",
        "description": ""
      },
      "PuaMode": {
        "type": "string",
        "description": ""
      },
      "SampleSubmission": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UpdateStatus": {
        "type": "string",
        "description": ""
      }
    }
  },
  "WDAVThreat": {
    "tableName": "WDAVThreat",
    "description": "",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Computer": {
        "type": "string",
        "description": ""
      },
      "ComputerID": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "IsCloudSignature": {
        "type": "bool",
        "description": ""
      },
      "LastScan": {
        "type": "datetime",
        "description": ""
      },
      "MoreInformation": {
        "type": "string",
        "description": ""
      },
      "RemediationAction": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "ThreatAction": {
        "type": "string",
        "description": ""
      },
      "ThreatAlertLevel": {
        "type": "string",
        "description": ""
      },
      "ThreatCategory": {
        "type": "string",
        "description": ""
      },
      "ThreatEncyclopediaLink": {
        "type": "string",
        "description": ""
      },
      "ThreatError": {
        "type": "string",
        "description": ""
      },
      "ThreatFamily": {
        "type": "string",
        "description": ""
      },
      "ThreatId": {
        "type": "int",
        "description": ""
      },
      "ThreatName": {
        "type": "string",
        "description": ""
      },
      "ThreatReportId": {
        "type": "string",
        "description": ""
      },
      "ThreatStatus": {
        "type": "string",
        "description": ""
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "WOUserAudits": {
    "tableName": "WOUserAudits",
    "description": "Contains all workload orchestration API Server audit logs including the events generated as a result of interactions with any external system or toolchain. These events are useful for monitoring all the interactions with the workload orchestration API server and between workload orchestration and external orchestrated targets, e.g. Kubernetes. Requires Diagnostic Settings to use the Resource Specific destination table.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "Category of the event."
      },
      "CorrelationId": {
        "type": "string",
        "description": "Correlation ID of the operation."
      },
      "EdgeLocation": {
        "type": "string",
        "description": "The Azure Edge custom location resource Id on which the"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Location": {
        "type": "string",
        "description": "Azure region in which the workload orchestration diagnostic"
      },
      "Message": {
        "type": "string",
        "description": "The audit message."
      },
      "OperatingResourceId": {
        "type": "string",
        "description": "The operating resource id refers to the specific operational"
      },
      "OperatingResourceK8SId": {
        "type": "string",
        "description": "The operating resource K8s id refers to K8s resource id"
      },
      "OperationName": {
        "type": "string",
        "description": "Operation name of the event."
      },
      "Properties": {
        "type": "dynamic",
        "description": "Properties of the event."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Event generation time."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "User": {
        "type": "string",
        "description": "The Microsoft Entra ID object Id of the requester."
      },
      "WOServiceInstance": {
        "type": "string",
        "description": "workload orchestration service pod name."
      },
      "WOServiceName": {
        "type": "string",
        "description": "workload orchestration service name."
      }
    }
  },
  "WOUserDiagnostics": {
    "tableName": "WOUserDiagnostics",
    "description": "Contains all workload orchestration API Server user diagnostics logs. These events are useful for diagnose failed requests on workload orchestration. Requires Diagnostic Settings to use the Resource Specific destination table.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "Category of the event."
      },
      "CorrelationId": {
        "type": "string",
        "description": "Correlation ID of the operation."
      },
      "EdgeLocation": {
        "type": "string",
        "description": "The Azure Edge custom location resource Id on which the"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "Location": {
        "type": "string",
        "description": "Azure region in which the workload orchestration diagnostic"
      },
      "Message": {
        "type": "string",
        "description": "The diagnose message."
      },
      "OperatingResourceId": {
        "type": "string",
        "description": "The operating resource id refers to the specific operational"
      },
      "OperatingResourceK8SId": {
        "type": "string",
        "description": "The operating resource K8s id refers to K8s resource id"
      },
      "OperationName": {
        "type": "string",
        "description": "Operation name of the event."
      },
      "Properties": {
        "type": "dynamic",
        "description": "Properties of the event."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Event generation time."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "User": {
        "type": "string",
        "description": "The Microsoft Entra ID object Id of the requester."
      },
      "WOServiceInstance": {
        "type": "string",
        "description": "workload orchestration service pod name."
      },
      "WOServiceName": {
        "type": "string",
        "description": "workload orchestration service name."
      }
    }
  },
  "WUDOAggregatedStatus": {
    "tableName": "WUDOAggregatedStatus",
    "description": "",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "BWOptPercent28Days": {
        "type": "real",
        "description": ""
      },
      "BytesFromCDN": {
        "type": "long",
        "description": ""
      },
      "BytesFromGroupPeers": {
        "type": "long",
        "description": ""
      },
      "BytesFromIntPeers": {
        "type": "long",
        "description": ""
      },
      "BytesFromPeers": {
        "type": "long",
        "description": ""
      },
      "ContentType": {
        "type": "string",
        "description": ""
      },
      "DeviceCount": {
        "type": "int",
        "description": ""
      },
      "DownloadMode": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "WUDOStatus": {
    "tableName": "WUDOStatus",
    "description": "",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "BWOptPercent28Days": {
        "type": "real",
        "description": ""
      },
      "BWOptPercent7Days": {
        "type": "real",
        "description": ""
      },
      "BytesFromCDN": {
        "type": "long",
        "description": ""
      },
      "BytesFromGroupPeers": {
        "type": "long",
        "description": ""
      },
      "BytesFromIntPeers": {
        "type": "long",
        "description": ""
      },
      "BytesFromPeers": {
        "type": "long",
        "description": ""
      },
      "City": {
        "type": "string",
        "description": ""
      },
      "Computer": {
        "type": "string",
        "description": ""
      },
      "ComputerID": {
        "type": "string",
        "description": ""
      },
      "ContentDownloadMode": {
        "type": "int",
        "description": ""
      },
      "ContentType": {
        "type": "string",
        "description": ""
      },
      "Country": {
        "type": "string",
        "description": ""
      },
      "DOStatusDescription": {
        "type": "string",
        "description": ""
      },
      "DownloadMode": {
        "type": "string",
        "description": ""
      },
      "DownloadModeSrc": {
        "type": "string",
        "description": ""
      },
      "GroupID": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable"
      },
      "ISP": {
        "type": "string",
        "description": ""
      },
      "LastScan": {
        "type": "datetime",
        "description": ""
      },
      "NoPeersCount": {
        "type": "long",
        "description": ""
      },
      "OSName": {
        "type": "string",
        "description": ""
      },
      "OSVersion": {
        "type": "string",
        "description": ""
      },
      "PeerEligibleTransfers": {
        "type": "long",
        "description": ""
      },
      "PeeringStatus": {
        "type": "string",
        "description": ""
      },
      "PeersCannotConnectCount": {
        "type": "long",
        "description": ""
      },
      "PeersSuccessCount": {
        "type": "long",
        "description": ""
      },
      "PeersUnknownCount": {
        "type": "long",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "TotalTimeForDownload": {
        "type": "string",
        "description": ""
      },
      "TotalTransfers": {
        "type": "long",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "WVDAgentHealthStatus": {
    "tableName": "WVDAgentHealthStatus",
    "description": "Azure Virtual Desktop agent health status.",
    "columns": {
      "ActiveSessions": {
        "type": "string",
        "description": "The number of active sessions on the VM"
      },
      "AgentVersion": {
        "type": "string",
        "description": "The version of the WVD Agent running on the Virtual"
      },
      "AllowNewSessions": {
        "type": "string",
        "description": "State of the AllowNewSession settings of the host pool"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "InactiveSessions": {
        "type": "string",
        "description": "The number of disconnected, or logged off sessions on the"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "LastHeartBeat": {
        "type": "datetime",
        "description": "The time recorded when there was a change in the health"
      },
      "LastUpgradeTimeStamp": {
        "type": "datetime",
        "description": "The time recorded when there was a change in the upgrade"
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation"
      },
      "OSVersion": {
        "type": "string",
        "description": "The version of the operating system"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "SessionHostHealthCheckResult": {
        "type": "dynamic",
        "description": "The set of results on health checks"
      },
      "SessionHostName": {
        "type": "string",
        "description": "Name of the Virtual Machine"
      },
      "SessionHostResourceId": {
        "type": "string",
        "description": "The ARM path of the session host"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "Status": {
        "type": "string",
        "description": "The current status of the VM, whether its healthy or not"
      },
      "StatusTimeStamp": {
        "type": "datetime",
        "description": "The time recorded when there was a change in the health"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "SxSStackVersion": {
        "type": "string",
        "description": "The version of the reverse connect listener running on the"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Date and time when the report was generated (UTC)"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UpgradeErrorMsg": {
        "type": "string",
        "description": "The version of the reverse connect listener running on the"
      },
      "UpgradeState": {
        "type": "string",
        "description": "The last known state from a previous update"
      }
    }
  },
  "WVDAutoscaleEvaluationPooled": {
    "tableName": "WVDAutoscaleEvaluationPooled",
    "description": "The results of an Azure Virtual Desktop Autoscale scaling plan evaluation on a hostpool. This includes information on the actions Autoscale took on the sessions hosts, such as starting or deallocating them, and why it took those actions. The column names that start with 'Config' contain the scaling plan configuration values for the current Autoscale schedule phase. If the ResultType column value is 'Failed' then join to the WVDErrors table using the CorrelationId column to get more details. For Autoscale documentation see https://go.microsoft.com/fwlink/?linkid=2169532 .",
    "columns": {
      "ActiveSessionHostCount": {
        "type": "int",
        "description": "Number of session hosts accepting user connections."
      },
      "ActiveSessionHostsPercent": {
        "type": "real",
        "description": "Percent of session hosts in the host pool considered"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ConfigCapacityThresholdPercent": {
        "type": "real",
        "description": "Capacity threshold percent."
      },
      "ConfigMinActiveSessionHostsPercent": {
        "type": "real",
        "description": "Minimum percent of session hosts that should be"
      },
      "ConfigScheduleName": {
        "type": "string",
        "description": "Name of schedule used in the evaluation."
      },
      "ConfigSchedulePhase": {
        "type": "string",
        "description": "Schedule phase at the time of evaluation."
      },
      "CorrelationId": {
        "type": "string",
        "description": "A GUID generated for this Autoscale evaluation."
      },
      "ExcludedSessionHostCount": {
        "type": "int",
        "description": "Number of session hosts excluded from being"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "MaxSessionLimitPerSessionHost": {
        "type": "int",
        "description": "The 'MaxSessionLimit' value defined on the host pool."
      },
      "Properties": {
        "type": "dynamic",
        "description": "Additional information. The fields included here may"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "ResultType": {
        "type": "string",
        "description": "Status of this evaluation event."
      },
      "ScalingEvaluationStartTime": {
        "type": "datetime",
        "description": "The timestamp (UTC) when the Autoscale evaluation"
      },
      "ScalingPlanResourceId": {
        "type": "string",
        "description": "Resource ID of the Autoscale scaling plan."
      },
      "ScalingReasonMessage": {
        "type": "string",
        "description": "The actions Autoscale decided to perform and why it"
      },
      "SessionCount": {
        "type": "int",
        "description": "Number of user sessions, only the user sessions from"
      },
      "SessionOccupancyPercent": {
        "type": "real",
        "description": "Percent of session host capacity occupied by user"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) this event was generated."
      },
      "TotalSessionHostCount": {
        "type": "int",
        "description": "Number of session hosts in the host pool."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UnhealthySessionHostCount": {
        "type": "int",
        "description": "Number of session hosts in a faulty state."
      }
    }
  },
  "WVDCheckpoints": {
    "tableName": "WVDCheckpoints",
    "description": "Windows Virtual Desktop Checkpoint Activity",
    "columns": {
      "ActivityType": {
        "type": "string",
        "description": "The type of activity for which this checkpoint was reported."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CorrelationId": {
        "type": "string",
        "description": "The correlation Id for the activity."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Name": {
        "type": "string",
        "description": "The name of the checkpoint."
      },
      "Parameters": {
        "type": "dynamic",
        "description": "The parameters for the checkpoint."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "Source": {
        "type": "string",
        "description": "The component that emitted the checkpoint."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of the event."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserName": {
        "type": "string",
        "description": "The user name for the activity associated with the checkpoint."
      }
    }
  },
  "WVDConnectionGraphicsDataPreview": {
    "tableName": "WVDConnectionGraphicsDataPreview",
    "description": "Windows Virtual Desktop connection graphics data.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClientSkippedFramesPercentage": {
        "type": "int",
        "description": "The percentage of frames dropped because of slow"
      },
      "CompressedFrameSizeInBytes": {
        "type": "int",
        "description": "The compressed size (bytes) of the frame with highest"
      },
      "CorrelationId": {
        "type": "string",
        "description": "The correlation ID for the activity"
      },
      "DecodingTimeOnClientInMs": {
        "type": "int",
        "description": "The decoding time (milliseconds) of the frame with"
      },
      "EncodingDelayOnServerInMs": {
        "type": "int",
        "description": "The encoding time (milliseconds) of the frame with"
      },
      "EndToEndDelayInMs": {
        "type": "int",
        "description": "The highest end-to-end delay (milliseconds) of the"
      },
      "EstAvailableBandwidthKBps": {
        "type": "int",
        "description": "The average of estimated network bandwidth (kilobyte"
      },
      "EstRoundTripTimeInMs": {
        "type": "int",
        "description": "The average of estimated network round trip times"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "NetworkSkippedFramesPercentage": {
        "type": "int",
        "description": "The percentage of frames dropped because of"
      },
      "time": {
        "type": "int",
        "description": "erval"
      },
      "RenderingTimeOnClientInMs": {
        "type": "int",
        "description": "The rendering time (milliseconds) of the frame with"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "ServerSkippedFramesPercentage": {
        "type": "int",
        "description": "The percentage of frames dropped because server is"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) when the QoE event was generated"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "WVDConnectionNetworkData": {
    "tableName": "WVDConnectionNetworkData",
    "description": "Windows Virtual Desktop connection network data.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CorrelationId": {
        "type": "string",
        "description": "The correlation ID for the activity"
      },
      "EstAvailableBandwidthKBps": {
        "type": "int",
        "description": "The average of estimated network bandwidth (kilobyte per"
      },
      "EstRoundTripTimeInMs": {
        "type": "int",
        "description": "The average of estimated network round trip times"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) when the network event was generated on"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "WVDConnections": {
    "tableName": "WVDConnections",
    "description": "Windows Virtual Desktop Connection Activity.",
    "columns": {
      "AadTenantId": {
        "type": "string",
        "description": "The AAD tenant Id of the user."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClientOS": {
        "type": "string",
        "description": "The OS of the client that is connecting (if available)."
      },
      "ClientSideIPAddress": {
        "type": "string",
        "description": "The remote IP address from the client side."
      },
      "ClientType": {
        "type": "string",
        "description": "The type of the client that is connecting (if available)."
      },
      "ClientVersion": {
        "type": "string",
        "description": "The version of the client that is connecting (if available)."
      },
      "ConnectionType": {
        "type": "string",
        "description": "The type of connection - either RAIL (RemoteApp Integrated"
      },
      "CorrelationId": {
        "type": "string",
        "description": "The activity Id."
      },
      "GatewayRegion": {
        "type": "string",
        "description": "The region of the WVD Gateway for the server side user"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable"
      },
      "IsClientPrivateLink": {
        "type": "string",
        "description": "True if the client side of this connection used a private link"
      },
      "IsSessionHostPrivateLink": {
        "type": "string",
        "description": "True if the session host side of this connection used a private"
      },
      "PredecessorConnectionId": {
        "type": "string",
        "description": "The predecessor Correlation Id of the connection, if the current"
      },
      "ResourceAlias": {
        "type": "string",
        "description": "The alias of the app that the user attempted to connect to."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "SessionHostAgentVersion": {
        "type": "string",
        "description": "The version of the WVD Agent running on the machine where"
      },
      "SessionHostAzureVmId": {
        "type": "string",
        "description": "The Azure VM Id of the machine where the user connection"
      },
      "SessionHostIPAddress": {
        "type": "string",
        "description": "The IP address of the machine where the user connection was"
      },
      "SessionHostJoinType": {
        "type": "string",
        "description": "The type of the domain join for the Session Host - either"
      },
      "SessionHostName": {
        "type": "string",
        "description": "The FQDN of the machine where the user connection was"
      },
      "SessionHostOSDescription": {
        "type": "string",
        "description": "The OS SKU description of the machine where the user"
      },
      "SessionHostOSVersion": {
        "type": "string",
        "description": "The OS version of the machine where the user connection was"
      },
      "SessionHostPoolType": {
        "type": "string",
        "description": "The type of session host pool - either SharedDesktop or"
      },
      "SessionHostSessionId": {
        "type": "string",
        "description": "The Session Id of WVD RDP Stack running on the machine"
      },
      "SessionHostSxSStackVersion": {
        "type": "string",
        "description": "The version of the WVD RDP Stack running on the machine"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "State": {
        "type": "string",
        "description": "The state of the connection."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of the event."
      },
      "TransportType": {
        "type": "string",
        "description": "The type of transport used by the RDP connection: Shortpath,"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserName": {
        "type": "string",
        "description": "The user who initiated the connection."
      }
    }
  },
  "WVDErrors": {
    "tableName": "WVDErrors",
    "description": "Windows Virtual Desktop Error Activity",
    "columns": {
      "ActivityType": {
        "type": "string",
        "description": "The activity type for which the error happened."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Code": {
        "type": "long",
        "description": "The error code for the error."
      },
      "CodeSymbolic": {
        "type": "string",
        "description": "The error code symbolic representation (if available)."
      },
      "CorrelationId": {
        "type": "string",
        "description": "The activity Id."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Message": {
        "type": "string",
        "description": "The error message."
      },
      "Operation": {
        "type": "string",
        "description": "The name of the operation that failed."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "ServiceError": {
        "type": "bool",
        "description": "Indicator whether this is a service or customer error."
      },
      "Source": {
        "type": "string",
        "description": "The source of the error."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of the event."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserName": {
        "type": "string",
        "description": "The user for which the error happened."
      }
    }
  },
  "WVDFeeds": {
    "tableName": "WVDFeeds",
    "description": "Windows Virtual Desktop Feed Activity",
    "columns": {
      "AadTenantId": {
        "type": "string",
        "description": "The AAD tenant Id of the user."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClientOS": {
        "type": "string",
        "description": "The OS of the client that is requesting the feed (if available)."
      },
      "ClientSideIPAddress": {
        "type": "string",
        "description": "The remote IP address from the client side."
      },
      "ClientType": {
        "type": "string",
        "description": "The type of the client that is requesting the feed (if available)."
      },
      "ClientVersion": {
        "type": "string",
        "description": "The version of the client that is requesting the feed (if available)."
      },
      "CorrelationId": {
        "type": "string",
        "description": "The activity Id."
      },
      "IconFail": {
        "type": "int",
        "description": "The number of Icons (PNG, ICO) files that failed to be retrieved."
      },
      "IconTotal": {
        "type": "int",
        "description": "The total number of Icons (PNG, ICO) files that the client attempted to"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "IsClientPrivateLink": {
        "type": "string",
        "description": "True if the client used a private link endpoint for the feed request."
      },
      "RDPFail": {
        "type": "int",
        "description": "The number of RDP files that failed to be retrieved."
      },
      "RDPTotal": {
        "type": "int",
        "description": "The total number of RDP files that the client attempted to retrieve."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of the event."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserName": {
        "type": "string",
        "description": "The user that initiated the feed request."
      }
    }
  },
  "WVDHostRegistrations": {
    "tableName": "WVDHostRegistrations",
    "description": "Windows Virtual Desktop Host Registration Activity",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CorrelationId": {
        "type": "string",
        "description": "The activity Id."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "IsSessionHostPrivateLink": {
        "type": "string",
        "description": "True if the session host side of this connection used a private link"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "SessionHostIPAddress": {
        "type": "string",
        "description": "The IP address of the session host that was registered with the"
      },
      "SessionHostName": {
        "type": "string",
        "description": "The name of the session host that was registered with the WVD"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of the event."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "WVDManagement": {
    "tableName": "WVDManagement",
    "description": "Windows Virtual Desktop Management Activity",
    "columns": {
      "AadTenantId": {
        "type": "string",
        "description": "The AAD tenant Id of the user."
      },
      "ArmObjectScope": {
        "type": "string",
        "description": "The ARM object scope for the management request - used for"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClientSideIPAddress": {
        "type": "string",
        "description": "The remote IP address from the client side."
      },
      "CorrelationId": {
        "type": "string",
        "description": "The activity Id."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "ObjectsCreated": {
        "type": "int",
        "description": "The number of objects that were created."
      },
      "ObjectsDeleted": {
        "type": "int",
        "description": "The number of objects that were deleted."
      },
      "ObjectsFetched": {
        "type": "int",
        "description": "The number of objects that were fetched."
      },
      "ObjectsUpdated": {
        "type": "int",
        "description": "The number of objects that were updated."
      },
      "ProvisioningCorrelationId": {
        "type": "string",
        "description": "The ID of the top-level provisioning operation. This maps to the"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "Route": {
        "type": "string",
        "description": "The route for the management request."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of the event."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserName": {
        "type": "string",
        "description": "The user that initiated the management request."
      }
    }
  },
  "WVDSessionHostManagement": {
    "tableName": "WVDSessionHostManagement",
    "description": "Windows Virtual Desktop session host management data.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "ClientType": {
        "type": "string",
        "description": "Information about the client that initiated the update"
      },
      "CorrelationId": {
        "type": "string",
        "description": "The correlation ID for the activity."
      },
      "FailedSessionHostCleanupPolicy": {
        "type": "string",
        "description": "The policy for cleaning up session hosts that have failed"
      },
      "FromInstanceCount": {
        "type": "int",
        "description": "The instance count before the operation. For an update"
      },
      "FromSessionHostConfigVer": {
        "type": "string",
        "description": "The version of SHC before the operation (that session hosts"
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When"
      },
      "ProvisioningCanaryPolicy": {
        "type": "string",
        "description": "The policy for creating a test canary session host before"
      },
      "ProvisioningStatus": {
        "type": "string",
        "description": "The status of the current update/provisioning operation."
      },
      "ProvisioningType": {
        "type": "string",
        "description": "The type of operation (provisioning, update)."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "ScheduledDateTime": {
        "type": "string",
        "description": "When the session host update is scheduled, the scheduled"
      },
      "ScheduledDateTimeZone": {
        "type": "string",
        "description": "The time zone that updates and provisioning happen in."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of the event."
      },
      "ToInstanceCount": {
        "type": "int",
        "description": "The instance count after the operation. For an update"
      },
      "ToSessionHostConfigVer": {
        "type": "string",
        "description": "The version of SHC after the operation (that session hosts"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UpdateDeleteOriginalVm": {
        "type": "bool",
        "description": "Property indicates whether the original VM should be"
      },
      "UpdateMaxVmsRemoved": {
        "type": "int",
        "description": "The maximum number of virtual machines that might"
      },
      "UpdateMethod": {
        "type": "string",
        "description": "The method that is used for the session host update"
      },
      "UpdateStartWindowInMinutes": {
        "type": "int",
        "description": "The window of allowable time for an update to start in"
      }
    }
  },
  "WaaSDeploymentStatus": {
    "tableName": "WaaSDeploymentStatus",
    "description": "",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Computer": {
        "type": "string",
        "description": ""
      },
      "ComputerID": {
        "type": "string",
        "description": ""
      },
      "DeferralDays": {
        "type": "int",
        "description": ""
      },
      "DeploymentError": {
        "type": "string",
        "description": ""
      },
      "DeploymentErrorCode": {
        "type": "string",
        "description": ""
      },
      "DeploymentStatus": {
        "type": "string",
        "description": ""
      },
      "DetailedStatus": {
        "type": "string",
        "description": ""
      },
      "ExpectedInstallDate": {
        "type": "datetime",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "LastScan": {
        "type": "datetime",
        "description": ""
      },
      "OriginBuild": {
        "type": "string",
        "description": ""
      },
      "OSBuild": {
        "type": "string",
        "description": ""
      },
      "OSRevisionNumber": {
        "type": "int",
        "description": ""
      },
      "OSServicingBranch": {
        "type": "string",
        "description": ""
      },
      "OSVersion": {
        "type": "string",
        "description": ""
      },
      "PauseState": {
        "type": "string",
        "description": ""
      },
      "RecommendedAction": {
        "type": "string",
        "description": ""
      },
      "ReleaseName": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "TargetBuild": {
        "type": "string",
        "description": ""
      },
      "TargetOSRevision": {
        "type": "int",
        "description": ""
      },
      "TargetOSVersion": {
        "type": "string",
        "description": ""
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UpdateCategory": {
        "type": "string",
        "description": ""
      },
      "UpdateClassification": {
        "type": "string",
        "description": ""
      },
      "UpdateReleasedDate": {
        "type": "datetime",
        "description": ""
      }
    }
  },
  "WaaSInsiderStatus": {
    "tableName": "WaaSInsiderStatus",
    "description": "Summary of each run of your update schedule with details like how many updates were not installed etc.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Computer": {
        "type": "string",
        "description": ""
      },
      "ComputerID": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "LastScan": {
        "type": "datetime",
        "description": ""
      },
      "OSArchitecture": {
        "type": "string",
        "description": ""
      },
      "OSBuild": {
        "type": "string",
        "description": ""
      },
      "OSEdition": {
        "type": "string",
        "description": ""
      },
      "OSFamily": {
        "type": "string",
        "description": ""
      },
      "OSName": {
        "type": "string",
        "description": ""
      },
      "OSRevisionNumber": {
        "type": "int",
        "description": ""
      },
      "OSVersion": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "WaaSUpdateStatus": {
    "tableName": "WaaSUpdateStatus",
    "description": "",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Computer": {
        "type": "string",
        "description": ""
      },
      "ComputerID": {
        "type": "string",
        "description": ""
      },
      "DownloadMode": {
        "type": "string",
        "description": ""
      },
      "FeatureDeferralDays": {
        "type": "int",
        "description": ""
      },
      "FeaturePauseDays": {
        "type": "int",
        "description": ""
      },
      "FeaturePauseState": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "LastScan": {
        "type": "datetime",
        "description": ""
      },
      "NeedAttentionStatus": {
        "type": "string",
        "description": ""
      },
      "OSArchitecture": {
        "type": "string",
        "description": ""
      },
      "OSBuild": {
        "type": "string",
        "description": ""
      },
      "OSCurrentStatus": {
        "type": "string",
        "description": ""
      },
      "OSEdition": {
        "type": "string",
        "description": ""
      },
      "OSFamily": {
        "type": "string",
        "description": ""
      },
      "OSFeatureUpdateStatus": {
        "type": "string",
        "description": ""
      },
      "OSName": {
        "type": "string",
        "description": ""
      },
      "OSQualityUpdateStatus": {
        "type": "string",
        "description": ""
      },
      "OSRevisionNumber": {
        "type": "int",
        "description": ""
      },
      "OSSecurityUpdateStatus": {
        "type": "string",
        "description": ""
      },
      "OSServicingBranch": {
        "type": "string",
        "description": ""
      },
      "OSVersion": {
        "type": "string",
        "description": ""
      },
      "QualityDeferralDays": {
        "type": "int",
        "description": ""
      },
      "QualityPauseDays": {
        "type": "int",
        "description": ""
      },
      "QualityPauseState": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "Watchlist": {
    "tableName": "Watchlist",
    "description": "Azure Sentinel Watchlist contains imported data from CSV files that can be used to join or filter as an alert/incident condition.",
    "columns": {
      "AzureTenantId": {
        "type": "string",
        "description": "The AAD tenant ID to which this Watchlist table belongs."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CorrelationId": {
        "type": "string",
        "description": "The ID for correlated events."
      },
      "CreatedBy": {
        "type": "dynamic",
        "description": "The JSON object with the user who created the Watchlist or Watchlist"
      },
      "CreatedTimeUTC": {
        "type": "datetime",
        "description": "The time (UTC) when the Watchlist or Watchlist item was first created."
      },
      "DefaultDuration": {
        "type": "string",
        "description": "The JSON object describing the default duration to live that each item"
      },
      "_DTItemId": {
        "type": "string",
        "description": "The Watchlist or Watchlist item unique ID. As an example, a Watchlist"
      },
      "_DTItemStatus": {
        "type": "string",
        "description": "Was the Watchlist or Watchlist item created, updated or deleted by"
      },
      "_DTItemType": {
        "type": "string",
        "description": "Distinguish between a Watchlist and a Watchlist item. As an example,"
      },
      "_DTTimestamp": {
        "type": "datetime",
        "description": "The time (UTC) when the event was generated."
      },
      "EntityMapping": {
        "type": "dynamic",
        "description": "The JSON object with Azure Sentinel entity mapping to input columns."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "LastUpdatedTimeUTC": {
        "type": "datetime",
        "description": "The time (UTC) when Watchlist or Watchlist item was last updated."
      },
      "Notes": {
        "type": "string",
        "description": "The notes provided by user."
      },
      "Provider": {
        "type": "string",
        "description": "The input provider of the Watchlist."
      },
      "SearchKey": {
        "type": "string",
        "description": "The SearchKey is used to optimize query performance when using"
      },
      "Source": {
        "type": "string",
        "description": "The input source of the Watchlist."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "Tags": {
        "type": "string",
        "description": "The JSON array of tags provided by user."
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of when the event was generated."
      },
      "TimeToLive": {
        "type": "datetime",
        "description": "The time to live for a Watchlist record, expressed as a date and time of"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UpdatedBy": {
        "type": "dynamic",
        "description": "The JSON object with the user who last updated the Watchlist or"
      },
      "WatchlistAlias": {
        "type": "string",
        "description": "The unique string referring to the Watchlist."
      },
      "WatchlistCategory": {
        "type": "string",
        "description": "The Watchlist category provided by user."
      },
      "WatchlistId": {
        "type": "string",
        "description": "The Resource Manager Watchlist resource name."
      },
      "WatchlistItem": {
        "type": "dynamic",
        "description": "The JSON object with key-value pairs from the input Watchlist source."
      },
      "WatchlistItemId": {
        "type": "string",
        "description": "The Watchlist item unique ID."
      },
      "WatchlistName": {
        "type": "string",
        "description": "The display name of Watchlist."
      }
    }
  },
  "WebPubSubConnectivity": {
    "tableName": "WebPubSubConnectivity",
    "description": "Connectivity logs provide detailed information for Azure Web PubSub hub connections. For example, basic information (user ID, connection ID, and so on) and event information (connect, disconnect, and abort event, and so on) and can be used to troubleshoot connection-related issues.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CallerIpAddress": {
        "type": "string",
        "description": "The IP of the client or server connects to Web PubSub service."
      },
      "ConnectionId": {
        "type": "string",
        "description": "The unique identifier of the connection connected to service."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Level": {
        "type": "string",
        "description": "The level of the log. Can be 'Informational', 'Warning', 'Error' or 'Critical'."
      },
      "Location": {
        "type": "string",
        "description": "The location of Azure Web PubSub service."
      },
      "Message": {
        "type": "string",
        "description": "The message of the log event. It provides details about the event."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation of the log event. It can be used to filter the log based on a"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of the log."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserId": {
        "type": "string",
        "description": "The unique identifier of the user. It is defined by the client or app server."
      }
    }
  },
  "WebPubSubHttpRequest": {
    "tableName": "WebPubSubHttpRequest",
    "description": "Http request logs provide detailed information for the http requests received by Azure Web PubSub. For example, status code and url of the request and is helpful to troubleshoot request- related issues.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CallerIpAddress": {
        "type": "string",
        "description": "The IP of the client or server connects to Web PubSub service."
      },
      "DurationMs": {
        "type": "string",
        "description": "The duration in millisecond unit between the request is received and"
      },
      "Headers": {
        "type": "string",
        "description": "The additional information passed by the client and the server with an"
      },
      "HttpMethod": {
        "type": "string",
        "description": "The HTTP method."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Level": {
        "type": "string",
        "description": "The level of the log. Can be 'Informational', 'Warning', 'Error' or 'Critical'."
      },
      "Location": {
        "type": "string",
        "description": "The location of Azure Web PubSub service."
      },
      "Message": {
        "type": "string",
        "description": "The message of the log event. It provides details about the event."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation of the log event. It can be used to filter the log based on a"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "StatusCode": {
        "type": "string",
        "description": "The Http response code."
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of the log."
      },
      "TraceId": {
        "type": "string",
        "description": "The unique identifier of the invocations. It's used for tracing invocations."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "Url": {
        "type": "string",
        "description": "The uniform resource locator of the request."
      }
    }
  },
  "WebPubSubMessaging": {
    "tableName": "WebPubSubMessaging",
    "description": "Messaging logs provide tracing information for the Azure Web PubSub hub messages received and sent via Azure Web PubSub service. For example, tracing ID and message type of the message. Typically the message is recorded when it arrives at or leaves from service and is helpful for troubleshooting message-related issues.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CallerIpAddress": {
        "type": "string",
        "description": "The IP of the client or server connects to Web PubSub service."
      },
      "ConnectionId": {
        "type": "string",
        "description": "The unique identifier of the connection connected to service."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Level": {
        "type": "string",
        "description": "The level of the log. Can be 'Informational', 'Warning', 'Error' or 'Critical'."
      },
      "Location": {
        "type": "string",
        "description": "The location of Azure Web PubSub service."
      },
      "Message": {
        "type": "string",
        "description": "The message of the log event. It provides details about the event."
      },
      "OperationName": {
        "type": "string",
        "description": "The operation of the log event. It can be used to filter the log based on a"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated with"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is associated with"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp (UTC) of the log."
      },
      "TraceId": {
        "type": "string",
        "description": "The unique identifier of the invocations. It's used for tracing invocations."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserId": {
        "type": "string",
        "description": "The unique identifier of the user. It is defined by the client or app server."
      }
    }
  },
  "Windows365AuditLogs": {
    "tableName": "Windows365AuditLogs",
    "description": "Windows365 Audit Logs.",
    "columns": {
      "ActivityId": {
        "type": "string",
        "description": "The activity Id of the operation."
      },
      "ApplicationId": {
        "type": "string",
        "description": "The caller application id of the operation."
      },
      "ApplicationName": {
        "type": "string",
        "description": "The application name of the operation."
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "BuildVersion": {
        "type": "string",
        "description": "The build version of the operation."
      },
      "CallerExtendedProperties": {
        "type": "string",
        "description": "The caller extended properties of the operation."
      },
      "ComponentName": {
        "type": "string",
        "description": "The component name of the operation."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "OperationName": {
        "type": "string",
        "description": "The name of the operation."
      },
      "OtherAuditEventProperties": {
        "type": "string",
        "description": "The audit event properties of the operation, include"
      },
      "OtherIdentityProperties": {
        "type": "string",
        "description": "The identity properties of the user, include Type,"
      },
      "Pid": {
        "type": "string",
        "description": "The pid of the operation."
      },
      "RelatedActivityId": {
        "type": "string",
        "description": "The related activity Id of the operation."
      },
      "ResourceExtendedProperties": {
        "type": "string",
        "description": "The resource extended properties of the operation."
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "Result": {
        "type": "string",
        "description": "The result of the operation."
      },
      "ScenarioId": {
        "type": "string",
        "description": "The scenario Id of the operation."
      },
      "ScenarioInstanceId": {
        "type": "string",
        "description": "The scenario instance Id of the operation."
      },
      "ServiceName": {
        "type": "string",
        "description": "The service name of the operation."
      },
      "SessionId": {
        "type": "string",
        "description": "The session Id of the operation."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "Tid": {
        "type": "string",
        "description": "The tid of the operation."
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The time stamp when the event was generated on the computer."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "UserId": {
        "type": "string",
        "description": "The user Id of the user."
      },
      "UserPrincipalName": {
        "type": "string",
        "description": "The user principal name of the user."
      },
      "ActionArea": {
        "type": "string",
        "description": ""
      },
      "ActionAreaId": {
        "type": "string",
        "description": ""
      },
      "AffectedObjectName": {
        "type": "string",
        "description": ""
      },
      "AffectedObjectType": {
        "type": "string",
        "description": ""
      },
      "AssessmentId": {
        "type": "string",
        "description": ""
      },
      "Computer": {
        "type": "string",
        "description": "The name of the computer on which the event occurred."
      },
      "CustomData": {
        "type": "string",
        "description": ""
      },
      "Description": {
        "type": "string",
        "description": ""
      },
      "Domain": {
        "type": "string",
        "description": ""
      },
      "FocusArea": {
        "type": "string",
        "description": ""
      },
      "FocusAreaId": {
        "type": "string",
        "description": ""
      },
      "Forest": {
        "type": "string",
        "description": ""
      },
      "Recommendation": {
        "type": "string",
        "description": ""
      },
      "RecommendationId": {
        "type": "string",
        "description": ""
      },
      "RecommendationResult": {
        "type": "string",
        "description": ""
      },
      "RecommendationWeight": {
        "type": "real",
        "description": ""
      },
      "Server": {
        "type": "string",
        "description": ""
      },
      "Technology": {
        "type": "string",
        "description": ""
      },
      "Channel": {
        "type": "string",
        "description": "The channel to which the event was logged."
      },
      "Correlation": {
        "type": "string",
        "description": "The activity identifiers that consumers can use to group related"
      },
      "EventData": {
        "type": "dynamic",
        "description": "Contains the event data parsed to dynamic type. If the parsing"
      },
      "EventID": {
        "type": "int",
        "description": "The identifier that the provider used to identify the event."
      },
      "EventLevel": {
        "type": "int",
        "description": "Contains the severity level of the event."
      },
      "EventLevelName": {
        "type": "string",
        "description": "The rendered message string of the level specified in the event."
      },
      "EventOriginId": {
        "type": "string",
        "description": "VM ID obtained from the Azure Instance Metadata Service (IMDS)."
      },
      "EventRecordId": {
        "type": "string",
        "description": "The record number assigned to the event when it was logged."
      },
      "Keywords": {
        "type": "string",
        "description": "A bitmask of the keywords defined in the event."
      },
      "ManagementGroupName": {
        "type": "string",
        "description": "Additional information based on the resource type."
      },
      "Opcode": {
        "type": "string",
        "description": "The opcode element is defined by the SystemPropertiesType"
      },
      "Provider": {
        "type": "string",
        "description": "System Properties Type - Identifies the provider that logged the"
      },
      "RawEventData": {
        "type": "string",
        "description": "The raw event XML when parsing fails. It's null when parsing"
      },
      "SystemProcessId": {
        "type": "int",
        "description": "Identifies the process that generated the event."
      },
      "SystemThreadId": {
        "type": "int",
        "description": "Identifies the thread that generated the event."
      },
      "SystemUserId": {
        "type": "string",
        "description": "The ID of the user who is responsible for the event."
      },
      "Task": {
        "type": "int",
        "description": "The task defined in the event."
      },
      "Version": {
        "type": "int",
        "description": "Contains the version number of the event's definition."
      }
    }
  },
  "WindowsFirewall": {
    "tableName": "WindowsFirewall",
    "description": "",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "CommunicationDirection": {
        "type": "string",
        "description": ""
      },
      "Computer": {
        "type": "string",
        "description": ""
      },
      "Confidence": {
        "type": "string",
        "description": ""
      },
      "Description": {
        "type": "string",
        "description": ""
      },
      "DestinationIP": {
        "type": "string",
        "description": ""
      },
      "DestinationPort": {
        "type": "int",
        "description": ""
      },
      "FirewallAction": {
        "type": "string",
        "description": ""
      },
      "FirstReportedDateTime": {
        "type": "string",
        "description": ""
      },
      "FullDestinationAddress": {
        "type": "string",
        "description": ""
      },
      "IndicatorThreatType": {
        "type": "string",
        "description": ""
      },
      "Info": {
        "type": "string",
        "description": ""
      },
      "IsActive": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "LastReportedDateTime": {
        "type": "string",
        "description": ""
      },
      "MaliciousIP": {
        "type": "string",
        "description": ""
      },
      "MaliciousIPCountry": {
        "type": "string",
        "description": ""
      },
      "MaliciousIPLatitude": {
        "type": "real",
        "description": ""
      },
      "MaliciousIPLongitude": {
        "type": "real",
        "description": ""
      },
      "ManagementGroupName": {
        "type": "string",
        "description": ""
      },
      "Protocol": {
        "type": "string",
        "description": ""
      },
      "RemoteIP": {
        "type": "string",
        "description": ""
      },
      "RequestSizeInBytes": {
        "type": "long",
        "description": ""
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is associated"
      },
      "Severity": {
        "type": "int",
        "description": ""
      },
      "SourceIP": {
        "type": "string",
        "description": ""
      },
      "SourcePort": {
        "type": "int",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "TLPLevel": {
        "type": "string",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      },
      "ActionArea": {
        "type": "string",
        "description": ""
      },
      "ActionAreaId": {
        "type": "string",
        "description": ""
      },
      "AffectedObjectName": {
        "type": "string",
        "description": ""
      },
      "AffectedObjectType": {
        "type": "string",
        "description": ""
      },
      "AssessmentId": {
        "type": "string",
        "description": ""
      },
      "Cluster": {
        "type": "string",
        "description": ""
      },
      "CustomData": {
        "type": "string",
        "description": ""
      },
      "Domain": {
        "type": "string",
        "description": ""
      },
      "FocusArea": {
        "type": "string",
        "description": ""
      },
      "FocusAreaId": {
        "type": "string",
        "description": ""
      },
      "HyperVMHost": {
        "type": "string",
        "description": ""
      },
      "IISApplication": {
        "type": "string",
        "description": ""
      },
      "IISApplicationPool": {
        "type": "string",
        "description": ""
      },
      "Ipv4Address": {
        "type": "string",
        "description": ""
      },
      "OSVersion": {
        "type": "string",
        "description": ""
      },
      "Recommendation": {
        "type": "string",
        "description": ""
      },
      "RecommendationId": {
        "type": "string",
        "description": ""
      },
      "RecommendationResult": {
        "type": "string",
        "description": ""
      },
      "RecommendationWeight": {
        "type": "real",
        "description": ""
      },
      "Server": {
        "type": "string",
        "description": ""
      },
      "Technology": {
        "type": "string",
        "description": ""
      },
      "WebServer": {
        "type": "string",
        "description": ""
      },
      "WebSite": {
        "type": "string",
        "description": ""
      }
    }
  },
  "WireData": {
    "tableName": "WireData",
    "description": "Network data collected by the WireData solution using by the Dependency agent and Log analytics agent.",
    "columns": {
      "ApplicationProtocol": {
        "type": "string",
        "description": "Type of network protocol used"
      },
      "ApplicationServiceName": {
        "type": "string",
        "description": "Hold over field from old schema - attribute not collected"
      },
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Computer": {
        "type": "string",
        "description": "Computer name where data was collected"
      },
      "Confidence": {
        "type": "string",
        "description": "Confidence level for Malicious IP identification. Values are 0 -"
      },
      "Description": {
        "type": "string",
        "description": "Description of the observed threat."
      },
      "Direction": {
        "type": "string",
        "description": "Inbound or outbound"
      },
      "FirstReportedDateTime": {
        "type": "string",
        "description": "The first time the provider reported the threat."
      },
      "IndicatorThreatType": {
        "type": "string",
        "description": "Threat indicator detected is one of the following values Botnet"
      },
      "IPVersion": {
        "type": "string",
        "description": "IP version"
      },
      "IsActive": {
        "type": "string",
        "description": "Indicates indicators are deactivated with True or False value."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable"
      },
      "LastReportedDateTime": {
        "type": "string",
        "description": "The last time the indicator was seen by Interflow."
      },
      "LatencyMilliseconds": {
        "type": "int",
        "description": "Hold over field from old schema - attribute not collected"
      },
      "LatencySamplingFailureRate": {
        "type": "string",
        "description": "Hold over field from old schema - attribute not collected"
      },
      "LatencySamplingTimeStamp": {
        "type": "datetime",
        "description": "Hold over field from old schema - attribute not collected"
      },
      "LocalIP": {
        "type": "string",
        "description": "IP address of the local computer"
      },
      "LocalMAC": {
        "type": "string",
        "description": "Hold over field from old schema - attribute not collected"
      },
      "LocalPortNumber": {
        "type": "int",
        "description": "Local port number"
      },
      "LocalSubnet": {
        "type": "string",
        "description": "Subnet where data was collected"
      },
      "MaliciousIP": {
        "type": "string",
        "description": "IP address of a known malicious source"
      },
      "ManagementGroupName": {
        "type": "string",
        "description": "Name of the Operations Manager management group"
      },
      "ProcessID": {
        "type": "int",
        "description": "Windows process ID"
      },
      "ProcessName": {
        "type": "string",
        "description": "Path and file name of the process"
      },
      "ProtocolName": {
        "type": "string",
        "description": "Name of the network protocol used"
      },
      "ReceivedBytes": {
        "type": "long",
        "description": "Amount of bytes received"
      },
      "ReceivedPackets": {
        "type": "long",
        "description": "Hold over field from old schema - attribute not collected"
      },
      "RemoteIP": {
        "type": "string",
        "description": "Remote IP address used by the remote computer"
      },
      "RemoteIPCountry": {
        "type": "string",
        "description": "Country/region of the remote IP address"
      },
      "RemoteIPLatitude": {
        "type": "real",
        "description": "IP latitude value"
      },
      "RemoteIPLongitude": {
        "type": "real",
        "description": "IP longitude value"
      },
      "RemoteMAC": {
        "type": "string",
        "description": "Hold over field from old schema - attribute not collected"
      },
      "RemotePortNumber": {
        "type": "int",
        "description": "Port number used by the remote IP address"
      },
      "_ResourceId": {
        "type": "string",
        "description": "A unique identifier for the resource that the record is"
      },
      "SentBytes": {
        "type": "long",
        "description": "Number of bytes sent"
      },
      "SentPackets": {
        "type": "long",
        "description": "Hold over field from old schema - attribute not collected"
      },
      "SequenceNumber": {
        "type": "long",
        "description": "Hold over field from old schema - attribute not collected"
      },
      "SessionEndTime": {
        "type": "datetime",
        "description": "End time of session"
      },
      "SessionID": {
        "type": "string",
        "description": "A unique value that identifies communication session between"
      },
      "SessionStartTime": {
        "type": "datetime",
        "description": "Start time of session"
      },
      "SessionState": {
        "type": "string",
        "description": "Connected or disconnected"
      },
      "Severity": {
        "type": "int",
        "description": "Suspected malware severity"
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "_SubscriptionId": {
        "type": "string",
        "description": "A unique identifier for the subscription that the record is"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "Time of the record"
      },
      "TLPLevel": {
        "type": "string",
        "description": "Traffic Light Protocol (TLP) Level is one of the defined values"
      },
      "TotalBytes": {
        "type": "long",
        "description": "Total number of bytes sent during session"
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "WorkloadDiagnosticLogs": {
    "tableName": "WorkloadDiagnosticLogs",
    "description": "Diagnostic logs from the Workload Monitoring data collection services running on the Monitoring VM. Includes logs from wli and ms-telegraf services. Used to troubleshoot configuration or data collection issues.",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Category": {
        "type": "string",
        "description": "The category of the log."
      },
      "Computer": {
        "type": "string",
        "description": "Name of the Computer generating the log."
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is false"
      },
      "Message": {
        "type": "string",
        "description": "The message of the log entry."
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example, OpsManager for"
      },
      "Status": {
        "type": "string",
        "description": "The status of the record. Example: Error, Warning, etc."
      },
      "Tags": {
        "type": "dynamic",
        "description": "Dimensions or other metatata about the record. For example may contain"
      },
      "TenantId": {
        "type": "string",
        "description": "The Log Analytics workspace ID"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": "The timestamp of when the log was generated."
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  },
  "WorkloadMonitoringPerf": {
    "tableName": "WorkloadMonitoringPerf",
    "description": "",
    "columns": {
      "_BilledSize": {
        "type": "real",
        "description": "The record size in bytes"
      },
      "Computer": {
        "type": "string",
        "description": ""
      },
      "CounterName": {
        "type": "string",
        "description": ""
      },
      "InstanceName": {
        "type": "string",
        "description": ""
      },
      "_IsBillable": {
        "type": "string",
        "description": "Specifies whether ingesting the data is billable. When _IsBillable is"
      },
      "IsSystemDisk": {
        "type": "string",
        "description": ""
      },
      "LogicalDisk": {
        "type": "string",
        "description": ""
      },
      "MemoryInstance": {
        "type": "string",
        "description": ""
      },
      "NetworkAdapter": {
        "type": "string",
        "description": ""
      },
      "ObjectName": {
        "type": "string",
        "description": ""
      },
      "PerfCounterValue": {
        "type": "real",
        "description": ""
      },
      "PhysicalDisk": {
        "type": "string",
        "description": ""
      },
      "ProcessorInformation": {
        "type": "string",
        "description": ""
      },
      "ProcessorInstance": {
        "type": "string",
        "description": ""
      },
      "SecureChannel": {
        "type": "string",
        "description": ""
      },
      "ServiceName": {
        "type": "string",
        "description": ""
      },
      "SourceSystem": {
        "type": "string",
        "description": "The type of agent the event was collected by. For example,"
      },
      "TimeGenerated": {
        "type": "datetime",
        "description": ""
      },
      "Type": {
        "type": "string",
        "description": "The name of the table"
      }
    }
  }
}